{"version":3,"file":"og.esm.js","sources":["../../../src/math.ts","../../../src/LonLat.ts","../../../src/mercator.ts","../../../src/Extent.ts","../../../src/math/Mat3.ts","../../../src/math/Vec4.ts","../../../src/math/Mat4.ts","../../../src/math/Quat.ts","../../../src/math/Vec3.ts","../../../src/math/Vec2.ts","../../../src/utils/colorTable.ts","../../../src/utils/shared.ts","../../../src/astro/jd.ts","../../../src/bv/Box.ts","../../../src/bv/Sphere.ts","../../../src/Events.ts","../../../src/ui/View.ts","../../../src/ui/Button.ts","../../../src/control/Control.ts","../../../src/control/CompassButton.ts","../../../src/ui/icons.ts","../../../src/ui/Dialog.ts","../../../src/ui/ToggleButton.ts","../../../src/quadTree/quadTree.ts","../../../src/layer/Material.ts","../../../src/layer/Layer.ts","../../../src/layer/CanvasTiles.ts","../../../src/ui/ButtonGroup.ts","../../../src/utils/BaseWorker.ts","../../../src/entity/LabelWorker.ts","../../../src/entity/BaseBillboard.ts","../../../src/entity/Billboard.ts","../../../src/entity/Geometry.ts","../../../src/math/Line2.ts","../../../src/math/Line3.ts","../../../src/math/Plane.ts","../../../src/math/Ray.ts","../../../src/entity/GeoObject.ts","../../../src/entity/Label.ts","../../../src/entity/PointCloud.ts","../../../src/entity/Polyline.ts","../../../src/entity/Ray.ts","../../../src/entity/Strip.ts","../../../src/entity/Entity.ts","../../../src/utils/objParser.ts","../../../src/Object3d.ts","../../../src/scene/BaseNode.ts","../../../src/scene/RenderNode.ts","../../../src/cons.ts","../../../src/webgl/types.ts","../../../src/webgl/variableHandlers.ts","../../../src/webgl/Program.ts","../../../src/shaders/billboard.ts","../../../src/entity/BaseBillboardHandler.ts","../../../src/entity/BillboardHandler.ts","../../../src/entity/GeoObjectHandler.ts","../../../src/shaders/geoObject.ts","../../../src/shaders/label.ts","../../../src/entity/LabelHandler.ts","../../../src/entity/PointCloudHandler.ts","../../../src/shaders/pointCloud.ts","../../../src/entity/PolylineHandler.ts","../../../src/shaders/polyline.ts","../../../src/entity/RayHandler.ts","../../../src/shaders/ray.ts","../../../src/entity/StripHandler.ts","../../../src/entity/EntityCollection.ts","../../../src/quadTree/EntityCollectionNode.ts","../../../src/math/coder.ts","../../../src/utils/earcut.ts","../../../src/entity/GeometryHandler.ts","../../../src/QueueArray.ts","../../../src/layer/Vector.ts","../../../src/control/drawing/PolygonDrawingScene.ts","../../../src/control/drawing/LineStringDrawingScene.ts","../../../src/control/drawing/DrawingControl.ts","../../../src/utils/units.ts","../../../src/control/EarthCoordinates.ts","../../../src/control/EarthNavigation.ts","../../../src/layer/BaseGeoImage.ts","../../../src/input/input.ts","../../../src/control/LayerAnimation.ts","../../../src/ui/Slider.ts","../../../src/Lock.ts","../../../src/control/MouseNavigation.ts","../../../src/control/ruler/RulerScene.ts","../../../src/control/ruler/Ruler.ts","../../../src/control/heightRuler/HeightRulerScene.ts","../../../src/control/heightRuler/HeightRuler.ts","../../../src/control/ScaleControl.ts","../../../src/control/SimpleSkyBackground.ts","../../../src/astro/astro.ts","../../../src/astro/earth.ts","../../../src/light/LightSource.ts","../../../src/control/Sun.ts","../../../src/control/TouchNavigation.ts","../../../src/control/ZoomControl.ts","../../../src/control/selection/SelectionScene.ts","../../../src/control/timeline/timelineUtils.ts","../../../src/control/timeline/TimelineModel.ts","../../../src/control/timeline/TimelineView.ts","../../../src/control/timeline/TimelineControl.ts","../../../src/control/DebugInfo.ts","../../../src/control/DrawingSwitcher.ts","../../../src/control/GeoImageDragControl.ts","../../../src/control/KeyboardNavigation.ts","../../../src/control/LayerSwitcher.ts","../../../src/control/Lighting.ts","../../../src/control/MouseWheelZoomControl.ts","../../../src/control/RulerSwitcher.ts","../../../src/control/selection/Selection.ts","../../../src/control/ShowFps.ts","../../../src/control/SimpleNavigation.ts","../../../src/control/ToggleWireframe.ts","../../../src/segment/segmentHelper.ts","../../../src/shaders/utils.ts","../../../src/shaders/atmos.ts","../../../src/shaders/drawnode.ts","../../../src/webgl/BaseFramebuffer.ts","../../../src/ImageCanvas.ts","../../../src/webgl/Framebuffer.ts","../../../src/control/Atmosphere.ts","../../../src/proj/Proj.ts","../../../src/proj/EPSG3857.ts","../../../src/proj/EPSG4326.ts","../../../src/segment/Slice.ts","../../../src/segment/Segment.ts","../../../src/quadTree/Node.ts","../../../src/quadTree/QuadTreeStrategy.ts","../../../src/segment/SegmentLonLat.ts","../../../src/quadTree/EarthQuadTreeStrategy.ts","../../../src/terrain/Geoid.ts","../../../src/utils/GeoImageCreator.ts","../../../src/utils/Loader.ts","../../../src/utils/NormalMapCreator.ts","../../../src/utils/PlainSegmentWorker.ts","../../../src/camera/Frustum.ts","../../../src/camera/Camera.ts","../../../src/camera/PlanetCamera.ts","../../../src/utils/TerrainWorker.ts","../../../src/utils/VectorTileCreator.ts","../../../src/ellipsoid/Ellipsoid.ts","../../../src/ellipsoid/wgs84.ts","../../../src/scene/Planet.ts","../../../src/scene/SkyBox.ts","../../../src/shaders/skybox.ts","../../../src/scene/Axes.ts","../../../src/terrain/EmptyTerrain.ts","../../../src/terrain/GlobusTerrain.ts","../../../src/layer/XYZ.ts","../../../src/layer/WMS.ts","../../../src/terrain/BilTerrain.ts","../../../src/terrain/MapboxTerrain.ts","../../../src/layer/GeoImage.ts","../../../src/layer/GeoTexture2d.ts","../../../src/layer/GeoVideo.ts","../../../src/layer/KML.ts","../../../src/Clock.ts","../../../src/webgl/ProgramController.ts","../../../src/Stack.ts","../../../src/webgl/Handler.ts","../../../src/webgl/Multisample.ts","../../../src/input/KeyboardHandler.ts","../../../src/input/MouseHandler.ts","../../../src/input/TouchHandler.ts","../../../src/renderer/RendererEvents.ts","../../../src/Deferred.ts","../../../src/Rectangle.ts","../../../src/utils/ImagesCacheManager.ts","../../../src/utils/TextureAtlas.ts","../../../src/utils/FontAtlas.ts","../../../src/renderer/Renderer.ts","../../../src/shaders/screenFrame.ts","../../../src/shaders/toneMapping.ts","../../../src/shaders/depth.ts","../../../src/shaders/pickingMask.ts","../../../src/Globe.ts","../../../src/Popup.ts","../../../src/segment/SegmentLonLatWgs84.ts","../../../src/quadTree/MarsQuadTreeStrategy.ts","../../../src/quadTree/Wgs84QuadTreeStrategy.ts","../../../src/quadTree/index.ts","../../../src/quadTree/EPSG4326QuadTreeStrategy.ts"],"sourcesContent":["import {Vec3} from \"./math/Vec3\";\n\n/** @const */\nexport const TWO_PI = 2.0 * Math.PI;\n\n/** @const */\nexport const PI_TWO = Math.PI / 2.0;\n\nexport const X = 0;\nexport const Y = 1;\nexport const Z = 2;\nexport const W = 3;\n\nexport const MAX_FLOAT = Number.MAX_VALUE || 1.7976931348623157e308;\n\n/** @const */\nexport const LOG2 = Math.log(2);\n/** @const */\nexport const MAX32 = 2147483647;\n/** @const */\nexport const MAX = 549755748352;\n/** @const */\nexport const MIN = -MAX;\n\n/** @const */\nexport const RADIANS = Math.PI / 180.0;\n/** @const */\nexport const DEGREES = 180.0 / Math.PI;\n\n/** @const */\nexport const DEGREES_DOUBLE = 2.0 * DEGREES;\n/** @const */\nexport const RADIANS_HALF = 0.5 * RADIANS;\n\n/** @const */\nexport const ARCSECONDS_TO_RADIANS = 0.00000484813681109536;\n/** @const */\nexport const RADIANS_TO_HOURS = 3.8197186342054880584532103209403;\n/** @const */\nexport const HOURS_TO_RADIANS = 0.26179938779914943653855361527329;\n/** @const */\nexport const HOURS_TO_DEGREES = 15.0;\n/** @const */\nexport const DEGREES_TO_HOURS = 1.0 / 15.0;\n\n/** @const */\nexport const SQRT_HALF = Math.sqrt(0.5);\n\nexport const EPS1 = 1e-1;\nexport const EPS2 = 1e-2;\nexport const EPS3 = 1e-3;\nexport const EPS4 = 1e-4;\nexport const EPS5 = 1e-5;\nexport const EPS6 = 1e-6;\nexport const EPS7 = 1e-7;\nexport const EPS8 = 1e-8;\nexport const EPS9 = 1e-9;\nexport const EPS10 = 1e-10;\nexport const EPS11 = 1e-11;\nexport const EPS12 = 1e-12;\nexport const EPS13 = 1e-13;\nexport const EPS14 = 1e-14;\nexport const EPS15 = 1e-15;\nexport const EPS16 = 1e-16;\nexport const EPS17 = 1e-17;\nexport const EPS18 = 1e-18;\nexport const EPS19 = 1e-19;\nexport const EPS20 = 1e-20;\n\n/**\n * The log function returns the power to which the base value has to be raised to produce n.\n * @function\n * @param {number} n - Produce value.\n * @param {number} base - Base value.\n * @returns {number} -\n * @example\n * log(64, 2)\n * //returns 6\n */\nexport function log(n: number, base: number): number {\n    return Math.log(n) / Math.log(base);\n}\n\n/**\n * Clamp the number.\n * @function\n * @param {number} number - Input number.\n * @param {number} min - Minimal edge.\n * @param {number} max - Maximal edge.\n * @returns {number} -\n * @example\n * clamp(12, 1, 5)\n * //returns 5\n */\nexport function clamp(number: number, min: number, max: number): number {\n    return Math.max(min, Math.min(number, max));\n}\n\n/**\n * Converts degrees value to radians.\n * @function\n * @param {number} degrees - Degree value.\n * @returns {number} -\n */\nexport function DEG2RAD(degrees: number): number {\n    return degrees * RADIANS;\n}\n\n/**\n * Converts radians value to degrees.\n * @function\n * @param {number} angle - Degree value.\n * @returns {number} -\n */\nexport function RAD2DEG(angle: number): number {\n    return angle * DEGREES;\n}\n\n/**\n * Check the number is a power of two.\n * @function\n * @param {number} x - Input value.\n * @returns {boolean} -\n */\nexport function isPowerOfTwo(x: number): boolean {\n    return (x & (x - 1)) === 0;\n}\n\n/**\n * Returns next value that is power of two.\n * @function\n * @param {number} x - Input value.\n * @param {number} [maxValue=4096] - Maximal value.\n * @returns {number} -\n */\nexport function nextHighestPowerOfTwo(x: number, maxValue: number = 4096): number {\n    --x;\n    for (let i = 1; i < 32; i <<= 1) {\n        x = x | (x >> i);\n    }\n    return (x + 1) > maxValue ? maxValue : x + 1\n}\n\n/**\n * Returns random integer number within the bounds.\n * @function\n * @param {number} min - Minimal bound.\n * @param {number} max - Maximal bound.\n * @returns {number} -\n */\nexport function randomi(min: number = 0, max: number = 1): number {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\n/**\n * Returns random number within the bounds.\n * @function\n * @param {number} [min=0] - Minimal bound.\n * @param {number} [max=1] - Maximal bound.\n * @returns {number} -\n */\nexport function random(min: number = 0, max: number = 1): number {\n    return Math.random() * (max - min) + min;\n}\n\n/**\n * Converts degrees value to decimal.\n * @function\n * @param {number} d - Degrees.\n * @param {number} m - Minutes.\n * @param {number} s - Seconds.\n * @param {boolean} [p] - Positive flag. False - default.\n * @returns {number} -\n **/\nexport function degToDec(d: number, m: number, s: number, p: number): number {\n    if (p) {\n        return d + m / 60.0 + s / 3600.0;\n    } else {\n        return -d - m / 60.0 - s / 3600.0;\n    }\n}\n\n/**\n * The modulo operation that also works for negative dividends.\n * @function\n * @param {number} m - The dividend.\n * @param {number} n - The divisor.\n * @returns {number} The remainder.\n */\nexport function mod(m: number, n: number): number {\n    return ((m % n) + n) % n;\n}\n\n/**\n * Returns an angle in the range 0 <= angle <= 2Pi which is equivalent to the provided angle.\n * @function\n * @param {number} a - Angle in radians\n * @returns {number} -\n */\nexport function zeroTwoPI(a: number): number {\n    const res = mod(a, TWO_PI);\n    if (Math.abs(res) < EPS14 && Math.abs(a) > EPS14) {\n        return TWO_PI;\n    }\n    return res;\n}\n\n/**\n * Returns 0.0 if x is smaller than edge and otherwise 1.0.\n * @function\n * @param {number} edge -\n * @param {number} x - Value to edge.\n * @returns {number} -\n */\nexport function step(edge: number, x: number): number {\n    return x < edge ? 0.0 : 1.0;\n}\n\n/**\n * The frac function returns the fractional part of x, i.e. x minus floor(x).\n * @function\n * @param {number} x - Input value.\n * @returns {number} -\n */\nexport function frac(x: number): number {\n    const mx = Math.abs(x)\n    return mx - Math.floor(mx);\n}\n\n/**\n * Returns Math.log(x) / Math.log(2)\n * @function\n * @param {number} x - Input value.\n * @returns {number} -\n */\nexport function log2(x: number): number {\n    return Math.log(x) / LOG2;\n}\n\n/**\n * Returns two power of n.\n * @function\n * @param {number} n - Power value.\n * @returns {number} -\n */\nexport function exp2(n: number): number {\n    return Math.pow(2, n);\n}\n\n/**\n * Returns two power of integer n.\n * @function\n * @param {number} n - Integer power value.\n * @returns {number} -\n */\nexport function pow2i(n: number): number {\n    return 2 << (n - 1);\n}\n\n/**\n * Returns a slice of linear interpolation t * (h1 - h0)\n * @param {number} t - A value that linearly interpolates between the h0 parameter and the h1 parameter.\n * @param {number} h1 - End value.\n * @param {number} h0 - Start value.\n * @returns {number} -\n */\nexport function slice(t: number, h1: number, h0: number): number {\n    return t * (h1 - h0);\n}\n\n/**\n * Performs a linear interpolation.\n * @function\n * @param {number} t - A value that linearly interpolates between the h0 parameter and the h1 parameter.\n * @param {number} h1 - End value.\n * @param {number} h0 - Start value.\n * @returns {number} -\n */\nexport function lerp(t: number, h1: number, h0: number): number {\n    return h0 + t * (h1 - h0);\n}\n\nexport function cube(f: number): number {\n    return f * f * f;\n}\n\nexport function square(f: number): number {\n    return f * f;\n}\n\nexport function bezier1v(t: number, p0: number, p1: number, p2: number, p3: number): number {\n    return (\n        cube(1 - t) * p0 + 3 * square(1 - t) * t * p1 + 3 * (1 - t) * square(t) * p2 + cube(t) * p3\n    );\n}\n\n/**\n * Performs a 3D bezier interpolation.\n * @function\n * @param {number} t - Interpolation value.\n * @param {Vec3} p0 - First control point.\n * @param {Vec3} p1 - Second control point.\n * @param {Vec3} p2 - Third control point.\n * @param {Vec3} p3 - Fourth control point.\n * @returns {Vec3} -\n */\nexport function bezier3v(t: number, p0: Vec3, p1: Vec3, p2: Vec3, p3: Vec3): Vec3 {\n\n    let u = 1 - t;\n    let tt = t * t;\n    let uu = u * u;\n    let uuu = uu * u;\n    let ttt = tt * t;\n\n    return p0.scaleTo(uuu)\n        .addA(p1.scaleTo(3 * uu * t))\n        .addA(p2.scaleTo(3 * u * tt))\n        .addA(p3.scaleTo(ttt));\n}\n\n/**\n * Clamp angle value within 360.\n * @function\n * @param {number} x - Input angle.\n * @returns {number} -\n */\nexport function rev(x: number): number {\n    return x - Math.floor(x / 360.0) * 360.0;\n}\n\n/**\n * Clamp longitude within: -180 to +180 degrees.\n * @function\n * @param {number} lon - Longitude.\n * @returns {number} -\n */\nexport function norm_lon(lon: number): number {\n    return lon > 180 ? ((lon + 180) % 360) - 180 : lon < -180 ? ((lon - 180) % 360) + 180 : lon;\n}\n\n/**\n * Returns an angle in the range -Pi <= angle <= Pi which is equivalent to the provided angle.\n * @function\n * @param {number} a - Angle in radians.\n * @returns {number} -\n */\nexport function negativePItoPI(a: number): number {\n    return zeroTwoPI(a + Math.PI) - Math.PI;\n}\n\n/**\n * Solve using iteration method and a fixed number of steps.\n * @function\n * @param {Function} f - Equation. Used in Euler's equation(see og.orbit) solving.\n * @param {number} x0 - First approximation.\n * @param {number} maxIter - Maximum iterations.\n * @returns {number} -\n */\nexport function solve_iteration_fixed(f: (x: number) => number, x0: number, maxIter: number): number {\n    let x = 0;\n    let x2 = x0;\n    for (let i = 0; i < maxIter; i++) {\n        x = x2;\n        x2 = f(x);\n    }\n    return x2;\n}\n\n/**\n * Solve using iteration; terminate when error is below err or the maximum\n * number of iterations is reached. Used in Euler's equation(see og.orbit) solving.\n * @function\n * @param {(x: number) => number} f - Equation.\n * @param {number} x0 - First approximation.\n * @param {number} err - Maximal accepted error value.\n * @param {number} maxIter - Maximum iterations.\n * @returns {number} -\n */\nexport function solve_iteration(f: (x: number) => number, x0: number, err: number, maxIter: number = 50): number {\n    let x = 0;\n    let x2 = x0;\n    for (let i = 0; i < maxIter; i++) {\n        x = x2;\n        x2 = f(x);\n        if (Math.abs(x2 - x) < err) {\n            return x2;\n        }\n    }\n    return x2;\n}\n\n/**\n * Equation function.\n * @callback equationCallback\n * @param {number} x - Equation variable.\n */\n\n/**\n *\n * @param a - First bearing angle\n * @param b - Second bearing angle\n * @returns {number}\n */\nfunction getAngleDirection(a: number, b: number): number {\n    let a_y = Math.cos(a),\n        a_x = Math.sin(a),\n        b_y = Math.cos(b),\n        b_x = Math.sin(b);\n    let c = a_y * b_x - b_y * a_x,\n        d = a_x * b_x + a_y * b_y;\n    if (c > 0.0) {\n        return Math.acos(d);\n    }\n    return -Math.acos(d);\n}\n\n/**\n * Returns angle between two azimuths\n * @param {number} a - First azimuth angle\n * @param {number} b - Second azimuth angle\n * @returns {number}\n */\nexport function getAngleBetweenAzimuths(a: number, b: number): number {\n    a = zeroTwoPI(a);\n    b = zeroTwoPI(b);\n    return ((((a - b) % 360) + 360 + 180) % 360) - 180;\n}","import * as mercator from \"./mercator\";\nimport {NumberArray2} from \"./math/Vec2\";\nimport {NumberArray3} from \"./math/Vec3\";\n\nconst HALF_PI = Math.PI * 0.5;\nconst INV_PI_BY_180 = 180.0 / Math.PI;\nconst INV_PI_BY_360 = INV_PI_BY_180 * 2.0;\nconst PI_BY_360 = Math.PI / 360.0;\nconst INV_PI_BY_180_HALF_PI = INV_PI_BY_180 * HALF_PI;\n\n/**\n * Represents a geographical point with a certain latitude, longitude and height.\n * @class\n * @param {number} [lon] - Longitude.\n * @param {number} [lat] - Latitude.\n * @param {number} [height] - Height over the surface.\n */\nexport class LonLat {\n    /**\n     * Longitude.\n     * @public\n     * @type {number}\n     */\n    public lon: number = 0;\n\n    /**\n     * Latitude.\n     * @public\n     * @type {number}\n     */\n    public lat: number = 0;\n\n    /**\n     * Height.\n     * @public\n     * @type {number}\n     */\n    public height: number = 0;\n\n    constructor(lon: number = 0, lat: number = 0, height: number = 0) {\n        this.lon = lon;\n        this.lat = lat;\n        this.height = height;\n    }\n\n    /**\n     * Check zero coordinates\n     * @returns {boolean} -\n     */\n    public isZero(): boolean {\n        return this.lon === 0.0 && this.lat === 0.0 && this.height === 0.0;\n    }\n\n    /**\n     * Creates coordinates array.\n     * @static\n     * @param{Array.<Array<number>>} arr - Coordinates array data. (exactly 3 entries)\n     * @return{Array.<LonLat>} the same coordinates array but each element is LonLat instance.\n     */\n    static join(arr: NumberArray2[] | NumberArray3[]): LonLat[] {\n        let res = [];\n        for (let i = 0; i < arr.length; i++) {\n            let ai = arr[i];\n            res[i] = new LonLat(ai[0], ai[1], ai[2]);\n        }\n        return res;\n    }\n\n    /**\n     * Creates an object by coordinate array.\n     * @static\n     * @param {Array.<number>} arr - Coordinates array, where first is longitude, second is latitude and third is a height. (exactly 3 entries)\n     * @returns {LonLat} -\n     */\n    static createFromArray(arr: [number, number, number]): LonLat {\n        return new LonLat(arr[0], arr[1], arr[2]);\n    }\n\n    /**\n     * Create array from lonLat\n     * @param lonLat\n     * @returns {number[]}\n     */\n    static toArray(lonLat: LonLat): [number, number, number] {\n        return [lonLat.lon, lonLat.lat, lonLat.height]\n    }\n\n    /**\n     * Create array from lonLat\n     * @returns {number[]}\n     */\n    public toArray(): [number, number, number] {\n        return LonLat.toArray(this);\n    }\n\n    /**\n     * Converts degrees to mercator coordinates.\n     * @static\n     * @param {number} lon - Degrees longitude.\n     * @param {number} lat - Degrees latitude.\n     * @param {number} [height] - Height.\n     * @returns {LonLat} -\n     */\n    static forwardMercator(lon: number, lat: number, height: number): LonLat {\n        return new LonLat(\n            lon * mercator.POLE_BY_180,\n            Math.log(Math.tan((90.0 + lat) * PI_BY_360)) * mercator.POLE_BY_PI,\n            height\n        );\n    }\n\n    /**\n     * Converts degrees to mercator coordinates.\n     * @static\n     * @param {LonLat} lonLat - Input geodetic degree coordinates\n     * @param {LonLat} res - Output mercator coordinates\n     * @returns {LonLat} - Output mercator coordinates\n     */\n    static forwardMercatorRes(lonLat: LonLat, res: LonLat): LonLat {\n        res.lon = lonLat.lon * mercator.POLE_BY_180;\n        res.lat = Math.log(Math.tan((90.0 + lonLat.lat) * PI_BY_360)) * mercator.POLE_BY_PI,\n            res.height = lonLat.height;\n        return res;\n    }\n\n    /**\n     * Converts mercator to degrees coordinates.\n     * @static\n     * @param {number} x - Mercator longitude.\n     * @param {number} y - Mercator latitude.\n     * @param {number} [height] - Height.\n     * @returns {LonLat} -\n     */\n    static inverseMercator(x: number, y: number, height: number = 0): LonLat {\n        return new LonLat(\n            x * mercator.INV_POLE_BY_180,\n            INV_PI_BY_360 * Math.atan(Math.exp(y * mercator.PI_BY_POLE)) - INV_PI_BY_180_HALF_PI,\n            height\n        );\n    }\n\n    /**\n     * Sets coordinates.\n     * @public\n     * @param {number} [lon] - Longitude.\n     * @param {number} [lat] - Latitude.\n     * @param {number} [height] - Height.\n     * @returns {LonLat} -\n     */\n    public set(lon: number = 0, lat: number = 0, height: number = 0): LonLat {\n        this.lon = lon;\n        this.lat = lat;\n        this.height = height;\n        return this;\n    }\n\n    /**\n     * Copy coordinates.\n     * @public\n     * @param {LonLat} [lonLat] - Coordinates to copy.\n     * @returns {LonLat} -\n     */\n    public copy(lonLat: LonLat): LonLat {\n        this.lon = lonLat.lon;\n        this.lat = lonLat.lat;\n        this.height = lonLat.height;\n        return this;\n    }\n\n    /**\n     * Clone the coordinates.\n     * @public\n     * @returns {LonLat} -\n     */\n    public clone(): LonLat {\n        return new LonLat(this.lon, this.lat, this.height);\n    }\n\n    /**\n     * Converts to mercator coordinates.\n     * @public\n     * @returns {LonLat} -\n     */\n    public forwardMercator(): LonLat {\n        return LonLat.forwardMercator(this.lon, this.lat, this.height);\n    }\n\n    public forwardMercatorEPS01(): LonLat {\n        let lat = this.lat;\n        if (lat > 89.9) {\n            lat = 89.9;\n        } else if (lat < -89.9) {\n            lat = -89.9;\n        }\n        return new LonLat(\n            this.lon * mercator.POLE_BY_180,\n            Math.log(Math.tan((90.0 + lat) * PI_BY_360)) * mercator.POLE_BY_PI\n        );\n    }\n\n    /**\n     * Converts from mercator coordinates.\n     * @public\n     * @returns {LonLat} -\n     */\n    public inverseMercator(): LonLat {\n        return LonLat.inverseMercator(this.lon, this.lat, this.height);\n    }\n\n    /**\n     * Compares coordinates.\n     * @public\n     * @param {LonLat} b - Coordinate to compare with.\n     * @returns {boolean} -\n     */\n    public equal(b: LonLat): boolean {\n        if (b.height) {\n            return this.lon === b.lon && this.lat === b.lat && this.height === b.height;\n        } else {\n            return this.lon === b.lon && this.lat === b.lat;\n        }\n    }\n}\n","import { Extent } from \"./Extent\";\nimport { LonLat } from './LonLat';\n\n/**\n * Mercator size.\n * @const\n * @type {number}\n */\nexport const POLE = 20037508.34;\n\nexport const POLE2 = POLE * 2.0;\n\nexport const PI_BY_POLE = Math.PI / POLE;\n\nexport const POLE_BY_PI = POLE / Math.PI;\n\nconst HALF_PI = Math.PI * 0.5;\n\nexport const POLE_BY_180 = POLE / 180.0;\n\nexport const INV_POLE_BY_180 = 180.0 / POLE;\n\nconst PI_BY_360 = Math.PI / 360.0;\n\nconst PI_BY_180 = Math.PI / 180.0;\n\nconst INV_PI_BY_180 = 180.0 / Math.PI;\n\n/**\n * Double mercator size.\n * @const\n * @type {number}\n */\nexport const POLE_DOUBLE = 2.0 * POLE;\n\n/**\n * One by mercator double size.\n * @const\n * @type {number}\n */\nexport const ONE_BY_POLE_DOUBLE = 1.0 / POLE_DOUBLE;\n\nexport function forward(lonLat: LonLat): LonLat {\n    return new LonLat(lonLat.lon * POLE / 180.0, Math.log(Math.tan((90.0 + lonLat.lat) * PI_BY_360)) * POLE_BY_PI, lonLat.height);\n}\n\n/**\n * Converts degrees longitude to mercator coordinate.\n * @function\n * @param {number} lon - Degrees geodetic longitude.\n * @returns {number} -\n */\nexport function forward_lon(lon: number): number {\n    return lon * POLE / 180.0;\n}\n\n/**\n * Converts degrees latitude to mercator coordinate.\n * @function\n * @param {number} lat - Degrees geodetic latitude.\n * @returns {number} -\n */\nexport function forward_lat(lat: number): number {\n    return Math.log(Math.tan((90.0 + lat) * PI_BY_360)) * POLE_BY_PI;\n}\n\n/**\n * Converts mercator longitude to degrees coordinate.\n * @function\n * @param {number} lon - Mercator longitude.\n * @returns {number} -\n */\nexport function inverse_lon(lon: number): number {\n    return 180 * lon / POLE;\n}\n\n/**\n * Converts mercator latitude to degrees coordinate.\n * @function\n * @param {number} lon - Mercator latitude.\n * @returns {number} -\n */\nexport function inverse_lat(lat: number): number {\n    return INV_PI_BY_180 * (2.0 * Math.atan(Math.exp(lat * PI_BY_POLE)) - HALF_PI);\n}\n\n/**\n * Returns mercator map tile grid horizontal coordinate index by geodetic \n * longitude and zoom level. Where top left corner of the grid is 0 coordinate index.\n * @function\n * @param {number} lon - Geodetic degrees longitude.\n * @param {number} zoom - Zoom level.\n * @returns {number}\n */\nexport function getTileX(lon: number, zoom: number): number {\n    return Math.floor((lon + 180) / 360.0 * Math.pow(2, zoom));\n}\n\n/**\n * Returns mercator map tile grid vertical coordinate index by geodetic \n * latitude and zoom level. Where top left corner of the grid is 0 coordinate index.\n * @function\n * @param {number} lat - Geodetic degrees latitude.\n * @param {number} zoom - Zoom level.\n * @returns {number}\n */\nexport function getTileY(lat: number, zoom: number): number {\n    return Math.floor((1.0 - Math.log(Math.tan(lat * PI_BY_180) + 1.0 / Math.cos(lat * PI_BY_180)) / Math.PI) * 0.5 * Math.pow(2, zoom));\n}\n\n/**\n * Converts geodetic coordinate array to mercator coordinate array.\n * @function\n * @param {Array.<LonLat>} lonLatArr - LonLat array to convert.\n * @returns {Array.<LonLat>}\n */\nexport function forwardArray(lonlatArr: LonLat[]): LonLat[] {\n    let res: LonLat[] = [];\n    for (let i = 0; i < lonlatArr.length; i++) {\n        res.push(lonlatArr[i].forwardMercator());\n    }\n    return res;\n}\n\nexport function getTileExtent(x: number, y: number, z: number): Extent {\n    let size = POLE2 / Math.pow(2, z),\n        sw = new LonLat(-POLE + x * size, POLE - y * size - size);\n    return new Extent(sw, new LonLat(sw.lon + size, sw.lat + size));\n}\n\n/**\n * Max mercator latitude.\n * @const\n * @type {number}\n */\nexport const MAX_LAT = inverse_lat(POLE);\n\n/**\n * Min mercator latitude.\n * @const\n * @type {number}\n */\nexport const MIN_LAT = -MAX_LAT;\n","import * as math from \"./math\";\nimport * as mercator from \"./mercator\";\nimport {Ellipsoid} from \"./ellipsoid/Ellipsoid\";\nimport {LonLat} from \"./LonLat\";\n\n/**\n * Represents geographical coordinates extent.\n * @class\n * @param {LonLat} [sw] - South West extent corner coordinates.\n * @param {LonLat} [ne] - North East extent corner coordinates.\n */\nexport class Extent {\n    public southWest: LonLat;\n    public northEast: LonLat;\n\n    constructor(sw: LonLat = new LonLat(), ne: LonLat = new LonLat()) {\n        this.southWest = sw;\n        this.northEast = ne;\n    }\n\n    /**\n     * Creates extent instance from values in array.\n     * @static\n     * @param {Array.<number>} arr - South west and north-east longitude and latitudes packed in array. (exactly 4 entries)\n     * @return {Extent} Extent object.\n     */\n    static createFromArray(arr: [number, number, number, number]): Extent {\n        return new Extent(new LonLat(arr[0], arr[1]), new LonLat(arr[2], arr[3]));\n    }\n\n    /**\n     * Creates bound extent instance by coordinate array.\n     * @static\n     * @param {Array.<LonLat>} arr - Coordinate array.\n     * @return {Extent} Extent object.\n     */\n    static createByCoordinates(arr: LonLat[]): Extent {\n        let lonmin = math.MAX,\n            lonmax = math.MIN,\n            latmin = math.MAX,\n            latmax = math.MIN;\n        for (let i = 0; i < arr.length; i++) {\n            const vi = arr[i];\n            if (vi.lon < lonmin) lonmin = vi.lon;\n            if (vi.lon > lonmax) lonmax = vi.lon;\n            if (vi.lat < latmin) latmin = vi.lat;\n            if (vi.lat > latmax) latmax = vi.lat;\n        }\n        return new Extent(new LonLat(lonmin, latmin), new LonLat(lonmax, latmax));\n    }\n\n    /**\n     * Creates bound extent instance by coordinates array.\n     * @static\n     * @param {Array.<Array<number>>} arr - Coordinate array. (exactly 2 entries)\n     * @return {Extent} Extent object.\n     */\n    static createByCoordinatesArr(arr: [number, number][]): Extent {\n        let lonmin = math.MAX,\n            lonmax = math.MIN,\n            latmin = math.MAX,\n            latmax = math.MIN;\n        for (let i = 0; i < arr.length; i++) {\n            const vi = arr[i];\n            if (vi[0] < lonmin) lonmin = vi[0];\n            if (vi[0] > lonmax) lonmax = vi[0];\n            if (vi[1] < latmin) latmin = vi[1];\n            if (vi[1] > latmax) latmax = vi[1];\n        }\n        return new Extent(new LonLat(lonmin, latmin), new LonLat(lonmax, latmax));\n    }\n\n    /**\n     * Creates extent by merсator grid tile coordinates.\n     * @static\n     * @param {number} x -\n     * @param {number} y -\n     * @param {number} z -\n     * @param {number} width -\n     * @param {number} height -\n     * @returns {Extent} -\n     */\n    static fromTile(\n        x: number,\n        y: number,\n        z: number,\n        width: number = mercator.POLE_DOUBLE,\n        height: number = mercator.POLE_DOUBLE): Extent {\n        const H = Math.pow(2, z);\n        const W = Math.pow(2, z);\n        const lnSize = width / W;\n        const ltSize = height / H;\n\n        const left = -width * 0.5 + x * lnSize,\n            top = height * 0.5 - y * ltSize,\n            bottom = top - ltSize,\n            right = left + lnSize;\n\n        return new Extent(new LonLat(left, bottom), new LonLat(right, top));\n    }\n\n    /**\n     * Sets current bounding extent object by coordinate array.\n     * @public\n     * @param {Array.<LonLat>} arr - Coordinate array.\n     * @return {Extent} Current extent.\n     */\n    public setByCoordinates(arr: LonLat[]): Extent {\n        let lonmin = math.MAX,\n            lonmax = math.MIN,\n            latmin = math.MAX,\n            latmax = math.MIN;\n        for (let i = 0; i < arr.length; i++) {\n            const vi = arr[i];\n            if (vi.lon < lonmin) lonmin = vi.lon;\n            if (vi.lon > lonmax) lonmax = vi.lon;\n            if (vi.lat < latmin) latmin = vi.lat;\n            if (vi.lat > latmax) latmax = vi.lat;\n        }\n        this.southWest.lon = lonmin;\n        this.southWest.lat = latmin;\n        this.northEast.lon = lonmax;\n        this.northEast.lat = latmax;\n        return this;\n    }\n\n    /**\n     * Determines if point inside extent.\n     * @public\n     * @param {LonLat} lonlat - Coordinate point.\n     * @return {boolean} Returns true if point inside extent.\n     */\n    public isInside(lonlat: LonLat): boolean {\n        const sw = this.southWest;\n        const ne = this.northEast;\n        return (\n            lonlat.lon >= sw.lon && lonlat.lon <= ne.lon &&\n            lonlat.lat >= sw.lat && lonlat.lat <= ne.lat\n        );\n    }\n\n    /**\n     * Returns true if two extent overlap each other.\n     * @public\n     * @param {Extent} e - Another extent.\n     * @return {boolean} -\n     */\n    public overlaps(e: Extent): boolean {\n        const sw = this.southWest;\n        const ne = this.northEast;\n        return (\n            sw.lon <= e.northEast.lon &&\n            ne.lon >= e.southWest.lon &&\n            sw.lat <= e.northEast.lat &&\n            ne.lat >= e.southWest.lat\n        );\n    }\n\n    /**\n     * Gets extent width.\n     * @public\n     * @return {number} Extent width.\n     */\n    public getWidth(): number {\n        return this.northEast.lon - this.southWest.lon;\n    }\n\n    /**\n     * Gets extent height.\n     * @public\n     * @return {number} Extent height.\n     */\n    public getHeight(): number {\n        return this.northEast.lat - this.southWest.lat;\n    }\n\n    /**\n     * Creates clone instance of the current extent.\n     * @public\n     * @return {Extent} Extent clone.\n     */\n    public clone(): Extent {\n        return new Extent(this.southWest.clone(), this.northEast.clone());\n    }\n\n    /**\n     * Gets the center coordinate of the extent.\n     * @public\n     * @return {number} Center coordinate.\n     */\n    public getCenter(): LonLat {\n        const sw = this.southWest;\n        const ne = this.northEast;\n        return new LonLat(sw.lon + (ne.lon - sw.lon) * 0.5, sw.lat + (ne.lat - sw.lat) * 0.5);\n    }\n\n    /**\n     * @public\n     */\n    public getNorthWest(): LonLat {\n        return new LonLat(this.southWest.lon, this.northEast.lat);\n    }\n\n    /**\n     * @public\n     */\n    public getNorthEast(): LonLat {\n        return new LonLat(this.northEast.lon, this.northEast.lat);\n    }\n\n    /**\n     * @public\n     */\n    public getSouthWest(): LonLat {\n        return new LonLat(this.southWest.lon, this.southWest.lat);\n    }\n\n    /**\n     * @public\n     */\n    public getSouthEast(): LonLat {\n        return new LonLat(this.northEast.lon, this.southWest.lat);\n    }\n\n    /**\n     * @public\n     */\n    public getNorth(): number {\n        return this.northEast.lat;\n    }\n\n    public getEast(): number {\n        return this.northEast.lon;\n    }\n\n    /**\n     * @public\n     */\n    public getWest(): number {\n        return this.southWest.lon;\n    }\n\n    /**\n     * @public\n     */\n    public getSouth(): number {\n        return this.southWest.lat;\n    }\n\n    /**\n     * Returns extents are equals.\n     * @param {Extent} extent - Extent.\n     * @returns {boolean} -\n     */\n    public equals(extent: Extent): boolean {\n        return (\n            this.southWest.lon === extent.southWest.lon &&\n            this.southWest.lat === extent.southWest.lat &&\n            this.northEast.lon === extent.northEast.lon &&\n            this.northEast.lat === extent.northEast.lat\n        );\n    }\n\n    /**\n     * Converts extent coordinates to mercator projection coordinates.\n     * @public\n     * @return {Extent} New instance of the current extent.\n     */\n    public forwardMercator(): Extent {\n        return new Extent(this.southWest.forwardMercator(), this.northEast.forwardMercator());\n    }\n\n    /**\n     * Converts extent coordinates from mercator projection to degrees.\n     * @public\n     * @return {Extent} New instance of the current extent.\n     */\n    public inverseMercator(): Extent {\n        return new Extent(this.southWest.inverseMercator(), this.northEast.inverseMercator());\n    }\n\n    /**\n     * Gets cartesian bounding bounds of the current ellipsoid.\n     * @public\n     * @param {Ellipsoid} ellipsoid - Ellipsoid.\n     * @return {Array.<number>} Cartesian 3d coordinate array. (exactly 6 entries)\n     */\n    public getCartesianBounds(ellipsoid: Ellipsoid): [number, number, number, number, number, number] {\n        let xmin = math.MAX,\n            xmax = math.MIN,\n            ymin = math.MAX,\n            ymax = math.MIN,\n            zmin = math.MAX,\n            zmax = math.MIN;\n\n        const v = [\n            new LonLat(this.southWest.lon, this.southWest.lat),\n            new LonLat(this.southWest.lon, this.northEast.lat),\n            new LonLat(this.northEast.lon, this.northEast.lat),\n            new LonLat(this.northEast.lon, this.southWest.lat)\n        ];\n\n        for (let i = 0; i < v.length; i++) {\n            const coord = ellipsoid.lonLatToCartesian(v[i]);\n            const x = coord.x;\n            const y = coord.y;\n            const z = coord.z;\n            if (x < xmin) xmin = x;\n            if (x > xmax) xmax = x;\n            if (y < ymin) ymin = y;\n            if (y > ymax) ymax = y;\n            if (z < zmin) zmin = z;\n            if (z > zmax) zmax = z;\n        }\n\n        return [xmin, ymin, zmin, xmax, ymax, zmax];\n    }\n\n    public toString(): string {\n        return (\n            `[${this.southWest.lon.toFixed(5)}, ${this.southWest.lat.toFixed(5)}, ${this.northEast.lon.toFixed(5)}, ${this.northEast.lat.toFixed(5)}]`\n        );\n    }\n}\n","import {Mat4} from \"./Mat4\";\nimport {Vec3} from \"./Vec3\";\n\nexport type NumberArray9 = [\n    number, number, number,\n    number, number, number,\n    number, number, number\n];\n\n/**\n * Class represents a 3x3 matrix.\n * @class\n */\nexport class Mat3 {\n\n    /**\n     * A 3x3 matrix, indexing as a column-major order array.\n     * @public\n     * @type {Array.<number>}\n     */\n    public _m: NumberArray9 = [\n        0, 0, 0,\n        0, 0, 0,\n        0, 0, 0\n    ];\n\n    constructor() {\n    }\n\n    /**\n     * Sets column-major order array matrix.\n     * @public\n     * @param {Array.<number>} m - Matrix array.\n     * @returns {Mat3}\n     */\n    public set(m: NumberArray9): Mat3 {\n        this._m[0] = m[0];\n        this._m[1] = m[1];\n        this._m[2] = m[2];\n        this._m[3] = m[3];\n        this._m[4] = m[4];\n        this._m[5] = m[5];\n        this._m[6] = m[6];\n        this._m[7] = m[7];\n        this._m[8] = m[8];\n        return this;\n    }\n\n    /**\n     * Duplicates a Mat3 instance.\n     * @public\n     * @returns {Mat3}\n     */\n    public clone(): Mat3 {\n        let res = new Mat3();\n        res.set(this._m);\n        return res;\n    }\n\n    /**\n     * Copy matrix.\n     * @public\n     * @param {Mat3} a - Matrix to copy.\n     * @returns {Mat3}\n     */\n    public copy(a: Mat3): Mat3 {\n        return this.set(a._m);\n    }\n\n    /**\n     * Creates transposed matrix from the current.\n     * @public\n     * @returns {Mat3}\n     */\n    public transposeTo(): Mat3 {\n        let res = new Mat3();\n        let m = this._m;\n        res._m[0] = m[0];\n        res._m[1] = m[3];\n        res._m[2] = m[6];\n        res._m[3] = m[1];\n        res._m[4] = m[4];\n        res._m[5] = m[7];\n        res._m[6] = m[2];\n        res._m[7] = m[5];\n        res._m[8] = m[8];\n        return res;\n    }\n\n    /**\n     * Sets matrix to identity.\n     * @public\n     * @returns {Mat3}\n     */\n    public setIdentity(): Mat3 {\n        this._m[0] = 1;\n        this._m[1] = 0;\n        this._m[2] = 0;\n        this._m[3] = 0;\n        this._m[4] = 1;\n        this._m[5] = 0;\n        this._m[6] = 0;\n        this._m[7] = 0;\n        this._m[8] = 1;\n        return this;\n    }\n\n    /**\n     * Multiply to 3d vector.\n     * @public\n     * @params {Vec3} p - 3d vector.\n     * @returns {Vec3}\n     */\n    public mulVec(p: Vec3): Vec3 {\n\n        let d = p.x,\n            e = p.y,\n            g = p.z;\n\n        let m = this._m;\n\n        return new Vec3(\n            m[0] * d + m[3] * e + m[6] * g,\n            m[1] * d + m[4] * e + m[7] * g,\n            m[2] * d + m[5] * e + m[8] * g\n        );\n    }\n\n    /**\n     * Converts to 4x4 matrix.\n     * @public\n     * @returns {Mat4}\n     */\n    public toMatrix4(): Mat4 {\n\n        let res = new Mat4();\n        let b = res._m;\n        let a = this._m;\n\n        b[0] = a[0];\n        b[1] = a[1];\n        b[2] = a[2];\n        b[3] = 0;\n        b[4] = a[3];\n        b[5] = a[4];\n        b[6] = a[5];\n        b[7] = 0;\n        b[8] = a[6];\n        b[9] = a[7];\n        b[10] = a[8];\n        b[11] = 0;\n        b[12] = 0;\n        b[13] = 0;\n        b[14] = 0;\n        b[15] = 1;\n\n        return res;\n    }\n}\n\n/**\n * Mat3 factory.\n * @static\n * @return {Mat3}\n */\nexport function mat3(): Mat3 {\n    return new Mat3();\n}\n","import {frac} from \"../math\";\nimport {Vec3} from \"./Vec3\";\n\nexport type NumberArray4 = [number, number, number, number];\n\n/**\n * Class represents a 4d vector.\n * @class\n * @param {number} [x] - First value.\n * @param {number} [y] - Second value.\n * @param {number} [z] - Third value.\n * @param {number} [w] - Fourth value.\n */\nexport class Vec4 {\n\n    /**\n     * @public\n     * @type {number}\n     */\n    public x: number;\n\n    /**\n     * @public\n     * @type {number}\n     */\n    public y: number;\n\n    /**\n     * @public\n     * @type {number}\n     */\n    public z: number;\n\n    /**\n     * @public\n     * @type {number}\n     */\n    public w: number;\n\n\n    constructor(x: number = 0.0, y: number = 0.0, z: number = 0.0, w: number = 0.0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    /**\n     * Identity vector [0,0,0,1].\n     * @const\n     * @type {Vec4}\n     */\n    static get identity(): Vec4 {\n        return new Vec4(0, 0, 0, 1);\n    }\n\n    /**\n     * Creates 4d vector from array.\n     * @function\n     * @param {Array.<number>} arr - Array of four values\n     * @returns {Vec4}\n     */\n    static fromVec(arr: NumberArray4): Vec4 {\n        return new Vec4(arr[0], arr[1], arr[2], arr[3]);\n    }\n\n    /**\n     * Converts to Vec3, without fourth value.\n     * @public\n     * @returns {Vec3}\n     */\n    public toVec3(): Vec3 {\n        return new Vec3(this.x, this.y, this.z);\n    }\n\n    /**\n     * Returns clone vector.\n     * @public\n     * @returns {Vec4}\n     */\n    public clone(): Vec4 {\n        return new Vec4(this.x, this.y, this.z, this.w);\n    }\n\n    /**\n     * Compares with vector. Returns true if it equals another.\n     * @public\n     * @param {Vec4} v - Vector to compare.\n     * @returns {boolean}\n     */\n    public equal(v: Vec4): boolean {\n        return this.x === v.x && this.y === v.y && this.z === v.z && this.w === v.w;\n    }\n\n    /**\n     * Copy input vector's values.\n     * @param {Vec4} v - Vector to copy.\n     * @returns {Vec4}\n     */\n    public copy(v: Vec4): Vec4 {\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n        this.w = v.w;\n        return this;\n    }\n\n    /**\n     * Converts vector to a number array.\n     * @public\n     * @returns {Array.<number>} - (exactly 4 entries)\n     */\n    public toArray(): NumberArray4 {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    /**\n     * Converts vector to a number array.\n     * @public\n     * @returns {Array.<number>} - (exactly 4 entries)\n     */\n    toArray3(): [number, number, number] {\n        return [this.x, this.y, this.z];\n    }\n\n    /**\n     * Sets vector's values.\n     * @public\n     * @param {number} x - Value X.\n     * @param {number} y - Value Y.\n     * @param {number} z - Value Z.\n     * @param {number} w - Value W.\n     * @returns {Vec4}\n     */\n    public set(x: number, y: number, z: number, w: number): Vec4 {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n        return this;\n    }\n\n    /**\n     * Adds vector to the current.\n     * @public\n     * @param {Vec4} v - Vector to add.\n     * @returns {Vec4}\n     */\n    public addA(v: Vec4): Vec4 {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n        this.w += v.w;\n        return this;\n    }\n\n    /**\n     * Subtract vector from the current.\n     * @public\n     * @param {Vec4} v - Subtract vector.\n     * @returns {Vec4}\n     */\n    public subA(v: Vec4): Vec4 {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n        this.w -= v.w;\n        return this;\n    }\n\n    /**\n     * Scale current vector.\n     * @public\n     * @param {number} scale - Scale value.\n     * @returns {Vec4}\n     */\n    public scale(scale: number): Vec4 {\n        this.x *= scale;\n        this.y *= scale;\n        this.z *= scale;\n        this.w *= scale;\n        return this;\n    }\n\n    /**\n     * Makes vector affinity. Thereby fourth component becomes to 1.0.\n     * @public\n     * @returns {Vec4}\n     */\n    public affinity(): Vec4 {\n\n        let iw = 1.0 / this.w;\n\n        this.x *= iw;\n        this.y *= iw;\n        this.z *= iw;\n        this.w = 1.0;\n\n        return this;\n    }\n\n    /**\n     * Scale current vector to another instance.\n     * @public\n     * @param {number} scale - Scale value.\n     * @returns {Vec3}\n     */\n    public scaleTo(scale: number): Vec4 {\n        return new Vec4(this.x * scale, this.y * scale, this.z * scale, this.w * scale);\n    }\n\n    /**\n     * Vector's edge function that returns vector where each component is 0.0 if it's smaller than edge and otherwise 1.0.\n     * @public\n     * @returns {Vec4}\n     */\n    public getStep(edge: number): Vec4 {\n        return new Vec4(\n            this.x < edge ? 0.0 : 1.0,\n            this.y < edge ? 0.0 : 1.0,\n            this.z < edge ? 0.0 : 1.0,\n            this.w < edge ? 0.0 : 1.0\n        );\n    }\n\n    /**\n     * The vector frac function returns the vector of fractional parts of each value, i.e. x minus floor(x).\n     * @public\n     * @param {Vec4} v - Input vector\n     * @returns {Vec4}\n     */\n    public getFrac(v: Vec4): Vec4 {\n        return new Vec4(frac(v.x), frac(v.y), frac(v.z), frac(v.w));\n    }\n\n    /**\n     * Gets vectors dot production.\n     * @public\n     * @param {Vec4} v - Another vector.\n     * @returns {number} - Dot product.\n     */\n    public dot(v: Vec4): number {\n        return v.x * this.x + v.y * this.y + v.z * this.z + v.w * this.w;\n    }\n\n    /**\n     * Returns true if vector's values are zero.\n     * @public\n     * @returns {boolean} -\n     */\n    public isZero(): boolean {\n        return !(this.x || this.y || this.z || this.w);\n    }\n}\n\n/**\n * Vector 4d object creator.\n * @function\n * @param {number} [x] - First value.\n * @param {number} [y] - Second value.\n * @param {number} [z] - Third value.\n * @param {number} [w] - Fourth value.\n * @returns {Vec4}\n */\nexport function vec4(x: number = 0, y: number = 0, z: number = 0, w: number = 0): Vec4 {\n    return new Vec4(x, y, z, w);\n}\n","import {Mat3} from \"./Mat3\";\nimport {Quat} from \"./Quat\";\nimport {Vec3} from \"./Vec3\";\nimport {Vec4} from \"./Vec4\";\n\nexport type NumberArray16 = [\n    number, number, number, number,\n    number, number, number, number,\n    number, number, number, number,\n    number, number, number, number\n];\n\n/**\n * Class represents a 4x4 matrix.\n * @class\n */\nexport class Mat4 {\n\n    /**\n     * A 4x4 matrix, index-able as a column-major order array.\n     * @public\n     * @type {Array.<number>}\n     */\n    public _m: NumberArray16 = [\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        0, 0, 0, 0\n    ];\n\n    constructor() {\n    }\n\n    /**\n     * Returns identity matrix instance.\n     * @static\n     * @returns {Mat4} -\n     */\n    static identity(): Mat4 {\n        let res = new Mat4();\n        res._m[0] = 1;\n        res._m[1] = 0;\n        res._m[2] = 0;\n        res._m[3] = 0;\n        res._m[4] = 0;\n        res._m[5] = 1;\n        res._m[6] = 0;\n        res._m[7] = 0;\n        res._m[8] = 0;\n        res._m[9] = 0;\n        res._m[10] = 1;\n        res._m[11] = 0;\n        res._m[12] = 0;\n        res._m[13] = 0;\n        res._m[14] = 0;\n        res._m[15] = 1;\n        return res;\n    }\n\n    /**\n     * Sets column-major order array matrix.\n     * @public\n     * @param {Array.<number>} m - Matrix array.\n     * @returns {Mat4} -\n     */\n    public set(m: NumberArray16): Mat4 {\n        this._m[0] = m[0];\n        this._m[1] = m[1];\n        this._m[2] = m[2];\n        this._m[3] = m[3];\n        this._m[4] = m[4];\n        this._m[5] = m[5];\n        this._m[6] = m[6];\n        this._m[7] = m[7];\n        this._m[8] = m[8];\n        this._m[9] = m[9];\n        this._m[10] = m[10];\n        this._m[11] = m[11];\n        this._m[12] = m[12];\n        this._m[13] = m[13];\n        this._m[14] = m[14];\n        this._m[15] = m[15];\n        return this;\n    }\n\n    /**\n     * Duplicates a Matrix3 instance.\n     * @public\n     * @returns {Mat4} -\n     */\n    public clone(): Mat4 {\n        let res = new Mat4();\n        res.set(this._m);\n        return res;\n    }\n\n    /**\n     * Copy matrix.\n     * @public\n     * @param {Mat4} a - Matrix to copy.\n     * @return {Mat4}\n     */\n    public copy(a: Mat4): Mat4 {\n        return this.set(a._m);\n    }\n\n    /**\n     * Converts to 3x3 matrix.\n     * @public\n     * @returns {Mat3} -\n     */\n    public toMatrix3(): Mat3 {\n        let res = new Mat3();\n        let a = this._m,\n            b = res._m;\n        b[0] = a[0];\n        b[1] = a[1];\n        b[2] = a[2];\n        b[3] = a[4];\n        b[4] = a[5];\n        b[5] = a[6];\n        b[6] = a[8];\n        b[7] = a[9];\n        b[8] = a[10];\n        return res;\n    }\n\n    /**\n     * Multiply to 3d vector.\n     * @public\n     * @param {Vec3} p - 3d vector.\n     * @returns {Vec3} -\n     */\n    public mulVec3(p: Vec3): Vec3 {\n        let d = p.x,\n            e = p.y,\n            g = p.z;\n        return new Vec3(\n            this._m[0] * d + this._m[4] * e + this._m[8] * g + this._m[12],\n            this._m[1] * d + this._m[5] * e + this._m[9] * g + this._m[13],\n            this._m[2] * d + this._m[6] * e + this._m[10] * g + this._m[14]\n        );\n    }\n\n    /**\n     * Multiply to 4d vector.\n     * @public\n     * @param {Vec4} p - 4d vector.\n     * @returns {Vec4} -\n     */\n    public mulVec4(p: Vec4): Vec4 {\n        let d = p.x,\n            e = p.y,\n            g = p.z,\n            f = p.w;\n        return new Vec4(\n            this._m[0] * d + this._m[4] * e + this._m[8] * g + this._m[12] * f,\n            this._m[1] * d + this._m[5] * e + this._m[9] * g + this._m[13] * f,\n            this._m[2] * d + this._m[6] * e + this._m[10] * g + this._m[14] * f,\n            this._m[3] * d + this._m[7] * e + this._m[11] * g + this._m[15] * f\n        );\n    }\n\n    /**\n     * Creates an inverse 3x3 matrix of the current.\n     * @public\n     * @returns {Mat3} -\n     */\n    public toInverseMatrix3(): Mat3 | undefined {\n        let a = this._m;\n        let c = a[0],\n            d = a[1],\n            e = a[2],\n            g = a[4],\n            f = a[5],\n            h = a[6],\n            i = a[8],\n            j = a[9],\n            k = a[10],\n            l = k * f - h * j,\n            o = -k * g + h * i,\n            m = j * g - f * i,\n            n = c * l + d * o + e * m;\n\n        if (!n) {\n            return;\n        }\n\n        n = 1.0 / n;\n\n        let res = new Mat3();\n        res._m[0] = l * n;\n        res._m[1] = (-k * d + e * j) * n;\n        res._m[2] = (h * d - e * f) * n;\n        res._m[3] = o * n;\n        res._m[4] = (k * c - e * i) * n;\n        res._m[5] = (-h * c + e * g) * n;\n        res._m[6] = m * n;\n        res._m[7] = (-j * c + d * i) * n;\n        res._m[8] = (f * c - d * g) * n;\n\n        return res;\n    }\n\n    /**\n     * Creates an inverse matrix of the current.\n     * @public\n     * @returns {Mat4} -\n     */\n    public inverseTo(res: Mat4 = new Mat4()): Mat4 {\n        let c = this._m[0],\n            d = this._m[1],\n            e = this._m[2],\n            g = this._m[3],\n            f = this._m[4],\n            h = this._m[5],\n            i = this._m[6],\n            j = this._m[7],\n            k = this._m[8],\n            l = this._m[9],\n            o = this._m[10],\n            m = this._m[11],\n            n = this._m[12],\n            p = this._m[13],\n            r = this._m[14],\n            s = this._m[15],\n            A = c * h - d * f,\n            B = c * i - e * f,\n            t = c * j - g * f,\n            u = d * i - e * h,\n            v = d * j - g * h,\n            w = e * j - g * i,\n            x = k * p - l * n,\n            y = k * r - o * n,\n            z = k * s - m * n,\n            C = l * r - o * p,\n            D = l * s - m * p,\n            E = o * s - m * r,\n            q = 1 / (A * E - B * D + t * C + u * z - v * y + w * x);\n\n        res._m[0] = (h * E - i * D + j * C) * q;\n        res._m[1] = (-d * E + e * D - g * C) * q;\n        res._m[2] = (p * w - r * v + s * u) * q;\n        res._m[3] = (-l * w + o * v - m * u) * q;\n        res._m[4] = (-f * E + i * z - j * y) * q;\n        res._m[5] = (c * E - e * z + g * y) * q;\n        res._m[6] = (-n * w + r * t - s * B) * q;\n        res._m[7] = (k * w - o * t + m * B) * q;\n        res._m[8] = (f * D - h * z + j * x) * q;\n        res._m[9] = (-c * D + d * z - g * x) * q;\n        res._m[10] = (n * v - p * t + s * A) * q;\n        res._m[11] = (-k * v + l * t - m * A) * q;\n        res._m[12] = (-f * C + h * y - i * x) * q;\n        res._m[13] = (c * C - d * y + e * x) * q;\n        res._m[14] = (-n * u + p * B - r * A) * q;\n        res._m[15] = (k * u - l * B + o * A) * q;\n\n        return res;\n    }\n\n    /**\n     * Creates a transposed matrix of the current.\n     * @public\n     * @returns {Mat4} -\n     */\n    public transposeTo(): Mat4 {\n        let res = new Mat4();\n        res._m[0] = this._m[0];\n        res._m[1] = this._m[4];\n        res._m[2] = this._m[8];\n        res._m[3] = this._m[12];\n        res._m[4] = this._m[1];\n        res._m[5] = this._m[5];\n        res._m[6] = this._m[9];\n        res._m[7] = this._m[13];\n        res._m[8] = this._m[2];\n        res._m[9] = this._m[6];\n        res._m[10] = this._m[10];\n        res._m[11] = this._m[14];\n        res._m[12] = this._m[3];\n        res._m[13] = this._m[7];\n        res._m[14] = this._m[11];\n        res._m[15] = this._m[15];\n        return res;\n    }\n\n    /**\n     * Sets matrix to identity.\n     * @public\n     * @returns {Mat4} -\n     */\n    public setIdentity(): Mat4 {\n        this._m[0] = 1;\n        this._m[1] = 0;\n        this._m[2] = 0;\n        this._m[3] = 0;\n        this._m[4] = 0;\n        this._m[5] = 1;\n        this._m[6] = 0;\n        this._m[7] = 0;\n        this._m[8] = 0;\n        this._m[9] = 0;\n        this._m[10] = 1;\n        this._m[11] = 0;\n        this._m[12] = 0;\n        this._m[13] = 0;\n        this._m[14] = 0;\n        this._m[15] = 1;\n        return this;\n    }\n\n    /**\n     * Computes the product of two matrices.\n     * @public\n     * @param {Mat4} mx - Matrix to multiply.\n     * @returns {Mat4} -\n     */\n    public mul(mx: Mat4): Mat4 {\n\n        let d = this._m[0],\n            e = this._m[1],\n            g = this._m[2],\n            f = this._m[3],\n            h = this._m[4],\n            i = this._m[5],\n            j = this._m[6],\n            k = this._m[7],\n            l = this._m[8],\n            o = this._m[9],\n            m = this._m[10],\n            n = this._m[11],\n            p = this._m[12],\n            r = this._m[13],\n            s = this._m[14],\n            a = this._m[15];\n\n        let A = mx._m[0],\n            B = mx._m[1],\n            t = mx._m[2],\n            u = mx._m[3],\n            v = mx._m[4],\n            w = mx._m[5],\n            x = mx._m[6],\n            y = mx._m[7],\n            z = mx._m[8],\n            C = mx._m[9],\n            D = mx._m[10],\n            E = mx._m[11],\n            q = mx._m[12],\n            F = mx._m[13],\n            G = mx._m[14],\n            b = mx._m[15];\n\n        let res = new Mat4();\n\n        res._m[0] = A * d + B * h + t * l + u * p;\n        res._m[1] = A * e + B * i + t * o + u * r;\n        res._m[2] = A * g + B * j + t * m + u * s;\n        res._m[3] = A * f + B * k + t * n + u * a;\n        res._m[4] = v * d + w * h + x * l + y * p;\n        res._m[5] = v * e + w * i + x * o + y * r;\n        res._m[6] = v * g + w * j + x * m + y * s;\n        res._m[7] = v * f + w * k + x * n + y * a;\n        res._m[8] = z * d + C * h + D * l + E * p;\n        res._m[9] = z * e + C * i + D * o + E * r;\n        res._m[10] = z * g + C * j + D * m + E * s;\n        res._m[11] = z * f + C * k + D * n + E * a;\n        res._m[12] = q * d + F * h + G * l + b * p;\n        res._m[13] = q * e + F * i + G * o + b * r;\n        res._m[14] = q * g + F * j + G * m + b * s;\n        res._m[15] = q * f + F * k + G * n + b * a;\n\n        return res;\n    }\n\n    /**\n     * Add translation vector to the current matrix.\n     * @public\n     * @param {Vec3} v - Translate vector.\n     * @returns {Mat4} -\n     */\n    public translate(v: Vec3): Mat4 {\n\n        let d = v.x,\n            e = v.y,\n            b = v.z;\n\n        let a = this._m;\n\n        a[12] = a[0] * d + a[4] * e + a[8] * b + a[12];\n        a[13] = a[1] * d + a[5] * e + a[9] * b + a[13];\n        a[14] = a[2] * d + a[6] * e + a[10] * b + a[14];\n        a[15] = a[3] * d + a[7] * e + a[11] * b + a[15];\n\n        return this;\n    }\n\n    /**\n     * Sets translation matrix to the position.\n     * @public\n     * @param {Vec3} v - Translate to position.\n     * @returns {Mat4} -\n     */\n    public translateToPosition(v: Vec3): Mat4 {\n        let a = this._m;\n        a[12] = v.x;\n        a[13] = v.y;\n        a[14] = v.z;\n        return this;\n    }\n\n    /**\n     * Rotate current matrix around the aligned axis and angle.\n     * @public\n     * @param {Vec3} u - Aligned axis.\n     * @param {number} angle - Aligned axis angle in radians.\n     * @returns {Mat4} -\n     */\n    public rotate(u: Vec3, angle: number): Mat4 {\n\n        let c = Math.cos(angle),\n            s = Math.sin(angle);\n\n        let rot = new Mat4();\n        let mx = rot._m;\n\n        mx[0] = c + (1 - c) * u.x * u.x;\n        mx[1] = (1 - c) * u.y * u.x - s * u.z;\n        mx[2] = (1 - c) * u.z * u.x + s * u.y;\n        mx[3] = 0;\n        mx[4] = (1 - c) * u.x * u.y + s * u.z;\n        mx[5] = c + (1 - c) * u.y * u.y;\n        mx[6] = (1 - c) * u.z * u.y - s * u.x;\n        mx[7] = 0;\n        mx[8] = (1 - c) * u.x * u.z - s * u.y;\n        mx[9] = (1 - c) * u.y * u.z + s * u.x;\n        mx[10] = c + (1 - c) * u.z * u.z;\n        mx[11] = 0;\n        mx[12] = 0;\n        mx[13] = 0;\n        mx[14] = 0;\n        mx[15] = 1;\n\n        return this.mul(rot);\n    }\n\n    /**\n     * Sets current rotation matrix around the aligned axis and angle.\n     * @public\n     * @param {Vec3} u - Aligned axis.\n     * @param {number} angle - Aligned axis angle in radians.\n     * @returns {Mat4} -\n     */\n    public setRotation(u: Vec3, angle: number): Mat4 {\n\n        let c = Math.cos(angle),\n            s = Math.sin(angle);\n\n        let mx = this._m;\n\n        mx[0] = c + (1 - c) * u.x * u.x;\n        mx[1] = (1 - c) * u.y * u.x - s * u.z;\n        mx[2] = (1 - c) * u.z * u.x + s * u.y;\n        mx[3] = 0;\n        mx[4] = (1 - c) * u.x * u.y + s * u.z;\n        mx[5] = c + (1 - c) * u.y * u.y;\n        mx[6] = (1 - c) * u.z * u.y - s * u.x;\n        mx[7] = 0;\n        mx[8] = (1 - c) * u.x * u.z - s * u.y;\n        mx[9] = (1 - c) * u.y * u.z + s * u.x;\n        mx[10] = c + (1 - c) * u.z * u.z;\n        mx[11] = 0;\n        mx[12] = 0;\n        mx[13] = 0;\n        mx[14] = 0;\n        mx[15] = 1;\n\n        return this;\n    }\n\n    /**\n     * Gets the rotation matrix from one vector to another.\n     * @public\n     * @param {Vec3} a - First vector.\n     * @param {Vec3} b - Second vector.\n     * @returns {Mat4} -\n     */\n    public rotateBetweenVectors(a: Vec3, b: Vec3): Mat4 {\n        let q = Quat.getRotationBetweenVectors(a, b);\n        return q.getMat4();\n    }\n\n    /**\n     * Scale current matrix to the vector values.\n     * @public\n     * @param {Vec3} v - Scale vector.\n     * @returns {Mat4} -\n     */\n    public scale(v: Vec3): Mat4 {\n        let mx = this._m;\n        mx[0] = mx[0] * v.x;\n        mx[1] = mx[1] * v.x;\n        mx[2] = mx[2] * v.x;\n        mx[3] = mx[3] * v.x;\n        mx[4] = mx[4] * v.y;\n        mx[5] = mx[5] * v.y;\n        mx[6] = mx[6] * v.y;\n        mx[7] = mx[7] * v.y;\n        mx[8] = mx[8] * v.z;\n        mx[9] = mx[9] * v.z;\n        mx[10] = mx[10] * v.z;\n        mx[11] = mx[11] * v.z;\n        return this;\n    }\n\n    /**\n     * Sets perspective projection matrix frustum values.\n     * @public\n     * @param {number} left -\n     * @param {number} right -\n     * @param {number} bottom -\n     * @param {number} top -\n     * @param {number} near -\n     * @param {number} far -\n     * @returns {Mat4} -\n     */\n    public setPerspective(left: number, right: number, bottom: number, top: number, near: number, far: number): Mat4 {\n\n        let h = right - left,\n            i = top - bottom,\n            j = far - near;\n\n        this._m[0] = (near * 2) / h;\n        this._m[1] = 0;\n        this._m[2] = 0;\n        this._m[3] = 0;\n        this._m[4] = 0;\n        this._m[5] = (near * 2) / i;\n        this._m[6] = 0;\n        this._m[7] = 0;\n        this._m[8] = (right + left) / h;\n        this._m[9] = (top + bottom) / i;\n        this._m[10] = -(far + near) / j;\n        this._m[11] = -1;\n        this._m[12] = 0;\n        this._m[13] = 0;\n        this._m[14] = -(far * near * 2) / j;\n        this._m[15] = 0;\n\n        return this;\n    }\n\n    /**\n     * Creates current orthographic projection matrix.\n     * @public\n     * @param {number} left -\n     * @param {number} right -\n     * @param {number} bottom -\n     * @param {number} top -\n     * @param {number} near -\n     * @param {number} far -\n     * @return {Mat4} -\n     */\n    public setOrtho(left: number, right: number, bottom: number, top: number, near: number, far: number): Mat4 {\n\n        let lr = 1.0 / (left - right),\n            bt = 1.0 / (bottom - top),\n            nf = 1.0 / (near - far),\n            m = this._m;\n\n        m[0] = -2.0 * lr;\n        m[1] = 0;\n        m[2] = 0;\n        m[3] = 0;\n        m[4] = 0;\n        m[5] = -2.0 * bt;\n        m[6] = 0;\n        m[7] = 0;\n        m[8] = 0;\n        m[9] = 0;\n        m[10] = 2.0 * nf;\n        m[11] = 0;\n        m[12] = (left + right) * lr;\n        m[13] = (top + bottom) * bt;\n        m[14] = (far + near) * nf;\n        m[15] = 1.0;\n\n        return this;\n    }\n\n    /**\n     * Sets current rotation matrix by euler's angles.\n     * @public\n     * @param {number} ax - Rotation angle in radians around X axis.\n     * @param {number} ay - Rotation angle in radians around Y axis.\n     * @param {number} az - Rotation angle in radians around Z axis.\n     * @returns {Mat4} -\n     */\n    public eulerToMatrix(ax: number, ay: number, az: number): Mat4 {\n\n        let a = Math.cos(ax),\n            b = Math.sin(ax),\n            c = Math.cos(ay),\n            d = Math.sin(ay),\n            e = Math.cos(az),\n            f = Math.sin(az);\n\n        let ad = a * d,\n            bd = b * d;\n\n        let mat = this._m;\n\n        mat[0] = c * e;\n        mat[1] = -c * f;\n        mat[2] = -d;\n        mat[4] = -bd * e + a * f;\n        mat[5] = bd * f + a * e;\n        mat[6] = -b * c;\n        mat[8] = ad * e + b * f;\n        mat[9] = -ad * f + b * e;\n        mat[10] = a * c;\n        mat[3] = mat[7] = mat[11] = mat[12] = mat[13] = mat[14] = 0;\n        mat[15] = 1;\n\n        return this;\n    }\n}\n\n/**\n * Mat4 factory.\n * @static\n * @returns {Mat4} -\n */\nexport function mat4(): Mat4 {\n    return new Mat4();\n}\n","import * as math from \"../math\";\nimport {Vec3} from \"./Vec3\";\nimport {Mat4} from \"./Mat4\";\nimport {Mat3} from \"./Mat3\";\n\n/**\n * A set of 4-dimensional coordinates used to represent rotation in 3-dimensional space.\n * @constructor\n * @param {Number} [x=0.0] The X component.\n * @param {Number} [y=0.0] The Y component.\n * @param {Number} [z=0.0] The Z component.\n * @param {Number} [w=0.0] The W component.\n */\nexport class Quat {\n    /**\n     * The X component.\n     * @public\n     * @type {Number}\n     * @default 0.0\n     */\n    public x: number;\n\n    /**\n     * The Y component.\n     * @public\n     * @type {Number}\n     * @default 0.0\n     */\n    public y: number;\n\n    /**\n     * The Z component.\n     * @public\n     * @type {Number}\n     * @default 0.0\n     */\n    public z: number;\n\n    /**\n     * The W component.\n     * @public\n     * @type {Number}\n     * @default 0.0\n     */\n    public w: number;\n\n    constructor(x: number = 0.0, y: number = 0.0, z: number = 0.0, w: number = 0.0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n\n    /**\n     * Identity Quat.\n     * @const\n     * @type {Quat}\n     */\n    static get IDENTITY(): Quat {\n        return new Quat(0.0, 0.0, 0.0, 1.0);\n    }\n\n    /**\n     * Returns a Quat represents rotation around X axis.\n     * @static\n     * @param {number} a - The angle in radians to rotate around the axis.\n     * @returns {Quat} -\n     */\n    static xRotation(a: number): Quat {\n        a *= 0.5;\n        return new Quat(Math.sin(a), 0.0, 0.0, Math.cos(a));\n    }\n\n    /**\n     * Returns a Quat represents rotation around Y axis.\n     * @static\n     * @param {number} a - The angle in radians to rotate around the axis.\n     * @returns {Quat} -\n     */\n    static yRotation(a: number): Quat {\n        a *= 0.5;\n        return new Quat(0.0, Math.sin(a), 0.0, Math.cos(a));\n    }\n\n    /**\n     * Returns a Quat represents rotation around Z axis.\n     * @static\n     * @param {number} a - The angle in radians to rotate around the axis.\n     * @returns {Quat} -\n     */\n    static zRotation(a: number): Quat {\n        a *= 0.5;\n        return new Quat(0.0, 0.0, Math.sin(a), Math.cos(a));\n    }\n\n    /**\n     * Computes a Quat representing a rotation around an axis.\n     * @static\n     * @param {Vec3} axis - The axis of rotation.\n     * @param {number} [angle=0.0] The angle in radians to rotate around the axis.\n     * @returns {Quat} -\n     */\n    static axisAngleToQuat(axis: Vec3, angle: number = 0): Quat {\n        let v = axis.getNormal();\n        let half_angle = angle * 0.5;\n        let sin_a = Math.sin(half_angle);\n        return new Quat(v.x * sin_a, v.y * sin_a, v.z * sin_a, Math.cos(half_angle));\n    }\n\n    /**\n     * Computes a rotation from the given heading and up vector.\n     * @static\n     * @param {Vec3} forward - Heading target coordinates.\n     * @param {Vec3} up - Up vector.\n     * @returns {Quat} -\n     */\n    static getLookRotation(forward: Vec3, up: Vec3): Quat {\n        let f = forward.getNormal().negate();\n        let s = up.cross(f).normalize();\n        let u = f.cross(s);\n        let z = 1.0 + s.x + u.y + f.z;\n\n        if (z > 0.000001) {\n            let fd = 1.0 / (2.0 * Math.sqrt(z));\n            return new Quat((f.y - u.z) * fd, (s.z - f.x) * fd, (u.x - s.y) * fd, 0.25 / fd);\n        }\n\n        if (s.x > u.y && s.x > f.z) {\n            let fd = 1.0 / (2.0 * Math.sqrt(1.0 + s.x - u.y - f.z));\n            return new Quat(0.25 / fd, (u.x + s.y) * fd, (s.z + f.x) * fd, (f.y - u.z) * fd);\n        }\n\n        if (u.y > f.z) {\n            let fd = 1.0 / (2.0 * Math.sqrt(1.0 + u.y - s.x - f.z));\n            return new Quat((u.x + s.y) * fd, 0.25 / fd, (f.y + u.z) * fd, (s.z - f.x) * fd);\n        }\n\n        let fd = 1.0 / (2.0 * Math.sqrt(1.0 + f.z - s.x - u.y));\n        return new Quat((s.z + f.x) * fd, (f.y + u.z) * fd, 0.25 / fd, (u.x - s.y) * fd);\n    }\n\n    /**\n     * Computes a Quat from source point heading to the destination point.\n     * @static\n     * @param {Vec3} sourcePoint - Source coordinate.\n     * @param {Vec3} destPoint - Destination coordinate.\n     * @returns {Quat} -\n     */\n    static getLookAtSourceDest(sourcePoint: Vec3, destPoint: Vec3): Quat {\n        let forwardVector = destPoint.subA(sourcePoint).normalize();\n        let dot = Vec3.FORWARD.dot(forwardVector);\n        if (Math.abs(dot - -1.0) < 0.000001) {\n            return Quat.axisAngleToQuat(Vec3.UP, Math.PI);\n        }\n        if (Math.abs(dot - 1.0) < 0.000001) {\n            return new Quat(0.0, 0.0, 0.0, 1.0);\n        }\n        let rotAngle = Math.acos(dot);\n        let rotAxis = Vec3.FORWARD.cross(forwardVector).normalize();\n        return Quat.axisAngleToQuat(rotAxis, rotAngle);\n    }\n\n    /**\n     * Compute rotation between two vectors.\n     * @static\n     * @param {Vec3} u - First vector.\n     * @param {Vec3} v - Second vector.\n     * @returns {Quat} -\n     */\n    static getRotationBetweenVectors(u: Vec3, v: Vec3): Quat {\n        let w = u.cross(v);\n        let q = new Quat(w.x, w.y, w.z, 1.0 + u.dot(v));\n        return q.normalize();\n    }\n\n    /**\n     * Compute rotation between two vectors.\n     * @static\n     * @param {Vec3} u - First vector.\n     * @param {Vec3} v - Second vector.\n     * @param {Quat} res\n     * @returns {Quat} -\n     */\n    static getRotationBetweenVectorsRes(u: Vec3, v: Vec3, res: Quat): Quat {\n        let w = u.cross(v);\n        res.set(w.x, w.y, w.z, 1.0 + u.dot(v));\n        return res.normalize();\n    }\n\n    /**\n     * Compute rotation between two vectors with around vector up\n     * for exactly opposite vectors. If vectors exactly in the same\n     * direction as returns identity Quat.\n     * @static\n     * @param {Vec3} source - First vector.\n     * @param {Vec3} dest - Second vector.\n     * @param {Vec3} up - Up vector.\n     * @returns {Quat} -\n     */\n    static getRotationBetweenVectorsUp(source: Vec3, dest: Vec3, up: Vec3): Quat {\n        let dot = source.dot(dest);\n        if (Math.abs(dot + 1.0) < 0.000001) {\n            // vector source and dest point exactly in the opposite direction,\n            // so it is a 180 degrees turn around the up-axis\n            return Quat.axisAngleToQuat(up, Math.PI);\n        }\n        if (Math.abs(dot - 1.0) < 0.000001) {\n            // vector source and dest point exactly in the same direction,\n            // so we return the identity Quat\n            return new Quat(0, 0, 0, 1);\n        }\n        let rotAngle = Math.acos(dot);\n        let rotAxis = source.cross(dest).normalize();\n        return Quat.axisAngleToQuat(rotAxis, rotAngle);\n    }\n\n    /**\n     * Returns true if the components are zero.\n     * @public\n     * @returns {boolean} -\n     */\n    public isZero(): boolean {\n        return this.x === 0.0 && this.y === 0.0 && this.z === 0.0 && this.w === 0.0;\n    }\n\n    /**\n     * Clear Quat. Sets zeroes.\n     * @public\n     * @returns {Quat} -\n     */\n    public clear(): Quat {\n        this.x = this.y = this.z = this.w = 0;\n        return this;\n    }\n\n    /**\n     * Sets Quat values.\n     * @public\n     * @param {Number} [x=0.0] The X component.\n     * @param {Number} [y=0.0] The Y component.\n     * @param {Number} [z=0.0] The Z component.\n     * @param {Number} [w=0.0] The W component.\n     * @returns {Quat} -\n     */\n    public set(x: number, y: number, z: number, w: number): Quat {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n        return this;\n    }\n\n    /**\n     * Copy Quat values.\n     * @public\n     * @param {Quat} q - Copy Quat.\n     * @returns {Quat} -\n     */\n    public copy(q: Quat): Quat {\n        this.x = q.x;\n        this.y = q.y;\n        this.z = q.z;\n        this.w = q.w;\n        return this;\n    }\n\n    /**\n     * Set current Quat instance to identity Quat.\n     * @public\n     * @returns {Quat} -\n     */\n    public setIdentity(): Quat {\n        this.x = 0.0;\n        this.y = 0.0;\n        this.z = 0.0;\n        this.w = 1.0;\n        return this;\n    }\n\n    /**\n     * Duplicates a Quat instance.\n     * @public\n     * @returns {Quat} -\n     */\n    public clone(): Quat {\n        return new Quat(this.x, this.y, this.z, this.w);\n    }\n\n    /**\n     * Computes the componentwise sum of two Quats.\n     * @public\n     * @param {Quat} q - Quat to add.\n     * @returns {Quat} -\n     */\n    public add(q: Quat): Quat {\n        return new Quat(this.x + q.x, this.y + q.y, this.z + q.z, this.w + q.w);\n    }\n\n    /**\n     * Computes the componentwise difference of two Quats.\n     * @public\n     * @param {Quat} q - Quat to subtract.\n     * @returns {Quat} -\n     */\n    public sub(q: Quat): Quat {\n        return new Quat(this.x - q.x, this.y - q.y, this.z - q.z, this.w - q.w);\n    }\n\n    /**\n     * Multiplies the provided Quat componentwise by the provided scalar.\n     * @public\n     * @param {Number} scale - The scalar to multiply with.\n     * @returns {Quat} -\n     */\n    public scaleTo(scale: number): Quat {\n        return new Quat(this.x * scale, this.y * scale, this.z * scale, this.w * scale);\n    }\n\n    /**\n     * Multiplies the provided Quat componentwise.\n     * @public\n     * @param {Number} scale - The scalar to multiply with.\n     * @returns {Quat} -\n     */\n    public scale(scale: number): Quat {\n        this.x *= scale;\n        this.y *= scale;\n        this.z *= scale;\n        this.w *= scale;\n        return this;\n    }\n\n    /**\n     * Converts Quat values to array.\n     * @public\n     * @returns {Array.<number>} - (exactly 4 entries)\n     */\n    public toVec(): [number, number, number, number] {\n        return [this.x, this.y, this.z, this.w];\n    }\n\n    /**\n     * Sets current quaternion by spherical coordinates.\n     * @public\n     * @param {number} lat - Latitude.\n     * @param {number} lon - Longitude.\n     * @param {number} angle - Angle in radians.\n     * @returns {Quat} -\n     */\n    public setFromSphericalCoords(lat: number, lon: number, angle: number): Quat {\n        let sin_a = Math.sin(angle / 2);\n        let cos_a = Math.cos(angle / 2);\n        let sin_lat = Math.sin(lat);\n        let cos_lat = Math.cos(lat);\n        let sin_long = Math.sin(lon);\n        let cos_long = Math.cos(lon);\n\n        this.x = sin_a * cos_lat * sin_long;\n        this.y = sin_a * sin_lat;\n        this.z = sin_a * sin_lat * cos_long;\n        this.w = cos_a;\n\n        return this;\n    }\n\n    /**\n     * Sets rotation with the given heading and up vectors.\n     * @static\n     * @param {Vec3} forward - Heading target coordinates.\n     * @param {Vec3} up - Up vector.\n     * @returns {Quat} -\n     */\n    public setLookRotation(forward: Vec3, up: Vec3): Quat {\n        let f = forward.getNormal().negate();\n        let s = up.cross(f).normalize();\n        let u = f.cross(s);\n        let z = 1.0 + s.x + u.y + f.z;\n\n        if (z > 0.000001) {\n            let fd = 1.0 / (2.0 * Math.sqrt(z));\n            this.x = (f.y - u.z) * fd;\n            this.y = (s.z - f.x) * fd;\n            this.z = (u.x - s.y) * fd;\n            this.w = 0.25 / fd;\n        } else if (s.x > u.y && s.x > f.z) {\n            let fd = 1.0 / (2.0 * Math.sqrt(1.0 + s.x - u.y - f.z));\n            this.x = 0.25 / fd;\n            this.y = (u.x + s.y) * fd;\n            this.z = (s.z + f.x) * fd;\n            this.w = (f.y - u.z) * fd;\n        } else if (u.y > f.z) {\n            let fd = 1.0 / (2.0 * Math.sqrt(1.0 + u.y - s.x - f.z));\n            this.x = (u.x + s.y) * fd;\n            this.y = 0.25 / fd;\n            this.z = (f.y + u.z) * fd;\n            this.w = (s.z - f.x) * fd;\n        } else {\n            let fd = 1.0 / (2.0 * Math.sqrt(1.0 + f.z - s.x - u.y));\n            this.x = (s.z + f.x) * fd;\n            this.y = (f.y + u.z) * fd;\n            this.z = 0.25 / fd;\n            this.w = (u.x - s.y) * fd;\n        }\n\n        return this;\n    }\n\n    /**\n     * Gets spherical coordinates.\n     * @public\n     * @returns {Object} Returns object with latitude, longitude and alpha.\n     */\n    public toSphericalCoords(): any {\n\n        let cos_a = this.w;\n        let sin_a = Math.sqrt(1.0 - cos_a * cos_a);\n\n        // var angle = Math.acos(cos_a) * 2;\n        if (Math.abs(sin_a) < 0.0005) {\n            sin_a = 1;\n        }\n\n        let tx = this.x / sin_a;\n        let ty = this.y / sin_a;\n        let tz = this.z / sin_a;\n\n        let lon, lat = -Math.asin(ty);\n\n        if (tx * tx + tz * tz < 0.0005) {\n            lon = 0;\n        } else {\n            lon = Math.atan2(tx, tz);\n        }\n\n        if (lon < 0) {\n            lon += 360.0;\n        }\n\n        return {\n            lat: lat,\n            lon: lon,\n            alpha: Math.acos(cos_a)\n        };\n    }\n\n    /**\n     * Sets current Quat representing a rotation around an axis.\n     * @public\n     * @param {Vec3} axis - The axis of rotation.\n     * @param {number} angle The angle in radians to rotate around the axis.\n     * @returns {Quat} -\n     */\n    public setFromAxisAngle(axis: Vec3, angle: number): Quat {\n        let v = axis.getNormal();\n        let half_angle = angle * 0.5;\n        let sin_a = Math.sin(half_angle);\n        this.set(v.x * sin_a, v.y * sin_a, v.z * sin_a, Math.cos(half_angle));\n        return this;\n    }\n\n    /**\n     * Returns axis and angle of the current Quat.\n     * @public\n     * @returns {Object} -\n     */\n    public getAxisAngle(): any {\n        let x = this.x,\n            y = this.y,\n            z = this.z,\n            w = this.w;\n        let vl = Math.sqrt(x * x + y * y + z * z);\n        let axis, angle;\n        if (vl > 0.0000001) {\n            let ivl = 1.0 / vl;\n            axis = new Vec3(x * ivl, y * ivl, z * ivl);\n            if (w < 0) {\n                angle = 2.0 * Math.atan2(-vl, -w); // -PI,0\n            } else {\n                angle = 2.0 * Math.atan2(vl, w); // 0,PI\n            }\n        } else {\n            axis = new Vec3(0, 0, 0);\n            angle = 0;\n        }\n\n        return {\n            axis: axis,\n            angle: angle\n        };\n    }\n\n    /**\n     * Sets current Quat by Euler's angles.\n     * @public\n     * @param {number} pitch - Pitch angle in degrees.\n     * @param {number} yaw - Yaw angle in degrees.\n     * @param {number} roll - Roll angle in degrees.\n     * @returns {Quat} -\n     */\n    public setFromEulerAngles(pitch: number, yaw: number, roll: number): Quat {\n        let ex = pitch * math.RADIANS_HALF,\n            ey = yaw * math.RADIANS_HALF,\n            ez = roll * math.RADIANS_HALF;\n\n        let cr = Math.cos(ex),\n            cp = Math.cos(ey),\n            cy = Math.cos(ez);\n\n        let sr = Math.sin(ex),\n            sp = Math.sin(ey),\n            sy = Math.sin(ez);\n\n        let cpcy = cp * cy,\n            spsy = sp * sy;\n\n        this.w = cr * cpcy + sr * spsy;\n        this.x = sr * cpcy - cr * spsy;\n        this.y = cr * sp * cy + sr * cp * sy;\n        this.z = cr * cp * sy - sr * sp * cy;\n\n        return this.normalize();\n    }\n\n    /**\n     * Returns Euler's angles of the current Quat.\n     * @public\n     * @returns {Object} -\n     */\n    public getEulerAngles(): any {\n        let x = this.x,\n            y = this.y,\n            z = this.z,\n            w = this.w;\n\n        let sqy = y * y;\n\n        let roll = Math.atan2(2.0 * (w * x + y * z), 1.0 - 2.0 * (x * x + sqy));\n\n        let a = w * y - z * x;\n\n        if (a < -1.0) {\n            a = -1.0;\n        } else if (a > 1.0) {\n            a = 1.0;\n        }\n        let pitch = Math.asin(2.0 * a);\n\n        let yaw = Math.atan2(2.0 * (w * z + x * y), 1.0 - 2.0 * (sqy + z * z));\n\n        return {\n            roll,\n            pitch,\n            yaw\n        };\n    }\n\n    /**\n     * Computes a Quat from the provided 4x4 matrix instance.\n     * @public\n     * @param {Mat4} mx - The rotation matrix.\n     * @returns {Quat} -\n     */\n    public setFromMatrix4(mx: Mat4): Quat {\n        let tr,\n            s,\n            q = [];\n        let i, j, k;\n        let m = mx._m;\n\n        let nxt = [1, 2, 0];\n\n        tr = m[0] + m[5] + m[10];\n\n        if (tr > 0.0) {\n            s = Math.sqrt(tr + 1.0);\n            this.w = s / 2.0;\n            s = 0.5 / s;\n            this.x = (m[6] - m[9]) * s;\n            this.y = (m[8] - m[2]) * s;\n            this.z = (m[1] - m[4]) * s;\n        } else {\n            i = 0;\n            if (m[5] > m[0]) i = 1;\n            if (m[10] > m[i * 5]) i = 2;\n            j = nxt[i];\n            k = nxt[j];\n\n            s = Math.sqrt(m[i * 5] - (m[j * 5] + m[k * 5]) + 1.0);\n\n            q[i] = s * 0.5;\n\n            if (s !== 0.0) s = 0.5 / s;\n\n            q[3] = (m[j * 4 + k] - m[k * 4 + j]) * s;\n            q[j] = (m[i * 4 + j] + m[j * 4 + i]) * s;\n            q[k] = (m[i * 4 + k] + m[k * 4 + i]) * s;\n\n            this.x = q[0];\n            this.y = q[1];\n            this.z = q[2];\n            this.w = q[3];\n        }\n        return this;\n    }\n\n    /**\n     * Converts current Quat to the rotation 4x4 matrix.\n     * @public\n     * @params {Mat4} [out] - Output matrix\n     * @returns {Mat4} -\n     */\n    public getMat4(out: Mat4 = new Mat4()): Mat4 {\n        let xs = this.x + this.x;\n        let ys = this.y + this.y;\n        let zs = this.z + this.z;\n        let wx = this.w * xs;\n        let wy = this.w * ys;\n        let wz = this.w * zs;\n        let xx = this.x * xs;\n        let xy = this.x * ys;\n        let xz = this.x * zs;\n        let yy = this.y * ys;\n        let yz = this.y * zs;\n        let zz = this.z * zs;\n\n        return out.set([\n            1 - (yy + zz), xy - wz, xz + wy, 0,\n            xy + wz, 1 - (xx + zz), yz - wx, 0,\n            xz - wy, yz + wx, 1 - (xx + yy), 0,\n            0, 0, 0, 1\n        ]);\n    }\n\n    /**\n     * Converts current Quat to the rotation 3x3 matrix.\n     * @public\n     * @returns {Mat3} -\n     * @todo NOT TESTED\n     */\n    public getMat3(): Mat3 {\n        let m = new Mat3();\n        let mx = m._m;\n        let c = this.x,\n            d = this.y,\n            e = this.z,\n            g = this.w,\n            f = c + c,\n            h = d + d,\n            i = e + e,\n            j = c * f,\n            k = c * h;\n\n        c = c * i;\n\n        let l = d * h;\n\n        d = d * i;\n        e = e * i;\n        f = g * f;\n        h = g * h;\n        g = g * i;\n\n        mx[0] = 1 - (l + e);\n        mx[1] = k - g;\n        mx[2] = c + h;\n        mx[3] = k + g;\n        mx[4] = 1 - (j + e);\n        mx[5] = d - f;\n        mx[6] = c - h;\n        mx[7] = d + f;\n        mx[8] = 1 - (j + l);\n\n        return m;\n    }\n\n    /**\n     * Returns quaternion and vector production.\n     * @public\n     * @param {Vec3} v - 3d Vector.\n     * @returns {Vec3} -\n     */\n    public mulVec3(v: Vec3): Vec3 {\n        // t = 2 * cross(q.xyz, v)\n        // v' = v + q.w * t + cross(q.xyz, t)\n\n        let d = v.x,\n            e = v.y,\n            g = v.z;\n\n        let b = this.x,\n            f = this.y,\n            h = this.z,\n            a = this.w;\n\n        let i = a * d + f * g - h * e,\n            j = a * e + h * d - b * g,\n            k = a * g + b * e - f * d;\n\n        d = -b * d - f * e - h * g;\n\n        return new Vec3(\n            i * a + d * -b + j * -h - k * -f,\n            j * a + d * -f + k * -b - i * -h,\n            k * a + d * -h + i * -f - j * -b\n        );\n    }\n\n    /**\n     * Computes the product of two Quats.\n     * @public\n     * @param {Quat} q - Quat to multiply.\n     * @returns {Quat} -\n     */\n    public mul(q: Quat): Quat {\n        let d = this.x,\n            e = this.y,\n            g = this.z,\n            a = this.w;\n\n        let f = q.x,\n            h = q.y,\n            i = q.z,\n            b = q.w;\n\n        return new Quat(\n            d * b + a * f + e * i - g * h,\n            e * b + a * h + g * f - d * i,\n            g * b + a * i + d * h - e * f,\n            a * b - d * f - e * h - g * i\n        );\n    }\n\n    /**\n     * Computes the product of two Quats.\n     * @public\n     * @param {Quat} q - Quat to multiply.\n     * @returns {Quat} -\n     */\n    public mulA(q: Quat): Quat {\n        let d = this.x,\n            e = this.y,\n            g = this.z,\n            a = this.w;\n\n        let f = q.x,\n            h = q.y,\n            i = q.z,\n            b = q.w;\n\n        this.x = d * b + a * f + e * i - g * h;\n        this.y = e * b + a * h + g * f - d * i;\n        this.z = g * b + a * i + d * h - e * f;\n        this.w = a * b - d * f - e * h - g * i;\n\n        return this;\n    }\n\n    /**\n     * Gets the conjugate of the Quat.\n     * @public\n     * @returns {Quat} -\n     */\n    public conjugate(): Quat {\n        return new Quat(-this.x, -this.y, -this.z, this.w);\n    }\n\n    /**\n     * Computes the inverse of the Quat.\n     * @public\n     * @returns {Quat} -\n     */\n    public inverse(): Quat {\n        let n = 1.0 / this.magnitude2();\n        return new Quat(-this.x * n, -this.y * n, -this.z * n, this.w * n);\n    }\n\n    /**\n     * Computes a magnitude of the Quat.\n     * @public\n     * @returns {number} -\n     */\n    public magnitude(): number {\n        let b = this.x,\n            c = this.y,\n            d = this.z,\n            a = this.w;\n        return Math.sqrt(b * b + c * c + d * d + a * a);\n    }\n\n    /**\n     * Computes a squared magnitude of the Quat.\n     * @public\n     * @returns {number} -\n     */\n    public magnitude2(): number {\n        let b = this.x,\n            c = this.y,\n            d = this.z,\n            a = this.w;\n        return b * b + c * c + d * d + a * a;\n    }\n\n    /**\n     * Computes the dot (scalar) product of two Quats.\n     * @public\n     * @param {Quat} q - Second quaternion.\n     * @returns {number} -\n     */\n    public dot(q: Quat): number {\n        return this.x * q.x + this.y * q.y + this.z * q.z;\n    }\n\n    /**\n     * Current Quat normalization.\n     * @public\n     * @returns {Quat} -\n     */\n    public normalize(): Quat {\n\n        let c = this.x,\n            d = this.y,\n            e = this.z,\n            g = this.w,\n            f = Math.sqrt(c * c + d * d + e * e + g * g);\n\n        if (f === 0.0) {\n            this.x = 0;\n            this.y = 0;\n            this.z = 0;\n            this.w = 0;\n            return this;\n        }\n\n        f = 1 / f;\n        this.x = c * f;\n        this.y = d * f;\n        this.z = e * f;\n        this.w = g * f;\n\n        return this;\n    }\n\n    /**\n     * Compares two Quats.\n     * @public\n     * @param {Quat} q - Second quaternion.\n     * @returns {Boolean} -\n     */\n    public isEqual(q: Quat): boolean {\n        let matching = this.dot(q);\n        if (Math.abs(matching - 1.0) < 0.001) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Performs a spherical linear interpolation between two Quats.\n     * @public\n     * @param {Quat} b - The end rotation Quat.\n     * @param {number} t - interpolation amount between the two Quats.\n     * @returns {Quat} -\n     */\n    public slerp(b: Quat, t: number): Quat {\n\n        let ax = this.x,\n            ay = this.y,\n            az = this.z,\n            aw = this.w,\n            bx = b.x,\n            by = b.y,\n            bz = b.z,\n            bw = b.w;\n\n        let omega, cosom, sinom, scale0, scale1;\n\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\n\n        if (cosom < 0.0) {\n            cosom = -cosom;\n            bx = -bx;\n            by = -by;\n            bz = -bz;\n            bw = -bw;\n        }\n\n        if (1.0 - cosom > 0.000001) {\n            omega = Math.acos(cosom);\n            sinom = Math.sin(omega);\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\n            scale1 = Math.sin(t * omega) / sinom;\n        } else {\n            scale0 = 1.0 - t;\n            scale1 = t;\n        }\n\n        return new Quat(\n            scale0 * ax + scale1 * bx,\n            scale0 * ay + scale1 * by,\n            scale0 * az + scale1 * bz,\n            scale0 * aw + scale1 * bw\n        );\n    }\n\n    /**\n     * Returns a roll angle in radians.\n     * @public\n     * @param {Boolean} [reprojectAxis] -\n     * @returns {Number} -\n     */\n    public getRoll(reprojectAxis: boolean = false): number {\n\n        let x = this.x,\n            y = this.y,\n            z = this.z,\n            w = this.w;\n\n        if (reprojectAxis) {\n            let fTy = 2.0 * y;\n            let fTz = 2.0 * z;\n            let fTwz = fTz * w;\n            let fTxy = fTy * x;\n            let fTyy = fTy * y;\n            let fTzz = fTz * z;\n            return Math.atan2(fTxy + fTwz, 1.0 - (fTyy + fTzz));\n        } else {\n            return Math.atan2(2 * (x * y + w * z), w * w + x * x - y * y - z * z);\n        }\n    }\n\n    /**\n     * Returns a pitch angle in radians.\n     * @public\n     * @param {Boolean} [reprojectAxis] -\n     * @returns {number} -\n     */\n    public getPitch(reprojectAxis: boolean = false): number {\n\n        let x = this.x,\n            y = this.y,\n            z = this.z,\n            w = this.w;\n\n        if (reprojectAxis) {\n            let fTx = 2.0 * x;\n            let fTz = 2.0 * z;\n            let fTwx = fTx * w;\n            let fTxx = fTx * x;\n            let fTyz = fTz * y;\n            let fTzz = fTz * z;\n            return Math.atan2(fTyz + fTwx, 1.0 - (fTxx + fTzz));\n        } else {\n            return Math.atan2(2 * (y * z + w * x), w * w - x * x - y * y + z * z);\n        }\n    }\n\n    /**\n     * Returns a yaw angle in radians.\n     * @public\n     * @param {Boolean} [reprojectAxis] -\n     * @returns {number} -\n     */\n    public getYaw(reprojectAxis: boolean = false): number {\n\n        let x = this.x,\n            y = this.y,\n            z = this.z,\n            w = this.w;\n\n        if (reprojectAxis) {\n            let fTx = 2.0 * x;\n            let fTy = 2.0 * y;\n            let fTz = 2.0 * z;\n            let fTwy = fTy * w;\n            let fTxx = fTx * x;\n            let fTxz = fTz * x;\n            let fTyy = fTy * y;\n            return Math.atan2(fTxz + fTwy, 1.0 - (fTxx + fTyy));\n        } else {\n            return Math.asin(-2 * (x * z - w * y));\n        }\n    }\n}\n\n/**\n * Creates Quat instance.\n * @function\n * @param {Number} [x=0.0] The X component.\n * @param {Number} [y=0.0] The Y component.\n * @param {Number} [z=0.0] The Z component.\n * @param {Number} [w=0.0] The W component.\n * @returns {Quat} -\n */\nexport function quat(x: number = 0, y: number = 0, z: number = 0, w: number = 0): Quat {\n    return new Quat(x, y, z, w);\n}\n","import {Quat} from \"./Quat\";\nimport {Vec4, NumberArray4} from \"./Vec4\";\nimport {NumberArray2} from \"./Vec2\";\n\nexport type NumberArray3 = [number, number, number];\n\n/**\n * Class represents a 3d vector.\n * @class\n * @param {number} [x] - First value.\n * @param {number} [y] - Second value.\n * @param {number} [z] - Third value.\n */\nexport class Vec3 {\n\n    /**\n     * @public\n     * @type {number}\n     */\n    public x: number;\n\n    /**\n     * @public\n     * @type {number}\n     */\n    public y: number;\n\n    /**\n     * @public\n     * @type {number}\n     */\n    public z: number;\n\n    constructor(x: number = 0.0, y: number = 0.0, z: number = 0.0) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    /** @const */\n    static get UP(): Vec3 {\n        return new Vec3(0, 1, 0);\n    }\n\n    /** @const */\n    static get DOWN(): Vec3 {\n        return new Vec3(0, -1, 0);\n    }\n\n    /** @const */\n    static get RIGHT(): Vec3 {\n        return new Vec3(1, 0, 0);\n    }\n\n    /** @const */\n    static get LEFT(): Vec3 {\n        return new Vec3(-1, 0, 0);\n    }\n\n    /** @const */\n    static get FORWARD(): Vec3 {\n        return new Vec3(0, 0, -1);\n    }\n\n    /** @const */\n    static get BACKWARD(): Vec3 {\n        return new Vec3(0, 0, 1);\n    }\n\n    /** @const */\n    static get ZERO(): Vec3 {\n        return new Vec3();\n    }\n\n    /** @const */\n    static get UNIT_X(): Vec3 {\n        return new Vec3(1, 0, 0);\n    }\n\n    /** @const */\n    static get UNIT_Y(): Vec3 {\n        return new Vec3(0, 1, 0);\n    }\n\n    /** @const */\n    static get UNIT_Z(): Vec3 {\n        return new Vec3(0, 0, 1);\n    }\n\n    /** @const */\n    static get NORTH(): Vec3 {\n        return Vec3.UNIT_Z;\n    }\n\n    /**\n     * Separate 63 bit Vec3 to two Vec3 32-bit float values.\n     * @function\n     * @param {Vec3} v - Double type value.\n     * @param {Vec3} high - Out vector high values.\n     * @param {Vec3} low - Out vector low values.\n     */\n    static doubleToTwoFloats(v: Vec3, high: Vec3, low: Vec3) {\n        let x = v.x,\n            y = v.y,\n            z = v.z;\n\n        if (x >= 0.0) {\n            let doubleHigh = Math.floor(x / 65536.0) * 65536.0;\n            high.x = Math.fround(doubleHigh);\n            low.x = Math.fround(x - doubleHigh);\n        } else {\n            let doubleHigh = Math.floor(-x / 65536.0) * 65536.0;\n            high.x = Math.fround(-doubleHigh);\n            low.x = Math.fround(x + doubleHigh);\n        }\n\n        if (y >= 0.0) {\n            let doubleHigh = Math.floor(y / 65536.0) * 65536.0;\n            high.y = Math.fround(doubleHigh);\n            low.y = Math.fround(y - doubleHigh);\n        } else {\n            let doubleHigh = Math.floor(-y / 65536.0) * 65536.0;\n            high.y = Math.fround(-doubleHigh);\n            low.y = Math.fround(y + doubleHigh);\n        }\n\n        if (z >= 0.0) {\n            let doubleHigh = Math.floor(z / 65536.0) * 65536.0;\n            high.z = Math.fround(doubleHigh);\n            low.z = Math.fround(z - doubleHigh);\n        } else {\n            let doubleHigh = Math.floor(-z / 65536.0) * 65536.0;\n            high.z = Math.fround(-doubleHigh);\n            low.z = Math.fround(z + doubleHigh);\n        }\n    }\n\n    /**\n     * Separate 63 bit Vec3 to two Vec3 32-bit float values.\n     * @function\n     * @param {Vec3} v - Double type value.\n     * @param {Float32Array} high - Out vector high values.\n     * @param {Float32Array} low - Out vector low values.\n     * @returns {Array.<number>} Encoded array. (exactly 2 entries)\n     */\n    static doubleToTwoFloat32Array(v: Vec3, high: Float32Array | NumberArray3, low: Float32Array | NumberArray3) {\n        let x = v.x,\n            y = v.y,\n            z = v.z;\n\n        if (x >= 0.0) {\n            let doubleHigh = Math.floor(x / 65536.0) * 65536.0;\n            high[0] = Math.fround(doubleHigh);\n            low[0] = Math.fround(x - doubleHigh);\n        } else {\n            let doubleHigh = Math.floor(-x / 65536.0) * 65536.0;\n            high[0] = Math.fround(-doubleHigh);\n            low[0] = Math.fround(x + doubleHigh);\n        }\n\n        if (y >= 0.0) {\n            let doubleHigh = Math.floor(y / 65536.0) * 65536.0;\n            high[1] = Math.fround(doubleHigh);\n            low[1] = Math.fround(y - doubleHigh);\n        } else {\n            let doubleHigh = Math.floor(-y / 65536.0) * 65536.0;\n            high[1] = Math.fround(-doubleHigh);\n            low[1] = Math.fround(y + doubleHigh);\n        }\n\n        if (z >= 0.0) {\n            let doubleHigh = Math.floor(z / 65536.0) * 65536.0;\n            high[2] = Math.fround(doubleHigh);\n            low[2] = Math.fround(z - doubleHigh);\n        } else {\n            let doubleHigh = Math.floor(-z / 65536.0) * 65536.0;\n            high[2] = Math.fround(-doubleHigh);\n            low[2] = Math.fround(z + doubleHigh);\n        }\n    }\n\n    /**\n     * Creates 3d vector from array.\n     * @function\n     * @param {NumberArray2 | NumberArray3 | NumberArray4} arr - Input array (exactly 3 entries)\n     * @returns {Vec3} -\n     */\n    static fromVec(arr: NumberArray2 | NumberArray3 | NumberArray4): Vec3 {\n        return new Vec3(arr[0], arr[1], arr[2]);\n    }\n\n    /**\n     * Gets angle between two vectors.\n     * @static\n     * @param {Vec3} a - First vector.\n     * @param {Vec3} b - Second vector.\n     * @returns {number} -\n     */\n    static angle(a: Vec3, b: Vec3): number {\n        return Math.acos(a.dot(b) / Math.sqrt(a.length2() * b.length2()));\n    }\n\n    /**\n     * Returns two vectors linear interpolation.\n     * @static\n     * @param {Vec3} v1 - Start vector.\n     * @param {Vec3} v2 - End vector.\n     * @param {number} l - Interpolate value.\n     * @returns {Vec3} -\n     */\n    static lerp(v1: Vec3, v2: Vec3, l: number) {\n        return new Vec3(v1.x + (v2.x - v1.x) * l, v1.y + (v2.y - v1.y) * l, v1.z + (v2.z - v1.z) * l);\n    }\n\n    /**\n     * Returns summary vector.\n     * @static\n     * @param {Vec3} a - First vector.\n     * @param {Vec3} b - Second vector.\n     * @returns {Vec3} - Summary vector.\n     */\n    static add(a: Vec3, b: Vec3): Vec3 {\n        let res = new Vec3(a.x, a.y, a.z);\n        res.addA(b);\n        return res;\n    }\n\n    /**\n     * Returns two vectors subtraction.\n     * @static\n     * @param {Vec3} a - First vector.\n     * @param {Vec3} b - Second vector.\n     * @returns {Vec3} - Vectors subtraction.\n     */\n    static sub(a: Vec3, b: Vec3): Vec3 {\n        let res = new Vec3(a.x, a.y, a.z);\n        res.subA(b);\n        return res;\n    }\n\n    /**\n     * Returns scaled vector.\n     * @static\n     * @param {Vec3} a - Input vector.\n     * @param {number} scale - Scale value.\n     * @returns {Vec3} -\n     */\n    static scale(a: Vec3, scale: number): Vec3 {\n        return a.scaleTo(scale);\n    }\n\n    /**\n     * Returns two vectors production.\n     * @static\n     * @param {Vec3} a - First vector.\n     * @param {Vec3} b - Second vector.\n     * @returns {Vec3} -\n     */\n    static mul(a: Vec3, b: Vec3): Vec3 {\n        let res = new Vec3(a.x, a.y, a.z);\n        res.mulA(b);\n        return res;\n    }\n\n    /**\n     * Returns true if two vectors are non-collinear.\n     * @public\n     * @param {Vec3} a - First vector.\n     * @param {Vec3} b - Second vector.\n     * @returns {Vec3} -\n     */\n    static noncollinear(a: Vec3, b: Vec3): boolean {\n        return Boolean(a.y * b.z - a.z * b.y || a.z * b.x - a.x * b.z || a.x * b.y - a.y * b.z);\n    }\n\n    /**\n     * Get projection of the vector to plane where n - normal to the plane.\n     * @static\n     * @param {Vec3} b - Vector to project.\n     * @param {Vec3} n - Plane normal.\n     * @param {Vec3} [def] - Default value for non existed result.\n     * @returns {Vec3} -\n     */\n    static proj_b_to_plane(b: Vec3, n: Vec3, def?: Vec3): Vec3 {\n        let res = b.sub(n.scaleTo(n.dot(b) / n.dot(n)));\n        if (def && res.isZero()) {\n            return new Vec3(def.x, def.y, def.z);\n        }\n        return res;\n    }\n\n    /**\n     * Get projection of the first vector to the second.\n     * @static\n     * @param {Vec3} b - First vector.\n     * @param {Vec3} a - Second vector.\n     * @returns {Vec3} -\n     */\n    static proj_b_to_a(b: Vec3, a: Vec3): Vec3 {\n        return a.scaleTo(a.dot(b) / a.dot(a));\n    }\n\n    /**\n     * Makes vectors normalized and orthogonal to each other.\n     * Normalizes normal. Normalizes tangent and makes sure it is orthogonal to normal (that is, angle between them is 90 degrees).\n     * @static\n     * @param {Vec3} normal - Normal vector.\n     * @param {Vec3} tangent - Tangent vector.\n     * @returns {Vec3} -\n     */\n    static orthoNormalize(normal: Vec3, tangent: Vec3): Vec3 {\n        normal = normal.getNormal();\n        normal.scale(tangent.dot(normal));\n        return tangent.subA(normal).normalize();\n    }\n\n    /**\n     * Returns vector components division product one to another.\n     * @static\n     * @param {Vec3} a - First vector.\n     * @param {Vec3} b - Second vector.\n     * @returns {Vec3} -\n     */\n    static div(a: Vec3, b: Vec3): Vec3 {\n        let res = new Vec3(a.x, a.y, a.z);\n        res.divA(b);\n        return res;\n    }\n\n    static length2(a: Vec3): number {\n        return a.length2();\n    }\n\n    // static length(a: Vec3): number {\n    //     return a.length();\n    // }\n\n    static dot(a: Vec3, b: Vec3): number {\n        return a.dot(b);\n    }\n\n    /**\n     * Converts to 4d vector, Fourth value is 1.0.\n     * @public\n     * @returns {Vec4} -\n     */\n    public toVec4(): Vec4 {\n        return new Vec4(this.x, this.y, this.z, 1.0);\n    }\n\n    /**\n     * Returns clone vector.\n     * @public\n     * @returns {Vec3} -\n     */\n    public clone(): Vec3 {\n        return new Vec3(this.x, this.y, this.z);\n    }\n\n    /**\n     * Converts vector to text string.\n     * @public\n     * @returns {string} -\n     */\n    public toString(): string {\n        return `(${this.x},${this.y},${this.z})`;\n    }\n\n    /**\n     * Returns true if vector's values are zero.\n     * @public\n     * @returns {boolean} -\n     */\n    public isZero(): boolean {\n        return !(this.x || this.y || this.z);\n    }\n\n    /**\n     * Get projection of the first vector to the second.\n     * @static\n     * @param {Vec3} a - Project vector.\n     * @returns {Vec3} -\n     */\n    public projToVec(a: Vec3): Vec3 {\n        return a.scaleTo(a.dot(this) / a.dot(a));\n    }\n\n    /**\n     * Compares with vector. Returns true if it equals another.\n     * @public\n     * @param {Vec3} p - Vector to compare.\n     * @returns {boolean} -\n     */\n    public equal(p: Vec3): boolean {\n        return this.x === p.x && this.y === p.y && this.z === p.z;\n    }\n\n    /**\n     * Copy input vector's values.\n     * @param {Vec3} p - Vector to copy.\n     * @returns {Vec3} -\n     */\n    public copy(p: Vec3): Vec3 {\n        this.x = p.x;\n        this.y = p.y;\n        this.z = p.z;\n        return this;\n    }\n\n    /**\n     * Gets vector's length.\n     * @public\n     * @returns {number} -\n     */\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    }\n\n    /**\n     * Returns squared vector's length.\n     * @public\n     * @returns {number} -\n     */\n    public length2(): number {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n\n    /**\n     * Converts vector's values to a quaternion object.\n     * @public\n     * @returns {Quat} -\n     */\n    public getQuat(): Quat {\n        return new Quat(this.x, this.y, this.z);\n    }\n\n    /**\n     * Adds vector to the current.\n     * @public\n     * @param {Vec3} p - Point to add.\n     * @returns {Vec3} -\n     */\n    public addA(p: Vec3): Vec3 {\n        this.x += p.x;\n        this.y += p.y;\n        this.z += p.z;\n        return this;\n    }\n\n    /**\n     * Gets two vectors summarization.\n     * @public\n     * @param {Vec3} p - Vector to add.\n     * @returns {Vec3} Returns a sum vector.\n     */\n    public add(p: Vec3): Vec3 {\n        return new Vec3(this.x + p.x, this.y + p.y, this.z + p.z);\n    }\n\n    /**\n     * Subtract vector from the current.\n     * @public\n     * @param {Vec3} p - Subtract vector.\n     * @returns {Vec3} -\n     */\n    public subA(p: Vec3): Vec3 {\n        this.x -= p.x;\n        this.y -= p.y;\n        this.z -= p.z;\n        return this;\n    }\n\n    /**\n     * Gets vector subtraction.\n     * @public\n     * @param {Vec3} p - Subtract vector.\n     * @return {Vec3} Returns new instance of a subtraction\n     */\n    public sub(p: Vec3): Vec3 {\n        return new Vec3(this.x - p.x, this.y - p.y, this.z - p.z);\n    }\n\n    /**\n     * Scale current vector.\n     * @public\n     * @param {number} scale - Scale value.\n     * @returns {Vec3} -\n     */\n    public scale(scale: number): Vec3 {\n        this.x *= scale;\n        this.y *= scale;\n        this.z *= scale;\n        return this;\n    }\n\n    /**\n     * Scale current vector to another instance.\n     * @public\n     * @param {number} scale - Scale value.\n     * @returns {Vec3} -\n     */\n    public scaleTo(scale: number): Vec3 {\n        return new Vec3(this.x * scale, this.y * scale, this.z * scale);\n    }\n\n    /**\n     * Multiply current vector object to another and store result in the current instance.\n     * @public\n     * @param {Vec3} vec - Multiply vector.\n     * @returns {Vec3} -\n     */\n    public mulA(vec: Vec3): Vec3 {\n        this.x *= vec.x;\n        this.y *= vec.y;\n        this.z *= vec.z;\n        return this;\n    }\n\n    /**\n     * Multiply current vector object to another and returns new vector instance.\n     * @public\n     * @param {Vec3} vec - Multiply vector.\n     * @returns {Vec3} -\n     */\n    public mul(vec: Vec3): Vec3 {\n        return new Vec3(this.x * vec.x, this.y * vec.y, this.z * vec.z);\n    }\n\n    /**\n     * Divide current vector's components to another. Results stores in the current vector object.\n     * @public\n     * @param {Vec3} vec - Div vector.\n     * @returns {Vec3} -\n     */\n    public divA(vec: Vec3): Vec3 {\n        this.x /= vec.x;\n        this.y /= vec.y;\n        this.z /= vec.z;\n        return this;\n    }\n\n    /**\n     * Divide current vector's components to another and returns new vector instance.\n     * @public\n     * @param {Vec3} vec - Div vector.\n     * @returns {Vec3} -\n     */\n    public div(vec: Vec3): Vec3 {\n        return new Vec3(this.x / vec.x, this.y / vec.y, this.z / vec.z);\n    }\n\n    /**\n     * Gets vectors dot production.\n     * @public\n     * @param {Vec3} a - Another vector.\n     * @returns {number} -\n     */\n    public dot(a: Vec3): number {\n        return a.x * this.x + a.y * this.y + a.z * this.z;\n    }\n\n    /**\n     * Gets vectors dot production.\n     * @public\n     * @param {Array.<number>} arr - Array vector. (exactly 3 entries)\n     * @returns {number} -\n     */\n    public dotArr(arr: NumberArray3 | NumberArray4): number {\n        return arr[0] * this.x + arr[1] * this.y + arr[2] * this.z;\n    }\n\n    /**\n     * Gets vectors cross production.\n     * @public\n     * @param {Vec3} point3 - Another vector.\n     * @returns {Vec3} -\n     */\n    public cross(point3: Vec3): Vec3 {\n        return new Vec3(\n            this.y * point3.z - this.z * point3.y,\n            this.z * point3.x - this.x * point3.z,\n            this.x * point3.y - this.y * point3.x\n        );\n    }\n\n    /**\n     * Sets vector to zero.\n     * @public\n     * @returns {Vec3} -\n     */\n    public clear(): Vec3 {\n        this.x = this.y = this.z = 0;\n        return this;\n    }\n\n    /**\n     * Returns normalized vector.\n     * @public\n     * @returns {Vec3} -\n     */\n    public getNormal(): Vec3 {\n        let res = new Vec3();\n        res.copy(this);\n\n        let length = 1.0 / res.length();\n\n        res.x *= length;\n        res.y *= length;\n        res.z *= length;\n\n        return res;\n    }\n\n    /**\n     * Returns normalized vector.\n     * @deprecated\n     * @public\n     * @returns {Vec3} -\n     */\n    public normal(): Vec3 {\n        let res = new Vec3();\n        res.copy(this);\n\n        let length = 1.0 / res.length();\n\n        res.x *= length;\n        res.y *= length;\n        res.z *= length;\n\n        return res;\n    }\n\n    /**\n     * Returns normalized negate vector.\n     * @public\n     * @returns {Vec3} -\n     */\n    public normalNegate(): Vec3 {\n        let res = new Vec3();\n        res.copy(this);\n\n        let length = -1.0 / res.length();\n\n        res.x *= length;\n        res.y *= length;\n        res.z *= length;\n\n        return res;\n    }\n\n    /**\n     * Returns normalized negate scale vector.\n     * @public\n     * @returns {Vec3} -\n     */\n    public normalNegateScale(scale: number): Vec3 {\n        let res = new Vec3();\n        res.copy(this);\n\n        let length = -scale / res.length();\n\n        res.x *= length;\n        res.y *= length;\n        res.z *= length;\n\n        return res;\n    }\n\n    /**\n     * Returns normalized scale vector.\n     * @public\n     * @returns {Vec3} -\n     */\n    public normalScale(scale: number): Vec3 {\n        let res = new Vec3();\n        res.copy(this);\n\n        let length = scale / res.length();\n\n        res.x *= length;\n        res.y *= length;\n        res.z *= length;\n\n        return res;\n    }\n\n    /**\n     * Normalize current vector.\n     * @public\n     * @returns {Vec3} -\n     */\n    public normalize(): Vec3 {\n        let length = 1.0 / this.length();\n        this.x *= length;\n        this.y *= length;\n        this.z *= length;\n        return this;\n    }\n\n    /**\n     * Converts vector to a number array.\n     * @public\n     * @returns {Array.<number>} - (exactly 3 entries)\n     * @deprecated\n     */\n    public toVec(): NumberArray3 {\n        return [this.x, this.y, this.z];\n    }\n\n    /**\n     * Converts vector to a number array.\n     * @public\n     * @returns {Array.<number>} - (exactly 3 entries)\n     */\n    public toArray(): NumberArray3 {\n        return [this.x, this.y, this.z];\n    }\n\n    /**\n     * Gets distance to point.\n     * @public\n     * @param {Vec3} p - Distant point.\n     * @returns {number} -\n     */\n    public distance(p: Vec3): number {\n        let dx = this.x - p.x,\n            dy = this.y - p.y,\n            dz = this.z - p.z;\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    }\n\n    /**\n     * Gets square distance to point.\n     * @public\n     * @param {Vec3} p - Distant point.\n     * @returns {number} -\n     */\n    public distance2(p: Vec3): number {\n        let dx = this.x - p.x,\n            dy = this.y - p.y,\n            dz = this.z - p.z;\n        return dx * dx + dy * dy + dz * dz;\n    }\n\n    /**\n     * Sets vector's values.\n     * @public\n     * @param {number} x - Value X.\n     * @param {number} y - Value Y.\n     * @param {number} z - Value Z.\n     * @returns {Vec3} -\n     */\n    public set(x: number, y: number, z: number): Vec3 {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        return this;\n    }\n\n    /**\n     * Negate current vector.\n     * @public\n     * @returns {Vec3} -\n     */\n    public negate(): Vec3 {\n        this.x = -this.x;\n        this.y = -this.y;\n        this.z = -this.z;\n        return this;\n    }\n\n    /**\n     * Negate current vector to another instance.\n     * @public\n     * @returns {Vec3} -\n     */\n    public negateTo(): Vec3 {\n        return new Vec3(-this.x, -this.y, -this.z);\n    }\n\n    /**\n     * Gets projected point coordinates of the current vector on the ray.\n     * @public\n     * @param {Vec3} pos - Ray position.\n     * @param {Vec3} direction - Ray direction.\n     * @returns {Vec3} -\n     */\n    public projToRay(pos: Vec3, direction: Vec3): Vec3 {\n        let v = Vec3.proj_b_to_a(Vec3.sub(this, pos), direction);\n        v.addA(pos);\n        return v;\n    }\n\n    /**\n     * Gets angle between two vectors.\n     * @public\n     * @param {Vec3} a - Another vector.\n     * @returns {number} -\n     */\n    public angle(a: Vec3): number {\n        return Vec3.angle(this, a);\n    }\n\n    /**\n     * Returns two vectors linear interpolation.\n     * @public\n     * @param {Vec3} v2 - End vector.\n     * @param {number} l - Interpolate value.\n     * @returns {Vec3} -\n     */\n    public lerp(v2: Vec3, l: number) {\n        return new Vec3(\n            this.x + (v2.x - this.x) * l,\n            this.y + (v2.y - this.y) * l,\n            this.z + (v2.z - this.z) * l\n        );\n    }\n\n    /**\n     * Returns vector interpolation by v(t) = v1 * t + v2 * (1 - t)\n     * @public\n     * @param {Vec3} v2 - End vector.\n     * @param {number} t - Interpolate value.\n     * @returns {Vec3} -\n     */\n    public smerp(v2: Vec3, t: number): Vec3 {\n        let one_d = 1 - t;\n        return new Vec3(\n            this.x * t + v2.x * one_d,\n            this.y * t + v2.y * one_d,\n            this.z * t + v2.z * one_d\n        );\n    }\n\n    static get LERP_DELTA(): number {\n        return 1e-6;\n    }\n\n    /**\n     * Spherically interpolates between two vectors.\n     * Interpolates between current and v2 vector by amount t. The difference between this and linear interpolation (aka, \"lerp\") is that\n     * the vectors are treated as directions rather than points in space. The direction of the returned vector is interpolated\n     * by the angle and its magnitude is interpolated between the magnitudes of from and to.\n     * @public\n     * @param {Vec3} v2 -\n     * @param {number} t - The parameter t is clamped to the range [0, 1].\n     * @returns {Vec3} -\n     */\n    public slerp(v2: Vec3, t: number): Vec3 {\n        let res = new Vec3();\n\n        if (t <= 0.0) {\n            res.copy(this);\n            return res;\n        } else if (t >= 1.0) {\n            res.copy(v2);\n            return res;\n        }\n\n        let omega, sinom, scale0, scale1;\n        let cosom = this.dot(v2);\n\n        if (1.0 - cosom > Vec3.LERP_DELTA) {\n            omega = Math.acos(cosom);\n            sinom = Math.sin(omega);\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\n            scale1 = Math.sin(t * omega) / sinom;\n        } else {\n            scale0 = 1.0 - t;\n            scale1 = t;\n        }\n\n        return Vec3.add(this.scaleTo(scale0), v2.scale(scale1));\n    }\n\n    /**\n     * Gets the shortest arc quaternion to rotate this vector to the destination vector.\n     * @param {Vec3} dest -\n     * @param {Vec3} fallbackAxis -\n     * @returns {Quat} -\n     * @todo: TEST IT!\n     */\n    public getRotationTo(dest: Vec3, fallbackAxis: Vec3): Quat {\n        // Based on Stan Melax's article in Game Programming Gems\n        // Copy, since cannot modify local\n        let v0 = this.clone();\n        let v1 = dest.clone();\n        v0.normalize();\n        v1.normalize();\n\n        let d = v0.dot(v1);\n        // If dot == 1, vectors are the same\n        if (d >= 1.0) {\n            return Quat.IDENTITY.clone();\n        }\n\n        if (d < 1e-6 - 1.0) {\n            if (!fallbackAxis.equal(Vec3.ZERO)) {\n                // rotate 180 degrees about the fallback axis\n                return Quat.axisAngleToQuat(fallbackAxis, Math.PI);\n            } else {\n                // Generate an axis\n                let axis = Vec3.UNIT_X.cross(v0);\n                if (axis.isZero()) {\n                    // pick another if colinear\n                    axis = Vec3.UNIT_Y.cross(v0);\n                }\n                axis.normalize();\n                return Quat.axisAngleToQuat(axis, Math.PI);\n            }\n        } else {\n            let s = Math.sqrt((1 + d) * 2);\n            let invs = 1.0 / s;\n            let c = v0.cross(v1);\n            let q = new Quat(c.x * invs, c.y * invs, c.z * invs, s * 0.5);\n            q.normalize();\n            return q;\n        }\n    }\n}\n\n/**\n * Vector 3d object creator.\n * @function\n * @param {number} [x] - value X.\n * @param {number} [y] - value Y.\n * @param {number} [z] - value Z.\n * @returns {Vec3} -\n */\nexport function vec3(x: number = 0, y: number = 0, z: number = 0): Vec3 {\n    return new Vec3(x, y, z);\n}\n","import {Vec3} from \"./Vec3\";\n\nexport type NumberArray2 = [number, number];\n\n/**\n * Class represents a 3d vector.\n * @class\n * @param {number} [x] - First value.\n * @param {number} [y] - Second value.\n */\nexport class Vec2 {\n\n    /**\n     * @public\n     * @type {number}\n     */\n    public x: number;\n\n    /**\n     * @public\n     * @type {number}\n     */\n    public y: number;\n\n    constructor(x: number = 0.0, y: number = 0.0) {\n        this.x = x;\n        this.y = y;\n    }\n\n    /** @const */\n    static get UP(): Vec2 {\n        return new Vec2(0, 1);\n    }\n\n    /** @const */\n    static get DOWN(): Vec2 {\n        return new Vec2(0, -1);\n    }\n\n    /** @const */\n    static get RIGHT(): Vec2 {\n        return new Vec2(1, 0);\n    }\n\n    /** @const */\n    static get LEFT(): Vec2 {\n        return new Vec2(-1, 0);\n    }\n\n    /** @const */\n    static get ZERO(): Vec2 {\n        return new Vec2();\n    }\n\n    /**\n     * Returns summary vector.\n     * @static\n     * @param {Vec2} a - First vector.\n     * @param {Vec2} b - Second vector.\n     * @returns {Vec2} - Summary vector.\n     */\n    static add(a: Vec2, b: Vec2): Vec2 {\n        const res = new Vec2(a.x, a.y);\n        res.addA(b);\n        return res;\n    }\n\n    /**\n     * Returns two vectors subtraction.\n     * @static\n     * @param {Vec2} a - First vector.\n     * @param {Vec2} b - Second vector.\n     * @returns {Vec2} - Vectors subtraction.\n     */\n    static sub(a: Vec2, b: Vec2): Vec2 {\n        var res = new Vec2(a.x, a.y);\n        res.subA(b);\n        return res;\n    }\n\n    /**\n     * Returns scaled vector.\n     * @static\n     * @param {Vec2} a - Input vector.\n     * @param {number} scale - Scale value.\n     * @returns {Vec2}\n     */\n    static scale(a: Vec2, scale: number): Vec2 {\n        let res = new Vec2(a.x, a.y);\n        res.scale(scale);\n        return res;\n    }\n\n    /**\n     * Returns two vectors production.\n     * @static\n     * @param {Vec2} a - First vector.\n     * @param {Vec2} b - Second vector.\n     * @returns {Vec2}\n     */\n    static mul(a: Vec2, b: Vec2): Vec2 {\n        let res = new Vec2(a.x, a.y);\n        res.mulA(b);\n        return res;\n    }\n\n    /**\n     * Returns vector components division product one to another.\n     * @static\n     * @param {Vec2} a - First vector.\n     * @param {Vec2} b - Second vector.\n     * @returns {Vec2}\n     */\n    static div(a: Vec2, b: Vec2): Vec2 {\n        let res = new Vec2(a.x, a.y);\n        res.divA(b);\n        return res;\n    }\n\n    /**\n     * Get projection of the first vector to the second.\n     * @static\n     * @param {Vec2} b - First vector.\n     * @param {Vec2} a - Second vector.\n     * @returns {Vec2}\n     */\n    static proj_b_to_a(b: Vec2, a: Vec2): Vec2 {\n        return a.scaleTo(a.dot(b) / a.dot(a));\n    }\n\n    /**\n     * Gets angle between two vectors.\n     * @static\n     * @param {Vec2} a - First vector.\n     * @param {Vec2} b - Second vector.\n     * @returns {number}\n     */\n    static angle(a: Vec2, b: Vec2): number {\n        return Math.acos(a.dot(b) / Math.sqrt(a.length2() * b.length2()));\n    }\n\n    /**\n     * Makes vectors normalized and orthogonal to each other.\n     * @static\n     * @param {Vec2} normal - Normal vector.\n     * @param {Vec2} tangent - Tangent vector.\n     * @returns {Vec2}\n     */\n    static orthoNormalize(normal: Vec2, tangent: Vec2): Vec2 {\n        normal = normal.normal();\n        normal.scale(tangent.dot(normal));\n        return tangent.sub(normal).normalize();\n    }\n\n    /**\n     * Converts to 3d vector, third value is 0.0.\n     * @public\n     * @returns {Vec3}\n     */\n    public toVector3(): Vec3 {\n        return new Vec3(this.x, this.y, 0);\n    }\n\n    /**\n     * Returns clone vector.\n     * @public\n     * @returns {Vec2}\n     */\n    public clone(): Vec2 {\n        return new Vec2(this.x, this.y);\n    }\n\n    /**\n     * Compares with vector. Returns true if it equals another.\n     * @public\n     * @param {Vec2} p - Vector to compare.\n     * @returns {boolean}\n     */\n    public equal(p: Vec2): boolean {\n        return this.x === p.x && this.y === p.y;\n    }\n\n    /**\n     * Copy input vector's values.\n     * @param {Vec2} point2 - Vector to copy.\n     * @returns {Vec2}\n     */\n    public copy(point2: Vec2): Vec2 {\n        this.x = point2.x;\n        this.y = point2.y;\n        return this;\n    }\n\n    /**\n     * Gets vector's length.\n     * @public\n     * @returns {number}\n     */\n    public length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    /**\n     * Returns squared vector's length.\n     * @public\n     * @returns {number}\n     */\n    public length2(): number {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    /**\n     * Adds vector to the current.\n     * @public\n     * @param {Vec2}\n     * @returns {Vec2}\n     */\n    public addA(v: Vec2): Vec2 {\n        this.x += v.x;\n        this.y += v.y;\n        return this;\n    }\n\n    /**\n     * Summarize two vectors.\n     * @public\n     * @param {Vec2}\n     * @returns {Vec2}\n     */\n    public add(v: Vec2): Vec2 {\n        return new Vec2(this.x + v.x, this.y + v.y);\n    }\n\n    /**\n     * Subtract vector from the current where results saved on the current instance.\n     * @public\n     * @param {Vec2} v - Subtract vector.\n     * @returns {Vec2}\n     */\n    public subA(v: Vec2): Vec2 {\n        this.x -= v.x;\n        this.y -= v.y;\n        return this;\n    }\n\n    /**\n     * Subtract vector from the current.\n     * @public\n     * @param {Vec2} v - Subtract vector.\n     * @returns {Vec2}\n     */\n    public sub(v: Vec2): Vec2 {\n        return new Vec2(this.x - v.x, this.y - v.y);\n    }\n\n    /**\n     * Scale current vector.\n     * @public\n     * @param {number} scale - Scale value.\n     * @returns {Vec2}\n     */\n    public scale(scale: number): Vec2 {\n        this.x *= scale;\n        this.y *= scale;\n        return this;\n    }\n\n    /**\n     * Scale current vector to another instance.\n     * @public\n     * @param {number} scale - Scale value.\n     * @returns {Vec2}\n     */\n    public scaleTo(scale: number): Vec2 {\n        return new Vec2(this.x * scale, this.y * scale);\n    }\n\n    /**\n     * Multiply current vector object to another and store result in the current instance.\n     * @public\n     * @param {Vec2} vec - Multiply vector.\n     * @returns {Vec2}\n     */\n    public mulA(vec: Vec2): Vec2 {\n        this.x *= vec.x;\n        this.y *= vec.y;\n        return this;\n    }\n\n    /**\n     * Multiply current vector object to another and returns new vector instance.\n     * @public\n     * @param {Vec2} vec - Multiply vector.\n     * @returns {Vec2}\n     */\n    public mul(vec: Vec2): Vec2 {\n        return new Vec2(this.x * vec.x, this.y * vec.y);\n    }\n\n    /**\n     * Divide current vector's components to another. Results stores in the current vector object.\n     * @public\n     * @param {Vec2}\n     * @returns {Vec2}\n     */\n    public divA(vec: Vec2): Vec2 {\n        this.x /= vec.x;\n        this.y /= vec.y;\n        return this;\n    }\n\n    /**\n     * Gets vectors dot production.\n     * @public\n     * @param {Vec2} v - Another vector.\n     * @returns {number}\n     */\n    public dot(v: Vec2): number {\n        return v.x * this.x + v.y * this.y;\n    }\n\n    /**\n     * Gets vectors dot production.\n     * @public\n     * @param {Array.<number>} arr - Array vector. (exactly 2 entries)\n     * @returns {number}\n     */\n    public dotArr(arr: NumberArray2): number {\n        return arr[0] * this.x + arr[1] * this.y;\n    }\n\n    /**\n     * Gets vectors cross production.\n     * @public\n     * @param {Vec2} v - Another vector.\n     * @returns {number}\n     */\n    public cross(v: Vec2): number {\n        return this.x * v.y - this.y * v.x;\n    }\n\n    /**\n     * Sets vector to zero.\n     * @public\n     * @returns {Vec2}\n     */\n    public clear(): Vec2 {\n        this.x = this.y = 0;\n        return this;\n    }\n\n    /**\n     * Returns normalized vector.\n     * @public\n     * @returns {Vec2}\n     */\n    public normal(): Vec2 {\n        let res = new Vec2();\n        res.copy(this);\n\n        let length = 1.0 / res.length();\n\n        res.x *= length;\n        res.y *= length;\n\n        return res;\n    }\n\n    /**\n     * Normalize current vector.\n     * @public\n     * @returns {Vec2}\n     */\n    public normalize(): Vec2 {\n        let length = 1.0 / this.length();\n\n        this.x *= length;\n        this.y *= length;\n\n        return this;\n    }\n\n    /**\n     * Converts vector to a number array.\n     * @public\n     * @returns {Array.<number>} - (exactly 2 entries)\n     */\n    public toVec(): NumberArray2 {\n        return [this.x, this.y];\n    }\n\n    /**\n     * Gets distance to point.\n     * @public\n     * @param {Vec2} p - Distant point.\n     * @returns {number}\n     */\n    public distance(p: Vec2): number {\n        let vec = Vec2.sub(this, p);\n        return vec.length();\n    }\n\n    /**\n     * Sets vector's values.\n     * @public\n     * @param {number} x - Value X.\n     * @param {number} y - Value Y.\n     * @returns {Vec2}\n     */\n    public set(x: number, y: number): Vec2 {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n\n    /**\n     * Negate current vector.\n     * @public\n     * @returns {Vec2}\n     */\n    public negate(): Vec2 {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n\n    /**\n     * Negate current vector to another instance.\n     * @public\n     * @returns {Vec2}\n     */\n    public negateTo(): Vec2 {\n        return new Vec2(-this.x, -this.y);\n    }\n\n    /**\n     * Gets projected point coordinates of the current vector on the ray.\n     * @public\n     * @param {Vec2} pos - Ray position.\n     * @param {Vec2} direction - Ray direction.\n     * @returns {Vec2}\n     */\n    public projToRay(pos: Vec2, direction: Vec2): Vec2 {\n        let v = Vec2.proj_b_to_a(Vec2.sub(this, pos), direction);\n        v.add(pos);\n        return v;\n    }\n\n    /**\n     * Gets angle between two vectors.\n     * @public\n     * @param {Vec2} a - Another vector.\n     * @returns {number}\n     */\n    public angle(a: Vec2): number {\n        return Vec2.angle(this, a);\n    }\n\n    /**\n     * Returns two vectors linear interpolation.\n     * @public\n     * @param {Vec2} v2 - End vector.\n     * @param {number} l - Interpolate value.\n     * @returns {Vec2}\n     */\n    public lerp(v1: Vec2, v2: Vec2, l: number): Vec2 {\n        let res = this.clone();\n        if (l <= 0.0) {\n            res.copy(v1);\n        } else if (l >= 1.0) {\n            res.copy(v2);\n        } else {\n            res = Vec2.add(v1, Vec2.sub(v2, v1).scale(l));\n        }\n        return res;\n    }\n\n    static get LERP_DELTA(): number {\n        return 1e-6;\n    }\n\n    /**\n     * Spherically interpolates between two vectors.\n     * Interpolates between current and v2 vector by amount t. The difference between this and linear interpolation (aka, \"lerp\") is that\n     * the vectors are treated as directions rather than points in space. The direction of the returned vector is interpolated\n     * by the angle and its magnitude is interpolated between the magnitudes of from and to.\n     * @public\n     * @param {Vec2} v2\n     * @param {number} t - The parameter t is clamped to the range [0, 1].\n     * @returns {Vec2}\n     */\n    public slerp(v2: Vec2, t: number): Vec2 {\n        let res = new Vec2();\n\n        if (t <= 0.0) {\n            res.copy(this);\n            return res;\n        } else if (t >= 1.0) {\n            res.copy(v2);\n            return res;\n        }\n\n        let omega, sinom, scale0, scale1;\n        let cosom = this.dot(v2);\n\n        if (1.0 - cosom > Vec2.LERP_DELTA) {\n            omega = Math.acos(cosom);\n            sinom = Math.sin(omega);\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\n            scale1 = Math.sin(t * omega) / sinom;\n        } else {\n            scale0 = 1.0 - t;\n            scale1 = t;\n        }\n\n        return Vec2.add(this.scale(scale0), v2.scale(scale1));\n    }\n}\n\n/**\n * Vector 2d object creator.\n * @function\n * @param {number} [x] - First cvalue.\n * @param {number} [y] - Second value.\n * @returns {Vec2}\n */\nexport function vec2(x: number = 0, y: number = 0): Vec2 {\n    return new Vec2(x, y);\n}\n","export const colorTable: { [id: string]: string } = {\n    \"aliceblue\": \"#f0f8ff\",\n    \"antiquewhite\": \"#faebd7\",\n    \"aqua\": \"#00ffff\",\n    \"aquamarine\": \"#7fffd4\",\n    \"azure\": \"#f0ffff\",\n    \"beige\": \"#f5f5dc\",\n    \"bisque\": \"#ffe4c4\",\n    \"black\": \"#000000\",\n    \"blanchedalmond\": \"#ffebcd\",\n    \"blue\": \"#0000ff\",\n    \"blueviolet\": \"#8a2be2\",\n    \"brown\": \"#a52a2a\",\n    \"burlywood\": \"#deb887\",\n    \"cadetblue\": \"#5f9ea0\",\n    \"chartreuse\": \"#7fff00\",\n    \"chocolate\": \"#d2691e\",\n    \"coral\": \"#ff7f50\",\n    \"cornflowerblue\": \"#6495ed\",\n    \"cornsilk\": \"#fff8dc\",\n    \"crimson\": \"#dc143c\",\n    \"cyan\": \"#00ffff\",\n    \"darkblue\": \"#00008b\",\n    \"darkcyan\": \"#008b8b\",\n    \"darkgoldenrod\": \"#b8860b\",\n    \"darkgray\": \"#a9a9a9\",\n    \"darkgreen\": \"#006400\",\n    \"darkkhaki\": \"#bdb76b\",\n    \"darkmagenta\": \"#8b008b\",\n    \"darkolivegreen\": \"#556b2f\",\n    \"darkorange\": \"#ff8c00\",\n    \"darkorchid\": \"#9932cc\",\n    \"darkred\": \"#8b0000\",\n    \"darksalmon\": \"#e9967a\",\n    \"darkseagreen\": \"#8fbc8f\",\n    \"darkslateblue\": \"#483d8b\",\n    \"darkslategray\": \"#2f4f4f\",\n    \"darkturquoise\": \"#00ced1\",\n    \"darkviolet\": \"#9400d3\",\n    \"deeppink\": \"#ff1493\",\n    \"deepskyblue\": \"#00bfff\",\n    \"dimgray\": \"#696969\",\n    \"dodgerblue\": \"#1e90ff\",\n    \"firebrick\": \"#b22222\",\n    \"floralwhite\": \"#fffaf0\",\n    \"forestgreen\": \"#228b22\",\n    \"fuchsia\": \"#ff00ff\",\n    \"gainsboro\": \"#dcdcdc\",\n    \"ghostwhite\": \"#f8f8ff\",\n    \"gold\": \"#ffd700\",\n    \"goldenrod\": \"#daa520\",\n    \"gray\": \"#808080\",\n    \"green\": \"#008000\",\n    \"greenyellow\": \"#adff2f\",\n    \"honeydew\": \"#f0fff0\",\n    \"hotpink\": \"#ff69b4\",\n    \"indianred \": \"#cd5c5c\",\n    \"indigo\": \"#4b0082\",\n    \"ivory\": \"#fffff0\",\n    \"khaki\": \"#f0e68c\",\n    \"lavender\": \"#e6e6fa\",\n    \"lavenderblush\": \"#fff0f5\",\n    \"lawngreen\": \"#7cfc00\",\n    \"lemonchiffon\": \"#fffacd\",\n    \"lightblue\": \"#add8e6\",\n    \"lightcoral\": \"#f08080\",\n    \"lightcyan\": \"#e0ffff\",\n    \"lightgoldenrodyellow\": \"#fafad2\",\n    \"lightgrey\": \"#d3d3d3\",\n    \"lightgreen\": \"#90ee90\",\n    \"lightpink\": \"#ffb6c1\",\n    \"lightsalmon\": \"#ffa07a\",\n    \"lightseagreen\": \"#20b2aa\",\n    \"lightskyblue\": \"#87cefa\",\n    \"lightslategray\": \"#778899\",\n    \"lightsteelblue\": \"#b0c4de\",\n    \"lightyellow\": \"#ffffe0\",\n    \"lime\": \"#00ff00\",\n    \"limegreen\": \"#32cd32\",\n    \"linen\": \"#faf0e6\",\n    \"magenta\": \"#ff00ff\",\n    \"maroon\": \"#800000\",\n    \"mediumaquamarine\": \"#66cdaa\",\n    \"mediumblue\": \"#0000cd\",\n    \"mediumorchid\": \"#ba55d3\",\n    \"mediumpurple\": \"#9370d8\",\n    \"mediumseagreen\": \"#3cb371\",\n    \"mediumslateblue\": \"#7b68ee\",\n    \"mediumspringgreen\": \"#00fa9a\",\n    \"mediumturquoise\": \"#48d1cc\",\n    \"mediumvioletred\": \"#c71585\",\n    \"midnightblue\": \"#191970\",\n    \"mintcream\": \"#f5fffa\",\n    \"mistyrose\": \"#ffe4e1\",\n    \"moccasin\": \"#ffe4b5\",\n    \"navajowhite\": \"#ffdead\",\n    \"navy\": \"#000080\",\n    \"oldlace\": \"#fdf5e6\",\n    \"olive\": \"#808000\",\n    \"olivedrab\": \"#6b8e23\",\n    \"orange\": \"#ffa500\",\n    \"orangered\": \"#ff4500\",\n    \"orchid\": \"#da70d6\",\n    \"palegoldenrod\": \"#eee8aa\",\n    \"palegreen\": \"#98fb98\",\n    \"paleturquoise\": \"#afeeee\",\n    \"palevioletred\": \"#d87093\",\n    \"papayawhip\": \"#ffefd5\",\n    \"peachpuff\": \"#ffdab9\",\n    \"peru\": \"#cd853f\",\n    \"pink\": \"#ffc0cb\",\n    \"plum\": \"#dda0dd\",\n    \"powderblue\": \"#b0e0e6\",\n    \"purple\": \"#800080\",\n    \"rebeccapurple\": \"#663399\",\n    \"red\": \"#ff0000\",\n    \"rosybrown\": \"#bc8f8f\",\n    \"royalblue\": \"#4169e1\",\n    \"saddlebrown\": \"#8b4513\",\n    \"salmon\": \"#fa8072\",\n    \"sandybrown\": \"#f4a460\",\n    \"seagreen\": \"#2e8b57\",\n    \"seashell\": \"#fff5ee\",\n    \"sienna\": \"#a0522d\",\n    \"silver\": \"#c0c0c0\",\n    \"skyblue\": \"#87ceeb\",\n    \"slateblue\": \"#6a5acd\",\n    \"slategray\": \"#708090\",\n    \"snow\": \"#fffafa\",\n    \"springgreen\": \"#00ff7f\",\n    \"steelblue\": \"#4682b4\",\n    \"tan\": \"#d2b48c\",\n    \"teal\": \"#008080\",\n    \"thistle\": \"#d8bfd8\",\n    \"tomato\": \"#ff6347\",\n    \"turquoise\": \"#40e0d0\",\n    \"violet\": \"#ee82ee\",\n    \"wheat\": \"#f5deb3\",\n    \"white\": \"#ffffff\",\n    \"whitesmoke\": \"#f5f5f5\",\n    \"yellow\": \"#ffff00\",\n    \"yellowgreen\": \"#9acd32\"\n};","/**\n * @module og/utils/shared\n */\n\nimport {Extent} from \"../Extent\";\nimport {LonLat} from \"../LonLat\";\nimport {Vec2} from \"../math/Vec2\";\nimport {NumberArray2} from \"../math/Vec2\";\nimport {NumberArray3, Vec3} from \"../math/Vec3\";\nimport {NumberArray4, Vec4} from \"../math/Vec4\";\nimport {colorTable} from \"./colorTable\";\n\nexport function getDefault(param?: any, def?: any): boolean {\n    return param != undefined ? param : def;\n}\n\nexport function isEmpty(v: any): boolean {\n    return v == null;\n}\n\n/**\n * Returns true if the object pointer is undefined.\n * @function\n * @param {Object} obj - Object pointer.\n * @returns {boolean} Returns true if object is undefined.\n */\nexport function isUndef(obj?: any): boolean {\n    return obj === void 0;\n}\n\nexport function isUndefExt(obj: any, defVal: any): any {\n    return isUndef(obj) ? defVal : obj;\n}\n\nlet _stampCounter: number = 0;\n\nexport function stamp(obj: any): number {\n    let stamp = obj._openglobus_id;\n    if (!stamp) {\n        stamp = obj._openglobus_id = ++_stampCounter;\n    }\n    return stamp;\n}\n\nexport function isString(s: any): boolean {\n    return typeof s === \"string\" || s instanceof String;\n}\n\n/**\n * Convert html color string to the RGBA number vector.\n * @param {string} htmlColor - HTML string(\"#C6C6C6\" or \"#EF5\" or \"rgb(8,8,8)\" or \"rgba(8,8,8)\") color.\n * @param {number} [opacity] - Opacity for the output vector.\n * @returns {Vec4} -\n */\nexport function htmlColorToRgba(htmlColor: string, opacity?: number): Vec4 {\n    let hColor: any | undefined = colorTable[htmlColor];\n    if (hColor) {\n        htmlColor = hColor;\n    }\n\n    if (htmlColor[0] === \"#\") {\n        let shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        let hex = htmlColor.replace(shorthandRegex, function (m, r, g, b) {\n            return r + r + g + g + b + b;\n        });\n        let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        if (result) {\n            return new Vec4(\n                parseInt(result[1], 16) / 255,\n                parseInt(result[2], 16) / 255,\n                parseInt(result[3], 16) / 255,\n                isEmpty(opacity) ? 1.0 : opacity\n            );\n        } else {\n            return new Vec4();\n        }\n    } else {\n        if (isEmpty(opacity)) {\n            opacity = 1.0;\n        }\n        let m = htmlColor.split(\",\");\n        return new Vec4(\n            parseInt(m[0].split(\"(\")[1]) / 255,\n            parseInt(m[1]) / 255,\n            parseInt(m[2]) / 255,\n            !isEmpty(m[3]) ? parseFloat(m[3]) : opacity\n        );\n    }\n}\n\nexport function htmlColorToFloat32Array(htmlColor: string, opacity?: number): Float32Array {\n    let c = htmlColorToRgba(htmlColor, opacity);\n    return new Float32Array([c.x, c.y, c.z, c.w]);\n}\n\n/**\n * Convert html color string to the RGB number vector.\n * @param {string} htmlColor - HTML string(\"#C6C6C6\" or \"#EF5\" or \"rgb(8,8,8)\" or \"rgba(8,8,8)\") color.\n * @returns {Vec3} -\n */\nexport function htmlColorToRgb(htmlColor: string): Vec3 {\n    let hColor: any | undefined = colorTable[htmlColor];\n    if (hColor) {\n        htmlColor = hColor;\n    }\n\n    if (htmlColor[0] === \"#\") {\n        let shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        let hex = htmlColor.replace(shorthandRegex, function (m, r, g, b) {\n            return r + r + g + g + b + b;\n        });\n        let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        if (result) {\n            return new Vec3(\n                parseInt(result[1], 16) / 255,\n                parseInt(result[2], 16) / 255,\n                parseInt(result[3], 16) / 255\n            );\n        } else {\n            return new Vec3();\n        }\n    } else {\n        let m = htmlColor.split(\",\");\n        return new Vec3(\n            parseInt(m[0].split(\"(\")[1]) / 255,\n            parseInt(m[1]) / 255,\n            parseInt(m[2]) / 255\n        );\n    }\n}\n\n/**\n * Replace template substrings between '{' and '}' tokens.\n * @param {string} template - String with templates in \"{\" and \"}\"\n * @param {Object} params - Template named object with subsrtings.\n * @returns {string} -\n *\n * @example <caption>Example from og.terrain that replaces tile indexes in url:</caption>\n * var substrings = {\n *       \"x\": 12,\n *       \"y\": 15,\n *       \"z\": 8\n * }\n * og.utils.stringTemplate(\"http://earth3.openglobus.org/{z}/{y}/{x}.ddm\", substrings);\n * //returns http://earth3.openglobus.org/8/15/12.ddm\n */\nexport function stringTemplate(template: string, params?: any): string {\n    return template.replace(/{[^{}]+}/g, function (key) {\n        return params[key.replace(/[{}]+/g, \"\")] || \"\";\n    });\n}\n\nexport function getHTML(template: string, params?: any): string {\n    return stringTemplate(template, params);\n}\n\nexport function parseHTML(htmlStr: string): HTMLElement[] {\n    let p = document.createElement(\"div\");\n    p.innerHTML = htmlStr;\n    let domArr: HTMLElement[] = [];\n    for (let i = 0; i < p.childNodes.length; i++) {\n        domArr.push(p.childNodes[i] as HTMLElement);\n        p.removeChild(p.childNodes[i]);\n    }\n    return domArr;\n}\n\nexport function print2d(id: string, text: string, x: number, y: number) {\n    let el = document.getElementById(id);\n    if (!el) {\n        el = document.createElement(\"div\");\n        el.id = id;\n        el.classList.add(\"defaultText\");\n        document.body.appendChild(el);\n    }\n    el.innerHTML = text;\n    el.style.left = `${x}px`;\n    el.style.top = `${y}px`;\n}\n\nexport function defaultString(str?: string, def: string = \"\"): string {\n    return str ? str.trim() : def;\n}\n\nexport function createVector3(v?: Vec3 | Vec2 | NumberArray3 | NumberArray2 | null, def?: Vec3): Vec3 {\n    if (v) {\n        if (v instanceof Vec3) {\n            return v.clone();\n        } else if (v instanceof Array) {\n            return Vec3.fromVec(v);\n        } else if (v instanceof Vec2) {\n            return new Vec3(v.x, v.y, 0.0);\n        }\n    } else if (def) {\n        return def;\n    }\n    return new Vec3();\n}\n\nexport function createVector4(v?: Vec4 | NumberArray4 | null, def?: Vec4): Vec4 {\n    if (v) {\n        if (v instanceof Vec4) {\n            return v.clone();\n        } else if (v instanceof Array) {\n            return Vec4.fromVec(v);\n        }\n    } else if (def) {\n        return def;\n    }\n    return new Vec4();\n}\n\nexport function createColorRGBA(c?: string | NumberArray4 | Vec4 | null, def?: Vec4): Vec4 {\n    if (c) {\n        if (isString(c)) {\n            return htmlColorToRgba(c as string);\n        } else if (c instanceof Array) {\n            return Vec4.fromVec(c);\n        } else if (c instanceof Vec4) {\n            return c.clone();\n        }\n    } else if (def) {\n        return def;\n    }\n    return new Vec4(1.0, 1.0, 1.0, 1.0);\n}\n\nexport function createColorRGB(c?: string | NumberArray3 | Vec3 | null, def?: Vec3): Vec3 {\n    if (c) {\n        if (isString(c)) {\n            return htmlColorToRgb(c as string);\n        } else if (c instanceof Array) {\n            return Vec3.fromVec(c);\n        } else if (c instanceof Vec3) {\n            return (c as Vec3).clone();\n        }\n    } else if (def) {\n        return def;\n    }\n    return new Vec3(1.0, 1.0, 1.0);\n}\n\nexport function createExtent(e?: Extent | [[number, number], [number, number]] | null, def?: Extent): Extent {\n    if (e) {\n        if (e instanceof Array) {\n            return new Extent(createLonLat(e[0]), createLonLat(e[1]));\n        } else if (e instanceof Extent) {\n            return e.clone();\n        }\n    } else if (def) {\n        return def;\n    }\n    return new Extent();\n}\n\nexport function createLonLat(l?: LonLat | NumberArray2 | NumberArray3, def?: LonLat): LonLat {\n    if (l) {\n        if (l instanceof Array) {\n            return new LonLat(l[0], l[1], l[2]);\n        } else if (l instanceof LonLat) {\n            return l.clone();\n        }\n    } else if (def) {\n        return def;\n    }\n    return new LonLat();\n}\n\nexport function binarySearchFast(arr: number[] | TypedArray, x: number) {\n    let start = 0,\n        end = arr.length - 1;\n    while (start <= end) {\n        let k = Math.floor((start + end) * 0.5);\n        if (arr[k] === x) {\n            return k;\n        } else if (arr[k] < x) {\n            start = k + 1;\n        } else {\n            end = k - 1;\n        }\n    }\n    return -1;\n}\n\n/**\n * Finds an item in a sorted array.\n * @param {any[]} ar The sorted array to search.\n * @param {any} el The item to find in the array.\n * @param {Function} compare_fn comparator The function to use to compare the item to\n *        elements in the array.\n * @returns {number} a negative number  if 'a' is less than 'b'; 0 if 'a' is equal to 'b'; 'a' positive number of 'a' is greater than 'b'.\n *\n * @example\n * // Create a comparator function to search through an array of numbers.\n * function comparator(a, b) {\n *     return a - b;\n * };\n * var numbers = [0, 2, 4, 6, 8];\n * var index = og.utils.binarySearch(numbers, 6, comparator); // 3\n */\nexport function binarySearch(ar: any[], el: any, compare_fn: Function): number {\n    let m = 0;\n    let n = ar.length - 1;\n    while (m <= n) {\n        let k = (n + m) >> 1;\n        let cmp = compare_fn(el, ar[k], k);\n        if (cmp > 0) {\n            m = k + 1;\n        } else if (cmp < 0) {\n            n = k - 1;\n        } else {\n            return k;\n        }\n    }\n    return -m - 1;\n}\n\n/**\n * Binary insertion that uses binarySearch algorithm.\n * @param {any[]} ar - The sorted array to insert.\n * @param {any} el - The item to insert.\n * @param {Function} compare_fn - comparator The function to use to compare the item to\n *        elements in the array.\n * @returns {number} Array index position in which item inserted in.\n */\nexport function binaryInsert(ar: any[], el: any, compare_fn: Function): number {\n    let i = binarySearch(ar, el, compare_fn);\n    if (i < 0) {\n        i = ~i;\n    }\n    ar.splice(i, 0, el);\n    return i;\n}\n\n/**\n * Returns two segment lines intersection coordinate.\n * @static\n * @param {Vec2} start1 - First line first coordinate.\n * @param {Vec2} end1 - First line second coordinate.\n * @param {Vec2} start2 - Second line first coordinate.\n * @param {Vec2} end2 - Second line second coordinate.\n * @param {boolean} [isSegment] - Lines are segments.\n * @return {Vec2} - Intersection coordinate.\n */\nexport function getLinesIntersection2v(start1: Vec2, end1: Vec2, start2: Vec2, end2: Vec2, isSegment: boolean): Vec2 | undefined {\n    let dir1 = end1.sub(start1);\n    let dir2 = end2.sub(start2);\n\n    let a1 = -dir1.y;\n    let b1 = +dir1.x;\n    let d1 = -(a1 * start1.x + b1 * start1.y);\n\n    let a2 = -dir2.y;\n    let b2 = +dir2.x;\n    let d2 = -(a2 * start2.x + b2 * start2.y);\n\n    let seg1_line2_start = a2 * start1.x + b2 * start1.y + d2;\n    let seg1_line2_end = a2 * end1.x + b2 * end1.y + d2;\n\n    let seg2_line1_start = a1 * start2.x + b1 * start2.y + d1;\n    let seg2_line1_end = a1 * end2.x + b1 * end2.y + d1;\n\n    if (\n        isSegment &&\n        (seg1_line2_start * seg1_line2_end > 0 || seg2_line1_start * seg2_line1_end > 0)\n    ) {\n        return undefined;\n    }\n\n    let u = seg1_line2_start / (seg1_line2_start - seg1_line2_end);\n\n    return new Vec2(start1.x + u * dir1.x, start1.y + u * dir1.y);\n}\n\n/**\n * Returns two segment lines intersection coordinate.\n * @static\n * @param {Vec2} start1 - First line first coordinate.\n * @param {Vec2} end1 - First line second coordinate.\n * @param {Vec2} start2 - Second line first coordinate.\n * @param {Vec2} end2 - Second line second coordinate.\n * @param {boolean} [isSegment=false] - Lines are segments.\n * @return {Vec2} - Intersection coordinate.\n */\nexport function getLinesIntersectionLonLat(start1: LonLat, end1: LonLat, start2: LonLat, end2: LonLat, isSegment: boolean = false): LonLat | undefined {\n    let dir1 = new LonLat(end1.lon - start1.lon, end1.lat - start1.lat);\n    let dir2 = new LonLat(end2.lon - start2.lon, end2.lat - start2.lat);\n\n    let a1 = -dir1.lat;\n    let b1 = +dir1.lon;\n    let d1 = -(a1 * start1.lon + b1 * start1.lat);\n\n    let a2 = -dir2.lat;\n    let b2 = +dir2.lon;\n    let d2 = -(a2 * start2.lon + b2 * start2.lat);\n\n    let seg1_line2_start = a2 * start1.lon + b2 * start1.lat + d2;\n    let seg1_line2_end = a2 * end1.lon + b2 * end1.lat + d2;\n\n    let seg2_line1_start = a1 * start2.lon + b1 * start2.lat + d1;\n    let seg2_line1_end = a1 * end2.lon + b1 * end2.lat + d1;\n\n    if (\n        isSegment &&\n        (seg1_line2_start * seg1_line2_end > 0 || seg2_line1_start * seg2_line1_end > 0)\n    ) {\n        return undefined;\n    }\n\n    let u = seg1_line2_start / (seg1_line2_start - seg1_line2_end);\n\n    return new LonLat(start1.lon + u * dir1.lon, start1.lat + u * dir1.lat);\n}\n\n/**\n * Converts XML to JSON\n * @static\n * @param {Object} xml - Xml object\n * @return {Object} - Json converted object.\n */\nexport function xmlToJson(xml: any): any {\n    // Create the return object\n    let obj: any = {};\n\n    if (xml.nodeType === 1) {\n        // element\n        // do attributes\n        if (xml.attributes.length > 0) {\n            obj[\"@attributes\"] = {};\n            for (let j = 0; j < xml.attributes.length; j++) {\n                let attribute = xml.attributes.item(j);\n                obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\n            }\n        }\n    } else if (xml.nodeType === 3) {\n        // text\n        obj = xml.nodeValue;\n    }\n\n    // do children\n    if (xml.hasChildNodes()) {\n        for (let i = 0; i < xml.childNodes.length; i++) {\n            let item = xml.childNodes.item(i);\n            let nodeName = item.nodeName;\n            if (typeof obj[nodeName] === \"undefined\") {\n                obj[nodeName] = xmlToJson(item);\n            } else {\n                if (typeof obj[nodeName].push === \"undefined\") {\n                    let old = obj[nodeName];\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                }\n                obj[nodeName].push(xmlToJson(item));\n            }\n        }\n    }\n    return obj;\n}\n\nexport const castType = {\n    string: function (v: any) {\n        return isEmpty(v) ? v : v.toString();\n    },\n\n    date: function (v: any) {\n        return isEmpty(v) ? v : new Date(v * 1000);\n    },\n\n    datetime: function (v: any) {\n        return isEmpty(v) ? v : new Date(v * 1000);\n    },\n\n    time: function (v: any) {\n        return isEmpty(v) ? v : parseInt(v);\n    },\n\n    integer: function (v: any) {\n        return isEmpty(v) ? v : parseInt(v);\n    },\n\n    float: function (v: any) {\n        return isEmpty(v) ? v : parseFloat(v);\n    },\n\n    boolean: function (str: any) {\n        if (str === null) {\n            return str;\n        }\n\n        if (typeof str === \"boolean\") {\n            if (str === true) {\n                return true;\n            }\n            return false;\n        }\n        if (typeof str === \"string\") {\n            if (str === \"\") {\n                return false;\n            }\n            str = str.replace(/^\\s+|\\s+$/g, \"\");\n            if (str.toLowerCase() === \"true\" || str.toLowerCase() === \"yes\") {\n                return true;\n            }\n            str = str.replace(/,/g, \".\");\n            str = str.replace(/^\\s*\\-\\s*/g, \"-\");\n        }\n        if (!isNaN(str)) {\n            return parseFloat(str) !== 0;\n        }\n        return false;\n    }\n};\n\nexport function base64toBlob(base64Data: string, contentType: string = \"\"): Blob {\n\n    let sliceSize = 1024;\n    let byteCharacters = atob(base64Data);\n    let bytesLength = byteCharacters.length;\n    let slicesCount = Math.ceil(bytesLength / sliceSize);\n    let byteArrays = new Array(slicesCount);\n\n    for (let sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n\n        let begin = sliceIndex * sliceSize;\n        let end = Math.min(begin + sliceSize, bytesLength);\n        let bytes = new Array(end - begin);\n\n        for (let offset = begin, i = 0; offset < end; ++i, ++offset) {\n            bytes[i] = byteCharacters[offset].charCodeAt(0);\n        }\n\n        byteArrays[sliceIndex] = new Uint8Array(bytes);\n    }\n    return new Blob(byteArrays, {type: contentType});\n}\n\nexport function base64StringToBlog(string: string): Blob {\n\n    let block = string.split(\";\");\n    let contentType = block[0].split(\":\")[1];\n    let data = block[1].split(\",\")[1];\n\n    return base64toBlob(data, contentType);\n}\n\n///**\n// *\n// * @param {LonLat} p\n// * @param {LonLat} v1\n// * @param {LonLat} v2\n// * @param {LonLat} v3\n// * @param {Array<Number>} res\n// */\n//export function cartesianToBarycentricLonLat(p, v1, v2, v3, res) {\n\n//    const y2y3 = v2.lat - v3.lat,\n//        x3x2 = v3.lon - v2.lon,\n//        x1x3 = v1.lon - v3.lon,\n//        y1y3 = v1.lat - v3.lat,\n//        y3y1 = v3.lat - v1.lat,\n//        xx3 = p.lon - v3.lon,\n//        yy3 = p.lat - v3.lat;\n\n//    const d = y2y3 * x1x3 + x3x2 * y1y3,\n//        lambda1 = (y2y3 * xx3 + x3x2 * yy3) / d,\n//        lambda2 = (y3y1 * xx3 + x1x3 * yy3) / d;\n\n//    res[0] = lambda1;\n//    res[1] = lambda2;\n//    res[2] = 1 - lambda1 - lambda2;\n\n//    return 0 <= res[0] && res[0] <= 1 && 0 <= lambda1 && lambda1 <= 1 && 0 <= lambda2 && lambda2 <= 1;\n//};\n\n/**\n * Callback throttling\n * @param {any} func\n * @param {Number} limit\n * @param {boolean} [skip]\n */\nexport function throttle(func: Function, limit: number, skip: boolean) {\n    let lastFunc: any;\n    let lastRan: number = 0;\n    return function () {\n        const args = arguments;\n        if (!lastRan) {\n            func.apply(null, args);\n            lastRan = Date.now();\n        } else {\n            if (skip) {\n                clearTimeout(lastFunc);\n            }\n            lastFunc = setTimeout(() => {\n                if (Date.now() - lastRan >= limit) {\n                    func.apply(null, args);\n                    lastRan = Date.now();\n                }\n            }, limit - (Date.now() - lastRan));\n        }\n    };\n}\n\n/**\n *\n * y2-----Q12--------------Q22---\n * |       |     |          |\n * |       |     |          |\n * y-------|-----P----------|----\n * |       |     |          |\n * |       |     |          |\n * |       |     |          |\n * |       |     |          |\n * |       |     |          |\n * y1-----Q11----|---------Q21---\n *         |     |          |\n *         |     |          |\n *         x1    x          x2\n *\n *\n * @param {Number} x -\n * @param {Number} y -\n * @param {Number} fQ11 -\n * @param {Number} fQ21 -\n * @param {Number} fQ12 -\n * @param {Number} fQ22 -\n * @param {Number} [x1=0.0] -\n * @param {Number} [x2=1.0] -\n * @param {Number} [y1=0.0] -\n * @param {Number} [y2=1.0] -\n */\nexport function blerp(\n    x: number, y: number, fQ11: number, fQ21: number, fQ12: number, fQ22: number,\n    x1: number = 0.0, x2: number = 1.0, y1: number = 0.0, y2: number = 1.0): number {\n    return (\n        (fQ11 * (x2 - x) * (y2 - y) +\n            fQ21 * (x - x1) * (y2 - y) +\n            fQ12 * (x2 - x) * (y - y1) +\n            fQ22 * (x - x1) * (y - y1)) /\n        ((x2 - x1) * (y2 - y1))\n    );\n}\n\nexport function blerp2(x: number, y: number, fQ11: number, fQ21: number, fQ12: number, fQ22: number): number {\n    return (\n        fQ11 * (1.0 - x) * (1.0 - y) + fQ21 * x * (1.0 - y) + fQ12 * (1.0 - x) * y + fQ22 * x * y\n    );\n}\n\nexport function extractElevationTiles(rgbaData: number[] | TypedArray, outCurrenElevations: number[] | TypedArray, outChildrenElevations: number[][][] | TypedArray[][]) {\n    let destSize = Math.sqrt(outCurrenElevations.length) - 1;\n    let destSizeOne = destSize + 1;\n    let sourceSize = Math.sqrt(rgbaData.length / 4);\n    let dt = sourceSize / destSize;\n\n    let rightHeigh = 0,\n        bottomHeigh = 0;\n\n    for (\n        let k = 0, currIndex = 0, sourceDataLength = rgbaData.length / 4;\n        k < sourceDataLength;\n        k++\n    ) {\n        let height = rgbaData[k * 4];\n\n        let i = Math.floor(k / sourceSize),\n            j = k % sourceSize;\n\n        let tileX = Math.floor(j / destSize),\n            tileY = Math.floor(i / destSize);\n\n        let destArr = outChildrenElevations[tileY][tileX];\n\n        let ii = i % destSize,\n            jj = j % destSize;\n\n        let destIndex = (ii + tileY) * destSizeOne + jj + tileX;\n\n        destArr[destIndex] = height;\n\n        if ((i + tileY) % dt === 0 && (j + tileX) % dt === 0) {\n            outCurrenElevations[currIndex++] = height;\n        }\n\n        if ((j + 1) % destSize === 0 && j !== sourceSize - 1) {\n            //current tile\n            rightHeigh = rgbaData[(k + 1) * 4];\n            let middleHeight = (height + rightHeigh) * 0.5;\n            destIndex = (ii + tileY) * destSizeOne + jj + 1;\n            destArr[destIndex] = middleHeight;\n\n            if ((i + tileY) % dt === 0) {\n                outCurrenElevations[currIndex++] = middleHeight;\n            }\n\n            //next right tile\n            let rightindex = (ii + tileY) * destSizeOne + ((jj + 1) % destSize);\n            outChildrenElevations[tileY][tileX + 1][rightindex] = middleHeight;\n        }\n\n        if ((i + 1) % destSize === 0 && i !== sourceSize - 1) {\n            //current tile\n            bottomHeigh = rgbaData[(k + sourceSize) * 4];\n            let middleHeight = (height + bottomHeigh) * 0.5;\n            destIndex = (ii + 1) * destSizeOne + jj + tileX;\n            destArr[destIndex] = middleHeight;\n\n            if ((j + tileX) % dt === 0) {\n                outCurrenElevations[currIndex++] = middleHeight;\n            }\n\n            //next bottom tile\n            let bottomindex = ((ii + 1) % destSize) * destSizeOne + jj + tileX;\n            outChildrenElevations[tileY + 1][tileX][bottomindex] = middleHeight;\n        }\n\n        if (\n            (j + 1) % destSize === 0 &&\n            j !== sourceSize - 1 &&\n            (i + 1) % destSize === 0 &&\n            i !== sourceSize - 1\n        ) {\n            //current tile\n            let rightBottomHeight = rgbaData[(k + sourceSize + 1) * 4];\n            let middleHeight = (height + rightHeigh + bottomHeigh + rightBottomHeight) * 0.25;\n            destIndex = (ii + 1) * destSizeOne + (jj + 1);\n            destArr[destIndex] = middleHeight;\n\n            outCurrenElevations[currIndex++] = middleHeight;\n\n            //next right tile\n            let rightindex = (ii + 1) * destSizeOne;\n            outChildrenElevations[tileY][tileX + 1][rightindex] = middleHeight;\n\n            //next bottom tile\n            let bottomindex = destSize;\n            outChildrenElevations[tileY + 1][tileX][bottomindex] = middleHeight;\n\n            //next right bottom tile\n            let rightBottomindex = 0;\n            outChildrenElevations[tileY + 1][tileX + 1][rightBottomindex] = middleHeight;\n        }\n    }\n}\n\nexport type TypedArray =\n    | Int8Array\n    | Uint8Array\n    | Uint8ClampedArray\n    | Int16Array\n    | Uint16Array\n    | Int32Array\n    | Uint32Array\n    | Float32Array\n    | Float64Array;\n\n/**\n * Concatenates two the same type arrays\n * @param {TypedArray} a\n * @param {TypedArray | number[]} b\n */\nexport function concatTypedArrays(a: TypedArray, b: TypedArray | number[]): TypedArray {\n    let c = new (a as any).constructor(a.length + b.length); //hacky\n    c.set(a, 0);\n    c.set(b, a.length);\n    return c;\n}\n\n/**\n * Concatenates two the same  arrays\n * @param {TypedArray | number[]} [a=[]] - First array\n * @param {TypedArray | number[]} [b=[]] - Second array\n * @return {TypedArray | number[]} -\n */\nexport function concatArrays(a: TypedArray | number[] = [], b: TypedArray | number[] = []): TypedArray | number[] {\n    if (ArrayBuffer.isView(a)) {\n        return concatTypedArrays(a as TypedArray, b as TypedArray);\n    } else {\n        for (let i = 0; i < b.length; i++) {\n            a.push(b[i]);\n        }\n        return a;\n    }\n}\n\n/**\n * Convert simple array to typed\n * @param arr {number[]}\n * @param ctor {Float32Array}\n * @returns {TypedArray}\n */\nexport function makeArrayTyped(arr: TypedArray | number[], ctor: Function = Float32Array) {\n    if (!ArrayBuffer.isView(arr)) {\n        const typedArr = new (ctor as any)(arr.length); //hacky\n        typedArr.set(arr, 0);\n        return typedArr;\n    } else {\n        return arr;\n    }\n}\n\n/**\n * Convert typed array to array\n * @param arr {TypedArray | number[]}\n * @returns {number[]}\n */\nexport function makeArray(arr: TypedArray | number[]): number[] {\n    if (ArrayBuffer.isView(arr)) {\n        return Array.from(arr);\n    } else {\n        return arr;\n    }\n}\n\n/**\n *\n * @param {TypedArray | Array} arr\n * @param {Number} starting\n * @param {Number} deleteCount\n * @param {{ result: number[] }} [out]\n */\n\nexport function spliceArray(arr: TypedArray | number[], starting: number, deleteCount: number, out?: { result: number[] } | { result: TypedArray }): TypedArray | number[] {\n    if (ArrayBuffer.isView(arr)) {\n        if (starting < 0) {\n            deleteCount = Math.abs(starting);\n            starting += arr.length;\n        }\n        return spliceTypedArray(arr, starting, deleteCount, out as { result: TypedArray });\n    } else {\n        let res;\n        if (starting < 0) {\n            res = arr.splice(starting);\n        } else {\n            res = arr.splice(starting, deleteCount);\n        }\n        if (out) {\n            out.result = res;\n        }\n        return arr;\n    }\n}\n\n/**\n *\n * @param {TypedArray} arr\n * @param {Number} starting\n * @param {Number} deleteCount\n * @param {{ result: TypedArray }} [out]\n */\nexport function spliceTypedArray<T extends TypedArray>(arr: T, starting: number, deleteCount: number, out?: { result: T }): T {\n    if (arr.length === 0) {\n        return arr;\n    }\n    const newSize = arr.length - deleteCount;\n    const splicedArray = new (arr as any).constructor(newSize); //hacky\n    splicedArray.set(arr.subarray(0, starting));\n    splicedArray.set(arr.subarray(starting + deleteCount), starting);\n    if (out) {\n        out.result = arr.subarray(starting, starting + deleteCount) as T;\n    }\n    return splicedArray;\n}\n\n/**\n * Returns 64-bit triangle coordinate array from inside of the source triangle array.\n * @static\n * @param {TypedArray | number[]} sourceArr - Source array\n * @param {number} gridSize - Source array square matrix size\n * @param {number} i0 - First row index source array matrix\n * @param {number} j0 - First column index\n * @param {number} size - Square matrix result size.\n * @return {Float64Array} Triangle coordinates array from the source array.\n * @TODO: optimization\n */\nexport function getMatrixSubArray64(sourceArr: TypedArray | number[], gridSize: number, i0: number, j0: number, size: number): Float64Array {\n\n    const size_1 = size + 1;\n    const i0size = i0 + size_1;\n    const j0size = j0 + size_1;\n\n    let res = new Float64Array(size_1 * size_1 * 3);\n    let vInd = 0;\n\n    for (let i = i0; i < i0size; i++) {\n        for (let j = j0; j < j0size; j++) {\n\n            let ind = 3 * (i * (gridSize + 1) + j);\n\n            res[vInd++] = sourceArr[ind];\n            res[vInd++] = sourceArr[ind + 1];\n            res[vInd++] = sourceArr[ind + 2];\n        }\n    }\n\n    return res;\n}\n\n/**\n * Returns 32-bit triangle coordinate array from inside of the source triangle array.\n * @static\n * @param {TypedArray | number[]} sourceArr - Source array\n * @param {number} gridSize - Source array square matrix size\n * @param {number} i0 - First row index source array matrix\n * @param {number} j0 - First column index\n * @param {number} size - Square matrix result size.\n * @return {Float32Array} Triangle coordinates array from the source array.\n */\nexport function getMatrixSubArray32(sourceArr: TypedArray | number[], gridSize: number, i0: number, j0: number, size: number): Float32Array {\n\n    const size_1 = size + 1;\n    const i0size = i0 + size_1;\n    const j0size = j0 + size_1;\n\n    let res = new Float32Array(size_1 * size_1 * 3);\n    let vInd = 0;\n\n    for (let i = i0; i < i0size; i++) {\n        for (let j = j0; j < j0size; j++) {\n\n            let ind = 3 * (i * (gridSize + 1) + j);\n\n            res[vInd++] = sourceArr[ind];\n            res[vInd++] = sourceArr[ind + 1];\n            res[vInd++] = sourceArr[ind + 2];\n        }\n    }\n\n    return res;\n}\n\n/**\n * Returns two float32 triangle coordinate arrays from inside of the source triangle array.\n * @static\n * @param {Array.<number>} sourceArr - Source array\n * @param {number} gridSize - Source array square matrix size\n * @param {number} i0 - First row index source array matrix\n * @param {number} j0 - First column index\n * @param {number} size - Square matrix result size.\n * @param {object} outBounds - Output bounds.\n * @return{Array.<number>} Triangle coordinates array from the source array.\n * @TODO: optimization\n */\nexport function getMatrixSubArrayBoundsExt(\n    sourceArr: TypedArray | number[],\n    sourceArrHigh: TypedArray | number[],\n    sourceArrLow: TypedArray | number[],\n    noDataVertices: TypedArray | number[] | undefined,\n    gridSize: number,\n    i0: number,\n    j0: number,\n    size: number,\n    outArr: TypedArray | number[],\n    outArrHigh: TypedArray | number[],\n    outArrLow: TypedArray | number[],\n    outBounds: any,\n    outNoDataVertices: TypedArray | number[]\n) {\n    const i0size = i0 + size + 1;\n    const j0size = j0 + size + 1;\n\n    gridSize += 1;\n\n    let vInd = 0,\n        nInd = 0;\n\n    for (let i = i0; i < i0size; i++) {\n        for (let j = j0; j < j0size; j++) {\n            let indBy3 = i * gridSize + j,\n                ind = 3 * indBy3;\n\n            let x = sourceArr[ind],\n                y = sourceArr[ind + 1],\n                z = sourceArr[ind + 2];\n\n            if (!noDataVertices || noDataVertices[indBy3] === 0) {\n                if (x < outBounds.xmin) outBounds.xmin = x;\n                if (x > outBounds.xmax) outBounds.xmax = x;\n                if (y < outBounds.ymin) outBounds.ymin = y;\n                if (y > outBounds.ymax) outBounds.ymax = y;\n                if (z < outBounds.zmin) outBounds.zmin = z;\n                if (z > outBounds.zmax) outBounds.zmax = z;\n            } else {\n                outNoDataVertices[nInd] = 1;\n            }\n\n            nInd++;\n\n            outArr[vInd] = x;\n            outArrLow[vInd] = sourceArrLow[ind];\n            outArrHigh[vInd++] = sourceArrHigh[ind];\n\n            outArr[vInd] = y;\n            outArrLow[vInd] = sourceArrLow[ind + 1];\n            outArrHigh[vInd++] = sourceArrHigh[ind + 1];\n\n            outArr[vInd] = z;\n            outArrLow[vInd] = sourceArrLow[ind + 2];\n            outArrHigh[vInd++] = sourceArrHigh[ind + 2];\n        }\n    }\n}\n\nexport function cloneArray(items: any[]): any[] {\n    return items.map((item) => (Array.isArray(item) ? cloneArray(item) : item));\n}\n\n/**\n * Promise for load images\n * @function\n * @param {string} url - link to image.\n * @returns {Promise<Image>} Returns promise.\n */\nexport async function loadImage(url: string): Promise<HTMLImageElement> {\n    return new Promise<HTMLImageElement>(resolve => {\n        const image = new Image();\n        image.addEventListener('load', () => {\n            resolve(image);\n        });\n        image.src = url;\n        image.crossOrigin = \"\"\n        return image;\n    });\n}\n\n/**\n * Gets image is loaded\n * @param {HTMLImageElement} image\n * @returns {boolean} Returns true is the image is loaded\n */\nexport function isImageLoaded(image: HTMLImageElement): boolean {\n    return image.complete && image.naturalHeight !== 0;\n}\n\nexport function distanceFormat(v: number): string {\n    if (v > 1000) {\n        return `${(v / 1000).toFixed(1)} km`;\n    } else if (v > 9) {\n        return `${Math.round(v)} m`;\n    } else {\n        return `${v.toFixed(1)} m`;\n    }\n}\n\nexport function getUrlParam(paramName: string): number | undefined {\n    let urlParams = new URLSearchParams(location.search);\n    let param = urlParams.get(paramName);\n    if (param) {\n        return Number(param);\n    }\n}\n","import {binarySearch} from \"../utils/shared\";\n\nexport type JulianDate = number;\n\n/**\n * Seconds in millisecond.\n * @const\n */\nexport const SECONDS_PER_MILLISECOND = 0.001;\n\n/**\n * Milliseconds in second.\n * @const\n */\nexport const MILLISECONDS_PER_SECOND = 1000.0;\n\n/**\n * Seconds in minute.\n * @const\n */\nexport const SECONDS_PER_MINUTE = 60.0;\n\n/**\n * One by seconds in minute.\n * @const\n */\nexport const ONE_BY_SECONDS_PER_MINUTE = 1.0 / SECONDS_PER_MINUTE;\n\n/**\n * Minutes in hour.\n * @const\n */\nexport const MINUTES_PER_HOUR = 60.0;\n\n/**\n * Hours in day.\n * @const\n */\nexport const HOURS_PER_DAY = 24.0;\n\n/**\n * One by hours in day.\n * @const\n */\nexport const ONE_BY_HOURS_PER_DAY = 1.0 / HOURS_PER_DAY;\n\n/**\n * Seconds in hour.\n * @const\n */\nexport const SECONDS_PER_HOUR = 3600.0;\n\n/**\n * One by seconds in hour.\n * @const\n */\nexport const ONE_BY_SECONDS_PER_HOUR = 1.0 / SECONDS_PER_HOUR;\n\n/**\n * Seconds in 12 hours.\n * @const\n */\nexport const SECONDS_PER_12_HOURS = 12.0 * SECONDS_PER_HOUR;\n\n/**\n * Minutes in day.\n * @const\n */\nexport const MINUTES_PER_DAY = 1440.0;\n\n/**\n * One by minutes in day.\n * @const\n */\nexport const ONE_BY_MINUTES_PER_DAY = 1.0 / MINUTES_PER_DAY;\n\n/**\n * Seconds in day.\n * @const\n */\nexport const SECONDS_PER_DAY = 86400.0;\n\n/**\n * Milliseconds in day.\n * @const\n */\nexport const MILLISECONDS_PER_DAY = 86400000.0;\n\n/**\n * One by milliseconds in day.\n * @const\n */\nexport const ONE_BY_MILLISECONDS_PER_DAY = 1.0 / MILLISECONDS_PER_DAY;\n\n/**\n * One by seconds in day.\n * @const\n */\nexport const ONE_BY_SECONDS_PER_DAY = 1.0 / SECONDS_PER_DAY;\n\n/**\n * Days in julian century.\n * @const\n */\nexport const DAYS_PER_JULIAN_CENTURY = 36525.0;\n\n/**\n * Days in julian year.\n * @const\n */\nexport const DAYS_PER_JULIAN_YEAR = 365.25;\n\n/**\n * Seconds in picoseconds.\n * @const\n */\nexport const PICOSECOND = 0.000000001;\n\n/**\n * Modified julian date difference.\n * @const\n */\nexport const MODIFIED_JULIAN_DATE_DIFFERENCE = 2400000.5;\n\n/**\n * Julian date of 2000 year. Epoch.\n * @const\n */\nexport const J2000 = 2451545.0;\n\n/**\n * Returns julian days from Epoch.\n * @param {JulianDate} jd - Julian date.\n * @returns {number} Days from epoch\n */\nexport function T(jd: JulianDate): number {\n    return (jd - J2000) / DAYS_PER_JULIAN_CENTURY;\n}\n\n/**\n * Gets the date's julian day.\n * @param {number} year - Year.\n * @param {number} month - Month.\n * @param {number} day - Day.\n * @returns {number} Day number\n */\nexport function getDayNumber(year: number, month: number, day: number): number {\n    let a = ((month - 14) / 12) | 0;\n    let b = year + 4800 + a;\n    return (\n        (((1461 * b) / 4) | 0) +\n        (((367 * (month - 2 - 12 * a)) / 12) | 0) -\n        (((3 * (((b + 100) / 100) | 0)) / 4) | 0) +\n        day -\n        32075\n    );\n}\n\n/**\n * Converts javascript date to the universal(UTC) julian date.\n * @param {Date} date - Date.\n * @returns {JulianDate} UTC julian date\n */\nexport function DateToUTC(date: Date): JulianDate {\n    let dayNumber = getDayNumber(date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate());\n\n    let hour = date.getUTCHours() - 12;\n    if (hour < 0) {\n        hour += 24;\n    }\n\n    let secondsOfDay =\n        date.getUTCSeconds() +\n        hour * SECONDS_PER_HOUR +\n        date.getUTCMinutes() * SECONDS_PER_MINUTE +\n        date.getUTCMilliseconds() * SECONDS_PER_MILLISECOND;\n\n    if (secondsOfDay >= SECONDS_PER_12_HOURS) {\n        dayNumber--;\n    }\n\n    let extraDays = (secondsOfDay * ONE_BY_SECONDS_PER_DAY) | 0;\n    dayNumber += extraDays;\n    secondsOfDay -= SECONDS_PER_DAY * extraDays;\n\n    if (secondsOfDay < 0) {\n        dayNumber--;\n        secondsOfDay += SECONDS_PER_DAY;\n    }\n\n    return dayNumber + secondsOfDay * ONE_BY_SECONDS_PER_DAY;\n}\n\n/**\n * Converts javascript date to the atomic(TAI) julian date.\n * @param {Date} date - Date.\n * @returns {JulianDate} TAI julian date\n */\nexport function DateToTAI(date: Date): JulianDate {\n    return UTCtoTAI(DateToUTC(date));\n}\n\n/**\n * Converts coordinated universal(UTC) julian date to atomic(TAI) julian date.\n * @param {JulianDate} jd - UTC julian date.\n * @returns {JulianDate} TAI julian date\n */\nexport function UTCtoTAI(jd: JulianDate): JulianDate {\n    let leapSeconds = leapSecondsTable;\n\n    let index = binarySearch(leapSeconds, jd, function (a: number, b: LeapSeconds) {\n        return a - b.jd;\n    });\n\n    if (index < 0) {\n        index = ~index;\n    }\n\n    if (index >= leapSeconds.length) {\n        index = leapSeconds.length - 1;\n    }\n\n    let offset = leapSeconds[index].leapSeconds;\n\n    if (index !== 0) {\n        if ((leapSeconds[index].jd - jd) * SECONDS_PER_DAY > offset) {\n            offset = leapSeconds[index - 1].leapSeconds;\n        }\n    }\n\n    return jd + offset * ONE_BY_SECONDS_PER_DAY;\n}\n\n/**\n * Converts atomic julian date(TAI) to the coordinated universal(UTC) julian date.\n * @param {JulianDate} tai - TAI julian date.\n * @returns {JulianDate | undefined} UTC julian date\n */\nexport function TAItoUTC(tai: JulianDate): JulianDate | undefined {\n    let leapSeconds = leapSecondsTable;\n    let index = binarySearch(leapSeconds, tai, function (a: JulianDate, b: LeapSeconds) {\n        return a - b.jd;\n    });\n\n    if (index < 0) {\n        index = ~index;\n    }\n\n    if (index >= leapSeconds.length) {\n        return tai - leapSeconds[index - 1].leapSeconds * ONE_BY_SECONDS_PER_DAY;\n    }\n\n    if (index === 0) {\n        return tai - leapSeconds[0].leapSeconds * ONE_BY_SECONDS_PER_DAY;\n    }\n\n    let diff = (leapSeconds[index].jd - tai) * SECONDS_PER_DAY;\n\n    if (diff === 0) {\n        return tai - leapSeconds[index].leapSeconds * ONE_BY_SECONDS_PER_DAY;\n    }\n\n    if (diff <= 1.0) {\n        return;\n    }\n\n    return tai - leapSeconds[index - 1].leapSeconds * ONE_BY_SECONDS_PER_DAY;\n}\n\n/**\n * Converts UTC julian date to the javascript date object.\n * @param {JulianDate} utc - UTC julian date.\n * @returns {Date} JavaScript Date object\n */\nexport function UTCtoDate(utc: JulianDate): Date {\n    let julianDayNumber = utc | 0;\n    let secondsOfDay = (utc - julianDayNumber) * SECONDS_PER_DAY;\n\n    if (secondsOfDay >= SECONDS_PER_12_HOURS) {\n        julianDayNumber++;\n    }\n\n    let L = (julianDayNumber + 68569) | 0;\n    let N = ((4 * L) / 146097) | 0;\n    L = (L - (((146097 * N + 3) / 4) | 0)) | 0;\n    let I = ((4000 * (L + 1)) / 1461001) | 0;\n    L = (L - (((1461 * I) / 4) | 0) + 31) | 0;\n    let J = ((80 * L) / 2447) | 0;\n    let day = (L - (((2447 * J) / 80) | 0)) | 0;\n    L = (J / 11) | 0;\n    let month = (J + 2 - 12 * L) | 0;\n    let year = (100 * (N - 49) + I + L) | 0;\n\n    let hour = (secondsOfDay * ONE_BY_SECONDS_PER_HOUR) | 0;\n    let remainingSeconds = secondsOfDay - hour * SECONDS_PER_HOUR;\n    let minute = (remainingSeconds * ONE_BY_SECONDS_PER_MINUTE) | 0;\n    remainingSeconds = remainingSeconds - minute * SECONDS_PER_MINUTE;\n    let second = remainingSeconds | 0;\n    let millisecond = ((remainingSeconds - second) * MILLISECONDS_PER_SECOND) | 0;\n\n    hour += 12;\n    if (hour > 23) {\n        hour -= 24;\n    }\n\n    return new Date(Date.UTC(year, month - 1, day, hour, minute, second, millisecond));\n}\n\n/**\n * Converts TAI julian date to the javascript date object.\n * @param {JulianDate} tai - TAI julian date.\n * @returns {Date} JavaScript Date object\n */\nexport function TAItoDate(tai: JulianDate): Date {\n    let utc = TAItoUTC(tai);\n    if (!utc) {\n        utc = TAItoUTC(addSeconds(tai, -1))!;\n        console.trace(`TAItoDate - can't convert ${tai.toString()} to utc.`);\n    }\n\n    return UTCtoDate(utc);\n}\n\n/**\n * Adds milliseconds to the julian date.\n * @param {JulianDate} jd - Julian date.\n * @param {number} milliseconds - Milliseconds to add.\n * @returns {JulianDate} Julian date\n */\nexport function addMilliseconds(jd: JulianDate, milliseconds: number): JulianDate {\n    return jd + milliseconds * ONE_BY_MILLISECONDS_PER_DAY;\n}\n\n/**\n * Adds seconds to the julian date.\n * @param {JulianDate} jd - Julian date.\n * @param {number} seconds - Seconds to add.\n * @returns {JulianDate} Julian date\n */\nexport function addSeconds(jd: JulianDate, seconds: number): JulianDate {\n    return jd + seconds * ONE_BY_SECONDS_PER_DAY;\n}\n\n/**\n * Adds hours to the julian date.\n * @param {JulianDate} jd - Julian date.\n * @param {number} hours - Hours to add.\n * @returns {JulianDate} Julian date\n */\nexport function addHours(jd: JulianDate, hours: number): JulianDate {\n    return jd + hours * ONE_BY_HOURS_PER_DAY;\n}\n\n/**\n * Adds minutes to the julian date.\n * @param {JulianDate} jd - Julian date.\n * @param {number} minutes - Minutes to add.\n * @returns {JulianDate} Julian date\n */\nexport function addMinutes(jd: JulianDate, minutes: number): JulianDate {\n    return jd + minutes * MINUTES_PER_DAY;\n}\n\n/**\n * Adds days to the julian date.\n * @param {JulianDate} jd - Julian date.\n * @param {number} days - Days to add.\n * @returns {JulianDate} Julian date\n */\nexport function addDays(jd: JulianDate, days: number): JulianDate {\n    return jd + days;\n}\n\n/**\n * Gets milliseconds of a julian date.\n * @param {JulianDate} jd - julian date.\n * @returns {number} Milliseconds\n */\nexport function getMilliseconds(jd: JulianDate): number {\n    let s = jd - (jd | 0);\n    s *= SECONDS_PER_DAY;\n    return ((s - (s | 0)) * MILLISECONDS_PER_SECOND) | 0;\n}\n\n/**\n * Gets seconds of a julian date.\n * @param {JulianDate} jd - julian date.\n * @returns {number} Seconds\n */\nexport function getSeconds(jd: JulianDate): number {\n    let s = jd - (jd | 0);\n    return s * SECONDS_PER_DAY;\n}\n\n/**\n * Gets hours of a julian date.\n * @param {JulianDate} jd - julian date.\n * @returns {number} Hours\n */\nexport function getHours(jd: JulianDate): number {\n    let julianDayNumber = jd | 0;\n    let secondsOfDay = (jd - julianDayNumber) * SECONDS_PER_DAY;\n\n    let hour = (secondsOfDay * ONE_BY_SECONDS_PER_HOUR) | 0;\n    let remainingSeconds = secondsOfDay - hour * SECONDS_PER_HOUR;\n    let minute = (remainingSeconds * ONE_BY_SECONDS_PER_MINUTE) | 0;\n    remainingSeconds = remainingSeconds - minute * SECONDS_PER_MINUTE;\n    let second = remainingSeconds | 0;\n    let millisecond = ((remainingSeconds - second) * MILLISECONDS_PER_SECOND) | 0;\n\n    hour += 12 + minute / 60 + second / 3600 + millisecond / 1000;\n    if (hour > 23) {\n        hour -= 24;\n    }\n\n    return hour;\n}\n\n/**\n * Gets minutes of a julian date.\n * @param {JulianDate} jd - julian date.\n * @returns {number} Minutes\n */\nexport function getMinutes(jd: JulianDate): number {\n    let s = jd - (jd | 0);\n    return (s * MINUTES_PER_DAY) | 0;\n}\n\n/**\n * Gets days of a julian date.\n * @param {JulianDate} jd - julian date.\n * @returns {number} Days\n */\nexport function getDays(jd: JulianDate): number {\n    return jd | 0;\n}\n\n/**\n * Returns days in seconds.\n * @param {number} s - Seconds.\n * @returns {number} Days\n */\nexport function secondsToDays(s: number): number {\n    return s * ONE_BY_SECONDS_PER_DAY;\n}\n\n/**\n * Returns seconds in days.\n * @param {number} d - Days.\n * @returns {number} Seconds\n */\nexport function daysToSeconds(d: number): number {\n    return d * SECONDS_PER_DAY;\n}\n\ntype LeapSeconds = { jd: JulianDate, leapSeconds: number };\n\nfunction __ls(jd: JulianDate, leapSeconds: number): LeapSeconds {\n    return {\n        jd: jd,\n        leapSeconds: leapSeconds\n    };\n}\n\nconst leapSecondsTable: LeapSeconds[] = [\n    __ls(2441317.5, 10.0), // 1972-01-01T00:00:00.000Z\n    __ls(2441499.5, 11.0), // 1972-07-01T00:00:00.000Z\n    __ls(2441683.5, 12.0), // 1973-01-01T00:00:00.000Z\n    __ls(2442048.5, 13.0), // 1974-01-01T00:00:00.000Z\n    __ls(2442413.5, 14.0), // 1975-01-01T00:00:00.000Z\n    __ls(2442778.5, 15.0), // 1976-01-01T00:00:00.000Z\n    __ls(2443144.5, 16.0), // 1977-01-01T00:00:00.000Z\n    __ls(2443509.5, 17.0), // 1978-01-01T00:00:00.000Z\n    __ls(2443874.5, 18.0), // 1979-01-01T00:00:00.000Z\n    __ls(2444239.5, 19.0), // 1980-01-01T00:00:00.000Z\n    __ls(2444786.5, 20.0), // 1981-07-01T00:00:00.000Z\n    __ls(2445151.5, 21.0), // 1982-07-01T00:00:00.000Z\n    __ls(2445516.5, 22.0), // 1983-01-01T00:00:00.000Z\n    __ls(2446247.5, 23.0), // 1985-07-01T00:00:00.000Z\n    __ls(2447161.5, 24.0), // 1988-01-01T00:00:00.000Z\n    __ls(2447892.5, 25.0), // 1990-01-01T00:00:00.000Z\n    __ls(2448257.5, 26.0), // 1991-01-01T00:00:00.000Z\n    __ls(2448804.5, 27.0), // 1992-07-01T00:00:00.000Z\n    __ls(2449169.5, 28.0), // 1993-07-01T00:00:00.000Z\n    __ls(2449534.5, 29.0), // 1994-07-01T00:00:00.000Z\n    __ls(2450083.5, 30.0), // 1996-01-01T00:00:00.000Z\n    __ls(2450630.5, 31.0), // 1997-07-01T00:00:00.000Z\n    __ls(2451179.5, 32.0), // 1999-01-01T00:00:00.000Z\n    __ls(2453736.5, 33.0), // 2006-01-01T00:00:00.000Z\n    __ls(2454832.5, 34.0), // 2009-01-01T00:00:00.000Z\n    __ls(2456109.5, 35.0), // 2012-07-01T00:00:00.000Z\n    __ls(2457204.5, 36.0) // 2015-07-01T00:00:00.000Z\n];\n\nexport const J2000TAI = UTCtoTAI(J2000);\n","import {Vec3} from \"../math/Vec3\";\nimport {NumberArray6} from \"./Sphere\";\nimport {Ellipsoid} from \"../ellipsoid/Ellipsoid\";\nimport {Extent} from \"../Extent\";\n\ntype Vec3Array8 = [Vec3, Vec3, Vec3, Vec3, Vec3, Vec3, Vec3, Vec3];\n\n/**\n * Bounding box class.\n * @class\n * @param {NumberArray6} [boundsArr]\n */\nclass Box {\n\n    /**\n     * Vertices array.\n     * @public\n     * @type{Array.<Vec3>}\n     */\n    public vertices: Vec3Array8\n\n    constructor(boundsArr?: NumberArray6) {\n\n        this.vertices = [\n            new Vec3(),\n            new Vec3(),\n            new Vec3(),\n            new Vec3(),\n            new Vec3(),\n            new Vec3(),\n            new Vec3(),\n            new Vec3()\n        ];\n\n        if (boundsArr) {\n            this.setFromBoundsArr(boundsArr);\n        }\n    }\n\n    public copy(bbox: Box) {\n        for (let i = 0, len = this.vertices.length; i < len; i++) {\n            this.vertices[i].copy(bbox.vertices[i]);\n        }\n    }\n\n    /**\n     * Sets bounding box coordinates by the bounds array.\n     * @param {NumberArray6} bounds - Bounds is an array where [minX, minY, minZ, maxX, maxY, maxZ]\n     */\n    public setFromBoundsArr(bounds: NumberArray6) {\n        let xmin = bounds[0],\n            xmax = bounds[3],\n            ymin = bounds[1],\n            ymax = bounds[4],\n            zmin = bounds[2],\n            zmax = bounds[5];\n\n        let v = this.vertices;\n\n        v[0].set(xmin, ymin, zmin);\n        v[1].set(xmax, ymin, zmin);\n        v[2].set(xmax, ymin, zmax);\n        v[3].set(xmin, ymin, zmax);\n        v[4].set(xmin, ymax, zmin);\n        v[5].set(xmax, ymax, zmin);\n        v[6].set(xmax, ymax, zmax);\n        v[7].set(xmin, ymax, zmax);\n    }\n\n    /**\n     * Sets bounding box coordinates by ellipsoid geodetic extend.\n     * @param {Ellipsoid} ellipsoid - Ellipsoid.\n     * @param {Extent} extent - Geodetic extent.\n     */\n    public setFromExtent(ellipsoid: Ellipsoid, extent: Extent) {\n        this.setFromBoundsArr(extent.getCartesianBounds(ellipsoid));\n    }\n}\n\nexport {Box};\n\n","import {Vec3} from \"../math/Vec3\";\nimport {Ellipsoid} from \"../ellipsoid/Ellipsoid\";\nimport {Extent} from \"../Extent\";\n\nexport type NumberArray6 = [number, number, number, number, number, number];\n\n/**\n * Bounding sphere class.\n * @class\n * @param {Number} [radius] - Bounding sphere radius.\n * @param {Vec3} [center] - Bounding sphere coordinates.\n */\nclass Sphere {\n    /**\n     * Sphere radius.\n     * @public\n     * @type {Number}\n     */\n    public radius: number;\n\n    /**\n     * Sphere coordinates.\n     * @public\n     * @type {Vec3}\n     */\n    public center: Vec3;\n\n    constructor(radius: number = 0, center?: Vec3) {\n\n        this.radius = radius;\n\n        this.center = center ? center.clone() : new Vec3();\n    }\n\n    /**\n     * Sets bounding sphere coordinates by the bounds array.\n     * @param {Array.<number>} bounds - Bounds is an array where [minX, minY, minZ, maxX, maxY, maxZ]\n     */\n    public setFromBounds(bounds: NumberArray6) {\n        let m = new Vec3(bounds[0], bounds[1], bounds[2]);\n        this.center.set(\n            m.x + (bounds[3] - m.x) * 0.5,\n            m.y + (bounds[3] - m.y) * 0.5,\n            m.z + (bounds[5] - m.z) * 0.5\n        );\n        this.radius = this.center.distance(m);\n    }\n\n    /**\n     * Sets bounding sphere coordinates by ellipsoid geodetic extend.\n     * @param {Ellipsoid} ellipsoid - Ellipsoid.\n     * @param {Extent} extent - Geodetic extent.\n     */\n    public setFromExtent(ellipsoid: Ellipsoid, extent: Extent) {\n        this.setFromBounds(extent.getCartesianBounds(ellipsoid));\n    }\n}\n\nexport {Sphere};\n","import {binaryInsert, stamp} from \"./utils/shared\";\n\nexport type EventCallback = (((...args: any[]) => boolean) | ((...args: any[]) => void));\n\nexport type EventCallbackStamp = EventCallback & { _openglobus_id?: number; _openglobus_priority?: number };\n\ntype EventCallbacks = Array<EventCallback>;\ntype EventCallbackHandler = { active: boolean; handlers: EventCallbacks };\n\nexport type EventsMap<T extends string[]> = {\n    [K in T[number]]?: EventCallbackHandler\n}\n\nexport type EventsHandler<T extends string[]> = Events<T> & EventsMap<T>;\n\nexport function createEvents<T extends string[]>(methodNames: T, sender?: any) {\n    return new Events(methodNames, sender) as EventsHandler<T>;\n}\n\n/**\n * Base events class to handle custom events.\n * @class\n * @param {Array.<string>} [eventNames] - Event names that could be dispatched.\n * @param {*} [sender]\n */\nexport class Events<T extends string[]> {\n\n    static __counter__: number = 0;\n\n    protected __id: number;\n\n    /**\n     * Registered event names.\n     * @protected\n     * @type {T}\n     */\n    protected _eventNames: T;\n\n    protected _sender: any;\n\n    /**\n     * Stop propagation flag\n     * @protected\n     * @type {boolean}\n     */\n    protected _stopPropagation: boolean;\n    protected _stampCache: any;\n\n    constructor(eventNames: T, sender?: any) {\n\n        this.__id = Events.__counter__++;\n\n        this._eventNames = [] as any;\n\n        eventNames && this.registerNames(eventNames);\n\n        this._sender = sender || this;\n\n        this._stopPropagation = false;\n\n        this._stampCache = {};\n    }\n\n    public bindSender(sender?: any) {\n        this._sender = sender || this;\n    }\n\n    /**\n     * Function that creates event object properties that would be dispatched.\n     * @public\n     * @param {Array.<string>} eventNames - Specified event names list.\n     */\n    public registerNames(eventNames: T): this {\n        for (let i = 0; i < eventNames.length; i++) {\n            (this as any)[eventNames[i]] = {\n                active: true,\n                handlers: []\n            };\n            this._eventNames.push(eventNames[i]);\n        }\n        return this;\n    }\n\n    protected _getStamp(name: string, id: number, ogid: number) {\n        return `${name}_${id}_${ogid}`;\n    }\n\n    /**\n     * Returns true if event callback has stamped.\n     * @protected\n     * @param {Object} name - Event identifier.\n     * @param {Object} obj - Event callback.\n     * @return {boolean} -\n     */\n    protected _stamp(name: string, obj: any) {\n        let ogid = stamp(obj);\n        let st = this._getStamp(name, this.__id, ogid);\n\n        if (!this._stampCache[st]) {\n            this._stampCache[st] = ogid;\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Attach listener.\n     * @public\n     * @param {string} name - Event name to listen.\n     * @param {EventCallback} callback - Event callback function.\n     * @param {any} [sender] - Event callback function owner.\n     * @param {number} [priority] - Priority of event callback.\n     */\n    public on(name: string, callback: EventCallback, sender?: any, priority: number = 0) {\n        if (this._stamp(name, callback)) {\n            if ((this as any)[name]) {\n                let c = callback.bind(sender || this._sender) as EventCallbackStamp;\n                c._openglobus_id = (callback as EventCallbackStamp)._openglobus_id;\n                c._openglobus_priority = priority;\n                binaryInsert((this as any)[name].handlers, c, (a: EventCallbackStamp, b: EventCallbackStamp) => {\n                    return (b._openglobus_priority || 0) - (a._openglobus_priority || 0);\n                });\n            }\n        }\n    }\n\n    /**\n     * Stop listening event name with specified callback function.\n     * @public\n     * @param {string} name - Event name.\n     * @param {EventCallback | null} callback - Attached  event callback.\n     */\n    public off(name: string, callback?: EventCallback | null) {\n        if (callback) {\n            let st = this._getStamp(name, this.__id, (callback as EventCallbackStamp)._openglobus_id!);\n            if ((callback as EventCallbackStamp)._openglobus_id && this._stampCache[st]) {\n                let h = (this as any)[name].handlers;\n                let i = h.length;\n                let indexToRemove = -1;\n                while (i--) {\n                    let hi = h[i];\n                    if (hi._openglobus_id === (callback as EventCallbackStamp)._openglobus_id) {\n                        indexToRemove = i;\n                        break;\n                    }\n                }\n\n                if (indexToRemove !== -1) {\n                    h.splice(indexToRemove, 1);\n                    this._stampCache[st] = undefined;\n                    delete this._stampCache[st];\n                }\n            }\n        }\n    }\n\n    /**\n     * Dispatch event.\n     * @public\n     * @param {EventCallbackHandler} event - Event instance property that created by event name.\n     * @param {Object} [args] - Callback parameters.\n     */\n    public dispatch(event: EventCallbackHandler | undefined, ...args: any[]) {\n        let result = true;\n        if (event && event.active && !this._stopPropagation) {\n            let h = event.handlers.slice(0),\n                i = h.length;\n            while (i--) {\n                if ((h[i] as any)(...args) === false) {\n                    result = false;\n                }\n            }\n        }\n        this._stopPropagation = false;\n        return result;\n    }\n\n    /**\n     * Brakes events propagation.\n     * @public\n     */\n    public stopPropagation() {\n        this._stopPropagation = true;\n    }\n\n    /**\n     * Removes all events.\n     * @public\n     */\n    public clear() {\n        for (let i = 0; i < this._eventNames.length; i++) {\n            let e = (this as any)[this._eventNames[i]];\n            e.handlers.length = 0;\n            e.handlers = [];\n        }\n        this._eventNames.length = 0;\n        this._eventNames = [] as any;\n    }\n}\n","import {createEvents, EventsHandler} from '../Events';\nimport {parseHTML, stringTemplate} from '../utils/shared';\n\nexport interface IViewParams {\n    model?: any;\n    template?: string;\n    parent?: View<any> | null;\n    classList?: string[];\n}\n\nexport type ViewEventsList = [\"render\"];\nconst VIEW_EVENTS: ViewEventsList = [\"render\"];\n\nclass View<M> {\n\n    static __counter__: number = 0;\n\n    protected __id: number;\n\n    public events: EventsHandler<ViewEventsList>;\n\n    public model: M;\n\n    public template: string;\n\n    public parent: View<any> | null;\n\n    public el: HTMLElement | null;\n\n    protected _classList: string[];\n\n    constructor(options: IViewParams = {}) {\n        this.__id = View.__counter__++;\n        this.events = createEvents<ViewEventsList>(VIEW_EVENTS);\n        this.model = options.model || null;\n        this.template = options.template || \"\";\n        this.parent = options.parent || null;\n        this._classList = options.classList || [];\n        this.el = null;\n    }\n\n    static getHTML(template: string, params: any): string {\n        return stringTemplate(template, params);\n    }\n\n    static parseHTML(htmlStr: string): HTMLElement[] {\n        return parseHTML(htmlStr);\n    }\n\n    static insertAfter(newNodes: HTMLElement | HTMLElement[], referenceNode: Node): HTMLElement[] {\n        if (!Array.isArray(newNodes)) {\n            newNodes = [newNodes];\n        }\n        for (let i = 0; i < newNodes.length; i++) {\n            if (referenceNode.parentNode) {\n                referenceNode.parentNode.insertBefore(newNodes[i], referenceNode.nextSibling);\n            }\n        }\n        return newNodes;\n    }\n\n    static insertBefore(newNodes: HTMLElement | HTMLElement[], referenceNode: Node): HTMLElement[] {\n        if (!Array.isArray(newNodes)) {\n            newNodes = [newNodes];\n        }\n        for (let i = 0; i < newNodes.length; i++) {\n            if (referenceNode.parentNode) {\n                referenceNode.parentNode.insertBefore(newNodes[i], referenceNode);\n            }\n        }\n        return newNodes;\n    }\n\n    public insertBefore(view: View<any> | HTMLElement) {\n        if (!this.el) {\n            this.render();\n        }\n        if (this.el) {\n            if (view instanceof HTMLElement && view.parentNode) {\n                View.insertBefore(this.el, view);\n            }\n            if (view instanceof View && view.el && view.el.parentNode) {\n                View.insertBefore(this.el, view.el);\n            }\n        }\n    }\n\n    public insertAfter(view: View<any> | HTMLElement) {\n        if (!this.el) {\n            this.render();\n        }\n        if (this.el) {\n            if (view instanceof HTMLElement && view.parentNode) {\n                View.insertAfter(this.el, view);\n            }\n            if (view instanceof View && view.el && view.el.parentNode) {\n                View.insertAfter(this.el, view.el);\n            }\n        }\n    }\n\n    public isEqual(view: View<any>): boolean {\n        return view.__id === this.__id;\n    }\n\n    public appendTo(node: HTMLElement, clean: boolean = false, firstPosition: boolean = false) {\n        if (node) {\n            if (!this.el) {\n                this.beforeRender(node);\n                this.render();\n            }\n\n            if (this.el && this.el.parentNode) {\n                this.el.parentNode.removeChild(this.el);\n            }\n\n            if (clean) {\n                node.innerHTML = \"\";\n            }\n\n            if (this.el) {\n                if (firstPosition) {\n                    if (node.childNodes[0]) {\n                        View.insertBefore(this.el, node.childNodes[0]);\n                    } else {\n                        node.appendChild(this.el);\n                    }\n                } else {\n                    node.appendChild(this.el);\n                }\n            }\n            this.afterRender(node);\n        }\n\n        return this;\n    }\n\n    public afterRender(parentNode: HTMLElement) {\n    }\n\n    public beforeRender(parentNode: HTMLElement) {\n    }\n\n    public stopPropagation() {\n        this.events.stopPropagation();\n    }\n\n    public renderTemplate(params: any): HTMLElement {\n        return View.parseHTML(View.getHTML(this.template, params || {}))[0];\n    }\n\n    public render(params?: any): this {\n        this.el = this.renderTemplate(params);\n        for (let i = 0, len = this._classList.length; i < len; i++) {\n            this.el.classList.add(this._classList[i]);\n        }\n        this.events.dispatch(this.events.render, this);\n        return this;\n    }\n\n    public select<T extends HTMLElement>(queryStr: string): T | null {\n        if (this.el) {\n            return this.el.querySelector<T>(queryStr);\n        }\n        return null as T | null;\n    }\n\n    public selectRemove(queryStr: string): HTMLElement | undefined {\n        if (this.el) {\n            let r = this.select(queryStr);\n            if (r && r.parentNode) {\n                r.parentNode.removeChild(r);\n                return r;\n            }\n        }\n    }\n\n    public selectAll(queryStr: string, callback?: Function) {\n        if (this.el) {\n            const res = this.el.querySelectorAll(queryStr);\n            if (callback) {\n                for (let i = 0, len = res.length; i < len; i++) {\n                    callback(res[i], i);\n                }\n            }\n            return res;\n        }\n    }\n\n    public remove() {\n        if (this.el && this.el.parentNode) {\n            this.el.parentNode.removeChild(this.el);\n        }\n    }\n}\n\nexport {View};\n","import {stringTemplate} from '../utils/shared';\nimport {IViewParams, View, ViewEventsList} from './View';\nimport {EventsHandler} from \"../Events\";\n\nconst TEMPLATE =\n    `<div class=\"og-button\" title=\"{title}\">\n       <div class=\"og-button-icon\">{icon}</div>\n       <div class=\"og-button-text\">{text}</div>\n    </div>`;\n\ninterface HTMLElementExt extends HTMLElement {\n    __og_button__: Button;\n}\n\nexport type ButtonEventsList = [\"click\", \"mousedown\", \"mouseup\", \"touchstart\", \"touchend\", \"touchcancel\"];\n\nconst BUTTON_EVENTS: ButtonEventsList = [\"click\", \"mousedown\", \"mouseup\", \"touchstart\", \"touchend\", \"touchcancel\"];\n\nexport interface IButtonParams extends IViewParams {\n    icon?: string;\n    text?: string;\n    title?: string;\n    name?: string;\n}\n\nclass Button extends View<null> {\n\n    public override events: EventsHandler<ButtonEventsList> & EventsHandler<ViewEventsList>;\n\n    public override el: HTMLElementExt | null;\n\n    public name: string;\n    public $icon: HTMLElement | null;\n    public $text: HTMLElement | null;\n\n    constructor(options: IButtonParams = {}) {\n        super({\n            template: stringTemplate(TEMPLATE, {\n                icon: options.icon || \"\",\n                text: options.text || \"\",\n                title: options.title || \"\"\n            }),\n            ...options\n        });\n\n        //@ts-ignore\n        this.events = this.events.registerNames(BUTTON_EVENTS);\n\n        this.el = null;\n\n        this.name = options.name || \"\";\n\n        this.$icon = null;\n        this.$text = null;\n    }\n\n    public override render(params: any): this {\n        super.render(params);\n        this.$icon = this.select(\".og-button-icon\");\n        this.$text = this.select(\".og-button-text\");\n        this.el!.__og_button__ = this;\n        this._initEvents();\n        return this;\n    }\n\n    protected _initEvents() {\n        if (this.el) {\n            this.el.addEventListener(\"click\", this._onMouseClick);\n            this.el.addEventListener(\"mousedown\", this._onMouseDown);\n            this.el.addEventListener(\"mouseup\", this._onMouseUp);\n            this.el.addEventListener(\"touchstart\", this._onTouchStart);\n            this.el.addEventListener(\"touchend\", this._onTouchEnd);\n            this.el.addEventListener(\"touchcancel\", this._onTouchCancel);\n        }\n    }\n\n    protected _onMouseDown = (e: MouseEvent) => {\n        e.preventDefault();\n        this.events.dispatch(this.events.mousedown, this, e);\n    }\n\n    protected _onMouseUp = (e: MouseEvent) => {\n        e.preventDefault();\n        this.events.dispatch(this.events.mouseup, this, e);\n    }\n\n    protected _onTouchStart = (e: TouchEvent) => {\n        e.preventDefault();\n        this.events.dispatch(this.events.touchstart, this, e);\n    }\n\n    protected _onTouchEnd = (e: TouchEvent) => {\n        e.preventDefault();\n        this.events.dispatch(this.events.touchend, this, e);\n    }\n\n    protected _onTouchCancel = (e: TouchEvent) => {\n        e.preventDefault();\n        this.events.dispatch(this.events.touchcancel, this, e);\n    }\n\n    protected _mouseClickHandler(e: MouseEvent) {\n        e.preventDefault();\n        this.events.dispatch(this.events.click, this, e);\n    }\n\n    protected _onMouseClick = (e: MouseEvent) => {\n        this._mouseClickHandler(e)\n    }\n\n    public override remove() {\n        this._clearEvents();\n        super.remove();\n    }\n\n    protected _clearEvents() {\n        this.el && this.el.removeEventListener(\"click\", this._onMouseClick);\n    }\n}\n\nexport {Button};\n","import {Planet, Renderer} from \"../index\";\n\nexport interface IControlParams {\n    name?: string;\n    autoActivate?: boolean\n}\n\n/**\n * Base control class. All other controls extend from this class.\n * @class Control\n * @param {Boolean} [options.autoActivate=true] - If true - calls initialize function after the renderer assigning.\n */\nexport class Control {\n    static __counter__: number = 0;\n    protected __id: number;\n    protected _name: string;\n\n    /**\n     * Control activity.\n     * @protected\n     * @type {boolean}\n     */\n    protected _active: boolean;\n\n    /**\n     * Control initialized.\n     * @protected\n     * @type {boolean}\n     */\n    protected _initialized: boolean;\n\n    public planet: Planet | null;\n\n    /**\n     * Assigned renderer.\n     * @public\n     * @type {Renderer}\n     */\n    public renderer: Renderer | null;\n\n    /**\n     * Auto activation flag.\n     * @public\n     * @type {boolean}\n     */\n    public autoActivate: boolean;\n\n    protected _deferredActive: boolean;\n\n    constructor(options: IControlParams = {}) {\n\n        this.__id = Control.__counter__++;\n\n        this._name = options.name || `_control_${this.__id.toString()}`;\n\n        this.planet = null;\n\n        this._initialized = false;\n\n        this.renderer = null;\n\n        this.autoActivate = options.autoActivate || false;\n\n        this._active = false;\n\n        this._deferredActive = true;\n    }\n\n    /**\n     * Returns control name.\n     * @public\n     * @return {string} -\n     */\n    public get name(): string {\n        return this._name;\n    }\n\n    /**\n     * Control initialization function have to be overridden.\n     * @public\n     */\n    public oninit() {\n    }\n\n    /**\n     * Control renderer assigning function have to be overridden.\n     * @public\n     */\n    public onadd() {\n    }\n\n    /**\n     * Control remove function have to be overridden.\n     * @public\n     */\n    public onremove() {\n    }\n\n    /**\n     * Control activation function have to be overridden.\n     * @public\n     */\n    public onactivate() {\n    }\n\n    /**\n     * Control deactivation function have to be overriden.\n     * @public\n     */\n    public ondeactivate() {\n    }\n\n    /**\n     * Assign renderer to the control.\n     * @public\n     * @type {Renderer}\n     */\n    public addTo(renderer: Renderer) {\n        if (renderer) {\n            this.renderer = renderer;\n            renderer.controls[this.name] = this;\n            this.onadd && this.onadd();\n            if (renderer.isInitialized()) {\n                this._initialized = true;\n                this.oninit && this.oninit();\n                if (this.autoActivate) {\n                    this.activate();\n                }\n            }\n        }\n    }\n\n    /**\n     * Removes control.\n     * @public\n     */\n    public remove() {\n\n        this.deactivate();\n\n        this.onremove && this.onremove();\n\n        let r = this.renderer,\n            n = this.name;\n\n        if (!r) return;\n\n        let c = r.controls[n];\n\n        if (c) {\n            if (this.isEqual(c)) {\n                delete r.controls[n];\n            }\n        }\n\n        this.renderer = null;\n        this._active = false;\n        this._initialized = false;\n    }\n\n    /**\n     * Activate control.\n     * @public\n     */\n    public activate() {\n        if (!this._active) {\n            if (!this._initialized) {\n                this._initialized = true;\n                this.oninit && this.oninit();\n            }\n            if (this._deferredActive) {\n                this._active = true;\n                this.onactivate && this.onactivate();\n            } else {\n                this._deferredActive = true;\n            }\n        }\n    }\n\n    /**\n     * Deactivate control.\n     * @public\n     */\n    public deactivate() {\n        if (this._active) {\n            this._active = false;\n            this.ondeactivate && this.ondeactivate();\n        } else if (!this._initialized) {\n            this._deferredActive = false;\n        }\n    }\n\n    /**\n     * Is control active.\n     * @public\n     */\n    public isActive(): boolean {\n        return this._active;\n    }\n\n    public isEqual(control: Control): boolean {\n        return control.__id === this.__id;\n    }\n}\n","import {Button} from \"../ui/Button\";\nimport {Control, IControlParams} from \"./Control\";\n\nconst ICON_BUTTON_SVG = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n   viewBox=\"0 0 110.6 110.3\"\n   version=\"1.1\"\n   id=\"svg21\"\n   sodipodi:docname=\"aaa.svg\"\n   inkscape:version=\"0.92.3 (2405546, 2018-03-11)\">\n  <metadata\n     id=\"metadata11\">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about=\"\">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <defs\n     id=\"defs25\" />\n  <sodipodi:namedview\n     pagecolor=\"#ffffff\"\n     bordercolor=\"#666666\"\n     borderopacity=\"1\"\n     objecttolerance=\"10\"\n     gridtolerance=\"10\"\n     guidetolerance=\"10\"\n     inkscape:pageopacity=\"0\"\n     inkscape:pageshadow=\"2\"\n     inkscape:window-width=\"1920\"\n     inkscape:window-height=\"1001\"\n     id=\"namedview23\"\n     showgrid=\"false\"\n     inkscape:zoom=\"9.4900968\"\n     inkscape:cx=\"28.376998\"\n     inkscape:cy=\"60.17054\"\n     inkscape:window-x=\"-9\"\n     inkscape:window-y=\"-9\"\n     inkscape:window-maximized=\"1\"\n     inkscape:current-layer=\"svg21\" />\n  <g\n     id=\"Layer_2\"\n     data-name=\"Layer 2\"\n     transform=\"matrix(1,0,0,-1,0,110.3)\">\n    <g\n       id=\"Слой_1\"\n       data-name=\"Слой 1\">\n      <g\n         id=\"_Group_\"\n         data-name=\"&lt;Group&gt;\">\n        <g\n           id=\"_Group_7\"\n           data-name=\"&lt;Group&gt;\">\n          <polygon\n             id=\"_Path_7\"\n             data-name=\"&lt;Path&gt;\"\n             points=\"55.2,97.6 55.3,97.4 55.3,97.6 55.3,97.2 65.3,55.1 55.3,55.1 55.2,55.1 45.3,55.1 55.2,97.2 \"\n             style=\"fill:#ff2b45\" />\n          <polygon\n             id=\"_Path_8\"\n             data-name=\"&lt;Path&gt;\"\n             points=\"55.3,12.7 55.3,12.9 55.2,12.7 55.2,13.1 45.3,55.1 55.2,55.1 55.3,55.1 65.3,55.1 55.3,13.1 \"\n             style=\"fill:#cecece;\" />\n        </g>\n      </g>\n    </g>\n  </g>\n</svg>`;\n\ninterface ICompasButtonParams extends IControlParams {\n\n}\n\n/**\n * Planet compass button\n */\nexport class CompassButton extends Control {\n    protected _heading: number;\n    protected _svg: HTMLElement | null;\n\n    constructor(options: ICompasButtonParams = {}) {\n        super(options);\n        this._heading = 0;\n        this._svg = null;\n    }\n\n    public override oninit() {\n\n        let btn = new Button({\n            classList: [\"og-map-button\", \"og-compass-button\"],\n            icon: ICON_BUTTON_SVG\n        });\n\n        btn.appendTo(this.renderer!.div!);\n\n        btn.events.on(\"click\", this._onClick, this);\n\n        this._svg = btn.select(\"svg\");\n\n        this.renderer!.events!.on(\"draw\", this._draw, this);\n    }\n\n    protected _onClick() {\n        const planet = this.planet!;\n        let c = planet.getCartesianFromPixelTerrain(this.renderer!.handler!.getCenter());\n        if (c) {\n            planet.flyCartesian(\n                c.normal().scaleTo(c.length() + c.distance(planet.camera.eye)),\n                null,\n                null,\n                0,\n                null,\n                null,\n                () => {\n                    planet.camera.look(c!);\n                }\n            );\n        } else {\n            planet.flyCartesian(planet.camera.eye);\n        }\n    }\n\n    protected _draw() {\n        this.setHeading(this.planet!.camera.getHeading());\n    }\n\n    public setHeading(heading: number) {\n        if (this._heading !== heading) {\n            this._heading = heading;\n            this._svg!.style.transform = `rotateZ(${-heading}deg)`;\n        }\n    }\n}\n","export const CLOSE_ICON = `<svg className=\"svg-icon\" style=\"width: 1em; height: 1em;vertical-align: middle;fill: currentColor; overflow: hidden;\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M777.856 280.192l-33.92-33.952-231.872 231.872-231.84-231.872-33.984 33.888 231.872 231.904-231.84 231.84 33.888 33.984 231.904-231.904 231.84 231.872 33.952-33.888-231.872-231.904z\"/>\n</svg>`","import {getDefault, stringTemplate} from '../utils/shared';\nimport {Button} from './Button';\nimport {CLOSE_ICON} from './icons';\nimport {IViewParams, View, ViewEventsList} from './View';\nimport {EventsHandler} from \"../Events\";\n\nexport interface IDialogParams extends IViewParams {\n    title?: string;\n    visible?: boolean;\n    resizable?: boolean;\n    width?: number;\n    height?: number;\n    left?: number;\n    top?: number;\n    minHeight?: number;\n    maxHeight?: number;\n    minWidth?: number;\n    maxWidth?: number;\n    useHide?: boolean;\n}\n\ntype DialogEventsList = [\"resize\", \"focus\", \"visibility\", \"dragstart\", \"dragend\"];\n\nconst DIALOG_EVENTS: DialogEventsList = [\"resize\", \"focus\", \"visibility\", \"dragstart\", \"dragend\"];\n\nconst TEMPLATE = `<div class=\"og-ddialog\" \n        style=\"display:{display}; resize:{resize}; width: {width}px; {height}; top: {top}px; left: {left}px; min-height: {minHeight}; max-height: {maxHeight}; min-width: {minWidth}; max-width: {maxWidth};\">\n       <div class=\"og-ddialog-header\">\n         <div class=\"og-ddialog-header__title\">{title}</div>      \n         <div class=\"og-ddialog-header__buttons\"></div>      \n        </div>\n       <div class=\"og-ddialog-container\"></div>\n    </div>>`;\n\nclass Dialog<M> extends View<M> {\n\n    static __zIndex__: number = 0;\n\n    public override events: EventsHandler<DialogEventsList> & EventsHandler<ViewEventsList>;\n\n    public $header: HTMLElement | null;\n    public $title: HTMLElement | null;\n    public $container: HTMLElement | null;\n    public $buttons: HTMLElement | null;\n\n    public useHide: boolean;\n\n    protected _startPosX: number;\n    protected _startPosY: number;\n\n    protected _closeBtn: Button;\n\n    protected _visibility: boolean;\n\n    constructor(options: IDialogParams = {}) {\n        super({\n            template: stringTemplate(TEMPLATE, {\n                title: options.title || \"\",\n                display: getDefault(options.visible, true) ? \"flex\" : \"none\",\n                resize: getDefault(options.resizable, true) ? \"both\" : \"none\",\n                width: options.width || 300,\n                height: options.height ? `height:${options.height || 200}` : \"\",\n                left: options.left || 0,\n                top: options.top || 0,\n                minHeight: options.minHeight ? `${options.minHeight}px` : 'unset',\n                maxHeight: options.maxHeight ? `${options.maxHeight}px` : 'unset',\n                minWidth: options.minWidth ? `${options.minWidth}px` : 'unset',\n                maxWidth: options.maxWidth ? `${options.maxWidth}px` : 'unset',\n            }),\n            ...options\n        });\n\n        //@ts-ignore\n        this.events = this.events.registerNames(DIALOG_EVENTS);\n\n        this._startPosX = 0;\n        this._startPosY = 0;\n\n        this.$header = null;\n        this.$title = null;\n        this.$container = null;\n        this.$buttons = null;\n\n        this._closeBtn = new Button({\n            icon: CLOSE_ICON,\n            classList: [\"og-button-size__20\"]\n        });\n\n        this.useHide = options.useHide || false;\n\n        this._visibility = getDefault(options.visible, true);\n    }\n\n    public setContainer(htmlStr: string) {\n        this.$container!.innerHTML = htmlStr;\n    }\n\n    public get container(): HTMLElement | null {\n        return this.$container;\n    }\n\n    public get width(): number {\n        return this.el ? parseFloat(this.el.style.width) : 0;\n    }\n\n    public get height(): number {\n        return this.el ? parseFloat(this.el.style.height) : 0;\n    }\n\n    public bringToFront() {\n        this.el!.style.zIndex = String(Dialog.__zIndex__++);\n    }\n\n    public override render(params: any): this {\n        super.render(params);\n        this.bringToFront();\n        this.$header = this.select(\".og-ddialog-header\");\n        this.$title = this.select(\".og-ddialog-header__title\");\n        this.$container = this.select(\".og-ddialog-container\");\n        this.$buttons = this.select(\".og-ddialog-header__buttons\");\n        this._initEvents();\n        this._initButtons();\n        return this;\n    }\n\n    public show() {\n        if (!this._visibility) {\n            this._visibility = true;\n            this.el!.style.display = \"flex\";\n            this.bringToFront();\n            this.events.dispatch(this.events.visibility, true, this);\n        }\n    }\n\n    public hide() {\n        if (this._visibility) {\n            this._visibility = false;\n            this.el!.style.display = \"none\";\n            this.events.dispatch(this.events.visibility, false, this);\n        }\n    }\n\n    public close() {\n        if (this.useHide) {\n            this.hide();\n        } else {\n            this.remove();\n        }\n    }\n\n    public setVisibility(visibility: boolean) {\n        if (visibility) {\n            this.show();\n        } else {\n            this.hide();\n        }\n    }\n\n    protected _initButtons() {\n        this._closeBtn.events.on(\"click\", this._onCloseBtnClick);\n        this._closeBtn.appendTo(this.$buttons!);\n    }\n\n    protected _initEvents() {\n        this.$header!.addEventListener(\"mousedown\", this._onMouseDown);\n        this.el!.addEventListener(\"mousedown\", this._onMouseDownAll);\n    }\n\n    protected _onCloseBtnClick = () => {\n        this.close();\n    }\n\n    protected _onMouseDownAll = () => {\n        this.bringToFront();\n    }\n\n    protected _onMouseDown = (e: MouseEvent) => {\n        e.preventDefault();\n\n        this._startDragging();\n\n        this._startPosX = e.clientX;\n        this._startPosY = e.clientY;\n\n        document.addEventListener(\"mousemove\", this._onMouseMove);\n        document.addEventListener(\"mouseup\", this._onMouseUp);\n    }\n\n    public setPosition(x?: number, y?: number) {\n        if (x != undefined) {\n            this.el!.style.left = `${x}px`;\n        }\n        if (y != undefined) {\n            this.el!.style.top = `${y}px`;\n        }\n    }\n\n    protected _onMouseMove = (e: MouseEvent) => {\n        e.preventDefault();\n        let dx = this._startPosX - e.clientX;\n        let dy = this._startPosY - e.clientY;\n        this._startPosX = e.clientX;\n        this._startPosY = e.clientY;\n        this.setPosition(this.el!.offsetLeft - dx, this.el!.offsetTop - dy);\n    }\n\n    protected _startDragging() {\n        if (!this.el!.classList.contains(\"dragging\")) {\n            this.el!.classList.add(\"dragging\");\n            this.events.dispatch(this.events.dragstart, this);\n        }\n    }\n\n    protected _clearDragging() {\n        if (this.el!.classList.contains(\"dragging\")) {\n            this.events.dispatch(this.events.dragend, this);\n            this.el!.classList.remove(\"dragging\");\n        }\n    }\n\n    protected _onMouseUp = () => {\n        this._clearDragging();\n        document.removeEventListener(\"mouseup\", this._onMouseUp);\n        document.removeEventListener(\"mousemove\", this._onMouseMove);\n    }\n\n    public override remove() {\n        this._clearDragging();\n        this._clearEvents();\n        super.remove();\n    }\n\n    protected _clearEvents() {\n        this._closeBtn.events.off(\"click\", this._onCloseBtnClick);\n\n        document.removeEventListener(\"mouseup\", this._onMouseUp);\n        document.removeEventListener(\"mousemove\", this._onMouseMove);\n\n        this.$header!.removeEventListener(\"mousedown\", this._onMouseDown);\n        this.el!.removeEventListener(\"mousedown\", this._onMouseDownAll);\n    }\n}\n\nexport {Dialog};\n","import {Button, IButtonParams, ButtonEventsList} from './Button';\nimport {EventsHandler} from \"../Events\";\nimport {ViewEventsList} from \"./View\";\n\ninterface IToggleButtonParams extends IButtonParams {\n    isActive?: boolean;\n    preventClick?: boolean;\n}\n\ntype ToggleButtonEventsList = [\"change\"];\n\nconst TOGGLEBUTTON_EVENTS: ToggleButtonEventsList = [\"change\"];\n\nclass ToggleButton extends Button {\n\n    public override events: EventsHandler<ToggleButtonEventsList> & EventsHandler<ButtonEventsList> & EventsHandler<ViewEventsList>;\n\n    protected _isActive: boolean;\n    public preventClick: boolean;\n\n    constructor(options: IToggleButtonParams) {\n        super({\n            ...options\n        });\n\n        //@ts-ignore\n        this.events = this.events.registerNames(TOGGLEBUTTON_EVENTS);\n\n        this._isActive = options.isActive || false;\n\n        this.preventClick = options.preventClick || false;\n    }\n\n    public setActive(isActive: boolean, stopPropagation: boolean = false) {\n        if (isActive !== this._isActive) {\n            this._isActive = isActive;\n            this._toggle();\n            if (!stopPropagation) {\n                this.events.dispatch(this.events.change, isActive, this);\n            }\n        }\n    }\n\n    protected _toggle() {\n        this.el && this.el.classList.toggle(\"og-button__active\");\n    }\n\n    public get isActive(): boolean {\n        return this._isActive;\n    }\n\n    public override render(params: any): this {\n        super.render(params);\n        if (this._isActive) {\n            this._toggle();\n        }\n        return this;\n    }\n\n    protected override _onMouseClick = (e: MouseEvent) => {\n        if (!this.preventClick) {\n            this._mouseClickHandler(e);\n            this.setActive(!this.isActive);\n        }\n    }\n}\n\nexport {ToggleButton}","export const VISIBLE_DISTANCE = 3570.0;\nexport const MAX_RENDERED_NODES = 1000;\n\nexport const NW = 0;\nexport const NE = 1;\nexport const SW = 2;\nexport const SE = 3;\n\nexport const N = 0;\nexport const E = 1;\nexport const S = 2;\nexport const W = 3;\n\nexport const NOTRENDERING = 0;\nexport const RENDERING = 1;\nexport const WALKTHROUGH = 2;\n\n/**\n * World opposite side table.\n */\nexport const OPSIDE = [S, W, N, E];\n\n/**\n * First index is {N,E,S,W} and second is {NW,NE,SW,SE}\n */\nexport const NEIGHBOUR = [\n    [-1, -1, NW, NE],\n    [NE, -1, SE, -1],\n    [SW, SE, -1, -1],\n    [-1, NW, -1, SW]\n];\n\n/**\n * Neighbor's oposite part. For example oposite side\n * on the east neighbor side is: [S][SE] = NE\n */\nexport const OPPART = [\n    [SW, SE, NW, NE],\n    [NE, NW, SE, SW],\n    [SW, SE, NW, NE],\n    [NE, NW, SE, SW]\n];\n\n/**\n * Neighbos's opside array order. For example NW node\n * by E side array index is 0, SE node by S side is 1.\n */\nexport const NOPSORD = [\n    [0, 1, 0, 1],\n    [0, 0, 1, 1],\n    [0, 1, 0, 1],\n    [0, 0, 1, 1]\n];\n\n/**\n * First index is {NW,NE,SW,SE}, another one is {N,E,S,W}\n */\nexport const COMSIDE = [\n    [true, false, false, true],\n    [true, true, false, false],\n    [false, false, true, true],\n    [false, true, true, false]\n];\n\n/**\n * Gets segment part left to right or up to downo ffset against neighbour side.\n * Where 0 - no offset 1 - half segment size offset.\n */\nexport const PARTOFFSET = [\n    /*     N  E  S  W */\n    /*NW*/ [0, 1, 0, 0],\n    /*NE*/ [1, 0, 0, 0],\n    /*SW*/ [0, 1, 0, 1],\n    /*SE*/ [1, 1, 1, 1]\n];\n","import {Layer} from \"./Layer\";\nimport {Node} from \"../quadTree/Node\";\nimport {Segment} from \"../segment/Segment\";\nimport {WebGLTextureExt} from \"../webgl/Handler\";\nimport {NumberArray4} from \"../math/Vec4\";\n\n/**\n * @class Material\n * @param {Segment} segment\n * @param {Layer} layer\n */\nclass Material {\n\n    public segment: Segment;\n    public layer: Layer;\n    public isReady: boolean;\n    public isLoading: boolean;\n    public texture: WebGLTextureExt | null;\n    public pickingMask: WebGLTextureExt | null;\n\n    public textureExists: boolean;\n    public appliedNodeId: number;\n    public appliedNode: Node | null;\n    public texOffset: NumberArray4;\n    public loadingAttempts: number;\n\n    // vector data\n    public _updateTexture: WebGLTextureExt | null;\n    public _updatePickingMask: WebGLTextureExt | null;\n    public pickingReady: boolean;\n\n    constructor(segment: Segment, layer: Layer) {\n        this.segment = segment;\n        this.layer = layer;\n        this.isReady = false;\n        this.isLoading = false;\n        this.texture = null;\n        this.pickingMask = null;\n\n        this.textureExists = false;\n        this.appliedNodeId = 0;\n        this.appliedNode = null;\n        this.texOffset = [0.0, 0.0, 1.0, 1.0];\n        this.loadingAttempts = 0;\n\n        this._updateTexture = null;\n        this._updatePickingMask = null;\n        this.pickingReady = false;\n    }\n\n    public abortLoading() {\n        this.layer.abortMaterialLoading(this);\n    }\n\n    public _createTexture(img: HTMLCanvasElement | ImageBitmap | HTMLImageElement) {\n        return this.layer._planet && this.layer.createTexture!(img, this.layer._internalFormat, this.isReady ? this.texture : null);\n    }\n\n    public applyImage(img: HTMLCanvasElement | ImageBitmap | HTMLImageElement) {\n        if (this.segment.initialized) {\n            this._updateTexture = null;\n            //this.image = img;\n            this.texture = this._createTexture(img);\n            this.isReady = true;\n            this.pickingReady = true;\n            this.textureExists = true;\n            this.isLoading = false;\n            this.appliedNodeId = this.segment.node.nodeId;\n            this.texOffset = [0.0, 0.0, 1.0, 1.0];\n        }\n    }\n\n    public applyTexture(texture: WebGLTextureExt | null, pickingMask?: WebGLTextureExt | null) {\n        if (this.segment.initialized) {\n            this.texture = texture;\n            this._updateTexture = null;\n            this.pickingMask = pickingMask || null;\n            this._updatePickingMask = null;\n            this.isReady = true;\n            this.pickingReady = true;\n            this.textureExists = true;\n            this.isLoading = false;\n            this.appliedNodeId = this.segment.node.nodeId;\n            this.texOffset = [0.0, 0.0, 1.0, 1.0];\n        }\n    }\n\n    public textureNotExists() {\n        if (this.segment.initialized) {\n            this.pickingReady = true;\n            this.isLoading = false;\n            this.isReady = true;\n            this.textureExists = false;\n        }\n    }\n\n    public clear() {\n        this.loadingAttempts = 0;\n        this.layer.clearMaterial(this);\n    }\n}\n\nexport {Material};\n","import * as mercator from \"../mercator\";\nimport * as utils from \"../utils/shared\";\nimport {createColorRGB} from \"../utils/shared\";\nimport {createEvents, Events, EventsHandler} from \"../Events\";\nimport {Extent} from \"../Extent\";\nimport {LonLat} from \"../LonLat\";\nimport {Node} from \"../quadTree/Node\";\nimport {Material} from \"./Material\";\nimport {Planet} from \"../scene/Planet\";\nimport {Segment} from \"../segment/Segment\";\nimport {Vec3, NumberArray3} from \"../math/Vec3\";\nimport {NumberArray4} from \"../math/Vec4\";\nimport {IDefaultTextureParams, WebGLTextureExt} from \"../webgl/Handler\";\n\nconst FADING_RATIO = 15.8;\n\nexport interface ILayerParams {\n    properties?: any;\n    labelMaxLetters?: number;\n    displayInLayerSwitcher?: boolean;\n    opacity?: number;\n    minZoom?: number;\n    maxZoom?: number;\n    attribution?: string;\n    zIndex?: number;\n    isBaseLayer?: boolean;\n    defaultTextures?: [IDefaultTextureParams, IDefaultTextureParams];\n    visibility?: boolean;\n    fading?: boolean;\n    height?: number;\n    textureFilter?: string;\n    isSRGB?: boolean;\n    pickingEnabled?: boolean;\n    preLoadZoomLevels?: number[];\n    extent?: Extent | [[number, number], [number, number]];\n    ambient?: string | NumberArray3 | Vec3;\n    diffuse?: string | NumberArray3 | Vec3;\n    specular?: string | NumberArray3 | Vec3;\n    shininess?: number;\n    nightTextureCoefficient?: number;\n}\n\n/**\n * @class\n * Base class; normally only used for creating subclasses and not instantiated in apps.\n * A visual representation of raster or vector map data well known as a layer.\n * @class\n * @param {String} [name=\"noname\"] - Layer name.\n * @param {Object} [options] - Layer options:\n * @param {number} [options.opacity=1.0] - Layer opacity.\n * @param {number} [options.minZoom=0] - Minimal visibility zoom level.\n * @param {number} [options.maxZoom=0] - Maximal visibility zoom level.\n * @param {string} [options.attribution] - Layer attribution that displayed in the attribution area on the screen.\n * @param {boolean} [options.isBaseLayer=false] - This is a base layer.\n * @param {boolean} [options.visibility=true] - Layer visibility.\n * @param {boolean} [options.displayInLayerSwitcher=true] - Presence of layer in dialog window of LayerSwitcher control.\n * @param {boolean} [options.isSRGB=false] - Layer image webgl internal format.\n * @param {Extent} [options.extent=[[-180.0, -90.0], [180.0, 90.0]]] - Visible extent.\n * @param {string} [options.textureFilter=\"anisotropic\"] - Image texture filter. Available values: \"nearest\", \"linear\", \"mipmap\" and \"anisotropic\".\n *\n * @fires EventsHandler<LayerEventsList>#visibilitychange\n * @fires EventsHandler<LayerEventsList>#add\n * @fires EventsHandler<LayerEventsList>#remove\n * @fires EventsHandler<LayerEventsList>#mousemove\n * @fires EventsHandler<LayerEventsList>#mouseenter\n * @fires EventsHandler<LayerEventsList>#mouseleave\n * @fires EventsHandler<LayerEventsList>#lclick\n * @fires EventsHandler<LayerEventsList>#rclick\n * @fires EventsHandler<LayerEventsList>#mclick\n * @fires EventsHandler<LayerEventsList>#ldblclick\n * @fires EventsHandler<LayerEventsList>#rdblclick\n * @fires EventsHandler<LayerEventsList>#mdblclick\n * @fires EventsHandler<LayerEventsList>#lup\n * @fires EventsHandler<LayerEventsList>#rup\n * @fires EventsHandler<LayerEventsList>#mup\n * @fires EventsHandler<LayerEventsList>#ldown\n * @fires EventsHandler<LayerEventsList>#rdown\n * @fires EventsHandler<LayerEventsList>#mdown\n * @fires EventsHandler<LayerEventsList>#lhold\n * @fires EventsHandler<LayerEventsList>#rhold\n * @fires EventsHandler<LayerEventsList>#mhold\n * @fires EventsHandler<LayerEventsList>#mousewheel\n * @fires EventsHandler<LayerEventsList>#touchmove\n * @fires EventsHandler<LayerEventsList>#touchstart\n * @fires EventsHandler<LayerEventsList>#touchend\n * @fires EventsHandler<LayerEventsList>#doubletouch\n */\nclass Layer {\n\n    static __counter__: number = 0;\n\n    /**\n     * Uniq identifier.\n     * @public\n     * @type {number}\n     */\n    public __id: number;\n\n    /**\n     * Events handler.\n     * @public\n     * @type {Events}\n     */\n    public events: EventsHandler<LayerEventsList>;\n\n    /**\n     * Layer user name.\n     * @public\n     * @type {string}\n     */\n    public name: string;\n\n    public properties: any;\n\n    public displayInLayerSwitcher: boolean;\n\n    /**\n     * Minimal zoom level when layer is visible.\n     * @public\n     * @type {number}\n     */\n    public minZoom: number;\n\n    /**\n     * Maximal zoom level when layer is visible.\n     * @public\n     * @type {number}\n     */\n    public maxZoom: number;\n\n    /**\n     * Planet node.\n     * @public\n     * @type {Planet}\n     */\n    public _planet: Planet | null;\n\n    public createTexture: Function | null;\n\n    public nightTextureCoefficient: number;\n\n    protected _hasImageryTiles: boolean;\n\n    /**\n     * Layer global opacity.\n     * @public\n     * @type {number}\n     */\n    protected _opacity: number;\n\n    /**\n     * Layer attribution.\n     * @protected\n     * @type {string}\n     */\n    protected _attribution: string;\n\n    /**\n     * Layer z-index.\n     * @protected\n     * @type {number}\n     */\n    protected _zIndex: number;\n\n    /**\n     * Base layer type flag.\n     * @protected\n     * @type {boolean}\n     */\n    protected _isBaseLayer: boolean;\n\n    public _defaultTextures: [IDefaultTextureParams | null, IDefaultTextureParams | null];\n\n    /**\n     * Layer visibility.\n     * @protected\n     * @type {boolean}\n     */\n    protected _visibility: boolean;\n\n    public _fading: boolean;\n\n    protected _fadingFactor: number;\n\n    public _fadingOpacity: number;\n\n    /**\n     * Height over the ground.\n     * @public\n     * @type {number}\n     */\n    public _height: number;\n\n    protected _textureFilter: string;\n\n    protected _isSRGB: boolean;\n\n    public _internalFormat: number | null;\n\n    /**\n     * Visible degrees extent.\n     * @public\n     * @type {Extent}\n     */\n    public _extent: Extent;\n\n    /**\n     * Visible mercator extent.\n     * @public\n     * @type {Extent}\n     */\n    public _extentMerc: Extent;\n\n    /**\n     * Layer picking color. Assign when added to the planet.\n     * @public\n     * @type {Vec3}\n     */\n    public _pickingColor: Vec3;\n\n    public _pickingEnabled: boolean;\n\n    protected _isPreloadDone: boolean;\n\n    protected _preLoadZoomLevels: number[];\n\n    public _ambient: Float32Array | null;\n    public _diffuse: Float32Array | null;\n    public _specular: Float32Array | null;\n\n    public isVector: boolean = false;\n\n    constructor(name?: string | null, options: ILayerParams = {}) {\n\n        this.__id = Layer.__counter__++;\n\n        this.events = createEvents<LayerEventsList>(LAYER_EVENTS, this);\n\n        this.name = name || \"noname\";\n\n        this.properties = options.properties || {};\n\n        this.displayInLayerSwitcher =\n            options.displayInLayerSwitcher !== undefined ? options.displayInLayerSwitcher : true;\n\n        this._hasImageryTiles = true;\n\n        this._opacity = options.opacity || 1.0;\n\n        this.minZoom = options.minZoom || 0;\n\n        this.maxZoom = options.maxZoom || 50;\n\n        this._planet = null;\n\n        this.isVector = false;\n\n        this._attribution = options.attribution || \"\";\n\n        this._zIndex = options.zIndex || 0;\n\n        this._isBaseLayer = options.isBaseLayer || false;\n\n        this._defaultTextures = options.defaultTextures || [null, null];\n\n        this._visibility = options.visibility !== undefined ? options.visibility : true;\n\n        this._fading = options.fading || false;\n\n        this._fadingFactor = this._opacity / FADING_RATIO;\n\n        if (this._fading) {\n            this._fadingOpacity = this._visibility ? this._opacity : 0.0;\n        } else {\n            this._fadingOpacity = this._opacity;\n        }\n\n        this._height = options.height || 0;\n\n        this._extent = new Extent();\n\n        this.createTexture = null;\n\n        this._textureFilter = options.textureFilter ? options.textureFilter.trim().toUpperCase() : \"MIPMAP\";\n\n        this._isSRGB = options.isSRGB != undefined ? options.isSRGB : false;\n\n        this._internalFormat = null;\n\n        this._extentMerc = new Extent();\n\n        // Setting the extent up\n        this.setExtent(\n            utils.createExtent(\n                options.extent,\n                new Extent(new LonLat(-180, -90), new LonLat(180, 90))\n            )\n        );\n\n        /**\n         * Layer picking color. Assign when added to the planet.\n         * @protected\n         * @type {Vec3}\n         */\n        this._pickingColor = new Vec3();\n\n        this._pickingEnabled = options.pickingEnabled !== undefined ? options.pickingEnabled : true;\n\n        this._isPreloadDone = false;\n\n        this._preLoadZoomLevels = options.preLoadZoomLevels || [0, 1];\n\n        this._ambient = null;\n        this._diffuse = null;\n        this._specular = null;\n\n        if (options.ambient) {\n            let a = utils.createColorRGB(options.ambient, new Vec3(0.2, 0.2, 0.2));\n            this._ambient = new Float32Array([a.x, a.y, a.z]);\n        }\n\n        if (options.diffuse) {\n            let d = utils.createColorRGB(options.diffuse, new Vec3(0.8, 0.8, 0.8));\n            this._diffuse = new Float32Array([d.x, d.y, d.z]);\n        }\n\n        if (options.specular) {\n            let s = utils.createColorRGB(options.specular, new Vec3(0.0003, 0.0003, 0.0003));\n            let shininess = options.shininess || 20.0;\n            this._specular = new Float32Array([s.x, s.y, s.z, shininess]);\n        }\n\n        this.nightTextureCoefficient = options.nightTextureCoefficient || 1.0;\n    }\n\n    public set diffuse(rgb: string | NumberArray3 | Vec3 | null | undefined) {\n        if (rgb) {\n            let vec = createColorRGB(rgb);\n            this._diffuse = new Float32Array(vec.toArray());\n        } else {\n            this._diffuse = null;\n        }\n    }\n\n    public set ambient(rgb: string | NumberArray3 | Vec3 | null | undefined) {\n        if (rgb) {\n            let vec = createColorRGB(rgb);\n            this._ambient = new Float32Array(vec.toArray());\n        } else {\n            this._ambient = null;\n        }\n    }\n\n    public set specular(rgb: string | NumberArray3 | Vec3 | null | undefined) {\n        if (rgb) {\n            let vec = createColorRGB(rgb);\n            this._specular = new Float32Array([vec.x, vec.y, vec.y, this._specular ? this._specular[3] : 0.0]);\n        } else {\n            this._specular = null;\n        }\n    }\n\n    public set shininess(v: number) {\n        if (this._specular) {\n            this._specular[3] = v;\n        }\n    }\n\n    // get normalMapCreator() {\n    //     return this._normalMapCreator;\n    // }\n\n    static getTMS(x: number, y: number, z: number): { x: number; y: number; z: number } {\n        return {\n            x: x,\n            y: (1 << z) - y - 1,\n            z: z\n        };\n    }\n\n    static getTileIndex(...arr: number[]): string {\n        return arr.join(\"_\");\n    }\n\n    public get instanceName(): string {\n        return \"Layer\";\n    }\n\n    public get rendererEvents(): EventsHandler<LayerEventsList> {\n        return this.events;\n    }\n\n    public set opacity(opacity: number) {\n        if (opacity !== this._opacity) {\n            if (this._fading) {\n                if (opacity > this._opacity) {\n                    this._fadingFactor = (opacity - this._opacity) / FADING_RATIO;\n                } else if (opacity < this._opacity) {\n                    this._fadingFactor = (opacity - this._opacity) / FADING_RATIO;\n                }\n            } else {\n                this._fadingOpacity = opacity;\n            }\n            this._opacity = opacity;\n        }\n    }\n\n    public set pickingEnabled(picking: boolean) {\n        this._pickingEnabled = picking;\n    }\n\n    public get pickingEnabled(): boolean {\n        return this._pickingEnabled;\n    }\n\n    /**\n     * Returns true if a layer has imagery tiles.\n     * @public\n     * @virtual\n     * @returns {boolean} - Imagery tiles flag.\n     */\n    public hasImageryTiles(): boolean {\n        return this._hasImageryTiles;\n    }\n\n    /**\n     * Gets layer identifier.\n     * @public\n     * @returns {string} - Layer object id.\n     */\n    public getID(): number {\n        return this.__id;\n    }\n\n    public get id(): number {\n        return this.__id;\n    }\n\n    /**\n     * @todo: remove after all\n     */\n    public get _id(): number {\n        return this.__id;\n    }\n\n    /**\n     * Compares layers instances.\n     * @public\n     * @param {Layer} layer - Layer instance to compare.\n     * @returns {boolean} - Returns true if the layers is the same instance of the input.\n     */\n    public isEqual(layer: Layer): boolean {\n        return layer.__id === this.__id;\n    }\n\n    /**\n     * Assign the planet.\n     * @protected\n     * @virtual\n     * @param {Planet} planet - Planet render node.\n     */\n    public _assignPlanet(planet: Planet) {\n\n        this._planet = planet;\n\n        planet._layers.push(this);\n\n        if (planet.renderer && planet.renderer.isInitialized()) {\n            // TODO: webgl1\n            if (this._isSRGB) {\n                this._internalFormat = planet.renderer.handler.gl!.SRGB8_ALPHA8;\n            } else {\n                this._internalFormat = planet.renderer.handler.gl!.RGBA8;\n            }\n            this.createTexture = planet.renderer.handler.createTexture[this._textureFilter];\n\n            this.events.on(\"visibilitychange\", planet._onLayerVisibilityChanged, planet);\n\n            if (this._isBaseLayer && this._visibility) {\n                planet.setBaseLayer(this);\n            }\n\n            planet.events.dispatch(planet.events.layeradd, this);\n            this.events.dispatch(this.events.add, planet);\n            planet.updateVisibleLayers();\n            this._bindPicking();\n\n            if (this._visibility && this.hasImageryTiles()) {\n                this._preLoad();\n            }\n        }\n    }\n\n    public get isIdle(): boolean {\n        return this._planet && this._planet._terrainCompletedActivated || false;\n    }\n\n    /**\n     * Assign picking color to the layer.\n     * @protected\n     * @virtual\n     */\n    protected _bindPicking() {\n        this._planet && this._planet.renderer && this._planet.renderer.assignPickingColor<Layer>(this);\n    }\n\n    /**\n     * Adds layer to the planet.\n     * @public\n     * @param {Planet} planet - Adds layer to the planet.\n     */\n    public addTo(planet: Planet) {\n        if (!this._planet) {\n            this._assignPlanet(planet);\n        }\n    }\n\n    /**\n     * Removes from planet.\n     * @public\n     * @returns {Layer} -This layer.\n     */\n    public remove(): this {\n        let p = this._planet;\n        if (p) {\n            //TODO: replace to planet\n            for (let i = 0; i < p._layers.length; i++) {\n                if (this.isEqual(p._layers[i])) {\n                    p.renderer && p.renderer.clearPickingColor(this);\n                    p._layers.splice(i, 1);\n                    p.updateVisibleLayers();\n                    this.clear();\n                    p.events.dispatch(p.events.layerremove, this);\n                    this.events.dispatch(this.events.remove, p);\n                    this._planet = null;\n                    this._internalFormat = null;\n                    this.createTexture = null;\n                    return this;\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Clears layer material.\n     * @virtual\n     */\n    public clear() {\n        if (this._planet) {\n            this._planet._clearLayerMaterial(this);\n        }\n    }\n\n    /**\n     * Returns planet instance.\n     */\n    get planet(): Planet | null {\n        return this._planet;\n    }\n\n    /**\n     * Sets layer attribution text.\n     * @public\n     * @param {string} html - HTML code that represents layer attribution, it could be just a text.\n     */\n    public setAttribution(html: string) {\n        if (this._attribution !== html) {\n            this._attribution = html;\n            this._planet && this._planet.updateAttributionsList();\n        }\n    }\n\n    /**\n     * Gets layer attribution.\n     * @public\n     * @returns {string} Layer attribution\n     */\n    public getAttribution(): string {\n        return this._attribution;\n    }\n\n    /**\n     * Sets height over the ground.\n     * @public\n     * @param {number} height - Layer height.\n     */\n    public setHeight(height: number) {\n        this._height = height;\n        this._planet && this._planet.updateVisibleLayers();\n    }\n\n    /**\n     * Gets layer height.\n     * @public\n     * @returns {number} -\n     */\n    public getHeight(): number {\n        return this._height;\n    }\n\n    /**\n     * Sets z-index.\n     * @public\n     * @param {number} zIndex - Layer z-index.\n     */\n    public setZIndex(zIndex: number) {\n        this._zIndex = zIndex;\n        this._planet && this._planet.updateVisibleLayers();\n    }\n\n    /**\n     * Gets z-index.\n     * @public\n     * @returns {number} -\n     */\n    public getZIndex(): number {\n        return this._zIndex;\n    }\n\n    /**\n     * Set zIndex to the maximal value depend on other layers on the planet.\n     * @public\n     */\n    public bringToFront() {\n        if (this._planet) {\n            let vl = this._planet.visibleTileLayers;\n            let l = vl[vl.length - 1];\n            if (!l.isEqual(this)) {\n                this.setZIndex(l.getZIndex() + 1);\n            }\n        }\n    }\n\n    /**\n     * Returns true if the layer is a base.\n     * @public\n     * @returns {boolean} - Base layer flag.\n     */\n    public isBaseLayer(): boolean {\n        return this._isBaseLayer;\n    }\n\n    /**\n     * Sets base layer type true.\n     * @public\n     * @param {boolean} isBaseLayer -\n     */\n    public setBaseLayer(isBaseLayer: boolean) {\n        this._isBaseLayer = isBaseLayer;\n        if (this._planet) {\n            if (!isBaseLayer && this._planet.baseLayer && this.isEqual(this._planet.baseLayer)) {\n                this._planet.baseLayer = null;\n            }\n            this._planet.updateVisibleLayers();\n        }\n    }\n\n    /**\n     * Sets layer visibility.\n     * @public\n     * @virtual\n     * @param {boolean} visibility - Layer visibility.\n     */\n    public setVisibility(visibility: boolean) {\n        if (visibility !== this._visibility) {\n            this._visibility = visibility;\n            if (this._planet) {\n                if (this._isBaseLayer && visibility) {\n                    this._planet.setBaseLayer(this);\n                }\n                this._planet.updateVisibleLayers();\n                if (visibility && !this._isPreloadDone && !this.isVector) {\n                    this._isPreloadDone = true;\n                    this._preLoad();\n                }\n            }\n            this.events.dispatch(this.events.visibilitychange, this);\n        }\n    }\n\n    protected _forceMaterialApply(segment: Segment) {\n        let pm = segment.materials,\n            m = pm[this.__id];\n\n        if (!m) {\n            m = pm[this.__id] = this.createMaterial(segment);\n        }\n\n        if (!m.isReady) {\n            this._planet!._renderCompleted = false;\n        }\n\n        this.applyMaterial(m, true);\n    }\n\n    public clearMaterial(material: Material) {\n        //empty\n    }\n\n    public loadMaterial(material: Material, forceLoading: boolean = false) {\n        //empty\n    }\n\n    public applyMaterial(m: Material, isForced: boolean = false): NumberArray4 {\n        return [0, 0, 1, 1];\n    }\n\n    protected _preLoadRecursive(node: Node, maxZoom: number) {\n        if (node.segment.tileZoom > maxZoom) {\n            return;\n        }\n        if (this._preLoadZoomLevels.includes(node.segment.tileZoom)) {\n            this._forceMaterialApply(node.segment);\n        }\n\n        for (let i = 0, len = node.nodes.length; i < len; i++) {\n            if (node.nodes[i]) {\n                this._preLoadRecursive(node.nodes[i], maxZoom);\n            }\n        }\n    }\n\n    protected _preLoad() {\n        if (this._planet && this._preLoadZoomLevels.length) {\n\n            let p = this._planet,\n                maxZoom = Math.max(...this._preLoadZoomLevels);\n\n            for (let i = 0, len = p.quadTreeStrategy.quadTreeList.length; i < len; i++) {\n                this._preLoadRecursive(p.quadTreeStrategy.quadTreeList[i], maxZoom);\n            }\n\n        }\n    }\n\n    /**\n     * Gets layer visibility.\n     * @public\n     * @returns {boolean} - Layer visibility.\n     */\n    public getVisibility(): boolean {\n        return this._visibility;\n    }\n\n    /**\n     * Sets visible geographical extent.\n     * @public\n     * @param {Extent} extent - Layer visible geographical extent.\n     */\n    public setExtent(extent: Extent) {\n        let sw = extent.southWest.clone(),\n            ne = extent.northEast.clone();\n\n        if (sw.lat < mercator.MIN_LAT) {\n            sw.lat = mercator.MIN_LAT;\n        }\n\n        if (ne.lat > mercator.MAX_LAT) {\n            ne.lat = mercator.MAX_LAT;\n        }\n\n        this._extent = extent.clone();\n        this._extentMerc = new Extent(sw.forwardMercator(), ne.forwardMercator());\n\n        this._correctFullExtent();\n    }\n\n    /**\n     * Gets layer extent.\n     * @public\n     * @return {Extent} - Layer geodetic extent.\n     */\n    public getExtent(): Extent {\n        return this._extent;\n    }\n\n    /**\n     * Gets layer web-mercator extent.\n     * @public\n     * @return {Extent} - Layer extent.\n     */\n    public getExtentMerc(): Extent {\n        return this._extentMerc;\n    }\n\n    /**\n     * Special correction of the whole globe extent.\n     * @protected\n     */\n    protected _correctFullExtent() {\n        // var e = this._extent,\n        //    em = this._extentMerc;\n        // var ENLARGE_MERCATOR_LON = og.mercator.POLE + 50000;\n        // var ENLARGE_MERCATOR_LAT = og.mercator.POLE + 50000;\n        // if (e.northEast.lat === 90.0) {\n        //    em.northEast.lat = ENLARGE_MERCATOR_LAT;\n        // }\n        // if (e.northEast.lon === 180.0) {\n        //    em.northEast.lon = ENLARGE_MERCATOR_LON;\n        // }\n        // if (e.southWest.lat === -90.0) {\n        //    em.southWest.lat = -ENLARGE_MERCATOR_LAT;\n        // }\n        // if (e.southWest.lon === -180.0) {\n        //    em.southWest.lon = -ENLARGE_MERCATOR_LON;\n        // }\n    }\n\n    public get opacity(): number {\n        return this._opacity;\n    }\n\n    public get screenOpacity(): number {\n        return this._fading ? this._fadingOpacity : this._opacity;\n    }\n\n    public _refreshFadingOpacity() {\n        let p = this._planet!;\n        if (\n            this._visibility && p.getViewExtent().overlaps(this._extent) &&\n            p.maxCurrZoom >= this.minZoom &&\n            p.minCurrZoom <= this.maxZoom\n        ) {\n            this._fadingOpacity += this._fadingFactor;\n\n            if (\n                (this._fadingFactor > 0.0 && this._fadingOpacity > this._opacity) ||\n                (this._fadingFactor < 0.0 && this._fadingOpacity < this._opacity)\n            ) {\n                this._fadingOpacity = this._opacity;\n            }\n\n            return false;\n        } else {\n            this._fadingOpacity = 0.0;\n            return !this._visibility;\n        }\n    }\n\n    public createMaterial(segment: Segment): Material {\n        return new Material(segment, this);\n    }\n\n    public redraw() {\n        if (this._planet) {\n\n            this._planet.quadTreeStrategy.clearLayerMaterial(this);\n\n            // this._planet._quadTree.traverseTree((n: Node) => {\n            //         if (n.segment.materials[this.__id]) {\n            //             n.segment.materials[this.__id].clear();\n            //         }\n            //     }\n            // );\n            //\n            // this._planet._quadTreeNorth.traverseTree((n: Node) => {\n            //         if (n.segment.materials[this.__id]) {\n            //             n.segment.materials[this.__id].clear();\n            //         }\n            //     }\n            // );\n            //\n            // this._planet._quadTreeSouth.traverseTree((n: Node) => {\n            //         if (n.segment.materials[this.__id]) {\n            //             n.segment.materials[this.__id].clear();\n            //         }\n            //     }\n            // );\n        }\n    }\n\n    public abortMaterialLoading(material: Material) {\n\n    }\n\n    public abortLoading() {\n\n    }\n}\n\nexport type LayerEventsList = [\n    \"visibilitychange\",\n    \"add\",\n    \"remove\",\n    \"mousemove\",\n    \"mouseenter\",\n    \"mouseleave\",\n    \"lclick\",\n    \"rclick\",\n    \"mclick\",\n    \"ldblclick\",\n    \"rdblclick\",\n    \"mdblclick\",\n    \"lup\",\n    \"rup\",\n    \"mup\",\n    \"ldown\",\n    \"rdown\",\n    \"mdown\",\n    \"lhold\",\n    \"rhold\",\n    \"mhold\",\n    \"mousewheel\",\n    \"touchmove\",\n    \"touchstart\",\n    \"touchend\",\n    \"doubletouch\",\n    \"touchleave\",\n    \"touchenter\"\n];\n\nexport const LAYER_EVENTS: LayerEventsList = [\n    /**\n     * Triggered when layer visibility changed.\n     * @event og.Layer#visibilitychange\n     */\n    \"visibilitychange\",\n\n    /**\n     * Triggered when layer has added to the planet.\n     * @event og.Layer#add\n     */\n    \"add\",\n\n    /**\n     * Triggered when layer has removed from the planet.\n     * @event og.Layer#remove\n     */\n    \"remove\",\n\n    /**\n     * Triggered when mouse moves over the layer.\n     * @event og.Layer#mousemove\n     */\n    \"mousemove\",\n\n    /**\n     * Triggered when mouse has entered over the layer.\n     * @event og.Layer#mouseenter\n     */\n    \"mouseenter\",\n\n    /**\n     * Triggered when mouse leaves the layer.\n     * @event og.Layer#mouseenter\n     */\n    \"mouseleave\",\n\n    /**\n     * Mouse left button clicked.\n     * @event og.Layer#lclick\n     */\n    \"lclick\",\n\n    /**\n     * Mouse right button clicked.\n     * @event og.Layer#rclick\n     */\n    \"rclick\",\n\n    /**\n     * Mouse right button clicked.\n     * @event og.Layer#mclick\n     */\n    \"mclick\",\n\n    /**\n     * Mouse left button double click.\n     * @event og.Layer#ldblclick\n     */\n    \"ldblclick\",\n\n    /**\n     * Mouse right button double click.\n     * @event og.Layer#rdblclick\n     */\n    \"rdblclick\",\n\n    /**\n     * Mouse middle button double click.\n     * @event og.Layer#mdblclick\n     */\n    \"mdblclick\",\n\n    /**\n     * Mouse left button up(stop pressing).\n     * @event og.Layer#lup\n     */\n    \"lup\",\n\n    /**\n     * Mouse right button up(stop pressing).\n     * @event og.Layer#rup\n     */\n    \"rup\",\n\n    /**\n     * Mouse middle button up(stop pressing).\n     * @event og.Layer#mup\n     */\n    \"mup\",\n\n    /**\n     * Mouse left button is just pressed down(start pressing).\n     * @event og.Layer#ldown\n     */\n    \"ldown\",\n\n    /**\n     * Mouse right button is just pressed down(start pressing).\n     * @event og.Layer#rdown\n     */\n    \"rdown\",\n\n    /**\n     * Mouse middle button is just pressed down(start pressing).\n     * @event og.Layer#mdown\n     */\n    \"mdown\",\n\n    /**\n     * Mouse left button is pressing.\n     * @event og.Layer#lhold\n     */\n    \"lhold\",\n\n    /**\n     * Mouse right button is pressing.\n     * @event og.Layer#rhold\n     */\n    \"rhold\",\n\n    /**\n     * Mouse middle button is pressing.\n     * @event og.Layer#mhold\n     */\n    \"mhold\",\n\n    /**\n     * Mouse wheel is rotated.\n     * @event og.Layer#mousewheel\n     */\n    \"mousewheel\",\n\n    /**\n     * Triggered when touching moves over the layer.\n     * @event og.Layer#touchmove\n     */\n    \"touchmove\",\n\n    /**\n     * Triggered when layer begins to touch.\n     * @event og.Layer#touchstart\n     */\n    \"touchstart\",\n\n    /**\n     * Triggered when layer has finished touching.\n     * @event og.Layer#touchend\n     */\n    \"touchend\",\n\n    /**\n     * Triggered layer has double touched.\n     * @event og.Layer#doubletouch\n     */\n    \"doubletouch\",\n\n    /**\n     * Triggered when touching leaves layer borders.\n     * @event og.Layer#touchleave\n     */\n    \"touchleave\",\n\n    /**\n     * Triggered when touch enters over the layer.\n     * @event og.Layer#touchenter\n     */\n    \"touchenter\"\n];\n\nexport {Layer};\n","import * as quadTree from \"../quadTree/quadTree\";\nimport {EventCallback, EventsHandler} from \"../Events\";\nimport {ILayerParams, Layer, LayerEventsList} from \"./Layer\";\nimport {Material} from \"../layer/Material\";\nimport {NumberArray4} from \"../math/Vec4\";\nimport {Planet} from \"../scene/Planet\";\n\ntype ApplyImageFunc = (material: HTMLCanvasElement | ImageBitmap | HTMLImageElement) => void;\ntype DrawTileCallback = (material: Material, applyImage: ApplyImageFunc) => void;\n\nexport interface ICanvasTilesParams extends ILayerParams {\n    drawTile: DrawTileCallback;\n    animated?: boolean;\n    minNativeZoom?: number;\n    maxNativeZoom?: number;\n}\n\ntype CanvasTilesEventsList = [\n    \"load\",\n    \"loadend\"\n];\n\ntype CanvasTilesEventsType = EventsHandler<CanvasTilesEventsList> & EventsHandler<LayerEventsList>;\n\nconst CANVASTILES_EVENTS: CanvasTilesEventsList = [\n    /**\n     * Triggered when current tile image has loaded before rendering.\n     * @event og.layer.CanvasTiles#load\n     */\n    \"load\",\n\n    /**\n     * Triggered when all tiles have loaded or loading has stopped.\n     * @event og.layer.CanvasTiles#loadend\n     */\n    \"loadend\"\n];\n\n/**\n * Layer used to rendering each tile as a separate canvas object.\n * @class\n * @extends {Layer}\n * @param {String} [name=\"noname\"] - Layer name.\n * @param {ICanvasTilesParams} options:\n * @param {number} [options.opacity=1.0] - Layer opacity.\n * @param {number} [options.minZoom=0] - Minimal visibility zoom level.\n * @param {number} [options.maxZoom=0] - Maximal visibility zoom level.\n * @param {string} [options.attribution] - Layer attribution that displayed in the attribution area on the screen.\n * @param {boolean} [options.isBaseLayer=false] - Base layer flag.\n * @param {boolean} [options.visibility=true] - Layer visibility.\n * @param {DrawTileCallback} options.drawTile - Draw tile callback.\n * @fires EventsHandler<CanvasTilesEventsList>#load\n * @fires EventsHandler<CanvasTilesEventsList>#loadend\n */\nclass CanvasTiles extends Layer {\n\n    static MAX_REQUESTS: number = 20;\n    static __requestsCounter: number = 0\n\n    public override events: CanvasTilesEventsType;\n\n    public animated: boolean;\n\n    public minNativeZoom: number;\n    public maxNativeZoom: number;\n\n    /**\n     * Current creating tiles counter.\n     * @protected\n     * @type {number}\n     */\n    protected _counter: number;\n\n    /**\n     * Tile pending queue that waiting for create.\n     * @protected\n     * @type {Material[]}\n     */\n    protected _pendingsQueue: Material[]; // new og.QueueArray();\n\n    /**\n     * Draw tile callback.\n     * @type {DrawTileCallback}\n     * @public\n     */\n    public drawTile: DrawTileCallback;\n\n    protected _onLoadend_: EventCallback | null;\n\n\n    constructor(name: string | null, options: ICanvasTilesParams) {\n        super(name, options);\n\n        //@ts-ignore\n        this.events = this.events.registerNames(CANVASTILES_EVENTS);\n\n        this.animated = options.animated || false;\n\n        this.minNativeZoom = options.minNativeZoom || 0;\n        this.maxNativeZoom = options.maxNativeZoom || 100;\n\n        this._counter = 0;\n\n        this._pendingsQueue = []; // new og.QueueArray();\n\n        this.drawTile = options.drawTile;\n\n        this._onLoadend_ = null;\n    }\n\n    public override addTo(planet: Planet) {\n        this._onLoadend_ = this._onLoadend.bind(this);\n        this.events.on(\"loadend\", this._onLoadend_!, this);\n        return super.addTo(planet);\n    }\n\n    public override remove() {\n        this.events.off(\"loadend\", this._onLoadend_);\n        this._onLoadend_ = null;\n        return super.remove();\n    }\n\n    public _onLoadend() {\n        if (this._planet && this._planet._terrainCompletedActivated) {\n            this._planet.events.dispatch(this._planet.events.layerloadend, this);\n        }\n    }\n\n    public override get instanceName(): string {\n        return \"CanvasTiles\";\n    }\n\n    public override get isIdle() {\n        return super.isIdle && this._counter === 0;\n    }\n\n    /**\n     * Abort loading tiles.\n     * @public\n     */\n    public override abortLoading() {\n        //const q = this._pendingsQueue;\n        // for (let i = q._shiftIndex + 1; i < q._popIndex + 1; i++) {\n        //     if (q._array[i]) {\n        //         this.abortMaterialLoading(q._array[i]);\n        //     }\n        // }\n        // this._pendingsQueue.clear();\n        // for (let i = 0; i < q.length; i++) {\n        //     this.abortMaterialLoading(q[i]);\n        // }\n        this._pendingsQueue.forEach((qi: Material) => {\n            this.abortMaterialLoading(qi);\n        })\n        this._pendingsQueue = [];\n    }\n\n    /**\n     * Sets layer visibility.\n     * @public\n     * @param {boolean} visibility - Layer visibility.\n     */\n    public override setVisibility(visibility: boolean) {\n        if (visibility !== this._visibility) {\n            super.setVisibility(visibility);\n\n            if (!visibility) {\n                this.abortLoading();\n            }\n        }\n    }\n\n    /**\n     * Start to load tile material.\n     * @public\n     * @virtual\n     * @param {Material} material -\n     */\n    public override loadMaterial(material: Material) {\n        let seg = material.segment;\n\n        if (this._isBaseLayer) {\n            material.texture = seg._isNorth ? seg.planet.solidTextureOne : seg.planet.solidTextureTwo;\n        } else {\n            material.texture = seg.planet.transparentTexture;\n        }\n\n        if (this._planet!.layerLock.isFree() || material.segment.tileZoom < 2) {\n            material.isReady = false;\n            material.isLoading = true;\n            if (CanvasTiles.__requestsCounter >= CanvasTiles.MAX_REQUESTS && this._counter) {\n                this._pendingsQueue.push(material);\n            } else {\n                this._exec(material);\n            }\n        }\n    }\n\n    /**\n     * Loads material image and apply it to the planet segment.\n     * @protected\n     * @param {Material} material - Loads material image.\n     */\n    protected _exec(material: Material) {\n        CanvasTiles.__requestsCounter++;\n        this._counter++;\n        const e = this.events.load!;\n        if (e.handlers.length) {\n            this.events.dispatch(e, material);\n        }\n        requestAnimationFrame(() => {\n            this.drawTile(material, (canvas: HTMLCanvasElement | ImageBitmap | HTMLImageElement) => {\n                this._counter--;\n                CanvasTiles.__requestsCounter--;\n                this._correctCounter();\n                if (material.isLoading) {\n                    material.applyImage(canvas);\n                }\n                this._dequeueRequest();\n            });\n        });\n    }\n\n    protected _correctCounter() {\n        if (this._counter < 0) this._counter = 0;\n        if (CanvasTiles.__requestsCounter < 0) CanvasTiles.__requestsCounter = 0;\n    }\n\n    /**\n     * Abort exact material loading.\n     * @public\n     * @param {Material} material - Segment material.\n     */\n    public override abortMaterialLoading(material: Material) {\n        if (material.isLoading) {\n            this._counter--;\n            CanvasTiles.__requestsCounter--;\n            this._correctCounter();\n            this._dequeueRequest();\n        }\n        material.isLoading = false;\n        material.isReady = false;\n    }\n\n    protected _dequeueRequest() {\n        if (this._pendingsQueue.length) {\n            if (CanvasTiles.__requestsCounter < CanvasTiles.MAX_REQUESTS) {\n                const pmat = this._whilePendings();\n                if (pmat) {\n                    this._exec(pmat);\n                }\n            }\n        } else if (this._counter === 0 && this._planet && this._planet._terrainCompletedActivated) {\n            this.events.dispatch(this.events.loadend);\n        }\n    }\n\n    protected _whilePendings(): Material | null {\n        while (this._pendingsQueue.length) {\n            const pmat = this._pendingsQueue.pop();\n            if (pmat && pmat.segment && pmat.segment.node) {\n                if (pmat.segment.initialized && pmat.segment.node.getState() === quadTree.RENDERING) {\n                    return pmat;\n                }\n                pmat.isLoading = false;\n            }\n        }\n        return null;\n    }\n\n    public override applyMaterial(material: Material): NumberArray4 {\n        if (material.isReady) {\n\n            // IMPORTANT!\n            // Animated doesn't work withMaxNativeZoom\n            // It could be fixed with call drawTile method only for parent\n            // material (which is rendered on the current segment material),\n            // just for one renderer frame\n            if ((material.layer as CanvasTiles).animated) {\n                requestAnimationFrame(() => {\n                    this.drawTile(material, function (canvas) {\n                        material.applyImage(canvas);\n                    });\n                });\n            }\n\n            return material.texOffset;\n\n        } else if (material.segment.tileZoom < this.minNativeZoom) {\n            material.textureNotExists();\n        } else {\n\n            let segment = material.segment;\n            let pn = segment.node,\n                parentTextureExists = false;\n            let maxNativeZoom = (material.layer as CanvasTiles).maxNativeZoom;\n\n            if (segment.passReady && !material.isLoading && segment.tileZoom <= maxNativeZoom) {\n                this.loadMaterial(material);\n            }\n\n            let mId = this._id;\n            let psegm = material;\n            while (pn.parentNode) {\n                pn = pn.parentNode;\n                psegm = pn.segment.materials[mId];\n                if (psegm && psegm.textureExists) {\n                    parentTextureExists = true;\n                    break;\n                }\n            }\n\n            if (segment.passReady) {\n                if (pn.segment.tileZoom === maxNativeZoom) {\n                    if (segment.tileZoom > maxNativeZoom) {\n                        material.textureNotExists();\n                    }\n                } else if (pn.segment.tileZoom < maxNativeZoom) {\n\n                    let pn = segment.node;\n                    while (pn.segment.tileZoom > maxNativeZoom) {\n                        pn = pn.parentNode!;\n                    }\n\n                    let pnm = pn.segment.materials[mId];\n                    if (pnm) {\n                        !pnm.isLoading && !pnm.isReady && this.loadMaterial(pnm);\n                    } else {\n                        pnm = pn.segment.materials[material.layer._id] = material.layer.createMaterial(\n                            pn.segment\n                        );\n                        this.loadMaterial(pnm);\n                    }\n                }\n            }\n\n            if (parentTextureExists) {\n\n                //\n                // Animated doesn't work withMaxNativeZoom\n                //\n                if ((material.layer as CanvasTiles).animated) {\n                    requestAnimationFrame(() => {\n                        this.drawTile(material, function (canvas) {\n                            material.applyImage(canvas);\n                        });\n                    });\n                }\n\n                material.appliedNodeId = pn.nodeId;\n                material.texture = psegm.texture;\n                let dZ2 = 1.0 / (2 << (segment.tileZoom - pn.segment.tileZoom - 1));\n                material.texOffset[0] = segment.tileX * dZ2 - pn.segment.tileX;\n                material.texOffset[1] = segment.tileY * dZ2 - pn.segment.tileY;\n                material.texOffset[2] = dZ2;\n                material.texOffset[3] = dZ2;\n            } else {\n                material.texture = segment.planet.transparentTexture;\n                material.texOffset[0] = 0.0;\n                material.texOffset[1] = 0.0;\n                material.texOffset[2] = 1.0;\n                material.texOffset[3] = 1.0;\n            }\n        }\n\n        return material.texOffset;\n    }\n\n    public override clearMaterial(material: Material) {\n        if (material.isReady) {\n            material.isReady = false;\n            if (material.textureExists && material.texture && !material.texture.default) {\n                material.segment.handler.gl!.deleteTexture(material.texture);\n                material.texture = null;\n            }\n        }\n\n        this.abortMaterialLoading(material);\n        material.isLoading = false;\n        material.textureExists = false;\n\n        //@ts-ignore\n        material.layer = null;\n        //@ts-ignore\n        material.segment = null;\n\n        // if (material.image) {\n        //     material.image.src = \"\";\n        //     material.image = null;\n        // }\n    }\n}\n\nexport {CanvasTiles};\n","import {ToggleButton} from \"./ToggleButton\";\nimport {createEvents, EventsHandler} from '../Events';\n\ninterface IButtonGroupParams {\n    buttons?: ToggleButton[];\n}\n\ntype ButtonGroupEventsList = [\"change\"];\n\nconst BUTTONGROUP_EVENTS: ButtonGroupEventsList = [\"change\"];\n\nclass ButtonGroup {\n\n    public events: EventsHandler<ButtonGroupEventsList>;\n\n    protected _buttons: ToggleButton[];\n\n    constructor(options: IButtonGroupParams = {}) {\n\n        this.events = createEvents<ButtonGroupEventsList>(BUTTONGROUP_EVENTS);\n\n        this._buttons = options.buttons || [];\n\n        for (let i = 0; i < this._buttons.length; i++) {\n            this._bindButton(this._buttons[i]);\n        }\n    }\n\n    protected _bindButton(button: ToggleButton) {\n        button.events.on(\"change\", this._onChange);\n    }\n\n    public add(button: ToggleButton) {\n        this._buttons.push(button);\n        this._bindButton(button);\n    }\n\n    protected _onChange = (isActive: boolean, btn: ToggleButton) => {\n        if (isActive) {\n            btn.preventClick = true;\n            for (let i = 0; i < this._buttons.length; i++) {\n                let bi = this._buttons[i];\n                if (!bi.isEqual(btn)) {\n                    bi.setActive(false);\n                    bi.preventClick = false;\n                }\n            }\n            this.events.dispatch(this.events.change, btn);\n        }\n    }\n\n    public remove(button: ToggleButton) {\n        for (let i = 0; i < this._buttons.length; i++) {\n            if (this._buttons[i].isEqual(button)) {\n                this._buttons.splice(i);\n                button.events.off(\"change\", this._onChange);\n                return;\n            }\n        }\n    }\n}\n\nexport {ButtonGroup}","export class BaseWorker<T> {\n    protected _sourceId: number;\n    protected _source: Map<number, T>;\n    protected _pendingQueue: T[];\n    protected _numWorkers: number;\n    protected _workerQueue: Worker[];\n\n    constructor(numWorkers: number = 2, program?: string) {\n        this._sourceId = 0;\n        this._source = new Map<number, T>();\n        this._pendingQueue = [];\n        this._numWorkers = numWorkers;\n        this._workerQueue = [];\n        if (program) {\n            this.setProgram(program);\n        }\n    }\n\n    public check() {\n        if (this._pendingQueue.length) {\n            this.make(this._pendingQueue.pop()!);\n        }\n    }\n\n    public setProgram(program: string) {\n        let p = new Blob([program], {type: \"application/javascript\"});\n        for (let i = 0; i < this._numWorkers; i++) {\n            let w = new Worker(URL.createObjectURL(p));\n            w.onmessage = (e: MessageEvent) => {\n                this._onMessage(e);\n                this._workerQueue && this._workerQueue.unshift(e.target as Worker);\n                this.check();\n            }\n            this._workerQueue.push(w);\n        }\n    }\n\n    public make(data: T) {\n    }\n\n    protected _onMessage(e: MessageEvent) {\n\n    }\n\n    public destroy() {\n        for (let i = 0; i < this._workerQueue.length; i++) {\n            const w = this._workerQueue[i];\n            w.onmessage = null;\n            w.terminate();\n        }\n        //@ts-ignore\n        this._pendingQueue = null;\n        //@ts-ignore\n        this._workerQueue = null;\n    }\n\n    public get pendingQueue(): T[] {\n        return this._pendingQueue;\n    }\n}","import {BaseWorker} from \"../utils/BaseWorker\";\nimport {Label} from \"../entity/Label\";\nimport {LabelHandler} from \"../entity/LabelHandler\";\n\nexport const LOCK_UPDATE = -2;\nexport const LOCK_FREE = -1;\n\ninterface LabelInfo {\n    label: Label;\n    handler: LabelHandler;\n}\n\nclass LabelWorker extends BaseWorker<LabelInfo> {\n\n    constructor(numWorkers: number = 4) {\n        super(numWorkers, LABEL_PROGRAM);\n    }\n\n    protected override _onMessage(e: MessageEvent) {\n        let s = this._source.get(e.data.id)!;\n\n        if (s.label._lockId === LOCK_UPDATE) {\n            requestAnimationFrame(() => {\n                this.make({handler: s.handler, label: s.label});\n            });\n        } else {\n            s.handler.workerCallback(e.data, s.label);\n        }\n\n        this._source.delete(e.data.id);\n    }\n\n\n    public override make(data: LabelInfo) {\n        let label = data.label,\n            handler = data.handler;\n\n        if (handler._entityCollection) {\n            let labelData = label.serializeWorkerData(this._sourceId);\n            if (labelData) {\n                if (this._workerQueue.length) {\n                    let w = this._workerQueue.pop()!;\n                    this._source.set(this._sourceId, data);\n                    label._lockId = this._sourceId;\n                    this._sourceId++;\n                    w.postMessage({\n                        labelData: labelData\n                    }, [\n                        labelData.buffer,\n                    ]);\n                } else {\n                    this._pendingQueue.push(data);\n                }\n            }\n        }\n    }\n}\n\nconst LABEL_PROGRAM = `'use strict';\n\n    function concatTypedArrays(dest, index, source) {\n        let len = source.length,\n            offset = index * len;\n        for(let i = 0; i < len; i++) {\n            dest[offset + i] = source[i];\n        }\n    }\n\n    self.onmessage = function (e) {\n        var labelData = e.data.labelData,\n            id = labelData[0],\n            maxLetters = labelData[1],\n            isVisible = labelData[2],\n            /*3, 4, 5*/_positionHigh_x = labelData[3], _positionHigh_y = labelData[4], _positionHigh_z = labelData[5],\n            /*6, 7, 8*/_positionLow_x = labelData[6], _positionLow_y = labelData[7], _positionLow_z = labelData[8],\n            /*9*/_size = labelData[9],\n            /*10, 11, 12*/_offset_x = labelData[10], _offset_y = labelData[11], _offset_z = labelData[12],\n            /*13, 14, 15, 16*/_color_x = labelData[13], _color_y = labelData[14], _color_z = labelData[15], _color_w = labelData[16],\n            /*17*/_rotation = labelData[17],\n            /*18, 19, 20*/_alignedAxis_x = labelData[18], _alignedAxis_y = labelData[19], _alignedAxis_z = labelData[20],\n            /*21*/_fontIndex = labelData[21],\n            /*22*/_outline = labelData[22],\n            /*23, 24, 25, 26*/_outlineColor_x = labelData[23], _outlineColor_y = labelData[24], _outlineColor_z = labelData[25], _outlineColor_w = labelData[26],\n            /*27, 28, 29*/_pickingColor_x = labelData[27], _pickingColor_y = labelData[28], _pickingColor_z = labelData[29]\n         \n\n        let _vertexArr = new Float32Array(maxLetters * 12),\n            _texCoordArr = new Float32Array(maxLetters * 24),\n            _gliphParamArr = new Float32Array(maxLetters * 24),\n            _positionHighArr = new Float32Array(maxLetters * 18),\n            _positionLowArr = new Float32Array(maxLetters * 18),\n            _sizeArr = new Float32Array(maxLetters * 6),\n            _offsetArr = new Float32Array(maxLetters * 18),\n            _rgbaArr = new Float32Array(maxLetters * 24),\n            _rotationArr = new Float32Array(maxLetters * 6),\n            _alignedAxisArr = new Float32Array(maxLetters * 18),\n            _fontIndexArr = new Float32Array(maxLetters * 6),\n            _outlineArr = new Float32Array(maxLetters * 6),\n            _outlineColorArr = new Float32Array(maxLetters * 24),\n            _pickingColorArr = new Float32Array(maxLetters * 18);\n        \n        for (let i = 0; i < maxLetters; i++) {\n            if (isVisible !== 0) {\n                concatTypedArrays(_vertexArr, i, [0, 0, 0, -1, 1, -1, 1, -1, 1, 0, 0, 0]);\n            } else {\n                concatTypedArrays(_vertexArr, i, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n            }\n\n            concatTypedArrays(_texCoordArr, i, [0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0]);\n            concatTypedArrays(_gliphParamArr, i, [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0]);\n\n            var x = _positionHigh_x, y = _positionHigh_y, z = _positionHigh_z, w;\n            concatTypedArrays(_positionHighArr, i, [x, y, z, x, y, z, x, y, z, x, y, z, x, y, z, x, y, z]);\n\n            x = _positionLow_x; y = _positionLow_y; z = _positionLow_z;\n            concatTypedArrays(_positionLowArr, i, [x, y, z, x, y, z, x, y, z, x, y, z, x, y, z, x, y, z]);\n\n            x = _size;\n            concatTypedArrays(_sizeArr, i, [x, x, x, x, x, x]);\n\n            x = _offset_x; y = _offset_y; z = _offset_z;\n            concatTypedArrays(_offsetArr, i, [x, y, z, x, y, z, x, y, z, x, y, z, x, y, z, x, y, z]);\n\n            x = _color_x; y = _color_y; z = _color_z; w = _color_w;\n            concatTypedArrays(_rgbaArr, i, [x, y, z, w, x, y, z, w, x, y, z, w, x, y, z, w, x, y, z, w, x, y, z, w]);\n\n            x = _rotation;\n            concatTypedArrays(_rotationArr, i, [x, x, x, x, x, x]);\n\n            x = _alignedAxis_x; y = _alignedAxis_y; z = _alignedAxis_z;\n            concatTypedArrays(_alignedAxisArr, i, [x, y, z, x, y, z, x, y, z, x, y, z, x, y, z, x, y, z]);\n\n            x = _fontIndex;\n            concatTypedArrays(_fontIndexArr, i, [x, x, x, x, x, x]);\n\n            x = _outline;\n            concatTypedArrays(_outlineArr, i, [x, x, x, x, x, x]);\n\n            x = _outlineColor_x; y = _outlineColor_y; z = _outlineColor_z; w = _outlineColor_w;\n            concatTypedArrays(_outlineColorArr, i, [x, y, z, w, x, y, z, w, x, y, z, w, x, y, z, w, x, y, z, w, x, y, z, w]);\n\n            x = _pickingColor_x / 255; y = _pickingColor_y / 255; z = _pickingColor_z / 255;\n            concatTypedArrays(_pickingColorArr, i, [x, y, z, x, y, z, x, y, z, x, y, z, x, y, z, x, y, z]);\n        }\n\n        self.postMessage({\n                id: id,\n                vertexArr: _vertexArr,\n                texCoordArr: _texCoordArr,\n                gliphParamArr: _gliphParamArr,\n                positionHighArr: _positionHighArr,\n                positionLowArr: _positionLowArr,\n                sizeArr: _sizeArr,\n                offsetArr: _offsetArr,\n                rgbaArr: _rgbaArr,\n                rotationArr: _rotationArr,\n                alignedAxisArr: _alignedAxisArr,\n                fontIndexArr: _fontIndexArr,\n                outlineArr: _outlineArr,\n                outlineColorArr: _outlineColorArr,\n                pickingColorArr: _pickingColorArr\n             }, [\n                    _vertexArr.buffer,\n                    _texCoordArr.buffer,\n                    _gliphParamArr.buffer,\n                    _positionHighArr.buffer,\n                    _positionLowArr.buffer,\n                    _sizeArr.buffer,\n                    _offsetArr.buffer,\n                    _rgbaArr.buffer,\n                    _rotationArr.buffer,\n                    _alignedAxisArr.buffer,\n                    _fontIndexArr.buffer,\n                    _outlineArr.buffer,\n                    _outlineColorArr.buffer,\n                    _pickingColorArr.buffer\n            ]);\n    }`;\n\nexport {LabelWorker};","import * as utils from \"../utils/shared\";\nimport {Entity} from \"./Entity\";\nimport {LOCK_FREE, LOCK_UPDATE} from \"./LabelWorker\";\nimport {NumberArray2, Vec2} from \"../math/Vec2\";\nimport {NumberArray3, Vec3} from \"../math/Vec3\";\nimport {NumberArray4, Vec4} from \"../math/Vec4\";\nimport {BaseBillboardHandler} from \"./BaseBillboardHandler\";\n\nexport interface IBaseBillboardParams {\n    position?: NumberArray3 | Vec3;\n    rotation?: number;\n    color?: string | NumberArray4 | Vec4;\n    alignedAxis?: NumberArray3 | Vec3;\n    offset?: NumberArray2 | NumberArray3 | Vec2 | Vec3;\n    visibility?: boolean;\n}\n\n/**\n * Base prototype for billboard and label classes.\n * @class\n * @param {Object} [options] - Options:\n * @param {Vec3|Array.<number>} [options.position] - Billboard position.\n * @param {number} [options.rotation] - Screen angle rotation.\n * @param {Vec4|string|Array.<number>} [options.color] - Billboard color.\n * @param {Vec3|Array.<number>} [options.alignedAxis] - Billboard aligned vector.\n * @param {Vec3|Array.<number>} [options.offset] - Billboard center screen offset.\n * @param {boolean} [options.visibility] - Visibility.\n */\nclass BaseBillboard {\n    static __counter__: number = 0;\n    public __id: number;\n\n    /**\n     * Billboard center cartesian position.\n     * @protected\n     * @type {Vec3}\n     */\n    protected _position: Vec3;\n\n    public _positionHigh: Vec3;\n\n    public _positionLow: Vec3;\n\n    /**\n     * Screen space rotation angle.\n     * @public\n     * @type {number}\n     */\n    public _rotation: number;\n\n    /**\n     * RGBA color.\n     * @public\n     * @type {Vec4}\n     */\n    public _color: Vec4;\n\n    /**\n     * Cartesian aligned axis vector.\n     * @protected\n     * @type {Vec3}\n     */\n    protected _alignedAxis: Vec3;\n\n    /**\n     * Billboard center screen space offset. Where x,y - screen space offset and z - depth offset.\n     * @public\n     * @type {Vec3}\n     */\n    public _offset: Vec3;\n\n    /**\n     * Billboard visibility.\n     * @protected\n     * @type {boolean}\n     */\n    protected _visibility: boolean;\n\n    /**\n     * Entity instance that holds this billboard.\n     * @public\n     * @type {Entity}\n     */\n    public _entity: Entity | null;\n\n    /**\n     * Handler that stores and renders this billboard object.\n     * @public\n     * @type {BillboardHandler | null}\n     */\n    public _handler: BaseBillboardHandler | null;\n\n    /**\n     * Billboard handler array index.\n     * @public\n     * @type {number}\n     */\n    public _handlerIndex: number;\n\n    /**\n     * An indication that the object is ready to draw\n     * @public\n     * @type {number}\n     */\n    public _isReady: boolean;\n\n    public _lockId: number;\n\n    constructor(options: IBaseBillboardParams = {}) {\n\n        this.__id = BaseBillboard.__counter__++;\n\n        this._position = utils.createVector3(options.position);\n\n        this._positionHigh = new Vec3();\n\n        this._positionLow = new Vec3();\n\n        Vec3.doubleToTwoFloats(this._position, this._positionHigh, this._positionLow);\n\n        this._rotation = options.rotation || 0;\n\n        this._color = utils.createColorRGBA(options.color);\n\n        this._alignedAxis = utils.createVector3(options.alignedAxis);\n\n        this._offset = utils.createVector3(options.offset);\n\n        this._visibility = options.visibility != undefined ? options.visibility : true;\n\n        this._entity = null;\n\n        this._handler = null;\n\n        this._handlerIndex = -1;\n\n        this._isReady = false;\n\n        this._lockId = LOCK_FREE;\n    }\n\n    /**\n     * Sets billboard position.\n     * @public\n     * @param {number} x - X coordinate.\n     * @param {number} y - Y coordinate.\n     * @param {number} z - Z coordinate.\n     */\n    public setPosition(x: number, y: number, z: number) {\n        this._position.x = x;\n        this._position.y = y;\n        this._position.z = z;\n        Vec3.doubleToTwoFloats(this._position, this._positionHigh, this._positionLow);\n        if (this._isReady && this._handler) {\n            this._handler.setPositionArr(this._handlerIndex, this._positionHigh, this._positionLow);\n        } else if (this._lockId !== LOCK_FREE) {\n            this._lockId = LOCK_UPDATE;\n        }\n    }\n\n    /**\n     * Sets billboard position.\n     * @public\n     * @param {Vec3} position - Cartesian coordinates.\n     */\n    public setPosition3v(position: Vec3) {\n        this._position.x = position.x;\n        this._position.y = position.y;\n        this._position.z = position.z;\n        Vec3.doubleToTwoFloats(position, this._positionHigh, this._positionLow);\n        if (this._isReady && this._handler) {\n            this._handler.setPositionArr(this._handlerIndex, this._positionHigh, this._positionLow);\n        } else if (this._lockId !== LOCK_FREE) {\n            this._lockId = LOCK_UPDATE;\n        }\n    }\n\n    /**\n     * Returns billboard position.\n     * @public\n     * @returns {Vec3}\n     */\n    public getPosition(): Vec3 {\n        return this._position;\n    }\n\n    /**\n     * Sets screen space offset.\n     * @public\n     * @param {number} x - X offset.\n     * @param {number} y - Y offset.\n     * @param {number} [z] - Z offset.\n     */\n    public setOffset(x: number, y: number, z?: number) {\n        this._offset.x = x;\n        this._offset.y = y;\n        z != undefined && (this._offset.z = z);\n        if (this._isReady && this._handler) {\n            this._handler.setOffsetArr(this._handlerIndex, this._offset);\n        } else if (this._lockId !== LOCK_FREE) {\n            this._lockId = LOCK_UPDATE;\n        }\n    }\n\n    /**\n     * Sets screen space offset.\n     * @public\n     * @param {Vec2} offset - Offset size.\n     */\n    public setOffset3v(offset: Vec3) {\n        this.setOffset(offset.x, offset.y, offset.z);\n    }\n\n    /**\n     * Returns billboard screen space offset size.\n     * @public\n     * @returns {Vec3}\n     */\n    public getOffset(): Vec3 {\n        return this._offset;\n    }\n\n    /**\n     * Sets billboard screen space rotation in radians.\n     * @public\n     * @param {number} rotation - Screen space rotation in radians.\n     */\n    public setRotation(rotation: number) {\n        if (rotation !== this._rotation) {\n            this._rotation = rotation;\n            if (this._isReady && this._handler) {\n                this._handler.setRotationArr(this._handlerIndex, rotation);\n            } else if (this._lockId !== LOCK_FREE) {\n                this._lockId = LOCK_UPDATE;\n            }\n        }\n    }\n\n    /**\n     * Gets screen space rotation.\n     * @public\n     * @returns {number}\n     */\n    public getRotation(): number {\n        return this._rotation;\n    }\n\n    /**\n     * Sets billboard opacity.\n     * @public\n     * @param {number} a - Billboard opacity.\n     */\n    public setOpacity(a: number) {\n        if (a !== this._color.w) {\n            a != undefined && (this._color.w = a);\n            if (this._isReady && this._handler) {\n                this._handler.setRgbaArr(this._handlerIndex, this._color);\n            } else if (this._lockId !== LOCK_FREE) {\n                this._lockId = LOCK_UPDATE;\n            }\n        }\n    }\n\n    /**\n     * Sets RGBA color. Each channel from 0.0 to 1.0.\n     * @public\n     * @param {number} r - Red.\n     * @param {number} g - Green.\n     * @param {number} b - Blue.\n     * @param {number} a - Alpha.\n     */\n    public setColor(r: number, g: number, b: number, a?: number) {\n        if (a !== this._color.w || r !== this._color.x || g !== this._color.y || this._color.z !== b) {\n            this._color.x = r;\n            this._color.y = g;\n            this._color.z = b;\n            a != undefined && (this._color.w = a);\n            if (this._isReady && this._handler) {\n                this._handler.setRgbaArr(this._handlerIndex, this._color);\n            } else if (this._lockId !== LOCK_FREE) {\n                this._lockId = LOCK_UPDATE;\n            }\n        }\n    }\n\n    /**\n     * Sets RGBA color. Each channel from 0.0 to 1.0.\n     * @public\n     * @param {Vec4} color - RGBA vector.\n     */\n    public setColor4v(color: Vec4) {\n        this.setColor(color.x, color.y, color.z, color.w);\n    }\n\n    /**\n     * Sets billboard color.\n     * @public\n     * @param {string} color - HTML style color.\n     */\n    public setColorHTML(color: string) {\n        this.setColor4v(utils.htmlColorToRgba(color));\n    }\n\n    /**\n     * Returns RGBA color.\n     * @public\n     * @returns {Vec4}\n     */\n    public getColor(): Vec4 {\n        return this._color;\n    }\n\n    /**\n     * Sets billboard visibility.\n     * @public\n     * @param {boolean} visibility - Visibility flag.\n     */\n    public setVisibility(visibility: boolean) {\n        if (visibility !== this._visibility) {\n            this._visibility = visibility;\n            if (this._isReady && this._handler) {\n                this._handler.setVisibility(this._handlerIndex, visibility);\n            } else if (this._lockId !== LOCK_FREE) {\n                this._lockId = LOCK_UPDATE;\n            }\n        }\n    }\n\n    /**\n     * Returns billboard visibility.\n     * @public\n     * @returns {boolean}\n     */\n    public getVisibility(): boolean {\n        return this._visibility;\n    }\n\n    /**\n     * Sets billboard cartesian aligned vector.\n     * @public\n     * @param {number} x - Aligned vector X coordinate.\n     * @param {number} y - Aligned vector Y coordinate.\n     * @param {number} z - Aligned vector Z coordinate.\n     */\n    public setAlignedAxis(x: number, y: number, z: number) {\n        this._alignedAxis.x = x;\n        this._alignedAxis.y = y;\n        this._alignedAxis.z = z;\n        if (this._isReady && this._handler) {\n            this._handler.setAlignedAxisArr(this._handlerIndex, this._alignedAxis);\n        } else if (this._lockId !== LOCK_FREE) {\n            this._lockId = LOCK_UPDATE;\n        }\n    }\n\n    /**\n     * Sets billboard aligned vector.\n     * @public\n     * @param {Vec3} alignedAxis - Align direction.\n     */\n    public setAlignedAxis3v(alignedAxis: Vec3) {\n        this.setAlignedAxis(alignedAxis.x, alignedAxis.y, alignedAxis.z);\n    }\n\n    /**\n     * Returns aligned vector.\n     * @public\n     * @returns {Vec3}\n     */\n    public getAlignedAxis(): Vec3 {\n        return this._alignedAxis;\n    }\n\n    /**\n     * Removes billboard from handler.\n     * @public\n     */\n    public remove() {\n        this._entity = null;\n        this._handler && this._handler.remove(this);\n    }\n\n    /**\n     * Sets billboard picking color.\n     * @public\n     * @param {Vec3} color - Picking color.\n     */\n    public setPickingColor3v(color: Vec3) {\n        if (this._isReady && this._handler) {\n            this._handler.setPickingColorArr(this._handlerIndex, color);\n        } else if (this._lockId !== LOCK_FREE) {\n            this._lockId = LOCK_UPDATE;\n        }\n    }\n\n    public serializeWorkerData(workerId: number): Float32Array | null {\n        if (this._handler) {\n            return new Float32Array([]);\n        }\n        return null;\n    }\n}\n\nexport {BaseBillboard};\n","import {BaseBillboard, IBaseBillboardParams} from \"./BaseBillboard\";\nimport {BillboardHandler} from \"./BillboardHandler\";\nimport {HTMLImageElementExt} from \"../utils/ImagesCacheManager\";\n\nexport interface IBillboardParams extends IBaseBillboardParams {\n    src?: string;\n    image?: HTMLImageElement;\n    size?: [number, number];\n    width?: number;\n    height?: number;\n}\n\n/**\n * Represents basic quad billboard image.\n * @class\n * @extends {BaseBillboard}\n * @param {Object} [options] - Options:\n * @param {Vec3|Array.<number>} [options.position] - Billboard spatial position.\n * @param {number} [options.rotation] - Screen angle rotation.\n * @param {Vec4|string|Array.<number>} [options.color] - Billboard color.\n * @param {Vec3|Array.<number>} [options.alignedAxis] - Billboard aligned vector.\n * @param {Vec3|Array.<number>} [options.offset] - Billboard center screen offset.\n * @param {boolean} [options.visibility] - Visibility.\n * @param {string} [options.src] - Billboard image url source.\n * @param {Image} [options.image] - Billboard image object.\n * @param {number} [options.width] - Screen width.\n * @param {number} [options.height] - Screen height.\n * @param {number} [options.scale] - Billboard scale.\n */\nclass Billboard extends BaseBillboard {\n\n    public override _handler: BillboardHandler | null;\n\n    /**\n     * Image src.\n     * @protected\n     * @type {string}\n     */\n    protected _src: string | null;\n\n    /**\n     * Image object.\n     * @protected\n     * @type {Object}\n     */\n    protected _image: HTMLImageElement & { __nodeIndex?: number } | null;\n\n    protected _scale: number;\n\n    /**\n     * Billboard screen width.\n     * @public\n     * @type {number}\n     */\n    public _width: number;\n\n    /**\n     * Billboard screen height.\n     * @public\n     * @type {number}\n     */\n    public _height: number;\n\n    constructor(options: IBillboardParams = {}) {\n\n        super(options);\n\n        this._handler = null;\n\n        this._src = options.src || null;\n\n        this._image = options.image || null;\n\n        this._scale = 1.0;\n\n        this._width = options.width || (options.size ? options.size[0] : 30);\n\n        this._height = options.height || (options.size ? options.size[1] : 30);\n    }\n\n    /**\n     * Sets billboard image url source.\n     * @public\n     * @param {string} src - Image url.\n     */\n    public setSrc(src: string | null) {\n        this._src = src;\n        let bh = this._handler;\n        if (bh && src && src.length) {\n            let rn = bh._entityCollection.renderNode;\n            if (rn && rn.renderer) {\n                let ta = rn.renderer.billboardsTextureAtlas;\n                let that = this;\n                ta.loadImage(src, function (img: HTMLImageElementExt) {\n                    if (img.__nodeIndex != undefined && ta.get(img.__nodeIndex)) {\n                        that._image = img;\n                        bh!.setTexCoordArr(\n                            that._handlerIndex,\n                            ta.get(that._image!.__nodeIndex!)!.texCoords\n                        );\n                    } else {\n                        ta.addImage(img);\n                        ta.createTexture();\n                        that._image = img;\n                        rn!.updateBillboardsTexCoords();\n                    }\n                });\n            }\n        }\n    }\n\n    public getSrc(): string | null {\n        return this._src;\n    }\n\n    /**\n     * Sets image object.\n     * @public\n     * @param {Object} image - JavaScript image object.\n     */\n    public setImage(image: HTMLImageElement) {\n        this.setSrc(image.src);\n    }\n\n    public getImage(): HTMLImageElementExt | null {\n        return this._image;\n    }\n\n    /**\n     * Sets billboard screen size in pixels.\n     * @public\n     * @param {number} width - Billboard width.\n     * @param {number} height - Billboard height.\n     */\n    public setSize(width: number, height: number) {\n        this._width = width;\n        this._height = height;\n        this._handler &&\n        this._handler.setSizeArr(this._handlerIndex, width * this._scale, height * this._scale);\n    }\n\n    /**\n     * Returns billboard screen size.\n     * @public\n     * @returns {Object}\n     */\n    public getSize(): { width: number, height: number } {\n        return {\n            width: this._width,\n            height: this._height\n        };\n    }\n\n    /**\n     * Sets billboard screen width.\n     * @public\n     * @param {number} width - Width.\n     */\n    public setWidth(width: number) {\n        this.setSize(width, this._height);\n    }\n\n    /**\n     * Gets billboard screen width.\n     * @public\n     * @returns {number}\n     */\n    public getWidth(): number {\n        return this._width;\n    }\n\n    /**\n     * Sets billboard screen heigh.\n     * @public\n     * @param {number} height - Height.\n     */\n    public setHeight(height: number) {\n        this.setSize(this._width, height);\n    }\n\n    /**\n     * Gets billboard screen height.\n     * @public\n     * @returns {number}\n     */\n    public getHeight(): number {\n        return this._height;\n    }\n}\n\nexport {Billboard};\n","import * as utils from \"../utils/shared\";\nimport {Entity} from \"./Entity\";\nimport {Extent} from \"../Extent\";\nimport {GeometryHandler} from \"./GeometryHandler\";\nimport {LonLat} from \"../LonLat\";\nimport {NumberArray4, Vec4} from \"../math/Vec4\";\nimport {NumberArray2} from \"../math/Vec2\";\nimport {NumberArray3} from \"../math/Vec3\";\n\nconst GeometryType: Record<string, number> = {\n    POINT: 1,\n    LINESTRING: 2,\n    POLYGON: 3,\n    MULTIPOLYGON: 4,\n    MULTILINESTRING: 5\n};\n\nexport type CoordinatesType = NumberArray2 | NumberArray3;\n// {\n//     \"type\": \"Point\",\n//     \"coordinates\": [100.0, 0.0]\n// }\nexport type IPointCoordinates = CoordinatesType;\n\n// {\n//     \"type\": \"LineString\",\n//     \"coordinates\": [\n//         [100.0, 0.0],\n//         [101.0, 1.0]\n//     ]\n// }\nexport type ILineStringCoordinates = CoordinatesType[];\n\n// No holes\n// {\n//     \"type\": \"Polygon\",\n//     \"coordinates\": [\n//         [\n//             [100.0, 0.0],\n//             [101.0, 0.0],\n//             [101.0, 1.0],\n//             [100.0, 1.0],\n//             [100.0, 0.0]\n//         ]\n//     ]\n// }\n//\n// With holes:\n// {\n//     \"type\": \"Polygon\",\n//     \"coordinates\": [\n//         [\n//             [100.0, 0.0],\n//             [101.0, 0.0],\n//             [101.0, 1.0],\n//             [100.0, 1.0],\n//             [100.0, 0.0]\n//         ],\n//         [\n//             [100.8, 0.8],\n//             [100.8, 0.2],\n//             [100.2, 0.2],\n//             [100.2, 0.8],\n//             [100.8, 0.8]\n//         ]\n//     ]\n// }\nexport type IPolygonCoordinates = CoordinatesType[][];\n\n// {\n//     \"type\": \"MultiLineString\",\n//     \"coordinates\": [\n//         [\n//             [100.0, 0.0],\n//             [101.0, 1.0]\n//         ],\n//         [\n//             [102.0, 2.0],\n//             [103.0, 3.0]\n//         ]\n//     ]\n// }\nexport type IMultiLineStringCoordinates = ILineStringCoordinates[];\n\n// {\n//     \"type\": \"MultiPolygon\",\n//     \"coordinates\": [\n//         [\n//             [\n//                 [102.0, 2.0],\n//                 [103.0, 2.0],\n//                 [103.0, 3.0],\n//                 [102.0, 3.0],\n//                 [102.0, 2.0]\n//             ]\n//         ],\n//         [\n//             [\n//                 [100.0, 0.0],\n//                 [101.0, 0.0],\n//                 [101.0, 1.0],\n//                 [100.0, 1.0],\n//                 [100.0, 0.0]\n//             ],\n//             [\n//                 [100.2, 0.2],\n//                 [100.2, 0.8],\n//                 [100.8, 0.8],\n//                 [100.8, 0.2],\n//                 [100.2, 0.2]\n//             ]\n//         ]\n//     ]\n// }\nexport type IMultiPolygonCoordinates = IPolygonCoordinates[];\n\nexport type IGeometryCoordinates =\n    IPointCoordinates |\n    IPolygonCoordinates |\n    IMultiPolygonCoordinates |\n    ILineStringCoordinates |\n    IMultiLineStringCoordinates;\n\ninterface IGeometry {\n    type: string;\n    coordinates: IGeometryCoordinates;\n}\n\ninterface IGeometryStyle {\n    fillColor?: string | NumberArray4 | Vec4;\n    lineColor?: string | NumberArray4 | Vec4;\n    strokeColor?: string | NumberArray4 | Vec4;\n    lineWidth?: number;\n    strokeWidth?: number;\n}\n\ninterface IGeometryStyleInternal {\n    fillColor: Vec4;\n    lineColor: Vec4;\n    strokeColor: Vec4;\n    lineWidth: number;\n    strokeWidth: number;\n}\n\nexport interface IGeometryParams {\n    type?: string;\n    coordinates?: IGeometryCoordinates;\n    style?: IGeometryStyle;\n    visibility?: boolean;\n}\n\nclass Geometry {\n    static __counter__: number = 0;\n\n    public __id: number;\n\n    /**\n     * Entity instance that holds this geometry.\n     * @public\n     * @type {Entity}\n     */\n    public _entity: Entity | null;\n\n    public _handler: GeometryHandler | null;\n    public _handlerIndex: number;\n\n    // Polygon\n    public _polyVerticesHighMerc: number[];\n    public _polyVerticesLowMerc: number[];\n    public _polyVerticesLength: number;\n    public _polyIndexesLength: number;\n    public _polyVerticesHandlerIndex: number;\n    public _polyIndexesHandlerIndex: number;\n\n    // Line(Linestring and polygon's stroke(s)\n    public _lineVerticesHighMerc: number[];\n    public _lineVerticesLowMerc: number[];\n    public _lineVerticesLength: number;\n    public _lineOrdersLength: number;\n    public _lineIndexesLength: number;\n    public _lineColorsLength: number;\n    public _lineThicknessLength: number;\n    public _lineVerticesHandlerIndex: number;\n    public _lineOrdersHandlerIndex: number;\n    public _lineIndexesHandlerIndex: number;\n    public _lineThicknessHandlerIndex: number;\n    public _lineColorsHandlerIndex: number;\n    protected _type: number;\n    public _coordinates: IGeometryCoordinates;\n    protected _extent: Extent;\n    public _style: IGeometryStyleInternal;\n    protected _visibility: boolean;\n    public _pickingReady: boolean;\n\n    constructor(options: IGeometryParams = {}) {\n\n        this.__id = Geometry.__counter__++;\n\n        this._entity = null;\n\n        this._handler = null;\n        this._handlerIndex = -1;\n\n        this._polyVerticesHighMerc = [];\n        this._polyVerticesLowMerc = [];\n        this._polyVerticesLength = -1;\n        this._polyIndexesLength = -1;\n        this._polyVerticesHandlerIndex = -1;\n        this._polyIndexesHandlerIndex = -1;\n\n        this._lineVerticesHighMerc = [];\n        this._lineVerticesLowMerc = [];\n        this._lineVerticesLength = -1;\n        this._lineOrdersLength = -1;\n        this._lineIndexesLength = -1;\n        this._lineColorsLength = -1;\n        this._lineThicknessLength = -1;\n        this._lineVerticesHandlerIndex = -1;\n        this._lineOrdersHandlerIndex = -1;\n        this._lineIndexesHandlerIndex = -1;\n        this._lineThicknessHandlerIndex = -1;\n        this._lineColorsHandlerIndex = -1;\n\n        this._type = (options.type && Geometry.getType(options.type)) || GeometryType.POINT;\n        this._coordinates = [];\n        this._extent = Geometry.getExtent({\n                type: options.type || \"Point\",\n                coordinates: options.coordinates || []\n            },\n            this._coordinates\n        );\n\n        options.style = options.style || {};\n\n        this._style = {\n            fillColor: utils.createColorRGBA(options.style.fillColor, new Vec4(0.19, 0.62, 0.85, 0.4)),\n            lineColor: utils.createColorRGBA(options.style.lineColor, new Vec4(0.19, 0.62, 0.85, 1)),\n            strokeColor: utils.createColorRGBA(options.style.strokeColor, new Vec4(1, 1, 1, 0.95)),\n            lineWidth: options.style.lineWidth || 3,\n            strokeWidth: options.style.strokeWidth || 0\n        };\n\n        this._visibility = options.visibility || true;\n\n        // optimization flag for picking mask rendering pass\n        this._pickingReady = false;\n    }\n\n    public get id(): number {\n        return this.__id;\n    }\n\n    public get type(): number {\n        return this._type;\n    }\n\n    static getType(typeStr: string): number {\n        return GeometryType[typeStr.toUpperCase()];\n    }\n\n    /**\n     * Returns geometry extent.\n     @static\n     @param {IGeometry} geometryObj - GeoJSON style geometry feature.\n     @param {IGeometryCoordinates} outCoordinates - Geometry feature coordinates clone.\n     @returns {Extent} -\n     */\n    static getExtent(geometryObj: IGeometry, outCoordinates: IGeometryCoordinates): Extent {\n        let res = new Extent(new LonLat(180.0, 90.0), new LonLat(-180.0, -90.0));\n        let t = Geometry.getType(geometryObj.type);\n\n        if (t === GeometryType.POINT) {\n            let lon: number = geometryObj.coordinates[0] as number,\n                lat: number = geometryObj.coordinates[1] as number;\n            res.southWest.lon = lon;\n            res.southWest.lat = lat;\n            res.northEast.lon = lon;\n            res.northEast.lat = lat;\n            outCoordinates && (outCoordinates[0] = lon) && (outCoordinates[1] = lat);\n        } else if (t === GeometryType.LINESTRING) {\n            let c: ILineStringCoordinates = geometryObj.coordinates as ILineStringCoordinates;\n            for (let i = 0; i < c.length; i++) {\n                let lon = c[i][0],\n                    lat = c[i][1];\n                if (lon < res.southWest.lon) res.southWest.lon = lon;\n                if (lat < res.southWest.lat) res.southWest.lat = lat;\n                if (lon > res.northEast.lon) res.northEast.lon = lon;\n                if (lat > res.northEast.lat) res.northEast.lat = lat;\n                outCoordinates && ((outCoordinates as ILineStringCoordinates)[i] = [lon, lat]);\n            }\n        } else if (t === GeometryType.POLYGON) {\n            let c: IPolygonCoordinates = geometryObj.coordinates as IPolygonCoordinates;\n            for (let i = 0; i < c.length; i++) {\n                let ci: CoordinatesType[] = c[i];\n                outCoordinates && (outCoordinates[i] = []);\n                for (let j = 0; j < ci.length; j++) {\n                    let cij = ci[j];\n                    let lon = cij[0],\n                        lat = cij[1];\n                    if (lon < res.southWest.lon) res.southWest.lon = lon;\n                    if (lat < res.southWest.lat) res.southWest.lat = lat;\n                    if (lon > res.northEast.lon) res.northEast.lon = lon;\n                    if (lat > res.northEast.lat) res.northEast.lat = lat;\n                    outCoordinates && ((outCoordinates as IPolygonCoordinates)[i][j] = [lon, lat]);\n                }\n            }\n        } else if (t === GeometryType.MULTIPOLYGON) {\n            let p = geometryObj.coordinates;\n            for (let i = 0; i < p.length; i++) {\n                let pi: IPolygonCoordinates = p[i] as IPolygonCoordinates;\n                outCoordinates && (outCoordinates[i] = []);\n                for (let j = 0; j < pi.length; j++) {\n                    let pij: CoordinatesType[] = pi[j];\n                    outCoordinates && ((outCoordinates as IMultiPolygonCoordinates)[i][j] = []);\n                    for (let k = 0; k < pij.length; k++) {\n                        let pijk = pij[k];\n                        let lon = pijk[0],\n                            lat = pijk[1];\n                        if (lon < res.southWest.lon) res.southWest.lon = lon;\n                        if (lat < res.southWest.lat) res.southWest.lat = lat;\n                        if (lon > res.northEast.lon) res.northEast.lon = lon;\n                        if (lat > res.northEast.lat) res.northEast.lat = lat;\n                        outCoordinates && ((outCoordinates as IMultiPolygonCoordinates)[i][j][k] = [lon, lat]);\n                    }\n                }\n            }\n        } else if (t === GeometryType.MULTILINESTRING) {\n            let c = geometryObj.coordinates;\n            for (let i = 0; i < c.length; i++) {\n                let ci: ILineStringCoordinates = c[i] as ILineStringCoordinates;\n                outCoordinates && (outCoordinates[i] = []);\n                for (let j = 0; j < ci.length; j++) {\n                    let cij = ci[j];\n                    let lon = cij[0],\n                        lat = cij[1];\n                    if (lon < res.southWest.lon) res.southWest.lon = lon;\n                    if (lat < res.southWest.lat) res.southWest.lat = lat;\n                    if (lon > res.northEast.lon) res.northEast.lon = lon;\n                    if (lat > res.northEast.lat) res.northEast.lat = lat;\n                    outCoordinates && ((outCoordinates as IMultiLineStringCoordinates)[i][j] = [lon, lat]);\n                }\n            }\n        } else {\n            res.southWest.lon = res.southWest.lat = res.northEast.lon = res.northEast.lat = 0.0;\n            outCoordinates && (outCoordinates[0] = 0) && (outCoordinates[1] = 0);\n        }\n\n        return res;\n    }\n\n    /**\n     * @todo ASAP need test for this method\n     * @param geoJson\n     * @returns {Geometry}\n     */\n    public setGeometry(geoJson: IGeometry): Geometry {\n        let h = this._handler;\n        if (h) {\n            this.remove();\n            this._type = Geometry.getType(geoJson.type || \"Point\");\n            this._extent = Geometry.getExtent(geoJson, this._coordinates);\n            h.add(this);\n        }\n        return this;\n    }\n\n    public setFillColor(r: number, g: number, b: number, a: number = 1.0): Geometry {\n        let c = this._style.fillColor;\n        if ((c.w === 0.0 && a !== 0.0) || (c.w !== 0.0 && a === 0.0)) {\n            this._pickingReady = false;\n        }\n        c.x = r;\n        c.y = g;\n        c.z = b;\n        c.w = a;\n        this._handler && this._handler.setPolyColorArr(this, c);\n        return this;\n    }\n\n    public overlaps(extent: Extent): boolean {\n        return this._extent.overlaps(extent);\n    }\n\n    public setFillColor4v(rgba: Vec4): Geometry {\n        return this.setFillColor(rgba.x, rgba.y, rgba.z, rgba.w);\n    }\n\n    public setStrokeColor(r: number, g: number, b: number, a: number = 1.0): Geometry {\n        let c = this._style.strokeColor;\n        if ((c.w === 0.0 && a !== 0.0) || (c.w !== 0.0 && a === 0.0)) {\n            this._pickingReady = false;\n        }\n        c.x = r;\n        c.y = g;\n        c.z = b;\n        c.w = a;\n        this._handler && this._handler.setLineStrokeColorArr(this, c);\n        return this;\n    }\n\n    public setLineColor(r: number, g: number, b: number, a: number = 1.0): Geometry {\n        let c = this._style.lineColor;\n        if ((c.w === 0.0 && a !== 0.0) || (c.w !== 0.0 && a === 0.0)) {\n            this._pickingReady = false;\n        }\n        c.x = r;\n        c.y = g;\n        c.z = b;\n        c.w = a;\n        this._handler && this._handler.setLineColorArr(this, c);\n        return this;\n    }\n\n    public setStrokeColor4v(rgba: Vec4): Geometry {\n        return this.setStrokeColor(rgba.x, rgba.y, rgba.z, rgba.w);\n    }\n\n    public setLineColor4v(rgba: Vec4): Geometry {\n        return this.setLineColor(rgba.x, rgba.y, rgba.z, rgba.w);\n    }\n\n    public setStrokeOpacity(opacity: number): Geometry {\n        let c = this._style.strokeColor;\n        c.w = opacity;\n        return this.setStrokeColor(c.x, c.y, c.z, opacity);\n    }\n\n    public setLineOpacity(opacity: number): Geometry {\n        let c = this._style.lineColor;\n        c.w = opacity;\n        return this.setLineColor(c.x, c.y, c.z, opacity);\n    }\n\n    public setStrokeWidth(width: number): Geometry {\n        this._style.strokeWidth = width;\n        this._pickingReady = false;\n        this._handler && this._handler.setLineStrokeArr(this, width);\n        return this;\n    }\n\n    public bringToFront(): Geometry {\n        this._handler && this._handler.bringToFront(this);\n        return this;\n    }\n\n    public setLineWidth(width: number): Geometry {\n        this._style.lineWidth = width;\n        this._pickingReady = false;\n        this._handler && this._handler.setLineThicknessArr(this, width);\n        return this;\n    }\n\n    public setFillOpacity(opacity: number): Geometry {\n        let c = this._style.fillColor;\n        if ((c.w === 0.0 && opacity !== 0.0) || (c.w !== 0.0 && opacity === 0.0)) {\n            this._pickingReady = false;\n        }\n        c.w = opacity;\n        this._handler && this._handler.setPolyColorArr(this, c);\n        return this;\n    }\n\n    public setVisibility(visibility: boolean): Geometry {\n        this._visibility = visibility;\n        this._handler && this._handler.setGeometryVisibility(this);\n        return this;\n    }\n\n    public getVisibility(): boolean {\n        return this._visibility;\n    }\n\n    public remove() {\n        this._handler && this._handler.remove(this);\n    }\n\n    public getExtent(): Extent {\n        return this._extent.clone();\n    }\n\n    public getType(): number {\n        return this._type;\n    }\n}\n\nexport {Geometry, GeometryType};\n","import {Vec2} from './Vec2';\n\nexport class Line2 {\n\n    public a: number;\n    public b: number;\n    public c: number;\n\n    constructor(a = 0, b = 0, c = 0) {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n    }\n\n    static get(p0: Vec2, p1: Vec2): Line2 {\n        return new Line2(p1.y - p0.y, p0.x - p1.x, p1.x * p0.y - p0.x * p1.y);\n    }\n\n    static getParallel(l: Line2, p: Vec2): Line2 {\n        return new Line2(l.a, l.b, -l.a * p.x - l.b * p.y);\n    }\n\n    static getIntersection(L0: Line2, L1: Line2): Vec2 {\n        let x = (L1.b * L0.c - L0.b * L1.c) / (L0.b * L1.a - L1.b * L0.a);\n        return new Vec2(x, -(L0.c + L0.a * x) / L0.b);\n    }\n\n    public intersects(l: Line2): Vec2 {\n        return Line2.getIntersection(this, l);\n    }\n}\n","import {EPS10} from '../math';\nimport {Sphere} from \"../bv/Sphere\";\nimport {Vec3} from './Vec3';\n\n/**\n * @todo: write tests\n * @class Line3\n * Represents a line segment in 3d space.\n * @param {Vec3} [p0] - First point of the line\n * @param {Vec3} [p1] - Second point of the line\n */\nexport class Line3 {\n\n    /**\n     * First point of the line\n     * @public\n     * @type: Vec3\n     */\n    public p0: Vec3;\n\n    /**\n     * Second point of the line\n     * @public\n     * @type: Vec3\n     */\n    public p1: Vec3;\n\n    constructor(p0?: Vec3, p1?: Vec3) {\n        this.p0 = p0 || new Vec3();\n        this.p1 = p1 || new Vec3();\n    }\n\n    public getMagnitude(): number {\n        return this.p0.distance(this.p1);\n    }\n\n    public getSphereIntersection(sphere: Sphere): [Vec3] | [Vec3, Vec3] | [] {\n        let p0 = this.p0,\n            p1 = this.p1;\n\n        let cx = sphere.center.x,\n            cy = sphere.center.y,\n            cz = sphere.center.z;\n\n        let px = p0.x,\n            py = p0.y,\n            pz = p0.z;\n\n        let vx = p1.x - px,\n            vy = p1.y - py,\n            vz = p1.z - pz;\n\n        let A = vx * vx + vy * vy + vz * vz,\n            B = 2.0 * (px * vx + py * vy + pz * vz - vx * cx - vy * cy - vz * cz),\n            C = px * px - 2 * px * cx + cx * cx + py * py - 2 * py * cy + cy * cy +\n                pz * pz - 2 * pz * cz + cz * cz - sphere.radius * sphere.radius;\n        let D = B * B - 4 * A * C;\n\n        if (D < 0) {\n            // no solutions\n            return [];\n        }\n\n        let t1 = (-B - Math.sqrt(D)) / (2.0 * A);\n\n        let solution1 = new Vec3(\n            p0.x * (1 - t1) + t1 * p1.x,\n            p0.y * (1 - t1) + t1 * p1.y,\n            p0.z * (1 - t1) + t1 * p1.z\n        );\n\n        if (D == 0) {\n            return [solution1];\n        }\n\n        let t2 = (-B + Math.sqrt(D)) / (2.0 * A);\n        let solution2 = new Vec3(\n            p0.x * (1 - t2) + t2 * p1.x,\n            p0.y * (1 - t2) + t2 * p1.y,\n            p0.z * (1 - t2) + t2 * p1.z);\n\n        // prefer a solution that's on the line segment itself\n        if (Math.abs(t1 - 0.5) < Math.abs(t2 - 0.5)) {\n            return [solution1, solution2];\n        }\n\n        return [solution2, solution1];\n    }\n\n    public intersects(line: Line3, res: Vec3, res2?: Vec3): boolean {\n\n        let p13 = this.p0.sub(line.p0),\n            p43 = line.p1.sub(line.p0);\n\n        if (Math.abs(p43.x) < EPS10 && Math.abs(p43.y) < EPS10 && Math.abs(p43.z) < EPS10) {\n            return false;\n        }\n\n        let p21 = this.p1.sub(this.p0);\n\n        if (Math.abs(p21.x) < EPS10 && Math.abs(p21.y) < EPS10 && Math.abs(p21.z) < EPS10) {\n            return false;\n        }\n\n        let d1343 = p13.x * p43.x + p13.y * p43.y + p13.z * p43.z,\n            d4321 = p43.x * p21.x + p43.y * p21.y + p43.z * p21.z,\n            d1321 = p13.x * p21.x + p13.y * p21.y + p13.z * p21.z,\n            d4343 = p43.x * p43.x + p43.y * p43.y + p43.z * p43.z,\n            d2121 = p21.x * p21.x + p21.y * p21.y + p21.z * p21.z;\n\n        let denom = d2121 * d4343 - d4321 * d4321;\n\n        if (Math.abs(denom) < EPS10) {\n            return false;\n        }\n\n        let numer = d1343 * d4321 - d1321 * d4343;\n\n        let mua = numer / denom;\n\n        res.x = this.p0.x + mua * p21.x;\n        res.y = this.p0.y + mua * p21.y;\n        res.z = this.p0.z + mua * p21.z;\n\n        if (res2) {\n\n            let mub = (d1343 + d4321 * mua) / d4343;\n\n            res2.x = line.p0.x + mub * p43.x;\n            res2.y = line.p0.y + mub * p43.y;\n            res2.z = line.p0.z + mub * p43.z;\n        }\n\n        return true;\n    }\n\n    public getNearestDistancePoint(point: Vec3, res: Vec3): boolean {\n\n        let p0 = this.p0,\n            p1 = this.p1;\n\n        let mag = this.getMagnitude();\n\n        let u =\n            (\n                ((point.x - p0.x) * (p1.x - p0.x)) +\n                ((point.y - p0.y) * (p1.y - p0.y)) +\n                ((point.z - p0.z) * (p1.z - p0.z))\n            ) /\n            (mag * mag);\n\n        res.x = p0.x + u * (p1.x - p0.x);\n        res.y = p0.y + u * (p1.y - p0.y);\n        res.z = p0.z + u * (p1.z - p0.z);\n\n        if (u < 0.0 || u > 1.0) {\n            return false;\n        }\n\n        return true;\n    }\n}","import {EPS5} from \"../math\";\nimport {Vec3} from \"./Vec3\";\nimport {Line3} from \"./Line3\";\n\nconst DISJOINT = 0\nconst COINCIDE = 1;\nconst INTERSECT = 2;\n/**\n * Plane class.\n * @constructor\n * @param {Vec3} [p] - Plane point.\n * @param {Vec3} [n] - Planet normal.\n */\nclass Plane {\n    public p: Vec3;\n    public n: Vec3;\n\n    constructor(p: Vec3, n: Vec3) {\n        this.p = p ? p.clone() : new Vec3();\n        this.n = n ? n.clone() : this.p.normal();\n    }\n\n    public set(p: Vec3, n: Vec3) {\n        this.p.copy(p);\n        this.n.copy(n);\n    }\n\n    public getNormal(): Vec3 {\n        return this.n.clone();\n    }\n\n    public distance(p: Vec3): number {\n        let pp = this.getProjection(p);\n        return p.distance(pp);\n    }\n\n    public getProjection(v: Vec3, def?: Vec3): Vec3 {\n        return Vec3.proj_b_to_plane(v, this.n, def);\n    }\n\n    public getProjectionPoint(p: Vec3, vh?: Vec3): Vec3 {\n        let v = p.sub(this.p),\n            n = this.n,\n            dist = v.dot(n);\n\n        if (vh) {\n            vh.copy(n.scale(dist));\n        } else {\n            vh = n.scale(dist);\n        }\n        return p.sub(vh);\n    }\n\n    public getIntersection(Pn1: Plane, Pn2: Plane, L: Line3): number {\n        let u = Pn1.n.cross(Pn2.n);\n\n        let ax = u.x >= 0 ? u.x : -u.x;\n        let ay = u.y >= 0 ? u.y : -u.y;\n        let az = u.z >= 0 ? u.z : -u.z;\n\n        // test if the two planes are parallel\n        if (ax + ay + az < EPS5) {\n            // Pn1 and Pn2 are near parallel\n            // test if disjoint or coincide\n            let v = Pn2.p.sub(Pn1.p);\n            if (Pn1.n.dot(v) == 0) {\n                // Pn2.V0 lies in Pn1\n                return COINCIDE; // Pn1 and Pn2 coincide\n            } else {\n                return DISJOINT; // Pn1 and Pn2 are disjoint\n            }\n        }\n\n        // Pn1 and Pn2 intersect in a line\n        // first determine max abs coordinate of cross product\n        let maxc; // max coordinate\n        if (ax > ay) {\n            if (ax > az) {\n                maxc = 1;\n            } else {\n                maxc = 3;\n            }\n        } else {\n            if (ay > az) {\n                maxc = 2;\n            } else {\n                maxc = 3;\n            }\n        }\n\n        // next, to get a point on the intersect line\n        // zero the max coord, and solve for the other two\n        let iP = new Vec3(); // intersect point\n\n        let d1, d2; // the constants in the 2 plane equations\n        d1 = -Pn1.n.dot(Pn1.p); // note: could be pre-stored  with plane\n        d2 = -Pn2.n.dot(Pn2.p); // ditto\n\n        // select max coordinate\n        if (maxc === 1) {\n            // intersect with x=0\n            iP.x = 0;\n            iP.y = (d2 * Pn1.n.z - d1 * Pn2.n.z) / u.x;\n            iP.z = (d1 * Pn2.n.y - d2 * Pn1.n.y) / u.x;\n        } else if (maxc === 2) {\n            // intersect with y=0\n            iP.x = (d1 * Pn2.n.z - d2 * Pn1.n.z) / u.y;\n            iP.y = 0;\n            iP.z = (d2 * Pn1.n.x - d1 * Pn2.n.x) / u.y;\n        } else if (maxc === 3) {\n            // intersect with z=0\n            iP.x = (d2 * Pn1.n.y - d1 * Pn2.n.y) / u.z;\n            iP.y = (d1 * Pn2.n.x - d2 * Pn1.n.x) / u.z;\n            iP.z = 0;\n        }\n        L.p0.copy(iP);\n        L.p1.copy(iP.add(u));\n        return INTERSECT;\n    }\n}\n\nexport {Plane};\n","import {EPS10} from \"../math\";\nimport {Box} from \"../bv/Box\";\nimport {Sphere} from \"../bv/Sphere\";\nimport {Vec3} from \"./Vec3\";\n\n/**\n * Represents a ray that extends infinitely from the provided origin in the provided direction.\n * @class\n * @param {Vec3} origin - The origin of the ray.\n * @param {Vec3} direction - The direction of the ray.\n */\nexport class Ray {\n    /**\n     * The origin of the ray.\n     * @public\n     * @type {Vec3}\n     */\n    public origin: Vec3;\n\n    /**\n     * The direction of the ray.\n     * @public\n     * @type {Vec3}\n     */\n    public direction: Vec3;\n\n    constructor(origin: Vec3 = Vec3.ZERO, direction: Vec3 = Vec3.ZERO) {\n\n        this.origin = origin;\n\n        this.direction = direction;\n    }\n\n    /** @const */\n    static get OUTSIDE() {\n        return 0;\n    }\n\n    /** @const */\n    static get INSIDE() {\n        return 1;\n    }\n\n    /** @const */\n    static get INPLANE() {\n        return 2;\n    }\n\n    /** @const */\n    static get AWAY() {\n        return 3;\n    }\n\n    /**\n     * Sets a ray parameters.\n     * @public\n     * @param {Vec3} origin - The origin of the ray.\n     * @param {Vec3} direction - The direction of the ray.\n     * @returns {Ray}\n     */\n    public set(origin: Vec3, direction: Vec3): Ray {\n        this.origin = origin;\n        this.direction = direction;\n        return this;\n    }\n\n    /**\n     * Computes the point along the ray on the distance.\n     * @public\n     * @param {number} distance - Point distance.\n     * @returns {Vec3}\n     */\n    public getPoint(distance: number): Vec3 {\n        return Vec3.add(this.origin, this.direction.scaleTo(distance));\n    }\n\n    /**\n     * Returns ray hit a triange result.\n     * @public\n     * @param {Vec3} v0 - First triangle corner coordinate.\n     * @param {Vec3} v1 - Second triangle corner coordinate.\n     * @param {Vec3} v2 - Third triangle corner coordinate.\n     * @param {Vec3} res - Hit point object pointer that stores hit result.\n     * @returns {number} - Hit code, could 0 - og.Ray.OUTSIDE, 1 - og.Ray.INSIDE,\n     *      2 - og.Ray.INPLANE and 3 - og.Ray.AWAY(ray goes away from triangle).\n     */\n    public hitTriangle(v0: Vec3, v1: Vec3, v2: Vec3, res: Vec3): number {\n        let u = v1.sub(v0);\n        let v = v2.sub(v0);\n        let n = u.cross(v);\n\n        let w0 = this.origin.sub(v0);\n        let a = -n.dot(w0);\n        let b = n.dot(this.direction);\n\n        // ray is  parallel to triangle plane\n        if (Math.abs(b) < EPS10) {\n            if (a === 0) {\n                res.copy(this.origin);\n                // ray lies in triangle plane\n                return Ray.INPLANE;\n            } else {\n                // ray disjoint from plane\n                return Ray.OUTSIDE;\n            }\n        }\n\n        let r = a / b;\n\n        // intersect point of ray and plane\n        res.copy(this.origin.add(this.direction.scaleTo(r)));\n\n        // ray goes away from triangle\n        if (r < 0.0) {\n            return Ray.AWAY;\n        }\n\n        // is res point inside the triangle?\n        let uu = u.dot(u);\n        let uv = u.dot(v);\n        let vv = v.dot(v);\n        let w = res.sub(v0);\n        let wu = w.dot(u);\n        let wv = w.dot(v);\n        let D = uv * uv - uu * vv;\n\n        let s = (uv * wv - vv * wu) / D;\n        if (s < 0.0 || s > 1.0) {\n            return Ray.OUTSIDE;\n        }\n\n        let t = (uv * wu - uu * wv) / D;\n        if (t < 0.0 || s + t > 1.0) {\n            return Ray.OUTSIDE;\n        }\n\n        return Ray.INSIDE;\n    }\n\n    /**\n     * Gets a ray hit a plane result. If the ray cross the plane returns 1 - og.Ray.INSIDE otherwise returns 0 - og.Ray.OUTSIDE.\n     * @public\n     * @param {Vec3} v0 - First plane point.\n     * @param {Vec3} v1 - Second plane point.\n     * @param {Vec3} v2 - Third plane point.\n     * @param {Vec3} res - Hit point object pointer that stores hit result.\n     * @returns {number}\n     */\n    public hitPlane(v0: Vec3, v1: Vec3, v2: Vec3, res: Vec3): number {\n        let u = Vec3.sub(v1, v0);\n        let v = Vec3.sub(v2, v0);\n        let n = u.cross(v);\n\n        let w0 = Vec3.sub(this.origin, v0);\n        let a = -n.dot(w0);\n        let b = n.dot(this.direction);\n\n        // ray is  parallel to the plane\n        if (Math.abs(b) < EPS10) {\n            if (a === 0) {\n                return Ray.OUTSIDE;\n            }\n        }\n\n        let r = a / b;\n\n        if (r < 0) {\n            return Ray.OUTSIDE;\n        }\n\n        let d = this.direction.scaleTo(r);\n\n        // intersect point of ray and plane\n        res.x = this.origin.x + d.x;\n        res.y = this.origin.y + d.y;\n        res.z = this.origin.z + d.z;\n\n        return Ray.INSIDE;\n    }\n\n    /**\n     * Returns a ray hit sphere coordiante. If there isn't hit returns null.\n     * @public\n     * @param {Sphere} sphere - Sphere object.\n     * @returns {Vec3}\n     */\n    public hitSphere(sphere: Sphere) {\n        let r = sphere.radius,\n            c = sphere.center,\n            o = this.origin,\n            d = this.direction;\n\n        let vpc = Vec3.sub(c, o);\n\n        if (vpc.dot(d) < 0) {\n            var l = vpc.length();\n            if (l > r) {\n                return null;\n            } else if (l === r) {\n                return o.clone();\n            }\n            let pc = c.projToRay(o, vpc);\n            var lc = Vec3.sub(pc, c).length();\n            let dist = Math.sqrt(r * r - lc * lc);\n            let di1 = dist - Vec3.sub(pc, o).length();\n            let intersection = Vec3.add(o, d.scaleTo(di1));\n            return intersection;\n        } else {\n            let pc = c.projToRay(o, d);\n            var cpcl = Vec3.sub(c, pc).length();\n            if (cpcl > sphere.radius) {\n                return null;\n            } else {\n                let dist = Math.sqrt(r * r - cpcl * cpcl);\n                let di1;\n                pc.subA(o);\n                if (vpc.length() > r) {\n                    di1 = pc.length() - dist;\n                } else {\n                    di1 = pc.length() + dist;\n                }\n                let intersection = Vec3.add(o, d.scaleTo(di1));\n                return intersection;\n            }\n        }\n    }\n\n    public hitBox(box: Box) {\n        //\n        // TODO\n        //\n    }\n}","import * as utils from \"../utils/shared\";\nimport {Entity} from \"./Entity\";\nimport {Quat, Vec3, Vec4} from \"../math/index\";\nimport {InstanceData} from \"./GeoObjectHandler\";\nimport {NumberArray3} from \"../math/Vec3\";\nimport {NumberArray4} from \"../math/Vec4\";\nimport {Object3d} from \"../Object3d\";\nimport {GeoObjectHandler} from \"./GeoObjectHandler\";\n\nexport interface IGeoObjectParams {\n    object3d: Object3d;\n    tag?: string;\n    position?: Vec3 | NumberArray3;\n    pitch?: number;\n    yaw?: number;\n    roll?: number;\n    scale?: number;\n    color?: Vec4 | NumberArray4 | string;\n}\n\n/**\n * @class\n * @param {Object} options -  Geo object parameters:\n * @param {Vec3} [options.position] - Geo object position.\n *\n * @todo: GeoObject and GeoObjectHandler provides instanced objects only.\n * It would be nice if it could provide not instanced rendering loop too.\n */\nclass GeoObject {\n    protected _tag: string;\n\n    public instanced: boolean;\n\n    /**\n     * Entity instance that holds this geo object.\n     * @public\n     * @type {Entity}\n     */\n    public _entity: Entity | null;\n\n    /**\n     * Geo object center cartesian position.\n     * @protected\n     * @type {Vec3}\n     */\n    protected _position: Vec3;\n    public _positionHigh: Vec3;\n    public _positionLow: Vec3;\n\n    protected _pitch: number;\n    protected _yaw: number;\n    protected _roll: number;\n\n    protected _scale: number;\n\n    /**\n     * RGBA color.\n     * @public\n     * @type {Vec4}\n     */\n    public _color: Vec4;\n\n    public _direction: Vec3;\n\n    public _handler: GeoObjectHandler | null;\n    public _handlerIndex = -1;\n\n    public _tagData: InstanceData | null;\n    public _tagDataIndex: number;\n\n    protected _object3d: Object3d;\n\n    protected _visibility: boolean;\n\n    protected _qNorthFrame: Quat;\n\n    constructor(options: IGeoObjectParams) {\n\n        this._tag = options.tag || \"none\";\n\n        this.instanced = true;\n\n        this._entity = null;\n\n        this._position = utils.createVector3(options.position);\n\n        this._positionHigh = new Vec3();\n        this._positionLow = new Vec3();\n        Vec3.doubleToTwoFloats(this._position, this._positionHigh, this._positionLow);\n\n        this._pitch = options.pitch || 0.0;\n        this._yaw = options.yaw || 0.0;\n        this._roll = options.roll || 0.0;\n\n        this._scale = options.scale || 1.0;\n\n        this._color = utils.createColorRGBA(options.color);\n\n        this._direction = new Vec3(0, 1, 0);\n\n        this._handler = null;\n        this._handlerIndex = -1;\n\n        this._tagData = null;\n        this._tagDataIndex = -1;\n\n        this._object3d = options.object3d;\n\n        this._visibility = true;\n\n        this._qNorthFrame = new Quat();\n    }\n\n    public get tag() {\n        return this._tag;\n    }\n\n    public getPosition(): Vec3 {\n        return this._position;\n    }\n\n    public getPitch(): number {\n        return this._pitch;\n    }\n\n    public getYaw(): number {\n        return this._yaw;\n    }\n\n    public getRoll(): number {\n        return this._roll;\n    }\n\n    public getDirection(): Vec3 {\n        return this._direction;\n    }\n\n    public get object3d(): Object3d {\n        return this._object3d;\n    }\n\n    public get vertices(): number[] {\n        return this._object3d.vertices;\n    }\n\n    public get normals(): number[] {\n        return this._object3d.normals;\n    }\n\n    public get texCoords(): number[] {\n        return this._object3d.texCoords;\n    }\n\n    public get indices(): number[] {\n        return this._object3d.indices;\n    }\n\n    /**\n     * Sets geo object opacity.\n     * @public\n     * @param {number} a - Billboard opacity.\n     */\n    public setOpacity(a: number) {\n        this._color.w = a;\n        this.setColor(this._color.x, this._color.y, this._color.z, a);\n    }\n\n    /**\n     * Sets color.\n     * @public\n     * @param {number} r - Red.\n     * @param {number} g - Green.\n     * @param {number} b - Blue.\n     * @param {number} [a] - Alpha.\n     */\n    public setColor(r: number, g: number, b: number, a?: number) {\n        this._color.x = r;\n        this._color.y = g;\n        this._color.z = b;\n        a != undefined && (this._color.w = a);\n        this._handler && this._handler.setRgbaArr(this._tagData!, this._tagDataIndex, this._color);\n    }\n\n    /**\n     * Sets color.\n     * @public\n     * @param {Vec3 | Vec4} color - RGBA vector.\n     */\n    public setColor4v(color: Vec3 | Vec4) {\n        this._color.x = color.x;\n        this._color.y = color.y;\n        this._color.z = color.z;\n        (color as Vec4).w != undefined && (this._color.w = (color as Vec4).w);\n        this._handler && this._handler.setRgbaArr(this._tagData!, this._tagDataIndex, this._color);\n    }\n\n    /**\n     * Sets geo object visibility.\n     * @public\n     * @param {boolean} visibility - Visibility flag.\n     */\n    public setVisibility(visibility: boolean) {\n        this._visibility = visibility;\n        this._handler && this._handler.setVisibility(this._tagData!, this._tagDataIndex, visibility);\n    }\n\n    /**\n     * Returns geo object visibility.\n     * @public\n     * @returns {boolean}\n     */\n    public getVisibility(): boolean {\n        return this._visibility;\n    }\n\n    /**\n     * Sets geo object position.\n     * @public\n     * @param {number} x - X coordinate.\n     * @param {number} y - Y coordinate.\n     * @param {number} z - Z coordinate.\n     */\n    public setPosition(x: number, y: number, z: number) {\n        this._position.x = x;\n        this._position.y = y;\n        this._position.z = z;\n        Vec3.doubleToTwoFloats(this._position, this._positionHigh, this._positionLow);\n        this._handler &&\n        this._handler.setPositionArr(this._tagData!, this._tagDataIndex, this._positionHigh, this._positionLow);\n        this.updateDirection();\n    }\n\n    /**\n     * Sets geo object position.\n     * @public\n     * @param {Vec3} position - Cartesian coordinates.\n     */\n    public setPosition3v(position: Vec3) {\n        this._position.x = position.x;\n        this._position.y = position.y;\n        this._position.z = position.z;\n        Vec3.doubleToTwoFloats(position, this._positionHigh, this._positionLow);\n        this._handler && this._handler.setPositionArr(this._tagData!, this._tagDataIndex, this._positionHigh, this._positionLow);\n        this.updateDirection();\n    }\n\n    public setYaw(yaw: number) {\n        this._yaw = yaw;\n        this.updateDirection();\n    }\n\n    public setPitch(pitch: number) {\n        this._pitch = pitch;\n        this._handler && this._handler.setPitchRollArr(this._tagData!, this._tagDataIndex, pitch, this._roll);\n    }\n\n    public setRoll(roll: number) {\n        this._roll = roll;\n        this._handler && this._handler.setPitchRollArr(this._tagData!, this._tagDataIndex, this._pitch, roll);\n    }\n\n    public setScale(scale: number) {\n        this._scale = scale;\n        this._handler && this._handler.setScaleArr(this._tagData!, this._tagDataIndex, scale);\n    }\n\n    public getScale(): number {\n        return this._scale;\n    }\n\n    /**\n     * Removes geo object from handler.\n     * @public\n     */\n    public remove() {\n        this._entity = null;\n        this._handler && this._handler.remove(this);\n    }\n\n    /**\n     * Sets billboard picking color.\n     * @public\n     * @param {Vec3} color - Picking color.\n     */\n    public setPickingColor3v(color: Vec3) {\n        this._handler && this._handler.setPickingColorArr(this._tagData!, this._tagDataIndex, color);\n    }\n\n    public updateDirection() {\n        if (this._handler && this._handler._planet) {\n            this._qNorthFrame = this._handler._planet.getNorthFrameRotation(this._position);\n            let qq = Quat.yRotation(this._yaw).mul(this._qNorthFrame).conjugate();\n            this._direction = qq.mulVec3(new Vec3(0.0, 0.0, -1.0)).normalize();\n            this._handler.setDirectionArr(this._tagData!, this._tagDataIndex, this._direction);\n        }\n    }\n}\n\nexport {GeoObject};\n","import * as utils from \"../utils/shared\";\nimport {BaseBillboard, IBaseBillboardParams} from \"./BaseBillboard\";\nimport {LOCK_FREE, LOCK_UPDATE} from \"./LabelWorker\";\nimport {NumberArray4, Vec4} from \"../math/Vec4\";\nimport {FontAtlas} from \"../utils/FontAtlas\";\nimport {LabelHandler} from \"./LabelHandler\";\n\nexport interface ILabelParams extends IBaseBillboardParams {\n    text?: string;\n    face?: string;\n    size?: number;\n    outline?: number;\n    outlineColor?: string | NumberArray4 | Vec4;\n    align?: string;\n    isRTL?: boolean;\n}\n\nconst ALIGN: Record<string, number> = {\n    RIGHT: 0,\n    LEFT: 1,\n    CENTER: 2\n};\n\n/**\n * Text align options.\n * @readonly\n * @enum {number}\n */\nconst STR2ALIGN: Record<string, number> = {\n    left: ALIGN.LEFT,\n    right: ALIGN.RIGHT,\n    center: ALIGN.CENTER\n};\n\n/**\n * Billboard text label.\n * @class\n * @extends {BaseBillboard}\n * @param {Object} [options] - Label options:\n * @param {Vec3|Array.<number>} [options.position] - Billboard spatial position.\n * @param {number} [options.rotation] - Screen angle rotation.\n * @param {Vec4|string|Array.<number>} [options.color] - Billboard color.\n * @param {Vec3|Array.<number>} [options.alignedAxis] - Billboard aligned vector.\n * @param {Vec3|Array.<number>} [options.offset] - Billboard center screen offset.\n * @param {boolean} [options.visibility] - Visibility.\n * @param {string} [options.text] - Text string.\n * @param {string} [options.face] - HTML5 font face.\n * @param {number} [options.size] - Font size in pixels.\n * @param {string} [options.style] - HTML5 font style. Example 'normal', 'italic'.\n * @param {string} [options.weight] - HTML5 font weight. Example 'normal', 'bold'.\n * @param {number} [options.outline] - Text outline size. 0 - no outline, 1 - maximum outline. Default 0.58.\n * @param {Vec4|string|Array.<number>} [options.outlineColor] - Outline color.\n * @param {string} [options.align] - Text horizontal align: \"left\", \"right\" and \"center\".\n */\nclass Label extends BaseBillboard {\n\n    public override _handler: LabelHandler | null;\n\n    /**\n     * Label text string.\n     * @protected\n     * @type {string}\n     */\n    protected _text: string;\n\n    /**\n     * HTML5 font face.\n     * @private\n     * @type {string}\n     */\n    protected _face: string;\n\n    /**\n     * Font size in pixels.\n     * @protected\n     * @type {number}\n     */\n    protected _size: number;\n\n    /**\n     * Label outline.\n     * @protected\n     * @type {number}\n     */\n    protected _outline: number;\n\n    /**\n     * Label outline color.\n     * @protected\n     * @type {Vec4}\n     */\n    protected _outlineColor: Vec4;\n\n    /**\n     * Text horizontal align: \"left\", \"right\" and \"center\".\n     * @private\n     * @type {Label.ALIGN}\n     */\n    protected _align: number;\n\n    /**\n     * Label font atlas index.\n     * @protected\n     * @type {number}\n     */\n    protected _fontIndex: number;\n\n    /**\n     * Font atlas pointer.\n     * @private\n     * @type {FontAtlas}\n     */\n    protected _fontAtlas: FontAtlas | null;\n\n    protected _isRTL: boolean;\n\n    constructor(options: ILabelParams = {}) {\n        super(options);\n\n        this._handler = null;\n\n        this._text = options.text || \"\";\n\n        this._face = utils.defaultString(options.face, \"arial\");\n\n        this._size = options.size || 24;\n\n        this._outline = options.outline != undefined ? options.outline : 0.0;\n\n        this._outlineColor = utils.createColorRGBA(\n            options.outlineColor,\n            new Vec4(0.0, 0.0, 0.0, 1.0)\n        );\n\n        this._align = options.align ? STR2ALIGN[options.align.trim().toLowerCase()] as number || ALIGN.RIGHT : ALIGN.RIGHT;\n\n        this._fontIndex = 0;\n\n        this._fontAtlas = null;\n\n        this._isRTL = options.isRTL || false;\n    }\n\n    /**\n     * Set label text.\n     * @public\n     * @param {string} text - Text string.\n     * It can't be bigger than maximum labelHandler _maxLetters value.\n     */\n    public setText(text: string) {\n        this._text = text.toString();\n        if (this._isReady && this._handler) {\n            this._handler.setText(this._handlerIndex, text, this._fontIndex, this._align, this._isRTL);\n        }\n    }\n\n    /**\n     * Gets current text string.\n     * @public\n     * @returns {string}\n     */\n    public getText(): string {\n        return this._text;\n    }\n\n    /**\n     * Sets label text align. Could be center, left or right. Left is default.\n     * @public\n     * @param {string} align - Text align.\n     */\n    public setAlign(align: string) {\n        this._align = STR2ALIGN[align.trim().toLowerCase()] as number;\n        if (this._isReady && this._handler) {\n            this._handler.setText(this._handlerIndex, this._text, this._fontIndex, this._align, this._isRTL);\n        } else if (this._lockId !== LOCK_FREE) {\n            this._lockId = LOCK_UPDATE;\n        }\n    }\n\n    /**\n     * Gets label text current alignment.\n     * @public\n     * @returns {string}\n     */\n    public getAlign(): number {\n        return this._align;\n    }\n\n    /**\n     * Sets font face family.\n     * @public\n     * @param {string} face - Font face family.\n     */\n    public setFace(face: string) {\n        this._face = face.trim();\n        this.update();\n    }\n\n    /**\n     * Gets current font face.\n     * @public\n     * @returns {string}\n     */\n    public getFace(): string {\n        return this._face;\n    }\n\n    /**\n     * Sets label font size in pixels.\n     * @public\n     * @param {number} size - Label size in pixels.\n     */\n    public setSize(size: number) {\n        if (size !== this._size) {\n            this._size = size;\n            if (this._isReady && this._handler) {\n                this._handler.setSizeArr(this._handlerIndex, size);\n            } else if (this._lockId !== LOCK_FREE) {\n                this._lockId = LOCK_UPDATE;\n            }\n        }\n    }\n\n    /**\n     * Gets label size in pixels.\n     * @public\n     * @returns {number}\n     */\n    public getSize(): number {\n        return this._size;\n    }\n\n    /**\n     * Sets text outline border size. Where 0 - is no outline, and 1 - is the maximum outline size.\n     * @public\n     * @param {number} outline - Text outline size.\n     */\n    public setOutline(outline: number) {\n        this._outline = outline;\n        if (this._isReady && this._handler) {\n            this._handler.setOutlineArr(this._handlerIndex, outline);\n        } else if (this._lockId !== LOCK_FREE) {\n            this._lockId = LOCK_UPDATE;\n        }\n    }\n\n    /**\n     * Gets text current outline size.\n     * @public\n     * @returns {number}\n     */\n    public getOutline(): number {\n        return this._outline;\n    }\n\n    /**\n     * Sets label opacity.\n     * @public\n     * @param {number} a - Label opacity.\n     */\n    public override setOpacity(a: number) {\n        super.setOpacity(a);\n        this.setOutlineOpacity(a);\n    }\n\n    /**\n     * Sets text outline color.\n     * @public\n     * @param {number} r - Red.\n     * @param {number} g - Green.\n     * @param {number} b - Blue.\n     * @param {number} a - Alpha.\n     */\n    public setOutlineColor(r: number, g: number, b: number, a: number) {\n        if (a !== this._outlineColor.w || r !== this._outlineColor.x || g !== this._outlineColor.y || b !== this._outlineColor.z) {\n            this._outlineColor.x = r;\n            this._outlineColor.y = g;\n            this._outlineColor.z = b;\n            this._outlineColor.w = a;\n            if (this._isReady && this._handler) {\n                this._handler.setOutlineColorArr(this._handlerIndex, this._outlineColor);\n            } else if (this._lockId !== LOCK_FREE) {\n                this._lockId = LOCK_UPDATE;\n            }\n        }\n    }\n\n    /**\n     * Sets text outline color.\n     * @public\n     * @param {Vec4} rgba - Color vector.\n     */\n    public setOutlineColor4v(rgba: Vec4) {\n        this.setOutlineColor(rgba.x, rgba.y, rgba.z, rgba.w);\n    }\n\n    /**\n     * Sets text outline color HTML string.\n     * @public\n     * @param {string} color - HTML string color.\n     */\n    public setOutlineColorHTML(color: string) {\n        this.setOutlineColor4v(utils.htmlColorToRgba(color));\n    }\n\n    /**\n     * Gets outline color vector.\n     * @public\n     * @returns {Vec4}\n     */\n    public getOutlineColor(): Vec4 {\n        return this._outlineColor;\n    }\n\n    /**\n     * Sets outline opacity. Actually outline color alpha value.\n     * @public\n     * @param {number} opacity - Outline opacity.\n     */\n    public setOutlineOpacity(opacity: number) {\n        if (opacity !== this._outlineColor.w) {\n            this._outlineColor.w = opacity;\n            if (this._isReady && this._handler) {\n                this._handler.setOutlineColorArr(this._handlerIndex, this._outlineColor);\n            } else if (this._lockId !== LOCK_FREE) {\n                this._lockId = LOCK_UPDATE;\n            }\n        }\n    }\n\n    /**\n     * Gets outline opacity value.\n     * @public\n     * @returns {number}\n     */\n    public getOutlineOpacity(): number {\n        return this._outlineColor.w;\n    }\n\n    /**\n     * Updates label parameters.\n     * @public\n     */\n    public async update() {\n        if (this._fontAtlas) {\n            const fontIndex = await this._fontAtlas.getFontIndex(this._face);\n            this._applyFontIndex(fontIndex);\n        }\n    }\n\n    protected _applyFontIndex(fontIndex: number) {\n        this._fontIndex = fontIndex;\n        if (this._isReady && this._handler) {\n            this._handler.setFontIndexArr(this._handlerIndex, this._fontIndex);\n            this._handler.setText(this._handlerIndex, this._text, this._fontIndex, this._align, this._isRTL);\n        } else if (this._lockId !== LOCK_FREE) {\n            this._lockId = LOCK_UPDATE;\n        }\n    }\n\n    /**\n     * Assigns font atlas and update.\n     * @public\n     * @param {FontAtlas} fontAtlas - Font atlas.\n     */\n    public assignFontAtlas(fontAtlas: FontAtlas) {\n        if (!this._fontAtlas) {\n            this._fontAtlas = fontAtlas;\n        }\n        this.update();\n    }\n\n    public override serializeWorkerData(workerId: number): Float32Array | null {\n        if(this._handler) {\n            return new Float32Array([\n                /*0*/workerId,\n                /*1*/this._handler!._maxLetters,\n                /*2*/this.getVisibility() ? 1 : 0,\n                /*3, 4, 5*/this._positionHigh.x, this._positionHigh.y, this._positionHigh.z,\n                /*6, 7, 8*/this._positionLow.x, this._positionLow.y, this._positionLow.z,\n                /*9*/this._size,\n                /*10, 11, 12*/this._offset.x, this._offset.y, this._offset.z,\n                /*13, 14, 15, 16*/this._color.x, this._color.y, this._color.z, this._color.w,\n                /*17*/this._rotation,\n                /*18, 19, 20*/this._alignedAxis.x, this._alignedAxis.y, this._alignedAxis.z,\n                /*21*/this._fontIndex,\n                /*22*/this._outline,\n                /*23, 24, 25, 26*/this._outlineColor.x, this._outlineColor.y, this._outlineColor.z, this._outlineColor.w,\n                /*27, 28, 29*/this._entity!._pickingColor.x, this._entity!._pickingColor.y, this._entity!._pickingColor.z\n            ]);\n        }\n\n        return null;\n    }\n}\n\nexport {Label, ALIGN};\n","import {Entity} from \"./Entity\";\nimport {PointCloudHandler} from \"./PointCloudHandler\";\nimport {RenderNode} from \"../scene/RenderNode\";\nimport {Vec3} from \"../math/Vec3\";\nimport {Vec4} from \"../math/Vec4\";\nimport {WebGLBufferExt} from \"../webgl/Handler\";\nimport {EntityCollection} from \"./EntityCollection\";\n\nexport interface IPointCloudParams {\n    visibility?: boolean;\n    pointSize?: number;\n    pickingScale?: number;\n    points?: Poi[];\n}\n\ntype Poi = [number, number, number, number, number, number, number, any | undefined];\n\ninterface IPoint {\n    _entity: Entity | null;\n    _pickingColor: Vec3;\n    _entityCollection: EntityCollection | null;\n    index: number;\n    position: Vec3;\n    color: Vec4;\n    pointCloud: PointCloud;\n    properties: any\n}\n\nconst COORDINATES_BUFFER = 0;\nconst COLOR_BUFFER = 1;\nconst PICKING_COLOR_BUFFER = 2;\n\n/**\n * PointCloud object.\n * @class\n * @param {*} [options] - Point cloud options:\n * @param {Array.<Array.<number>>} [options.points] - Points cartesian coordinates array,\n * where first three is cartesian coordinates, next fourth is an RGBA color, and last is a point properties.\n * @param {number} [options.pointSize] - Point screen size in pixels.\n * @param {number} [options.pickingScale] - Point border picking size in screen pixels.\n * @param {boolean} [options.visibility] - Point cloud visibility.\n * @example <caption>Creates point cloud with two ten pixel size points</caption>\n * new og.Entity({\n *     pointCloud: {\n *         pointSize: 10,\n *         points: [\n *             [0, 0, 0, 255, 255, 255, 255, { 'name': 'White point' }],\n *             [100, 100, 0, 255, 0, 0, 255, { 'name': 'Red point' }]\n *         ]\n *     }\n * });\n */\nclass PointCloud {\n    static __counter__: number = 0;\n    protected __id: number;\n\n    /**\n     * Cloud visibility.\n     * @public\n     * @type {boolean}\n     */\n    public visibility: boolean;\n\n    /**\n     * Point screen size in pixels.\n     * @public\n     * @type {number}\n     */\n    public pointSize: number;\n\n    /**\n     * Point picking border size in pixels.\n     * @public\n     * @type {number}\n     */\n    public pickingScale: number;\n\n    /**\n     * Parent collection render node.\n     * @protected\n     * @type {RenderNode | null}\n     */\n    protected _renderNode: RenderNode | null;\n\n    /**\n     * Entity instance that holds this point cloud.\n     * @public\n     * @type {Entity | null}\n     */\n    public _entity: Entity | null;\n\n    /**\n     * Points properties.\n     * @protected\n     * @type {IPoint[]}\n     */\n    protected _points: IPoint[];\n\n    /**\n     * Coordinates array.\n     * @protected\n     * @type {number[]}\n     */\n    protected _coordinatesData: number[];\n\n    /**\n     * Color array.\n     * @protected\n     * @type {number[]}\n     */\n    protected _colorData: number[];\n\n    /**\n     * Picking color array.\n     * @protected\n     * @type {number[]}\n     */\n    protected _pickingColorData: number[];\n\n    protected _coordinatesBuffer: WebGLBufferExt | null;\n    protected _colorBuffer: WebGLBufferExt | null;\n    protected _pickingColorBuffer: WebGLBufferExt | null;\n\n    /**\n     * Handler that stores and renders this object.\n     * @public\n     * @type {PointCloudHandler}\n     */\n    public _handler: PointCloudHandler | null;\n    public _handlerIndex: number;\n\n    protected _buffersUpdateCallbacks: Function[];\n    protected _changedBuffers: boolean[];\n\n    constructor(options: IPointCloudParams = {}) {\n\n        this.__id = PointCloud.__counter__++;\n\n        /**\n         * Cloud visibility.\n         * @public\n         * @type {boolean}\n         */\n        this.visibility = options.visibility != undefined ? options.visibility : true;\n\n        /**\n         * Point screen size in pixels.\n         * @public\n         * @type {number}\n         */\n        this.pointSize = options.pointSize || 3;\n\n        /**\n         * Point picking border size in pixels.\n         * @public\n         * @type {number}\n         */\n        this.pickingScale = options.pickingScale || 0;\n\n        /**\n         * Parent collection render node.\n         * @private\n         * @type {RenderNode}\n         */\n        this._renderNode = null;\n\n        /**\n         * Entity instance that holds this point cloud.\n         * @private\n         * @type {Entity}\n         */\n        this._entity = null;\n\n        /**\n         * Points properties.\n         * @private\n         * @type {IPoint[]}\n         */\n        this._points = [];\n\n        /**\n         * Coordinates array.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._coordinatesData = [];\n\n        /**\n         * Color array.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._colorData = [];\n\n        /**\n         * Picking color array.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._pickingColorData = [];\n\n        this._coordinatesBuffer = null;\n        this._colorBuffer = null;\n        this._pickingColorBuffer = null;\n\n        /**\n         * Handler that stores and renders this object.\n         * @private\n         * @type {PointCloudHandler}\n         */\n        this._handler = null;\n        this._handlerIndex = -1;\n\n        this._buffersUpdateCallbacks = [];\n        this._buffersUpdateCallbacks[COORDINATES_BUFFER] = this._createCoordinatesBuffer;\n        this._buffersUpdateCallbacks[COLOR_BUFFER] = this._createColorBuffer;\n        this._buffersUpdateCallbacks[PICKING_COLOR_BUFFER] = this._createPickingColorBuffer;\n\n        this._changedBuffers = new Array(this._buffersUpdateCallbacks.length);\n\n        if (options.points) {\n            this.setPoints(options.points);\n        }\n    }\n\n    /**\n     * Clears point cloud data\n     * @public\n     */\n    public clear() {\n        this._points.length = 0;\n        this._points = [];\n\n        this._coordinatesData.length = 0;\n        this._coordinatesData = [];\n\n        this._colorData.length = 0;\n        this._colorData = [];\n\n        this._pickingColorData.length = 0;\n        this._pickingColorData = [];\n\n        this._deleteBuffers();\n    }\n\n    /**\n     * Sets cloud visibility.\n     * @public\n     * @param {boolean} visibility - Visibility flag.\n     */\n    public setVisibility(visibility: boolean) {\n        this.visibility = visibility;\n    }\n\n    /**\n     * @return {boolean} Point cloud visibility.\n     */\n    public getVisibility(): boolean {\n        return this.visibility;\n    }\n\n    /**\n     * Assign rendering scene node.\n     * @public\n     * @param {RenderNode}  renderNode - Assigned render node.\n     */\n    public setRenderNode(renderNode: RenderNode) {\n        this._renderNode = renderNode;\n        this._setPickingColors();\n    }\n\n    /**\n     * Removes from entity.\n     * @public\n     */\n    public remove() {\n        this._entity = null;\n        this._handler && this._handler.remove(this);\n    }\n\n    /**\n     * Adds points to render.\n     * @public\n     * @param { Poi[]} points - Point cloud array.\n     * @example\n     * var points = [[0, 0, 0, 255, 255, 255, 255, { 'name': 'White point' }], [100, 100, 0, 255, 0, 0, 255, { 'name': 'Red point' }]];\n     */\n    public setPoints(points: Poi[]) {\n        this.clear();\n        for (let i = 0; i < points.length; i++) {\n            let pi = points[i];\n\n            let pos = new Vec3(pi[0], pi[1], pi[2]),\n                col = new Vec4(pi[3], pi[4], pi[5], pi[6] == undefined ? 255.0 : pi[6]);\n\n            this._coordinatesData.push(pos.x, pos.y, pos.z);\n\n            this._colorData.push(col.x / 255.0, col.y / 255.0, col.z / 255.0, col.w / 255.0);\n\n            let p = {\n                _entity: this._entity,\n                _pickingColor: new Vec3(),\n                _entityCollection: this._entity ? this._entity._entityCollection : null,\n                index: i,\n                position: pos,\n                color: col,\n                pointCloud: this,\n                properties: pi[7] || {}\n            };\n\n            this._points.push(p);\n\n            if (this._renderNode && this._renderNode.renderer) {\n                this._renderNode.renderer.assignPickingColor<IPoint>(p);\n                this._pickingColorData.push(\n                    p._pickingColor.x / 255.0,\n                    p._pickingColor.y / 255.0,\n                    p._pickingColor.z / 255.0,\n                    1.0\n                );\n            }\n        }\n\n        this._changedBuffers[COORDINATES_BUFFER] = true;\n        this._changedBuffers[COLOR_BUFFER] = true;\n        this._changedBuffers[PICKING_COLOR_BUFFER] = true;\n    }\n\n    public setPointPosition(index: number, x: number, y: number, z: number) {\n        // TODO: ...\n        this._changedBuffers[COORDINATES_BUFFER] = true;\n    }\n\n    public setPointColor(index: number, r: number, g: number, b: number, a: number) {\n        // TODO: ...\n        this._changedBuffers[COLOR_BUFFER] = true;\n    }\n\n    public addPoints(points: Poi[]) {\n        // TODO: ...\n        this._changedBuffers[COORDINATES_BUFFER] = true;\n        this._changedBuffers[COLOR_BUFFER] = true;\n        this._changedBuffers[PICKING_COLOR_BUFFER] = true;\n    }\n\n    public addPoint(index: number, point: Poi) {\n        // TODO: ...\n        this._changedBuffers[COORDINATES_BUFFER] = true;\n        this._changedBuffers[COLOR_BUFFER] = true;\n        this._changedBuffers[PICKING_COLOR_BUFFER] = true;\n    }\n\n    /**\n     * Returns specific point by index.\n     * @public\n     * @param {number} index - Point index.\n     * @return {Poi} Specific point\n     */\n    public getPoint(index: number): IPoint {\n        return this._points[index];\n    }\n\n    public removePoint(index: number) {\n        // TODO: ...\n        this._changedBuffers[COORDINATES_BUFFER] = true;\n        this._changedBuffers[COLOR_BUFFER] = true;\n        this._changedBuffers[PICKING_COLOR_BUFFER] = true;\n    }\n\n    public insertPoint(index: number, point: Poi) {\n        // TODO: ...\n        this._changedBuffers[COORDINATES_BUFFER] = true;\n        this._changedBuffers[COLOR_BUFFER] = true;\n        this._changedBuffers[PICKING_COLOR_BUFFER] = true;\n    }\n\n    public draw() {\n        if (this.visibility && this._coordinatesData.length) {\n            this._update();\n\n            let rn = this._renderNode!;\n            let r = rn.renderer!;\n            let sh = r.handler.programs.pointCloud;\n            let p = sh._program;\n            let gl = r.handler.gl!,\n                sha = p.attributes,\n                shu = p.uniforms;\n\n            // gl.polygonOffset(\n            //     this._handler._entityCollection.polygonOffsetFactor,\n            //     this._handler._entityCollection.polygonOffsetUnits\n            // );\n\n            sh.activate();\n\n            gl.uniformMatrix4fv(shu.projectionViewMatrix, false, r.activeCamera!.getProjectionViewMatrix());\n\n            gl.uniform1f(shu.opacity, this._handler!._entityCollection._fadingOpacity);\n            gl.uniform1f(shu.pointSize, this.pointSize);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._coordinatesBuffer as WebGLBuffer);\n            gl.vertexAttribPointer(sha.coordinates, this._coordinatesBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._colorBuffer as WebGLBuffer);\n            gl.vertexAttribPointer(sha.colors, this._colorBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.drawArrays(gl.POINTS, 0, this._coordinatesBuffer!.numItems);\n        }\n    }\n\n    public drawPicking() {\n        if (this.visibility && this._coordinatesData.length) {\n            let rn = this._renderNode!;\n            let r = rn.renderer!;\n            let sh = r.handler.programs.pointCloud;\n            let p = sh._program;\n            let gl = r.handler.gl!,\n                sha = p.attributes,\n                shu = p.uniforms;\n\n            sh.activate();\n\n            // gl.polygonOffset(\n            //     this._handler._entityCollection.polygonOffsetFactor,\n            //     this._handler._entityCollection.polygonOffsetUnits\n            // );\n\n            gl.uniformMatrix4fv(shu.projectionViewMatrix, false, r.activeCamera!.getProjectionViewMatrix());\n\n            gl.uniform1f(shu.opacity, this._handler!._entityCollection._fadingOpacity);\n            gl.uniform1f(shu.pointSize, this.pointSize + this.pickingScale);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._coordinatesBuffer as WebGLBuffer);\n            gl.vertexAttribPointer(sha.coordinates, this._coordinatesBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._pickingColorBuffer as WebGLBuffer);\n            gl.vertexAttribPointer(sha.colors, this._pickingColorBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.drawArrays(gl.POINTS, 0, this._coordinatesBuffer!.numItems);\n        }\n    }\n\n    /**\n     * Update gl buffers.\n     * @protected\n     */\n    protected _update() {\n        if (this._renderNode) {\n            let i = this._changedBuffers.length;\n            while (i--) {\n                if (this._changedBuffers[i]) {\n                    this._buffersUpdateCallbacks[i].call(this);\n                    this._changedBuffers[i] = false;\n                }\n            }\n        }\n    }\n\n    /**\n     * Delete buffers\n     * @public\n     */\n    public _deleteBuffers() {\n        if (this._renderNode) {\n            let r = this._renderNode.renderer!,\n                gl = r.handler.gl!;\n\n            gl.deleteBuffer(this._coordinatesBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._colorBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._pickingColorBuffer as WebGLBuffer);\n        }\n\n        this._coordinatesBuffer = null;\n        this._colorBuffer = null;\n        this._pickingColorBuffer = null;\n    }\n\n    protected _createCoordinatesBuffer() {\n        let h = this._renderNode!.renderer!.handler;\n        h.gl!.deleteBuffer(this._coordinatesBuffer as WebGLBuffer);\n        this._coordinatesBuffer = h.createArrayBuffer(\n            new Float32Array(this._coordinatesData),\n            3,\n            this._coordinatesData.length / 3\n        );\n    }\n\n    protected _createColorBuffer() {\n        let h = this._renderNode!.renderer!.handler;\n        h.gl!.deleteBuffer(this._colorBuffer as WebGLBuffer);\n        this._colorBuffer = h.createArrayBuffer(\n            new Float32Array(this._colorData),\n            4,\n            this._colorData.length / 4\n        );\n    }\n\n    protected _createPickingColorBuffer() {\n        let h = this._renderNode!.renderer!.handler;\n        h.gl!.deleteBuffer(this._pickingColorBuffer as WebGLBuffer);\n        this._pickingColorBuffer = h.createArrayBuffer(\n            new Float32Array(this._pickingColorData),\n            4,\n            this._pickingColorData.length / 4\n        );\n    }\n\n    protected _setPickingColors() {\n        if (this._renderNode && this._renderNode.renderer) {\n            for (let i = 0; i < this._points.length; i++) {\n                let p = this._points[i];\n                p._entity = this._entity;\n                p._entityCollection = this._entity!._entityCollection;\n                this._renderNode.renderer.assignPickingColor<IPoint>(p);\n                this._pickingColorData.push(\n                    p._pickingColor.x / 255.0,\n                    p._pickingColor.y / 255.0,\n                    p._pickingColor.z / 255.0,\n                    1.0\n                );\n            }\n            this._changedBuffers[PICKING_COLOR_BUFFER] = true;\n        }\n    }\n}\n\nexport {PointCloud};\n","import {Entity} from \"./Entity\";\nimport {Extent} from \"../Extent\";\nimport {LonLat} from \"../LonLat\";\nimport {NumberArray3, Vec3} from \"../math/Vec3\";\nimport {NumberArray2} from \"../math/Vec2\";\nimport {NumberArray4} from \"../math/Vec4\";\nimport {Planet} from \"../scene/Planet\";\nimport {PolylineHandler} from \"./PolylineHandler\";\nimport {RenderNode} from \"../scene/RenderNode\";\nimport {WebGLBufferExt} from \"../webgl/Handler\";\nimport {\n    cloneArray, htmlColorToFloat32Array,\n    htmlColorToRgba, makeArray, makeArrayTyped, TypedArray\n} from \"../utils/shared\";\nimport {Ellipsoid} from \"../ellipsoid/Ellipsoid\";\n\nconst VERTICES_BUFFER = 0;\nconst INDEX_BUFFER = 1;\nconst COLORS_BUFFER = 2;\n\nconst DEFAULT_COLOR = \"#0000FF\";\n\nconst R = 0;\nconst G = 1;\nconst B = 2;\nconst A = 3;\n\ntype Geodetic = LonLat | NumberArray2 | NumberArray3\ntype Cartesian = Vec3 | NumberArray3;\n\ntype SegmentPath3vExt = Cartesian[];\ntype SegmentPathLonLatExt = Geodetic[];\n\ntype SegmentPathColor = NumberArray4[];\n\ntype SegmentPath3v = Vec3[];\ntype SegmentPathLonLat = LonLat[];\n\n\nexport interface IPolylineParams {\n    altitude?: number;\n    thickness?: number;\n    opacity?: number;\n    color?: string;\n    visibility?: boolean;\n    isClosed?: boolean;\n    pathColors?: SegmentPathColor[];\n    path3v?: SegmentPath3vExt[];\n    pathLonLat?: SegmentPathLonLatExt[];\n}\n\n/**\n * Polyline object.\n * @class\n * @param {Object} [options] - Polyline options:\n * @param {number} [options.thickness] - Thickness in screen pixels 1.5 is default.\n * @param {Number} [options.altitude] - Relative to ground layers altitude value.\n * @param {Vec4} [options.color] - RGBA color.\n * @param {Boolean} [options.opacity] - Line opacity.\n * @param {Boolean} [options.visibility] - Polyline visibility. True default.\n * @param {Boolean} [options.isClosed] - Closed geometry type identification.\n * @param {SegmentPathLonLatExt[]} [options.pathLonLat] - Polyline geodetic coordinates array. [[[0,0,0], [1,1,1],...]]\n * @param {SegmentPath3vExt[]} [options.path3v] - LinesString cartesian coordinates array. [[[0,0,0], [1,1,1],...]]\n * @param {SegmentPathColor[]} [options.pathColors] - Coordinates color. [[[1,0,0,1], [0,1,0,1],...]] for right and green colors.\n */\nclass Polyline {\n    static __counter__: number = 0;\n\n    /**\n     * Object uniq identifier.\n     * @protected\n     * @type {number}\n     */\n    protected __id: number;\n\n    public altitude: number;\n\n    /**\n     * Polyline thickness in screen pixels.\n     * @public\n     * @type {number}\n     */\n    public thickness: number;\n\n    protected _opacity: number;\n\n    /**\n     * Polyline RGBA color.\n     * @protected\n     * @type {Float32Array} - (exactly 4 entries)\n     */\n    protected _defaultColor: Float32Array | NumberArray4;\n\n    /**\n     * Polyline visibility.\n     * @public\n     * @type {boolean}\n     */\n    public visibility: boolean;\n\n    /**\n     * Polyline geometry ring type identification.\n     * @protected\n     * @type {Boolean}\n     */\n    protected _closedLine: boolean;\n\n    /**\n     * Polyline cartesian coordinates.\n     * @public\n     * @type {Array.<Vec3>}\n     */\n    public _path3v: SegmentPath3vExt[];\n\n    protected _pathLengths: number[];\n\n    /**\n     * Polyline geodetic degrees coordinates.\n     * @private\n     * @type {Array.<LonLat>}\n     */\n    protected _pathLonLat: SegmentPathLonLatExt[];\n\n    /**\n     * Polyline geodetic mercator coordinates.\n     * @public\n     * @type {Array.<LonLat>}\n     */\n    public _pathLonLatMerc: LonLat[][];\n\n    protected _pathColors: SegmentPathColor[];\n\n    /**\n     * Polyline geodetic extent.\n     * @protected\n     * @type {Extent}\n     */\n    public _extent: Extent;\n    protected _verticesHigh: TypedArray | number[];\n    protected _verticesLow: TypedArray | number[];\n    protected _orders: TypedArray | number[];\n    protected _indexes: TypedArray | number[];\n    protected _colors: TypedArray | number[];\n\n    protected _verticesHighBuffer: WebGLBufferExt | null;\n    protected _verticesLowBuffer: WebGLBufferExt | null;\n    protected _ordersBuffer: WebGLBufferExt | null;\n    protected _indexesBuffer: WebGLBufferExt | null;\n    protected _colorsBuffer: WebGLBufferExt | null;\n\n    protected _pickingColor: NumberArray3;\n\n    protected _renderNode: RenderNode | null;\n\n    /**\n     * Entity instance that holds this Polyline.\n     * @public\n     * @type {Entity}\n     */\n    public _entity: Entity | null;\n\n    /**\n     * Handler that stores and renders this Polyline object.\n     * @public\n     * @type {PolylineHandler | null}\n     */\n    public _handler: PolylineHandler | null;\n    public _handlerIndex: number;\n    protected _buffersUpdateCallbacks: Function[];\n    protected _changedBuffers: boolean[];\n\n    constructor(options: IPolylineParams = {}) {\n\n        this.__id = Polyline.__counter__++;\n\n        this.altitude = options.altitude || 0.0;\n\n        this.thickness = options.thickness || 1.5;\n\n        this._opacity = options.opacity != undefined ? options.opacity : 1.0;\n\n        this._defaultColor = htmlColorToFloat32Array(\n            options.color || DEFAULT_COLOR,\n            options.opacity\n        );\n\n        this.visibility = options.visibility != undefined ? options.visibility : true;\n\n        this._closedLine = options.isClosed || false;\n\n        this._path3v = [];\n\n        this._pathLengths = [];\n\n        this._pathLonLat = [];\n\n        this._pathLonLatMerc = [];\n\n        this._pathColors = options.pathColors ? cloneArray(options.pathColors) : [];\n\n        this._extent = new Extent();\n\n        this._verticesHigh = [];\n        this._verticesLow = [];\n        this._orders = [];\n        this._indexes = [];\n        this._colors = [];\n\n        this._verticesHighBuffer = null;\n        this._verticesLowBuffer = null;\n        this._ordersBuffer = null;\n        this._indexesBuffer = null;\n        this._colorsBuffer = null;\n\n        this._pickingColor = [0, 0, 0];\n\n        this._renderNode = null;\n\n        this._entity = null;\n\n\n        this._handler = null;\n        this._handlerIndex = -1;\n\n        this._buffersUpdateCallbacks = [];\n        this._buffersUpdateCallbacks[VERTICES_BUFFER] = this._createVerticesBuffer;\n        this._buffersUpdateCallbacks[INDEX_BUFFER] = this._createIndexBuffer;\n        this._buffersUpdateCallbacks[COLORS_BUFFER] = this._createColorsBuffer;\n\n        this._changedBuffers = new Array(this._buffersUpdateCallbacks.length);\n\n        // create path\n        if (options.pathLonLat) {\n            this.setPathLonLat(options.pathLonLat);\n        } else if (options.path3v) {\n            this.setPath3v(options.path3v);\n        }\n\n        this._refresh();\n    }\n\n    /**\n     * Appends to the line array new cartesian coordinates line data.\n     * @static\n     */\n    static appendLineData3v(\n        path3v: SegmentPath3vExt[],\n        pathColors: SegmentPathColor[],\n        defaultColor: NumberArray4,\n        isClosed: boolean,\n        outVerticesHigh: number[],\n        outVerticesLow: number[],\n        outOrders: number[],\n        outIndexes: number[],\n        ellipsoid: Ellipsoid,\n        outTransformedPathLonLat: SegmentPathLonLatExt[],\n        outPath3v: SegmentPath3vExt[],\n        outTransformedPathMerc: LonLat[][],\n        outExtent: Extent,\n        outColors: number[]\n    ) {\n        var index = 0;\n\n        var v_high = new Vec3(),\n            v_low = new Vec3();\n\n        if (outExtent) {\n            outExtent.southWest.set(180.0, 90.0);\n            outExtent.northEast.set(-180.0, -90.0);\n        }\n\n        if (outIndexes.length > 0) {\n            index = outIndexes[outIndexes.length - 5] + 9;\n            outIndexes.push(index, index);\n        } else {\n            outIndexes.push(0, 0);\n        }\n\n        for (let j = 0, len = path3v.length; j < len; j++) {\n            var path = path3v[j],\n                pathColors_j = pathColors[j];\n\n            outTransformedPathLonLat[j] = [];\n            outTransformedPathMerc[j] = [];\n            outPath3v[j] = [];\n\n            if (path.length === 0) {\n                continue;\n            }\n\n            var startIndex = index;\n\n            var last;\n\n            if (isClosed) {\n                last = path[path.length - 1];\n                if (last instanceof Array) {\n                    last = new Vec3(last[0], last[1], last[2]);\n                }\n            } else {\n                var p0 = path[0],\n                    p1 = path[1] || p0;\n                if (p0 instanceof Array) {\n                    p0 = new Vec3(p0[0], p0[1], p0[2]);\n                }\n                if (p1 instanceof Array) {\n                    p1 = new Vec3(p1[0], p1[1], p1[2]);\n                }\n\n                p0 = p0 as Vec3;\n                p1 = p1 as Vec3;\n\n                last = new Vec3(p0.x + p0.x - p1.x, p0.y + p0.y - p1.y, p0.z + p0.z - p1.z);\n            }\n\n            let color = defaultColor;\n\n            if (pathColors_j && pathColors_j[0]) {\n                color = pathColors_j[0];\n            }\n\n            Vec3.doubleToTwoFloats(last as Vec3, v_high, v_low);\n            outVerticesHigh.push(\n                v_high.x, v_high.y, v_high.z,\n                v_high.x, v_high.y, v_high.z,\n                v_high.x, v_high.y, v_high.z,\n                v_high.x, v_high.y, v_high.z\n            );\n            outVerticesLow.push(\n                v_low.x, v_low.y, v_low.z,\n                v_low.x, v_low.y, v_low.z,\n                v_low.x, v_low.y, v_low.z,\n                v_low.x, v_low.y, v_low.z\n            );\n\n            let r = color[R],\n                g = color[G],\n                b = color[B],\n                a = color[A] != undefined ? color[A] : 1.0;\n\n            if (j > 0) {\n                outColors.push(r, g, b, a, r, g, b, a, r, g, b, a, r, g, b, a);\n            }\n\n            outOrders.push(1, -1, 2, -2);\n\n            for (let i = 0, len = path.length; i < len; i++) {\n                var cur = path[i];\n\n                if (cur instanceof Array) {\n                    cur = new Vec3(cur[0], cur[1], cur[2]);\n                }\n\n                outPath3v[j].push(cur as Vec3);\n\n                if (ellipsoid) {\n                    var lonLat = ellipsoid.cartesianToLonLat(cur as Vec3);\n                    outTransformedPathLonLat[j].push(lonLat);\n                    outTransformedPathMerc[j].push(lonLat.forwardMercator());\n\n                    if (lonLat.lon < outExtent.southWest.lon) {\n                        outExtent.southWest.lon = lonLat.lon;\n                    }\n                    if (lonLat.lat < outExtent.southWest.lat) {\n                        outExtent.southWest.lat = lonLat.lat;\n                    }\n                    if (lonLat.lon > outExtent.northEast.lon) {\n                        outExtent.northEast.lon = lonLat.lon;\n                    }\n                    if (lonLat.lat > outExtent.northEast.lat) {\n                        outExtent.northEast.lat = lonLat.lat;\n                    }\n                }\n\n                if (pathColors_j && pathColors_j[i]) {\n                    color = pathColors_j[i];\n                }\n\n                r = color[R];\n                g = color[G];\n                b = color[B];\n                a = color[A] != undefined ? color[A] : 1.0;\n\n                Vec3.doubleToTwoFloats(cur as Vec3, v_high, v_low);\n                outVerticesHigh.push(\n                    v_high.x, v_high.y, v_high.z,\n                    v_high.x, v_high.y, v_high.z,\n                    v_high.x, v_high.y, v_high.z,\n                    v_high.x, v_high.y, v_high.z\n                );\n                outVerticesLow.push(\n                    v_low.x, v_low.y, v_low.z,\n                    v_low.x, v_low.y, v_low.z,\n                    v_low.x, v_low.y, v_low.z,\n                    v_low.x, v_low.y, v_low.z\n                );\n\n                outColors.push(r, g, b, a, r, g, b, a, r, g, b, a, r, g, b, a);\n\n                outOrders.push(1, -1, 2, -2);\n                outIndexes.push(index++, index++, index++, index++);\n            }\n\n            var first;\n            if (isClosed) {\n                first = path[0];\n                if (first instanceof Array) {\n                    first = new Vec3(first[0], first[1], first[2]);\n                }\n                outIndexes.push(startIndex, startIndex + 1, startIndex + 1, startIndex + 1);\n            } else {\n                let p0 = path[path.length - 1],\n                    p1 = path[path.length - 2] || p0;\n\n                if (p0 instanceof Array) {\n                    p0 = new Vec3(p0[0], p0[1], p0[2]);\n                } else {\n                    p0 = p0 as Vec3;\n                }\n\n                if (p1 instanceof Array) {\n                    p1 = new Vec3(p1[0], p1[1], p1[2]);\n                } else {\n                    p1 = p1 as Vec3;\n                }\n\n                first = new Vec3(p0.x + p0.x - p1.x, p0.y + p0.y - p1.y, p0.z + p0.z - p1.z);\n                outIndexes.push(index - 1, index - 1, index - 1, index - 1);\n            }\n\n            if (pathColors_j && pathColors_j[path.length - 1]) {\n                color = pathColors_j[path.length - 1];\n            }\n\n            r = color[R];\n            g = color[G];\n            b = color[B];\n            a = color[A] != undefined ? color[A] : 1.0;\n\n            Vec3.doubleToTwoFloats(first as Vec3, v_high, v_low);\n            outVerticesHigh.push(\n                v_high.x, v_high.y, v_high.z,\n                v_high.x, v_high.y, v_high.z,\n                v_high.x, v_high.y, v_high.z,\n                v_high.x, v_high.y, v_high.z\n            );\n            outVerticesLow.push(\n                v_low.x, v_low.y, v_low.z,\n                v_low.x, v_low.y, v_low.z,\n                v_low.x, v_low.y, v_low.z,\n                v_low.x, v_low.y, v_low.z\n            );\n\n            outColors.push(r, g, b, a, r, g, b, a, r, g, b, a, r, g, b, a);\n\n            outOrders.push(1, -1, 2, -2);\n\n            if (j < path3v.length - 1 && path3v[j + 1].length !== 0) {\n                index += 8;\n                outIndexes.push(index, index);\n            }\n        }\n    }\n\n    /**\n     * Appends to the line new cartesian coordinates point data.\n     * @static\n     */\n    static appendPoint3v(\n        path3v: SegmentPath3vExt[],\n        point3v: Vec3,\n        pathColors: SegmentPathColor[],\n        color: NumberArray4,\n        isClosed: boolean,\n        outVerticesHigh: number[],\n        outVerticesLow: number[],\n        outColors: number[],\n        outOrders: number[],\n        outIndexes: number[],\n        ellipsoid: Ellipsoid | null,\n        outTransformedPathLonLat: SegmentPathLonLatExt[],\n        outTransformedPathMerc: LonLat[][],\n        outExtent: Extent\n    ) {\n        var v_high = new Vec3(),\n            v_low = new Vec3();\n\n        var ii = outIndexes.length - 4,\n            index = outIndexes[ii - 1] + 1;\n\n        if (path3v.length === 0) {\n            path3v.push([]);\n            if (!pathColors[0]) {\n                pathColors[0] = [];\n            }\n        } else if (!pathColors[path3v.length - 1]) {\n            pathColors[path3v.length - 1] = [];\n        }\n\n        var path = path3v[path3v.length - 1],\n            len = path.length;\n\n        path.push(point3v);\n\n        let r = color[R],\n            g = color[G],\n            b = color[B],\n            a = color[A] != undefined ? color[A] : 1.0,\n            pathColors_last = pathColors[path3v.length - 1];\n\n        if (pathColors_last[len]) {\n            pathColors_last[len][R] = r;\n            pathColors_last[len][G] = g;\n            pathColors_last[len][B] = b;\n            pathColors_last[len][A] = a;\n        } else {\n            pathColors_last.push(color);\n        }\n\n        if (len === 1) {\n            var last;\n            if (isClosed) {\n                last = path[len - 1];\n                if (last instanceof Array) {\n                    last = new Vec3(last[0], last[1], last[2]);\n                }\n            } else {\n                let p0 = path[0],\n                    p1 = path[1] || p0;\n\n                if (p0 instanceof Array) {\n                    p0 = new Vec3(p0[0], p0[1], p0[2]);\n                } else {\n                    p0 = p0 as Vec3;\n                }\n\n                if (p1 instanceof Array) {\n                    p1 = new Vec3(p1[0], p1[1], p1[2]);\n                } else {\n                    p1 = p1 as Vec3;\n                }\n\n                last = new Vec3(p0.x + p0.x - p1.x, p0.y + p0.y - p1.y, p0.z + p0.z - p1.z);\n            }\n\n            Vec3.doubleToTwoFloats(last as Vec3, v_high, v_low);\n\n            let vi = outVerticesHigh.length - 3 * 12;\n\n            outVerticesHigh[vi] = v_high.x;\n            outVerticesHigh[vi + 1] = v_high.y;\n            outVerticesHigh[vi + 2] = v_high.z;\n            outVerticesHigh[vi + 3] = v_high.x;\n            outVerticesHigh[vi + 4] = v_high.y;\n            outVerticesHigh[vi + 5] = v_high.z;\n            outVerticesHigh[vi + 6] = v_high.x;\n            outVerticesHigh[vi + 7] = v_high.y;\n            outVerticesHigh[vi + 8] = v_high.z;\n            outVerticesHigh[vi + 9] = v_high.x;\n            outVerticesHigh[vi + 10] = v_high.y;\n            outVerticesHigh[vi + 11] = v_high.z;\n\n            outVerticesLow[vi] = v_low.x;\n            outVerticesLow[vi + 1] = v_low.y;\n            outVerticesLow[vi + 2] = v_low.z;\n            outVerticesLow[vi + 3] = v_low.x;\n            outVerticesLow[vi + 4] = v_low.y;\n            outVerticesLow[vi + 5] = v_low.z;\n            outVerticesLow[vi + 6] = v_low.x;\n            outVerticesLow[vi + 7] = v_low.y;\n            outVerticesLow[vi + 8] = v_low.z;\n            outVerticesLow[vi + 9] = v_low.x;\n            outVerticesLow[vi + 10] = v_low.y;\n            outVerticesLow[vi + 11] = v_low.z;\n        }\n\n        var startIndex = index;\n\n        if (ellipsoid) {\n            if (outTransformedPathLonLat.length === 0) {\n                outTransformedPathLonLat.push([]);\n            }\n\n            if (outTransformedPathMerc.length === 0) {\n                outTransformedPathMerc.push([]);\n            }\n\n            var transformedPathLonLat = outTransformedPathLonLat[outTransformedPathLonLat.length - 1],\n                transformedPathMerc = outTransformedPathMerc[outTransformedPathMerc.length - 1];\n\n            let lonLat = ellipsoid.cartesianToLonLat(point3v);\n            transformedPathLonLat.push(lonLat);\n            transformedPathMerc.push(lonLat.forwardMercator());\n\n            if (lonLat.lon < outExtent.southWest.lon) {\n                outExtent.southWest.lon = lonLat.lon;\n            }\n            if (lonLat.lat < outExtent.southWest.lat) {\n                outExtent.southWest.lat = lonLat.lat;\n            }\n            if (lonLat.lon > outExtent.northEast.lon) {\n                outExtent.northEast.lon = lonLat.lon;\n            }\n            if (lonLat.lat > outExtent.northEast.lat) {\n                outExtent.northEast.lat = lonLat.lat;\n            }\n        }\n\n        Vec3.doubleToTwoFloats(point3v, v_high, v_low);\n\n        let vi = outVerticesHigh.length - 12;\n\n        outVerticesHigh[vi] = v_high.x;\n        outVerticesHigh[vi + 1] = v_high.y;\n        outVerticesHigh[vi + 2] = v_high.z;\n        outVerticesHigh[vi + 3] = v_high.x;\n        outVerticesHigh[vi + 4] = v_high.y;\n        outVerticesHigh[vi + 5] = v_high.z;\n        outVerticesHigh[vi + 6] = v_high.x;\n        outVerticesHigh[vi + 7] = v_high.y;\n        outVerticesHigh[vi + 8] = v_high.z;\n        outVerticesHigh[vi + 9] = v_high.x;\n        outVerticesHigh[vi + 10] = v_high.y;\n        outVerticesHigh[vi + 11] = v_high.z;\n\n        outVerticesLow[vi] = v_low.x;\n        outVerticesLow[vi + 1] = v_low.y;\n        outVerticesLow[vi + 2] = v_low.z;\n        outVerticesLow[vi + 3] = v_low.x;\n        outVerticesLow[vi + 4] = v_low.y;\n        outVerticesLow[vi + 5] = v_low.z;\n        outVerticesLow[vi + 6] = v_low.x;\n        outVerticesLow[vi + 7] = v_low.y;\n        outVerticesLow[vi + 8] = v_low.z;\n        outVerticesLow[vi + 9] = v_low.x;\n        outVerticesLow[vi + 10] = v_low.y;\n        outVerticesLow[vi + 11] = v_low.z;\n\n        let ci = outColors.length - 16;\n\n        outColors[ci] = r;\n        outColors[ci + 1] = g;\n        outColors[ci + 2] = b;\n        outColors[ci + 3] = a;\n        outColors[ci + 4] = r;\n        outColors[ci + 5] = g;\n        outColors[ci + 6] = b;\n        outColors[ci + 7] = a;\n        outColors[ci + 8] = r;\n        outColors[ci + 9] = g;\n        outColors[ci + 10] = b;\n        outColors[ci + 11] = a;\n        outColors[ci + 12] = r;\n        outColors[ci + 13] = g;\n        outColors[ci + 14] = b;\n        outColors[ci + 15] = a;\n\n        outIndexes[ii] = index++;\n        outIndexes[ii + 1] = index++;\n        outIndexes[ii + 2] = index++;\n        outIndexes[ii + 3] = index++;\n\n        //\n        // Close path\n        //\n        var first;\n        if (isClosed) {\n            first = path[0] as Vec3;\n            outIndexes.push(startIndex, startIndex + 1, startIndex + 1, startIndex + 1);\n        } else {\n            let p0 = path[path.length - 1] as Vec3,\n                p1 = path[path.length - 2] as Vec3 || p0;\n\n            first = new Vec3(p0.x + p0.x - p1.x, p0.y + p0.y - p1.y, p0.z + p0.z - p1.z);\n            outIndexes.push(index - 1, index - 1, index - 1, index - 1);\n        }\n\n        Vec3.doubleToTwoFloats(first, v_high, v_low);\n        outVerticesHigh.push(\n            v_high.x, v_high.y, v_high.z,\n            v_high.x, v_high.y, v_high.z,\n            v_high.x, v_high.y, v_high.z,\n            v_high.x, v_high.y, v_high.z\n        );\n        outVerticesLow.push(\n            v_low.x, v_low.y, v_low.z,\n            v_low.x, v_low.y, v_low.z,\n            v_low.x, v_low.y, v_low.z,\n            v_low.x, v_low.y, v_low.z\n        );\n\n        outColors.push(r, g, b, a, r, g, b, a, r, g, b, a, r, g, b, a);\n\n        outOrders.push(1, -1, 2, -2);\n    }\n\n    /**\n     * Appends to the line array new geodetic coordinates line data.\n     * @static\n     */\n    static appendLineDataLonLat(\n        pathLonLat: SegmentPathLonLatExt[],\n        pathColors: SegmentPathColor[],\n        defaultColor: NumberArray4,\n        isClosed: boolean,\n        outVerticesHigh: number[],\n        outVerticesLow: number[],\n        outOrders: number[],\n        outIndexes: number[],\n        ellipsoid: Ellipsoid,\n        outTransformedPathCartesian: SegmentPath3vExt[],\n        outPathLonLat: SegmentPathLonLatExt[],\n        outTransformedPathMerc: LonLat[][],\n        outExtent: Extent,\n        outColors: number[]\n    ) {\n        var index = 0;\n\n        var v_high = new Vec3(),\n            v_low = new Vec3();\n\n        if (outExtent) {\n            outExtent.southWest.set(180.0, 90.0);\n            outExtent.northEast.set(-180.0, -90.0);\n        }\n\n        if (outIndexes.length > 0) {\n            index = outIndexes[outIndexes.length - 5] + 9;\n            outIndexes.push(index, index);\n        } else {\n            outIndexes.push(0, 0);\n        }\n\n        for (let j = 0, len = pathLonLat.length; j < len; j++) {\n            var path = pathLonLat[j],\n                pathColors_j = pathColors[j];\n\n            outTransformedPathCartesian[j] = [];\n            outTransformedPathMerc[j] = [];\n            outPathLonLat[j] = [];\n\n            if (path.length === 0) {\n                continue;\n            }\n\n            var startIndex = index;\n\n            var last;\n\n            if (isClosed) {\n                let pp = path[path.length - 1];\n                if (pp instanceof Array) {\n                    last = ellipsoid.lonLatToCartesian(new LonLat(pp[0], pp[1], pp[2]));\n                } else {\n                    last = ellipsoid.lonLatToCartesian(pp as LonLat);\n                }\n            } else {\n                let p0, p1;\n                let pp = path[0];\n                if (pp instanceof Array) {\n                    p0 = ellipsoid.lonLatToCartesian(new LonLat(pp[0], pp[1], pp[2]));\n                } else {\n                    p0 = ellipsoid.lonLatToCartesian(pp as LonLat);\n                }\n\n                pp = path[1];\n\n                if (!pp) {\n                    pp = path[0];\n                }\n\n                if (pp instanceof Array) {\n                    p1 = ellipsoid.lonLatToCartesian(new LonLat(pp[0], pp[1], pp[2]));\n                } else {\n                    p1 = ellipsoid.lonLatToCartesian(pp as LonLat);\n                }\n\n                last = new Vec3(p0.x + p0.x - p1.x, p0.y + p0.y - p1.y, p0.z + p0.z - p1.z);\n            }\n\n            let color = defaultColor;\n\n            if (pathColors_j && pathColors_j[0]) {\n                color = pathColors_j[0];\n            }\n\n            Vec3.doubleToTwoFloats(last, v_high, v_low);\n            outVerticesHigh.push(\n                v_high.x, v_high.y, v_high.z,\n                v_high.x, v_high.y, v_high.z,\n                v_high.x, v_high.y, v_high.z,\n                v_high.x, v_high.y, v_high.z\n            );\n            outVerticesLow.push(\n                v_low.x, v_low.y, v_low.z,\n                v_low.x, v_low.y, v_low.z,\n                v_low.x, v_low.y, v_low.z,\n                v_low.x, v_low.y, v_low.z\n            );\n\n            let r = color[R],\n                g = color[G],\n                b = color[B],\n                a = color[A] != undefined ? color[A] : 1.0;\n\n            if (j > 0) {\n                outColors.push(r, g, b, a, r, g, b, a, r, g, b, a, r, g, b, a);\n            }\n\n            outOrders.push(1, -1, 2, -2);\n\n            for (let i = 0, len = path.length; i < len; i++) {\n                var cur = path[i];\n\n                if (cur instanceof Array) {\n                    cur = new LonLat(cur[0], cur[1], cur[2]);\n                }\n\n                if (pathColors_j && pathColors_j[i]) {\n                    color = pathColors_j[i];\n                }\n\n                r = color[R];\n                g = color[G];\n                b = color[B];\n                a = color[A] != undefined ? color[A] : 1.0;\n\n                var cartesian = ellipsoid.lonLatToCartesian(cur as LonLat);\n                outTransformedPathCartesian[j].push(cartesian);\n                outPathLonLat[j].push(cur as LonLat);\n                outTransformedPathMerc[j].push((cur as LonLat).forwardMercator());\n\n                Vec3.doubleToTwoFloats(cartesian, v_high, v_low);\n                outVerticesHigh.push(\n                    v_high.x, v_high.y, v_high.z,\n                    v_high.x, v_high.y, v_high.z,\n                    v_high.x, v_high.y, v_high.z,\n                    v_high.x, v_high.y, v_high.z\n                );\n                outVerticesLow.push(\n                    v_low.x, v_low.y, v_low.z,\n                    v_low.x, v_low.y, v_low.z,\n                    v_low.x, v_low.y, v_low.z,\n                    v_low.x, v_low.y, v_low.z\n                );\n\n                outColors.push(r, g, b, a, r, g, b, a, r, g, b, a, r, g, b, a);\n\n                outOrders.push(1, -1, 2, -2);\n                outIndexes.push(index++, index++, index++, index++);\n\n                if ((cur as LonLat).lon < outExtent.southWest.lon) {\n                    outExtent.southWest.lon = (cur as LonLat).lon;\n                }\n                if ((cur as LonLat).lat < outExtent.southWest.lat) {\n                    outExtent.southWest.lat = (cur as LonLat).lat;\n                }\n                if ((cur as LonLat).lon > outExtent.northEast.lon) {\n                    outExtent.northEast.lon = (cur as LonLat).lon;\n                }\n                if ((cur as LonLat).lat > outExtent.northEast.lat) {\n                    outExtent.northEast.lat = (cur as LonLat).lat;\n                }\n            }\n\n            var first;\n            if (isClosed) {\n                let pp = path[0];\n                if (pp instanceof Array) {\n                    first = ellipsoid.lonLatToCartesian(new LonLat(pp[0], pp[1], pp[2]));\n                } else {\n                    first = ellipsoid.lonLatToCartesian(pp as LonLat);\n                }\n                outIndexes.push(startIndex, startIndex + 1, startIndex + 1, startIndex + 1);\n            } else {\n                let p0, p1;\n                let pp = path[path.length - 1];\n                if (pp instanceof Array) {\n                    p0 = ellipsoid.lonLatToCartesian(new LonLat(pp[0], pp[1], pp[2]));\n                } else {\n                    p0 = ellipsoid.lonLatToCartesian(pp as LonLat);\n                }\n\n                pp = path[path.length - 2];\n\n                if (!pp) {\n                    pp = path[0];\n                }\n\n                if (pp instanceof Array) {\n                    p1 = ellipsoid.lonLatToCartesian(new LonLat(pp[0], pp[1], pp[2]));\n                } else {\n                    p1 = ellipsoid.lonLatToCartesian(pp as LonLat);\n                }\n                first = new Vec3(p0.x + p0.x - p1.x, p0.y + p0.y - p1.y, p0.z + p0.z - p1.z);\n                outIndexes.push(index - 1, index - 1, index - 1, index - 1);\n            }\n\n            if (pathColors_j && pathColors_j[path.length - 1]) {\n                color = pathColors_j[path.length - 1];\n            }\n\n            r = color[R];\n            g = color[G];\n            b = color[B];\n            a = color[A] != undefined ? color[A] : 1.0;\n\n            Vec3.doubleToTwoFloats(first, v_high, v_low);\n            outVerticesHigh.push(\n                v_high.x, v_high.y, v_high.z,\n                v_high.x, v_high.y, v_high.z,\n                v_high.x, v_high.y, v_high.z,\n                v_high.x, v_high.y, v_high.z\n            );\n            outVerticesLow.push(\n                v_low.x, v_low.y, v_low.z,\n                v_low.x, v_low.y, v_low.z,\n                v_low.x, v_low.y, v_low.z,\n                v_low.x, v_low.y, v_low.z\n            );\n\n            outColors.push(r, g, b, a, r, g, b, a, r, g, b, a, r, g, b, a);\n\n            outOrders.push(1, -1, 2, -2);\n\n            if (j < pathLonLat.length - 1 && pathLonLat[j + 1].length !== 0) {\n                index += 8;\n                outIndexes.push(index, index);\n            }\n        }\n    }\n\n    /**\n     * Sets polyline path with cartesian coordinates.\n     * @protected\n     * @param {SegmentPath3vExt[]} path3v - Cartesian coordinates.\n     */\n    protected _setEqualPath3v(path3v: SegmentPath3vExt[]) {\n        var extent = this._extent;\n        extent.southWest.set(180, 90);\n        extent.northEast.set(-180, -90);\n\n        var v_high = new Vec3(),\n            v_low = new Vec3();\n\n        var vh = this._verticesHigh,\n            vl = this._verticesLow,\n            l = this._pathLonLat,\n            m = this._pathLonLatMerc,\n            k = 0;\n\n        var ellipsoid = (this._renderNode as Planet).ellipsoid;\n\n        for (let j = 0; j < path3v.length; j++) {\n            var path = path3v[j] as Vec3[];\n\n            var last;\n            if (this._closedLine) {\n                last = path[path.length - 1];\n            } else {\n                last = new Vec3(\n                    path[0].x + path[0].x - path[1].x,\n                    path[0].y + path[0].y - path[1].y,\n                    path[0].z + path[0].z - path[1].z\n                );\n            }\n\n            Vec3.doubleToTwoFloats(last, v_high, v_low);\n\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n\n            for (let i = 0; i < path.length; i++) {\n                var cur = path[i] as Vec3,\n                    pji = this._path3v[j][i] as Vec3;\n\n                pji.x = cur.x;\n                pji.y = cur.y;\n                pji.z = cur.z;\n\n                if (ellipsoid) {\n                    var lonLat = ellipsoid.cartesianToLonLat(cur);\n\n                    this._pathLonLat[j][i] = lonLat;\n\n                    l[j][i] = lonLat;\n                    m[j][i] = lonLat.forwardMercator();\n\n                    if (lonLat.lon < extent.southWest.lon) {\n                        extent.southWest.lon = lonLat.lon;\n                    }\n                    if (lonLat.lat < extent.southWest.lat) {\n                        extent.southWest.lat = lonLat.lat;\n                    }\n                    if (lonLat.lon > extent.northEast.lon) {\n                        extent.northEast.lon = lonLat.lon;\n                    }\n                    if (lonLat.lat > extent.northEast.lat) {\n                        extent.northEast.lat = lonLat.lat;\n                    }\n                }\n\n                Vec3.doubleToTwoFloats(cur, v_high, v_low);\n\n                vh[k] = v_high.x;\n                vl[k++] = v_low.x;\n                vh[k] = v_high.y;\n                vl[k++] = v_low.y;\n                vh[k] = v_high.z;\n                vl[k++] = v_low.z;\n                vh[k] = v_high.x;\n                vl[k++] = v_low.x;\n                vh[k] = v_high.y;\n                vl[k++] = v_low.y;\n                vh[k] = v_high.z;\n                vl[k++] = v_low.z;\n                vh[k] = v_high.x;\n                vl[k++] = v_low.x;\n                vh[k] = v_high.y;\n                vl[k++] = v_low.y;\n                vh[k] = v_high.z;\n                vl[k++] = v_low.z;\n                vh[k] = v_high.x;\n                vl[k++] = v_low.x;\n                vh[k] = v_high.y;\n                vl[k++] = v_low.y;\n                vh[k] = v_high.z;\n                vl[k++] = v_low.z;\n            }\n\n            var first;\n            if (this._closedLine) {\n                first = path[0];\n            } else {\n                var l1 = path.length - 1;\n                first = new Vec3(\n                    path[l1].x + path[l1].x - path[l1 - 1].x,\n                    path[l1].y + path[l1].y - path[l1 - 1].y,\n                    path[l1].z + path[l1].z - path[l1 - 1].z\n                );\n            }\n\n            Vec3.doubleToTwoFloats(first as Vec3, v_high, v_low);\n\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n        }\n    }\n\n    /**\n     * Sets polyline with geodetic coordinates.\n     * @protected\n     * @param {SegmentPathLonLat[]} pathLonLat - Geodetic polyline path coordinates.\n     */\n    protected _setEqualPathLonLat(pathLonLat: SegmentPathLonLat[]) {\n        var extent = this._extent;\n        extent.southWest.set(180.0, 90.0);\n        extent.northEast.set(-180.0, -90.0);\n\n        var v_high = new Vec3(),\n            v_low = new Vec3();\n\n        var vh = this._verticesHigh,\n            vl = this._verticesLow,\n            l = this._pathLonLat,\n            m = this._pathLonLatMerc,\n            c = this._path3v,\n            k = 0;\n\n        var ellipsoid = (this._renderNode as Planet).ellipsoid;\n\n        for (let j = 0; j < pathLonLat.length; j++) {\n            var path = pathLonLat[j] as LonLat[];\n\n            var last;\n            if (this._closedLine) {\n                last = ellipsoid.lonLatToCartesian(path[path.length - 1]);\n            } else {\n                let p0 = ellipsoid.lonLatToCartesian(path[0]),\n                    p1 = ellipsoid.lonLatToCartesian(path[1]);\n                last = new Vec3(p0.x + p0.x - p1.x, p0.y + p0.y - p1.y, p0.z + p0.z - p1.z);\n            }\n\n            Vec3.doubleToTwoFloats(last, v_high, v_low);\n\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n\n            for (let i = 0; i < path.length; i++) {\n                var cur = path[i] as LonLat;\n                var cartesian = ellipsoid.lonLatToCartesian(cur);\n                c[j][i] = cartesian;\n                m[j][i] = cur.forwardMercator();\n                l[j][i] = cur;\n\n                Vec3.doubleToTwoFloats(cartesian, v_high, v_low);\n\n                vh[k] = v_high.x;\n                vl[k++] = v_low.x;\n                vh[k] = v_high.y;\n                vl[k++] = v_low.y;\n                vh[k] = v_high.z;\n                vl[k++] = v_low.z;\n                vh[k] = v_high.x;\n                vl[k++] = v_low.x;\n                vh[k] = v_high.y;\n                vl[k++] = v_low.y;\n                vh[k] = v_high.z;\n                vl[k++] = v_low.z;\n                vh[k] = v_high.x;\n                vl[k++] = v_low.x;\n                vh[k] = v_high.y;\n                vl[k++] = v_low.y;\n                vh[k] = v_high.z;\n                vl[k++] = v_low.z;\n                vh[k] = v_high.x;\n                vl[k++] = v_low.x;\n                vh[k] = v_high.y;\n                vl[k++] = v_low.y;\n                vh[k] = v_high.z;\n                vl[k++] = v_low.z;\n\n                if (cur.lon < extent.southWest.lon) {\n                    extent.southWest.lon = cur.lon;\n                }\n                if (cur.lat < extent.southWest.lat) {\n                    extent.southWest.lat = cur.lat;\n                }\n                if (cur.lon > extent.northEast.lon) {\n                    extent.northEast.lon = cur.lon;\n                }\n                if (cur.lat > extent.northEast.lat) {\n                    extent.northEast.lat = cur.lat;\n                }\n            }\n\n            var first;\n            if (this._closedLine) {\n                first = ellipsoid.lonLatToCartesian(path[0]);\n            } else {\n                let p0 = ellipsoid.lonLatToCartesian(path[path.length - 1]),\n                    p1 = ellipsoid.lonLatToCartesian(path[path.length - 2]);\n                first = new Vec3(p0.x + p0.x - p1.x, p0.y + p0.y - p1.y, p0.z + p0.z - p1.z);\n            }\n\n            Vec3.doubleToTwoFloats(first, v_high, v_low);\n\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n            vh[k] = v_high.x;\n            vl[k++] = v_low.x;\n            vh[k] = v_high.y;\n            vl[k++] = v_low.y;\n            vh[k] = v_high.z;\n            vl[k++] = v_low.z;\n        }\n    }\n\n    public setPointLonLat(lonlat: LonLat, index: number, segmentIndex: number) {\n        if (this._renderNode && (this._renderNode as Planet).ellipsoid) {\n            let l = this._pathLonLat,\n                m = this._pathLonLatMerc;\n\n            l[segmentIndex][index] = lonlat;\n            m[segmentIndex][index] = lonlat.forwardMercator();\n\n            //\n            // Apply new extent(TODO: think about optimization)\n            //\n            var extent = this._extent;\n            extent.southWest.set(180.0, 90.0);\n            extent.northEast.set(-180.0, -90.0);\n            for (let i = 0; i < l.length; i++) {\n                var pi = l[i] as LonLat[];\n                for (let j = 0; j < pi.length; j++) {\n                    var lon = pi[j].lon,\n                        lat = pi[j].lat;\n                    if (lon > extent.northEast.lon) {\n                        extent.northEast.lon = lon;\n                    }\n                    if (lat > extent.northEast.lat) {\n                        extent.northEast.lat = lat;\n                    }\n                    if (lon < extent.southWest.lon) {\n                        extent.southWest.lon = lon;\n                    }\n                    if (lat < extent.southWest.lat) {\n                        extent.southWest.lat = lat;\n                    }\n                }\n            }\n\n            this.setPoint3v(\n                (this._renderNode as Planet).ellipsoid.lonLatToCartesian(lonlat),\n                index,\n                segmentIndex,\n                true\n            );\n        } else {\n            let path = this._pathLonLat[segmentIndex] as LonLat[];\n            path[index].lon = lonlat.lon;\n            path[index].lat = lonlat.lat;\n            path[index].height = lonlat.height;\n        }\n    }\n\n    /**\n     * Changes cartesian point coordinates of the path\n     * @param {Vec3} coordinates - New coordinates\n     * @param {number} [index=0] - Path segment index\n     * @param {number} [segmentIndex=0] - Index of the point in the path segment\n     * @param {boolean} [skipLonLat=false] - Do not update geodetic coordinates\n     */\n    public setPoint3v(coordinates: Vec3, index: number = 0, segmentIndex: number = 0, skipLonLat: boolean = false) {\n\n        if (this._renderNode) {\n            var v_high = new Vec3(),\n                v_low = new Vec3();\n\n            var vh = this._verticesHigh,\n                vl = this._verticesLow,\n                l = this._pathLonLat,\n                m = this._pathLonLatMerc,\n                k = 0,\n                kk = 0;\n\n            //for (let i = 0; i < segmentIndex; i++) {\n            //    kk += this._path3v[i].length * 12 + 24;\n            //}\n            kk = this._pathLengths[segmentIndex] * 12 + 24 * segmentIndex;\n\n            let path = this._path3v[segmentIndex] as Vec3[];\n\n            path[index].x = coordinates.x;\n            path[index].y = coordinates.y;\n            path[index].z = coordinates.z;\n\n            let _closedLine = this._closedLine || path.length === 1;\n\n            if (index === 0 || index === 1) {\n                var last;\n                if (_closedLine) {\n                    last = path[path.length - 1];\n                } else {\n                    last = new Vec3(\n                        path[0].x + path[0].x - path[1].x,\n                        path[0].y + path[0].y - path[1].y,\n                        path[0].z + path[0].z - path[1].z\n                    );\n                }\n\n                k = kk;\n\n                Vec3.doubleToTwoFloats(last, v_high, v_low);\n\n                vh[k] = v_high.x;\n                vh[k + 1] = v_high.y;\n                vh[k + 2] = v_high.z;\n                vh[k + 3] = v_high.x;\n                vh[k + 4] = v_high.y;\n                vh[k + 5] = v_high.z;\n                vh[k + 6] = v_high.x;\n                vh[k + 7] = v_high.y;\n                vh[k + 8] = v_high.z;\n                vh[k + 9] = v_high.x;\n                vh[k + 10] = v_high.y;\n                vh[k + 11] = v_high.z;\n\n                vl[k] = v_low.x;\n                vl[k + 1] = v_low.y;\n                vl[k + 2] = v_low.z;\n                vl[k + 3] = v_low.x;\n                vl[k + 4] = v_low.y;\n                vl[k + 5] = v_low.z;\n                vl[k + 6] = v_low.x;\n                vl[k + 7] = v_low.y;\n                vl[k + 8] = v_low.z;\n                vl[k + 9] = v_low.x;\n                vl[k + 10] = v_low.y;\n                vl[k + 11] = v_low.z;\n            }\n\n            if (!skipLonLat && (this._renderNode as Planet).ellipsoid) {\n                var lonLat = (this._renderNode as Planet).ellipsoid.cartesianToLonLat(coordinates);\n                l[segmentIndex][index] = lonLat;\n                m[segmentIndex][index] = lonLat.forwardMercator();\n\n                //\n                // Apply new extent(TODO: think about optimization)\n                //\n                var extent = this._extent;\n                extent.southWest.set(180.0, 90.0);\n                extent.northEast.set(-180.0, -90.0);\n                for (let i = 0; i < l.length; i++) {\n                    var pi = l[i] as LonLat[];\n                    for (let j = 0; j < pi.length; j++) {\n                        var lon = pi[j].lon,\n                            lat = pi[j].lat;\n                        if (lon > extent.northEast.lon) {\n                            extent.northEast.lon = lon;\n                        }\n                        if (lat > extent.northEast.lat) {\n                            extent.northEast.lat = lat;\n                        }\n                        if (lon < extent.southWest.lon) {\n                            extent.southWest.lon = lon;\n                        }\n                        if (lat < extent.southWest.lat) {\n                            extent.southWest.lat = lat;\n                        }\n                    }\n                }\n            }\n\n            k = kk + index * 12 + 12;\n\n            Vec3.doubleToTwoFloats(coordinates, v_high, v_low);\n\n            vh[k] = v_high.x;\n            vh[k + 1] = v_high.y;\n            vh[k + 2] = v_high.z;\n            vh[k + 3] = v_high.x;\n            vh[k + 4] = v_high.y;\n            vh[k + 5] = v_high.z;\n            vh[k + 6] = v_high.x;\n            vh[k + 7] = v_high.y;\n            vh[k + 8] = v_high.z;\n            vh[k + 9] = v_high.x;\n            vh[k + 10] = v_high.y;\n            vh[k + 11] = v_high.z;\n\n            vl[k] = v_low.x;\n            vl[k + 1] = v_low.y;\n            vl[k + 2] = v_low.z;\n            vl[k + 3] = v_low.x;\n            vl[k + 4] = v_low.y;\n            vl[k + 5] = v_low.z;\n            vl[k + 6] = v_low.x;\n            vl[k + 7] = v_low.y;\n            vl[k + 8] = v_low.z;\n            vl[k + 9] = v_low.x;\n            vl[k + 10] = v_low.y;\n            vl[k + 11] = v_low.z;\n\n            if (index === path.length - 1 || index === path.length - 2) {\n                var first;\n                if (_closedLine) {\n                    first = path[0];\n                } else {\n                    var l1 = path.length - 1;\n                    first = new Vec3(\n                        path[l1].x + path[l1].x - path[l1 - 1].x,\n                        path[l1].y + path[l1].y - path[l1 - 1].y,\n                        path[l1].z + path[l1].z - path[l1 - 1].z\n                    );\n                }\n\n                k = kk + path.length * 12 + 12;\n\n                Vec3.doubleToTwoFloats(first, v_high, v_low);\n\n                vh[k] = v_high.x;\n                vh[k + 1] = v_high.y;\n                vh[k + 2] = v_high.z;\n                vh[k + 3] = v_high.x;\n                vh[k + 4] = v_high.y;\n                vh[k + 5] = v_high.z;\n                vh[k + 6] = v_high.x;\n                vh[k + 7] = v_high.y;\n                vh[k + 8] = v_high.z;\n                vh[k + 9] = v_high.x;\n                vh[k + 10] = v_high.y;\n                vh[k + 11] = v_high.z;\n\n                vl[k] = v_low.x;\n                vl[k + 1] = v_low.y;\n                vl[k + 2] = v_low.z;\n                vl[k + 3] = v_low.x;\n                vl[k + 4] = v_low.y;\n                vl[k + 5] = v_low.z;\n                vl[k + 6] = v_low.x;\n                vl[k + 7] = v_low.y;\n                vl[k + 8] = v_low.z;\n                vl[k + 9] = v_low.x;\n                vl[k + 10] = v_low.y;\n                vl[k + 11] = v_low.z;\n            }\n\n            this._changedBuffers[VERTICES_BUFFER] = true;\n        } else {\n            let path = this._path3v[segmentIndex] as Vec3[];\n            path[index].x = coordinates.x;\n            path[index].y = coordinates.y;\n            path[index].z = coordinates.z;\n        }\n    }\n\n    protected _resizePathLengths(index: number = 0) {\n        this._pathLengths[0] = 0;\n        for (let i = index + 1, len = this._path3v.length; i <= len; i++) {\n            this._pathLengths[i] = this._pathLengths[i - 1] + this._path3v[i - 1].length;\n        }\n    }\n\n    /**\n     * Remove path segment\n     * @param {number} index - Path segment index\n     */\n    public removeSegment(index: number) {\n        this._path3v.splice(index, 1);\n        this.setPath3v(([] as SegmentPath3vExt[]).concat(this._path3v));\n    }\n\n    /**\n     * Remove point from the path\n     * @param {number} index - Point index in a path segment\n     * @param {number} [multiLineIndex=0] - Segment path index\n     */\n    public removePoint(index: number, multiLineIndex: number = 0) {\n        this._path3v[multiLineIndex].splice(index, 1);\n        if (this._path3v[multiLineIndex].length === 0) {\n            this._path3v.splice(multiLineIndex, 1);\n        }\n        this.setPath3v(([] as SegmentPath3vExt[]).concat(this._path3v));\n    }\n\n    /**\n     * Insert point coordinates in a path segment\n     * @param {Vec3} point3v - Point coordinates\n     * @param {number} [index=0] - Index in the path\n     * @param {NumberArray4} [color] - Point color\n     * @param {number} [multilineIndex=0] - Path segment index\n     */\n    public insertPoint3v(point3v: Vec3, index: number = 0, color?: NumberArray4, multilineIndex: number = 0) {\n        let p = ([] as SegmentPath3vExt[]).concat(this._path3v),\n            pp = p[multilineIndex];\n        if (pp) {\n            let c = ([] as SegmentPathColor[]).concat(this._pathColors);\n\n            pp.splice(index, 0, point3v);\n\n            if (color) {\n                let cc = c[multilineIndex];\n                if (!cc) {\n                    cc = new Array(pp.length);\n                }\n                cc.splice(index, 0, color);\n            }\n\n            this.setPath3v(p, c);\n        } else {\n            this.addPoint3v(point3v, multilineIndex);\n        }\n    }\n\n    /**\n     * Adds a new cartesian point in the end of the path in a last line segment.\n     * @public\n     * @param {Vec3} point3v - New coordinates.\n     * @param {NumberArray4} [color] -\n     * @param {boolean} [skipEllipsoid] -\n     */\n    public appendPoint3v(point3v: Vec3, color?: NumberArray4, skipEllipsoid?: boolean) {\n        if (this._path3v.length === 0) {\n            this._pathColors.push([color || this._defaultColor as NumberArray4]);\n            this.addPoint3v(point3v);\n        } else {\n            //\n            // Making typedArrays suitable for appendPoint function\n            //\n            this._verticesHigh = makeArray(this._verticesHigh);\n            this._verticesLow = makeArray(this._verticesLow);\n            this._colors = makeArray(this._colors);\n            this._orders = makeArray(this._orders);\n            this._indexes = makeArray(this._indexes);\n\n            Polyline.appendPoint3v(\n                this._path3v,\n                point3v,\n                this._pathColors,\n                color || this._defaultColor as NumberArray4,\n                this._closedLine,\n                this._verticesHigh,\n                this._verticesLow,\n                this._colors,\n                this._orders,\n                this._indexes,\n                !skipEllipsoid ? (this._renderNode as Planet).ellipsoid : null,\n                this._pathLonLat,\n                this._pathLonLatMerc,\n                this._extent\n            );\n\n            this._pathLengths[this._path3v.length] += 1;\n\n            this._changedBuffers[VERTICES_BUFFER] = true;\n            this._changedBuffers[COLORS_BUFFER] = true;\n            this._changedBuffers[INDEX_BUFFER] = true;\n        }\n    }\n\n    /**\n     * Append new point in the end of the path.\n     * @public\n     * @param {Vec3} point3v - New point coordinates.\n     * @param {number} [multiLineIndex=0] - Path segment index, first by default.\n     */\n    public addPoint3v(point3v: Vec3, multiLineIndex: number = 0) {\n        //\n        // TODO: could be optimized\n        //\n        if (multiLineIndex >= this._path3v.length) {\n            this._path3v.push([]);\n        }\n        this._path3v[multiLineIndex].push(point3v);\n        this.setPath3v(([] as SegmentPath3vExt[]).concat(this._path3v));\n    }\n\n    /**\n     * Append new geodetic point in the end of the path.\n     * @public\n     * @param {LonLat} lonLat - New coordinate.\n     * @param {number} [multiLineIndex=0] - Path segment index, first by default.\n     */\n    public addPointLonLat(lonLat: LonLat, multiLineIndex: number = 0) {\n        //\n        // TODO: could be optimized\n        //\n        if (multiLineIndex >= this._pathLonLat.length) {\n            this._pathLonLat.push([]);\n        }\n        this._pathLonLat[multiLineIndex].push(lonLat);\n        this.setPathLonLat(([] as SegmentPathLonLatExt[]).concat(this._pathLonLat));\n    }\n\n    /**\n     * Clear polyline data.\n     * @public\n     */\n    public clear() {\n        this._clearData();\n    }\n\n    /**\n     * Change path point color\n     * @param {NumberArray4} color - New color\n     * @param {number} [index=0] - Point index\n     * @param {number} [segmentIndex=0] - Path segment index\n     */\n    public setPointColor(color: NumberArray4, index: number = 0, segmentIndex: number = 0) {\n        if (this._renderNode && index < this._path3v[segmentIndex].length) {\n            let colors = this._pathColors[segmentIndex];\n\n            if (!colors) {\n                if (this._path3v[segmentIndex] && index < this._path3v[segmentIndex].length) {\n                    this._pathColors[segmentIndex] = new Array(this._path3v[segmentIndex].length);\n                } else {\n                    return;\n                }\n            }\n\n            if (!colors[index]) {\n                colors[index] = [color[R], color[G], color[B], color[A] || 1.0];\n            } else {\n                colors[index][R] = color[R];\n                colors[index][G] = color[G];\n                colors[index][B] = color[B];\n                colors[index][A] = color[A] || 1.0;\n            }\n\n            let c = this._colors;\n\n            //optimized with this._pathLengths\n            //for (let i = 0; i < segmentIndex; i++) {\n            //    kk += this._path3v[i].length * 16 + 32;\n            //}\n\n            let k = index * 16 + this._pathLengths[segmentIndex] * 16 + 32 * segmentIndex;\n\n            c[k] = c[k + 4] = c[k + 8] = c[k + 12] = color[R];\n            c[k + 1] = c[k + 5] = c[k + 9] = c[k + 13] = color[G];\n            c[k + 2] = c[k + 6] = c[k + 10] = c[k + 14] = color[B];\n            c[k + 3] = c[k + 7] = c[k + 11] = c[k + 15] = color[A] || 1.0;\n\n            this._changedBuffers[COLORS_BUFFER] = true;\n        } else {\n            let pathColors = this._pathColors[segmentIndex];\n            pathColors[index] = color;\n        }\n    }\n\n    /**\n     * Sets polyline opacity.\n     * @public\n     * @param {number} opacity - Opacity.\n     */\n    public setOpacity(opacity: number) {\n        this._opacity = opacity;\n    }\n\n    /**\n     * Sets Polyline thickness in screen pixels.\n     * @public\n     * @param {number} thickness - Thickness.\n     */\n    public setThickness(thickness: number) {\n        this.thickness = thickness;\n    }\n\n    /**\n     * Returns thickness.\n     * @public\n     * @return {number} Thickness in screen pixels.\n     */\n    public getThickness(): number {\n        return this.thickness;\n    }\n\n    /**\n     * Sets visibility.\n     * @public\n     * @param {boolean} visibility - Polyline visibility.\n     */\n    public setVisibility(visibility: boolean) {\n        this.visibility = visibility;\n    }\n\n    /**\n     * Gets Polyline visibility.\n     * @public\n     * @return {boolean} Polyline visibility.\n     */\n    public getVisibility(): boolean {\n        return this.visibility;\n    }\n\n    /**\n     * Assign with render node.\n     * @public\n     * @param {RenderNode} renderNode -\n     */\n    public setRenderNode(renderNode: RenderNode) {\n        if (renderNode) {\n            this._renderNode = renderNode;\n            if (this._pathLonLat.length) {\n                this._createDataLonLat(([] as SegmentPathLonLatExt[]).concat(this._pathLonLat));\n            } else {\n                this._createData3v(([] as SegmentPath3vExt[]).concat(this._path3v));\n            }\n            this._refresh();\n            if (renderNode.renderer && renderNode.renderer.isInitialized()) {\n                this._update();\n            }\n        }\n    }\n\n    protected _clearData() {\n        //@ts-ignore\n        this._verticesHigh = null;\n        //@ts-ignore\n        this._verticesLow = null;\n        //@ts-ignore\n        this._orders = null;\n        //@ts-ignore\n        this._indexes = null;\n        //@ts-ignore\n        this._colors = null;\n\n        this._verticesHigh = [];\n        this._verticesLow = [];\n        this._orders = [];\n        this._indexes = [];\n        this._colors = [];\n\n        this._path3v.length = 0;\n        this._pathLonLat.length = 0;\n        this._pathLonLatMerc.length = 0;\n\n        this._path3v = [];\n        this._pathLonLat = [];\n        this._pathLonLatMerc = [];\n    }\n\n    protected _createData3v(path3v: SegmentPath3vExt[]) {\n        this._clearData();\n        Polyline.appendLineData3v(\n            path3v,\n            this._pathColors,\n            this._defaultColor as NumberArray4,\n            this._closedLine,\n            this._verticesHigh as number[],\n            this._verticesLow as number[],\n            this._orders as number[],\n            this._indexes as number[],\n            (this._renderNode as Planet).ellipsoid,\n            this._pathLonLat,\n            this._path3v,\n            this._pathLonLatMerc,\n            this._extent,\n            this._colors as number[]\n        );\n        this._resizePathLengths(0);\n    }\n\n    protected _createDataLonLat(pathLonlat: SegmentPathLonLatExt[]) {\n        this._clearData();\n        Polyline.appendLineDataLonLat(\n            pathLonlat,\n            this._pathColors,\n            this._defaultColor as NumberArray4,\n            this._closedLine,\n            this._verticesHigh as number[],\n            this._verticesLow as number[],\n            this._orders as number[],\n            this._indexes as number[],\n            (this._renderNode as Planet).ellipsoid,\n            this._path3v,\n            this._pathLonLat,\n            this._pathLonLatMerc,\n            this._extent,\n            this._colors as number[]\n        );\n        this._resizePathLengths(0);\n    }\n\n    /**\n     * Removes from an entity.\n     * @public\n     */\n    public remove() {\n        this._entity = null;\n\n        this._pathColors.length = 0;\n        this._pathColors = [];\n\n        //@ts-ignore\n        this._verticesHigh = null;\n        //@ts-ignore\n        this._verticesLow = null;\n        //@ts-ignore\n        this._orders = null;\n        //@ts-ignore\n        this._indexes = null;\n        //@ts-ignore\n        this._colors = null;\n\n        this._verticesHigh = [];\n        this._verticesLow = [];\n        this._orders = [];\n        this._indexes = [];\n        this._colors = [];\n\n        this._deleteBuffers();\n\n        this._handler && this._handler.remove(this);\n    }\n\n    public setPickingColor3v(color: Vec3) {\n        this._pickingColor[0] = color.x / 255.0;\n        this._pickingColor[1] = color.y / 255.0;\n        this._pickingColor[2] = color.z / 255.0;\n    }\n\n    /**\n     * Returns polyline geodetic extent.\n     * @public\n     * @returns {Extent} - Geodetic extent\n     */\n    public getExtent(): Extent {\n        return this._extent.clone();\n    }\n\n    /**\n     * Returns path cartesian coordinates.\n     * @return {SegmentPath3vExt[]} Polyline path.\n     */\n    public getPath3v(): SegmentPath3vExt[] {\n        return this._path3v;\n    }\n\n    /**\n     * Returns geodetic path coordinates.\n     * @return {SegmentPathLonLatExt[]} Polyline path.\n     */\n    public getPathLonLat(): SegmentPathLonLatExt[] {\n        return this._pathLonLat;\n    }\n\n    public getPathColors(): NumberArray4[][] {\n        return this._pathColors;\n    }\n\n    /**\n     * @todo\n     * @param {NumberArray4[][]} pathColors\n     */\n    setPathColors(pathColors: NumberArray4[][]) {\n        if (this._renderNode) {\n            //\n            // ...\n            //\n        }\n    }\n\n    /**\n     * Sets polyline color\n     * @param {string} htmlColor- HTML color\n     */\n    public setColorHTML(htmlColor: string) {\n        this._defaultColor = htmlColorToFloat32Array(htmlColor);\n\n        let color = htmlColorToRgba(htmlColor),\n            p = this._pathColors;\n\n        for (let i = 0, len = p.length; i < len; i++) {\n            let s = p[i];\n            for (let j = 0, slen = s.length; j < slen; j++) {\n                s[j][0] = color.x;\n                s[j][1] = color.y;\n                s[j][2] = color.z;\n                s[j][3] = color.w;\n            }\n        }\n\n        let c = this._colors;\n        for (let i = 0, len = c.length; i < len; i += 4) {\n            c[i] = color.x;\n            c[i + 1] = color.y;\n            c[i + 2] = color.z;\n            c[i + 3] = color.w;\n        }\n\n        this._changedBuffers[COLORS_BUFFER] = true;\n    }\n\n    /**\n     * Sets polyline geodetic coordinates.\n     * @public\n     * @param {SegmentPathLonLat[]} pathLonLat - Polyline path cartesian coordinates.\n     * @param {Boolean} [forceEqual=false] - OPTIMIZATION FLAG: Makes assigning faster for size equal coordinates array.\n     */\n    public setPathLonLat(pathLonLat: SegmentPathLonLatExt[], forceEqual: boolean = false) {\n        if (this._renderNode && (this._renderNode as Planet).ellipsoid) {\n            if (forceEqual) {\n                this._setEqualPathLonLat(pathLonLat as SegmentPathLonLat[]);\n                this._changedBuffers[VERTICES_BUFFER] = true;\n                this._changedBuffers[COLORS_BUFFER] = true;\n            } else {\n                this._createDataLonLat(pathLonLat);\n                this._changedBuffers[VERTICES_BUFFER] = true;\n                this._changedBuffers[INDEX_BUFFER] = true;\n                this._changedBuffers[COLORS_BUFFER] = true;\n            }\n        } else {\n            this._pathLonLat = ([] as SegmentPathLonLatExt[]).concat(pathLonLat);\n        }\n    }\n\n    /**\n     * Sets Polyline cartesian coordinates.\n     * @public\n     * @param {SegmentPath3vExt[]} path3v - Polyline path cartesian coordinates. (exactly 3 entries)\n     * @param {SegmentPathColor[]} [pathColors] - Polyline path cartesian coordinates. (exactly 3 entries)\n     * @param {Boolean} [forceEqual=false] - Makes assigning faster for size equal coordinates array.\n     */\n    public setPath3v(path3v: SegmentPath3vExt[], pathColors?: SegmentPathColor[], forceEqual: boolean = false) {\n        if (pathColors) {\n            this._pathColors = ([] as SegmentPathColor[]).concat(pathColors);\n        }\n\n        if (this._renderNode) {\n            if (forceEqual) {\n                this._setEqualPath3v(path3v);\n                this._changedBuffers[VERTICES_BUFFER] = true;\n                this._changedBuffers[COLORS_BUFFER] = true;\n            } else {\n                this._createData3v(path3v);\n                this._changedBuffers[VERTICES_BUFFER] = true;\n                this._changedBuffers[INDEX_BUFFER] = true;\n                this._changedBuffers[COLORS_BUFFER] = true;\n            }\n        } else {\n            this._path3v = ([] as SegmentPath3vExt[]).concat(path3v);\n        }\n    }\n\n    public draw() {\n        if (this.visibility && this._path3v.length) {\n            this._update();\n\n            let rn = this._renderNode!;\n            let r = rn.renderer!;\n            let sh = r.handler.programs.polyline_screen;\n            let p = sh._program;\n            let gl = r.handler.gl!,\n                sha = p.attributes,\n                shu = p.uniforms;\n\n            let ec = this._handler!._entityCollection;\n\n            sh.activate();\n\n            gl.disable(gl.CULL_FACE);\n\n            gl.uniform1f(shu.depthOffset, ec.polygonOffsetUnits);\n\n            gl.uniformMatrix4fv(shu.proj, false, r.activeCamera!.getProjectionMatrix());\n            gl.uniformMatrix4fv(shu.view, false, r.activeCamera!.getViewMatrix());\n\n            // gl.uniform4fv(shu.color, [this.color.x, this.color.y, this.color.z, this.color.w * this._handler._entityCollection._fadingOpacity]);\n\n            gl.uniform3fv(shu.eyePositionHigh, r.activeCamera!.eyeHigh);\n            gl.uniform3fv(shu.eyePositionLow, r.activeCamera!.eyeLow);\n\n            gl.uniform2fv(shu.uFloatParams, [(rn as Planet)._planetRadius2 || 0.0, r.activeCamera!._tanViewAngle_hradOneByHeight]);\n            gl.uniform2fv(shu.viewport, [r.handler.canvas!.width, r.handler.canvas!.height]);\n            gl.uniform1f(shu.thickness, this.thickness * 0.5);\n            gl.uniform1f(shu.opacity, this._opacity * ec._fadingOpacity);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._colorsBuffer as WebGLBuffer);\n            gl.vertexAttribPointer(sha.color, this._colorsBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            let v = this._verticesHighBuffer!;\n            gl.bindBuffer(gl.ARRAY_BUFFER, v);\n            gl.vertexAttribPointer(sha.prevHigh, v.itemSize, gl.FLOAT, false, 12, 0);\n            gl.vertexAttribPointer(sha.currentHigh, v.itemSize, gl.FLOAT, false, 12, 48);\n            gl.vertexAttribPointer(sha.nextHigh, v.itemSize, gl.FLOAT, false, 12, 96);\n\n            v = this._verticesLowBuffer!;\n            gl.bindBuffer(gl.ARRAY_BUFFER, v);\n            gl.vertexAttribPointer(sha.prevLow, v.itemSize, gl.FLOAT, false, 12, 0);\n            gl.vertexAttribPointer(sha.currentLow, v.itemSize, gl.FLOAT, false, 12, 48);\n            gl.vertexAttribPointer(sha.nextLow, v.itemSize, gl.FLOAT, false, 12, 96);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._ordersBuffer as WebGLBuffer);\n            gl.vertexAttribPointer(sha.order, this._ordersBuffer!.itemSize, gl.FLOAT, false, 4, 0);\n\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexesBuffer as WebGLBuffer);\n            gl.drawElements(gl.TRIANGLE_STRIP, this._indexesBuffer!.numItems, gl.UNSIGNED_INT, 0);\n\n            gl.enable(gl.CULL_FACE);\n        }\n    }\n\n    public drawPicking() {\n        if (this.visibility && this._path3v.length) {\n            let rn = this._renderNode!;\n            let r = rn.renderer!;\n            let sh = r.handler.programs.polyline_picking;\n            let p = sh._program;\n            let gl = r.handler.gl!,\n                sha = p.attributes,\n                shu = p.uniforms;\n\n            sh.activate();\n\n            gl.disable(gl.CULL_FACE);\n\n            gl.uniform1f(shu.depthOffset, this._handler!._entityCollection.polygonOffsetUnits);\n\n            gl.uniformMatrix4fv(shu.proj, false, r.activeCamera!.getProjectionMatrix());\n            gl.uniformMatrix4fv(shu.view, false, r.activeCamera!.getViewMatrix());\n\n            gl.uniform4fv(shu.color, [\n                this._pickingColor[0],\n                this._pickingColor[1],\n                this._pickingColor[2],\n                1.0\n            ]);\n\n            gl.uniform3fv(shu.eyePositionHigh, r.activeCamera!.eyeHigh);\n            gl.uniform3fv(shu.eyePositionLow, r.activeCamera!.eyeLow);\n\n            gl.uniform2fv(shu.uFloatParams, [(rn as Planet)._planetRadius2 || 0.0, r.activeCamera!._tanViewAngle_hradOneByHeight]);\n            //@todo: replace to the handler property\n            gl.uniform2fv(shu.viewport, [r.handler.canvas!.width, r.handler.canvas!.height]);\n            gl.uniform1f(shu.thickness, this.thickness * 0.5);\n\n            let v = this._verticesHighBuffer!;\n            gl.bindBuffer(gl.ARRAY_BUFFER, v);\n            gl.vertexAttribPointer(sha.prevHigh, v.itemSize, gl.FLOAT, false, 12, 0);\n            gl.vertexAttribPointer(sha.currentHigh, v.itemSize, gl.FLOAT, false, 12, 48);\n            gl.vertexAttribPointer(sha.nextHigh, v.itemSize, gl.FLOAT, false, 12, 96);\n\n            v = this._verticesLowBuffer!;\n            gl.bindBuffer(gl.ARRAY_BUFFER, v);\n            gl.vertexAttribPointer(sha.prevLow, v.itemSize, gl.FLOAT, false, 12, 0);\n            gl.vertexAttribPointer(sha.currentLow, v.itemSize, gl.FLOAT, false, 12, 48);\n            gl.vertexAttribPointer(sha.nextLow, v.itemSize, gl.FLOAT, false, 12, 96);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._ordersBuffer as WebGLBuffer);\n            gl.vertexAttribPointer(sha.order, this._ordersBuffer!.itemSize, gl.FLOAT, false, 4, 0);\n\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexesBuffer as WebGLBuffer);\n            gl.drawElements(gl.TRIANGLE_STRIP, this._indexesBuffer!.numItems, gl.UNSIGNED_INT, 0);\n\n            gl.enable(gl.CULL_FACE);\n        }\n    }\n\n    /**\n     * Refresh buffers.\n     * @protected\n     */\n    protected _refresh() {\n        let i = this._changedBuffers.length;\n        while (i--) {\n            this._changedBuffers[i] = true;\n        }\n    }\n\n    /**\n     * Updates render buffers.\n     * @protected\n     */\n    protected _update() {\n        if (this._renderNode) {\n            let i = this._changedBuffers.length;\n            while (i--) {\n                if (this._changedBuffers[i]) {\n                    this._buffersUpdateCallbacks[i].call(this);\n                    this._changedBuffers[i] = false;\n                }\n            }\n        }\n    }\n\n    /**\n     * Clear GL buffers.\n     * @public\n     */\n    public _deleteBuffers() {\n        if (this._renderNode) {\n            let r = this._renderNode.renderer!,\n                gl = r.handler.gl!;\n\n            gl.deleteBuffer(this._verticesHighBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._verticesLowBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._ordersBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._indexesBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._colorsBuffer as WebGLBuffer);\n\n            this._verticesHighBuffer = null;\n            this._verticesLowBuffer = null;\n            this._ordersBuffer = null;\n            this._indexesBuffer = null;\n            this._colorsBuffer = null;\n        }\n    }\n\n    /**\n     * Creates vertices buffers.\n     * @protected\n     */\n    protected _createVerticesBuffer() {\n        let h = this._renderNode!.renderer!.handler;\n\n        let numItems = this._verticesHigh.length / 3;\n\n        if (!this._verticesHighBuffer || this._verticesHighBuffer.numItems !== numItems) {\n            h.gl!.deleteBuffer(this._verticesHighBuffer as WebGLBuffer);\n            h.gl!.deleteBuffer(this._verticesLowBuffer as WebGLBuffer);\n            this._verticesHighBuffer = h.createStreamArrayBuffer(3, numItems);\n            this._verticesLowBuffer = h.createStreamArrayBuffer(3, numItems);\n        }\n\n        this._verticesHigh = makeArrayTyped(this._verticesHigh);\n        this._verticesLow = makeArrayTyped(this._verticesLow);\n\n        h.setStreamArrayBuffer(this._verticesHighBuffer!, this._verticesHigh as Float32Array);\n        h.setStreamArrayBuffer(this._verticesLowBuffer!, this._verticesLow as Float32Array);\n    }\n\n    /**\n     * Creates gl index and order buffer.\n     * @protected\n     */\n    protected _createIndexBuffer() {\n        let h = this._renderNode!.renderer!.handler;\n        h.gl!.deleteBuffer(this._ordersBuffer as WebGLBuffer);\n        h.gl!.deleteBuffer(this._indexesBuffer as WebGLBuffer);\n\n        this._orders = makeArrayTyped(this._orders);\n        this._ordersBuffer = h.createArrayBuffer(this._orders as Uint8Array, 1, this._orders.length / 2);\n\n        this._indexes = makeArrayTyped(this._indexes, Uint32Array);\n        this._indexesBuffer = h.createElementArrayBuffer(this._indexes as Uint32Array, 1, this._indexes.length);\n    }\n\n    protected _createColorsBuffer() {\n        let h = this._renderNode!.renderer!.handler;\n        h.gl!.deleteBuffer(this._colorsBuffer as WebGLBuffer);\n\n        this._colors = makeArrayTyped(this._colors);\n        this._colorsBuffer = h.createArrayBuffer(new Float32Array(this._colors), 4, this._colors.length / 4);\n    }\n}\n\nexport {Polyline};\n","import * as utils from \"../utils/shared\";\nimport {NumberArray3, Vec3} from \"../math/Vec3\";\nimport {NumberArray4, Vec4} from \"../math/Vec4\";\nimport {Entity} from \"./Entity\";\nimport {RayHandler} from \"./RayHandler\";\n\nexport interface IRayParams {\n    thickness?: number;\n    startPosition?: Vec3 | NumberArray3;\n    endPosition?: Vec3 | NumberArray3;\n    startColor?: string | NumberArray4;\n    endColor?: string | NumberArray4;\n    visibility?: boolean;\n\n}\n\n/**\n * Ray class.\n * @class\n * @param {Object} [options] - Options:\n * @param {Vec3|Array.<number>} [options.startPosition] - Ray start point position.\n * @param {Vec3|Array.<number>} [options.endPosition] - Ray end point position.\n * @param {Vec3|Array.<number>} [options.startColor] - Ray start point color.\n * @param {Vec3|Array.<number>} [options.endColor] - Ray end point color.\n * @param {boolean} [options.visibility] - Visibility.\n */\nclass Ray {\n\n    static __counter__: number = 0;\n    /**\n     * Object uniq identifier.\n     * @protected\n     * @type {number}\n     */\n    protected __id: number;\n\n    public _thickness: number;\n\n    protected _startPosition: Vec3;\n    public _startPositionHigh: Vec3;\n    public _startPositionLow: Vec3;\n\n    // RTE end position\n    protected _endPosition: Vec3;\n    public _endPositionHigh: Vec3;\n    public _endPositionLow: Vec3;\n\n    // start end point colors\n    public _startColor: Vec4;\n    public _endColor: Vec4;\n\n    /**\n     * Ray visibility.\n     * @protected\n     * @type {boolean}\n     */\n    protected _visibility: boolean;\n\n    /**\n     * Entity instance that holds this billboard.\n     * @public\n     * @type {Entity}\n     */\n    public _entity: Entity | null;\n\n    /**\n     * Handler that stores and renders this billboard object.\n     * @public\n     * @type {BillboardHandler}\n     */\n    public _handler: RayHandler | null;\n\n    /**\n     * Billboard handler array index.\n     * @public\n     * @type {number}\n     */\n    public _handlerIndex: number;\n    constructor(options: IRayParams = {}) {\n\n        this.__id = Ray.__counter__++;\n\n        this._thickness = options.thickness || 2.0;\n\n        this._startPosition = utils.createVector3(options.startPosition);\n        this._startPositionHigh = new Vec3();\n        this._startPositionLow = new Vec3();\n        Vec3.doubleToTwoFloats(\n            this._startPosition,\n            this._startPositionHigh,\n            this._startPositionLow\n        );\n\n        this._endPosition = utils.createVector3(options.endPosition);\n        this._endPositionHigh = new Vec3();\n        this._endPositionLow = new Vec3();\n        Vec3.doubleToTwoFloats(this._endPosition, this._endPositionHigh, this._endPositionLow);\n\n        this._startColor = utils.createColorRGBA(options.startColor);\n        this._endColor = utils.createColorRGBA(options.endColor);\n\n        this._visibility = options.visibility != undefined ? options.visibility : true;\n\n        this._entity = null;\n\n        this._handler = null;\n\n        this._handlerIndex = -1;\n    }\n\n    /**\n     * Sets ray start position.\n     * @public\n     * @param {number} x - X coordinate.\n     * @param {number} y - Y coordinate.\n     * @param {number} z - Z coordinate.\n     */\n    public setStartPosition(x: number, y: number, z: number) {\n        this._startPosition.x = x;\n        this._startPosition.y = y;\n        this._startPosition.z = z;\n        Vec3.doubleToTwoFloats(\n            this._startPosition,\n            this._startPositionHigh,\n            this._startPositionLow\n        );\n        this._handler &&\n        this._handler.setStartPositionArr(\n            this._handlerIndex,\n            this._startPositionHigh,\n            this._startPositionLow\n        );\n    }\n\n    public getLength(): number {\n        return this._startPosition.distance(this._endPosition);\n    }\n\n    /**\n     * Sets ray start position.\n     * @public\n     * @param {Vec3} position - Cartesian coordinates.\n     */\n    public setStartPosition3v(position: Vec3) {\n        this._startPosition.x = position.x;\n        this._startPosition.y = position.y;\n        this._startPosition.z = position.z;\n        Vec3.doubleToTwoFloats(\n            this._startPosition,\n            this._startPositionHigh,\n            this._startPositionLow\n        );\n        this._handler &&\n        this._handler.setStartPositionArr(\n            this._handlerIndex,\n            this._startPositionHigh,\n            this._startPositionLow\n        );\n    }\n\n    /**\n     * Sets ray end position.\n     * @public\n     * @param {number} x - X coordinate.\n     * @param {number} y - Y coordinate.\n     * @param {number} z - Z coordinate.\n     */\n    public setEndPosition(x: number, y: number, z: number) {\n        this._endPosition.x = x;\n        this._endPosition.y = y;\n        this._endPosition.z = z;\n        Vec3.doubleToTwoFloats(this._endPosition, this._endPositionHigh, this._endPositionLow);\n        this._handler &&\n        this._handler.setEndPositionArr(\n            this._handlerIndex,\n            this._endPositionHigh,\n            this._endPositionLow\n        );\n    }\n\n    /**\n     * Sets ray end position.\n     * @public\n     * @param {Vec3} position - Cartesian coordinates.\n     */\n    public setEndPosition3v(position: Vec3) {\n        this._endPosition.x = position.x;\n        this._endPosition.y = position.y;\n        this._endPosition.z = position.z;\n        Vec3.doubleToTwoFloats(this._endPosition, this._endPositionHigh, this._endPositionLow);\n        this._handler &&\n        this._handler.setEndPositionArr(\n            this._handlerIndex,\n            this._endPositionHigh,\n            this._endPositionLow\n        );\n    }\n\n    public setThickness(thickness: number) {\n        this._thickness = thickness;\n        this._handler && this._handler.setThicknessArr(this._handlerIndex, thickness);\n    }\n\n    public setColors4v(startColor?: Vec4, endColor?: Vec4) {\n        if (startColor) {\n            this._startColor.x = startColor.x;\n            this._startColor.y = startColor.y;\n            this._startColor.z = startColor.z;\n            this._startColor.w = startColor.w;\n        }\n\n        if (endColor) {\n            this._endColor.x = endColor.x;\n            this._endColor.y = endColor.y;\n            this._endColor.z = endColor.z;\n            this._endColor.w = endColor.w;\n        }\n\n        this._handler &&\n        this._handler.setRgbaArr(this._handlerIndex, this._startColor, this._endColor);\n    }\n\n    public setColorsHTML(startColor?: string, endColor?: string) {\n        if (startColor) {\n            this._startColor = utils.htmlColorToRgba(startColor);\n        }\n\n        if (endColor) {\n            this._endColor = utils.htmlColorToRgba(endColor);\n        }\n\n        this._handler && this._handler.setRgbaArr(this._handlerIndex, this._startColor, this._endColor);\n    }\n\n    /**\n     * Returns ray start position.\n     * @public\n     * @returns {Vec3}\n     */\n    public getStartPosition(): Vec3 {\n        return this._startPosition;\n    }\n\n    /**\n     * Returns ray end position.\n     * @public\n     * @returns {Vec3}\n     */\n    public getEndPosition(): Vec3 {\n        return this._endPosition;\n    }\n\n    /**\n     * Sets visibility.\n     * @public\n     * @param {boolean} visibility - Visibility flag.\n     */\n    public setVisibility(visibility: boolean) {\n        this._visibility = visibility;\n        this._handler && this._handler.setVisibility(this._handlerIndex, visibility);\n    }\n\n    /**\n     * Returns visibility.\n     * @public\n     * @returns {boolean}\n     */\n    public getVisibility(): boolean {\n        return this._visibility;\n    }\n\n    /**\n     * Remove from handler.\n     * @public\n     */\n    public remove() {\n        this._entity = null;\n        this._handler && this._handler.remove(this);\n    }\n\n    /**\n     * Set picking color.\n     * @public\n     * @param {Vec3} color - Picking color.\n     */\n    public setPickingColor3v(color: Vec3) {\n        this._handler && this._handler.setPickingColorArr(this._handlerIndex, color);\n    }\n}\n\nexport {Ray};\n","import * as utils from \"../utils/shared\";\nimport {Entity} from \"./Entity\";\nimport {Line3} from \"../math/Line3\";\nimport {RenderNode} from \"../scene/RenderNode\";\nimport {NumberArray3, Vec3} from \"../math/Vec3\";\nimport {NumberArray4, Vec4} from \"../math/Vec4\";\nimport {StripHandler} from \"./StripHandler\";\nimport {WebGLBufferExt} from \"../webgl/Handler\";\n\ntype TPoiExt = Vec3 | NumberArray3;\ntype TStripExt = [TPoiExt, TPoiExt];\n\ntype TPoi = Vec3;\ntype TStrip = [TPoi, TPoi];\n\n//type TStrip = TEdge[];\nexport interface IStripParams {\n    visibility?: boolean;\n    color?: string | NumberArray4 | Vec4;\n    opacity?: number;\n    path?: TStrip[];\n}\n\nlet _tempHigh = new Vec3(),\n    _tempLow = new Vec3();\n\n/**\n * Strip object.\n * @class\n * @param {*} [options] - Strip options:\n * @param {boolean} [options.visibility] - Strip visibility.\n * @example <caption>Stripe example</caption>\n * new og.Entity({\n *     strip: {\n *         gridSize: 10,\n *         path: [\n *             [[],[]],\n *             [[],[]]\n *         ]\n *     }\n * });\n */\nclass Strip {\n\n    static __counter__: number = 0;\n\n    protected __id: number;\n\n    /**\n     * Strip visibility.\n     * @public\n     * @type {boolean}\n     */\n    public visibility: boolean;\n\n    public color: Float32Array;\n\n    /**\n     * Parent collection render node.\n     * @protected\n     * @type {RenderNode}\n     */\n    protected _renderNode: RenderNode | null;\n\n    /**\n     * Entity instance that holds this strip.\n     * @public\n     * @type {Entity}\n     */\n    public _entity: Entity | null;\n    protected _verticesHighBuffer: WebGLBufferExt | null;\n    protected _verticesLowBuffer: WebGLBufferExt | null;\n    protected _indexBuffer: WebGLBufferExt | null;\n    protected _verticesHigh: number[];\n    protected _verticesLow: number[];\n    protected _indexes: number[];\n    protected _path: TStrip[];\n\n    protected _pickingColor: Float32Array;\n\n    protected _gridSize: number;\n\n    /**\n     * Handler that stores and renders this object.\n     * @public\n     * @type {StripHandler | null}\n     */\n    public _handler: StripHandler | null;\n    public _handlerIndex: number;\n\n    constructor(options: IStripParams = {}) {\n\n        this.__id = Strip.__counter__++;\n\n        this.visibility = options.visibility != undefined ? options.visibility : true;\n\n        this.color = new Float32Array([1.0, 1.0, 1.0, 0.5]);\n\n        if (options.color) {\n            let color = utils.createColorRGBA(options.color);\n            this.setColor(color.x, color.y, color.z, color.w);\n        }\n\n        if (options.opacity) {\n            this.setOpacity(options.opacity);\n        }\n\n        /**\n         * Parent collection render node.\n         * @protected\n         * @type {RenderNode}\n         */\n        this._renderNode = null;\n\n        /**\n         * Entity instance that holds this strip.\n         * @protected\n         * @type {Entity}\n         */\n        this._entity = null;\n\n        this._verticesHighBuffer = null;\n        this._verticesLowBuffer = null;\n\n        this._indexBuffer = null;\n\n        this._verticesHigh = [];\n        this._verticesLow = [];\n\n        this._indexes = [];\n\n        this._path = [];\n\n        this._pickingColor = new Float32Array(4);\n\n        this._gridSize = 1;\n\n        /**\n         * Handler that stores and renders this object.\n         * @protected\n         * @type {StripHandler}\n         */\n        this._handler = null;\n        this._handlerIndex = -1;\n\n        if (options.path) {\n            this.setPath(options.path);\n        }\n    }\n\n    /**\n     * Assign picking color.\n     * @public\n     * @param {Vec3} color - Picking RGB color.\n     */\n    public setPickingColor3v(color: Vec3) {\n        this._pickingColor[0] = color.x / 255.0;\n        this._pickingColor[1] = color.y / 255.0;\n        this._pickingColor[2] = color.z / 255.0;\n        this._pickingColor[3] = 1.0;\n    }\n\n    /**\n     * Clears object\n     * @public\n     */\n    public clear() {\n        this._path.length = 0;\n        this._path = [];\n\n        this._verticesHigh.length = 0;\n        this._verticesHigh = [];\n\n        this._verticesLow.length = 0;\n        this._verticesLow = [];\n\n        this._indexes.length = 0;\n        this._indexes = [];\n\n        this._deleteBuffers();\n    }\n\n    public setColor(r: number, g: number, b: number, a?: number) {\n        a = a || this.color[3];\n        this.color[0] = r;\n        this.color[1] = g;\n        this.color[2] = b;\n        this.color[3] = a;\n    }\n\n    /**\n     * Set strip opacity.\n     * @public\n     * @param {number} opacity - opacity.\n     */\n    public setOpacity(opacity: number) {\n        this.color[3] = opacity || 0;\n    }\n\n    /**\n     * Sets cloud visibility.\n     * @public\n     * @param {boolean} visibility - Visibility flag.\n     */\n    public setVisibility(visibility: boolean) {\n        this.visibility = visibility;\n    }\n\n    /**\n     * @return {boolean} Strip visibility.\n     */\n    public getVisibility(): boolean {\n        return this.visibility;\n    }\n\n    /**\n     * Assign rendering scene node.\n     * @public\n     * @param {RenderNode}  renderNode - Assigned render node.\n     */\n    public setRenderNode(renderNode: RenderNode) {\n        this._renderNode = renderNode;\n        this._createBuffers();\n    }\n\n    /**\n     * Removes from entity.\n     * @public\n     */\n    public remove() {\n        this._entity = null;\n        this._handler && this._handler.remove(this);\n    }\n\n    public draw() {\n        if (this.visibility && this._verticesHigh.length) {\n            let r = this._renderNode!.renderer!;\n\n            let gl = r.handler.gl!;\n\n            let sh = r.handler.programs.strip,\n                p = sh._program,\n                sha = p.attributes,\n                shu = p.uniforms;\n\n            sh.activate();\n\n            gl.disable(gl.CULL_FACE);\n\n            gl.uniformMatrix4fv(shu.viewMatrix, false, r.activeCamera!.getViewMatrix());\n            gl.uniformMatrix4fv(shu.projectionMatrix, false, r.activeCamera!.getProjectionMatrix());\n\n            gl.uniform3fv(shu.eyePositionHigh, r.activeCamera!.eyeHigh);\n            gl.uniform3fv(shu.eyePositionLow, r.activeCamera!.eyeLow);\n\n            gl.uniform4fv(shu.uColor, this.color);\n\n            gl.uniform1f(shu.uOpacity, this._entity!._entityCollection!._fadingOpacity);\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._verticesHighBuffer as WebGLBuffer);\n            gl.vertexAttribPointer(\n                sha.aVertexPositionHigh,\n                this._verticesHighBuffer!.itemSize,\n                gl.FLOAT,\n                false,\n                0,\n                0\n            );\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._verticesLowBuffer as WebGLBuffer);\n            gl.vertexAttribPointer(\n                sha.aVertexPositionLow,\n                this._verticesLowBuffer!.itemSize,\n                gl.FLOAT,\n                false,\n                0,\n                0\n            );\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer as WebGLBuffer);\n            gl.drawElements(\n                r.handler.gl!.TRIANGLE_STRIP,\n                this._indexBuffer!.numItems,\n                gl.UNSIGNED_INT,\n                0\n            );\n\n            gl.enable(gl.CULL_FACE);\n        }\n    }\n\n    drawPicking() {\n        if (this.visibility && this._verticesHigh.length) {\n            let r = this._renderNode!.renderer!;\n\n            let gl = r.handler.gl!;\n\n            let sh = r.handler.programs.strip,\n                p = sh._program,\n                sha = p.attributes,\n                shu = p.uniforms;\n\n            sh.activate();\n\n            gl.disable(gl.CULL_FACE);\n\n            gl.uniformMatrix4fv(shu.viewMatrix, false, r.activeCamera!.getViewMatrix());\n            gl.uniformMatrix4fv(shu.projectionMatrix, false, r.activeCamera!.getProjectionMatrix());\n\n            gl.uniform3fv(shu.eyePositionHigh, r.activeCamera!.eyeHigh);\n            gl.uniform3fv(shu.eyePositionLow, r.activeCamera!.eyeLow);\n\n            gl.uniform1f(shu.uOpacity, this._entity!._entityCollection!._fadingOpacity != 0 ? 1 : 0);\n\n            gl.uniform4fv(shu.uColor, this._pickingColor);\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._verticesHighBuffer as WebGLBuffer);\n            gl.vertexAttribPointer(\n                sha.aVertexPositionHigh,\n                this._verticesHighBuffer!.itemSize,\n                gl.FLOAT,\n                false,\n                0,\n                0\n            );\n            gl.bindBuffer(gl.ARRAY_BUFFER, this._verticesLowBuffer as WebGLBuffer);\n            gl.vertexAttribPointer(\n                sha.aVertexPositionLow,\n                this._verticesLowBuffer!.itemSize,\n                gl.FLOAT,\n                false,\n                0,\n                0\n            );\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer as WebGLBuffer);\n            gl.drawElements(\n                r.handler.gl!.TRIANGLE_STRIP,\n                this._indexBuffer!.numItems,\n                gl.UNSIGNED_INT,\n                0\n            );\n\n            gl.enable(gl.CULL_FACE);\n        }\n    }\n\n    /**\n     * Delete buffers\n     * @public\n     */\n    public _deleteBuffers() {\n        if (this._renderNode && this._renderNode.renderer) {\n            let r = this._renderNode.renderer,\n                gl = r.handler.gl!;\n\n            gl.deleteBuffer(this._indexBuffer!);\n            gl.deleteBuffer(this._verticesHighBuffer!);\n            gl.deleteBuffer(this._verticesLowBuffer!);\n        }\n        this._verticesHighBuffer = null;\n        this._verticesLowBuffer = null;\n        this._indexBuffer = null;\n    }\n\n    protected _createBuffers() {\n        if (this._renderNode && this._renderNode.renderer && this._renderNode.renderer.isInitialized()) {\n            let gl = this._renderNode.renderer.handler.gl!;\n\n            gl.deleteBuffer(this._indexBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._verticesHighBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._verticesLowBuffer as WebGLBuffer);\n\n            this._verticesHighBuffer = this._renderNode.renderer.handler.createArrayBuffer(\n                new Float32Array(this._verticesHigh),\n                3,\n                this._verticesHigh.length / 3\n            );\n            this._verticesLowBuffer = this._renderNode.renderer.handler.createArrayBuffer(\n                new Float32Array(this._verticesLow),\n                3,\n                this._verticesLow.length / 3\n            );\n            this._indexBuffer = this._renderNode.renderer.handler.createElementArrayBuffer(\n                new Uint32Array(this._indexes),\n                1,\n                this._indexes.length\n            );\n        }\n    }\n\n    public addEdge3v(p2: Vec3, p3: Vec3) {\n        let length = this._path.length;\n\n        if (length === 0) {\n            this._path.push([p2.clone(), p3.clone()]);\n        } else {\n            let p0 = this._path[length - 1][0],\n                p1 = this._path[length - 1][1];\n\n            this._path.push([p2.clone(), p3.clone()]);\n\n            let vHigh = this._verticesHigh,\n                vLow = this._verticesLow;\n\n            let gs = this._gridSize,\n                gs1 = gs + 1;\n\n            let p = new Vec3();\n\n            let last = this._verticesHigh.length / 3,\n                ind = last;\n\n            let d = Math.abs(p0.sub(p1).normal().dot(p2.sub(p0).normal()));\n\n            for (let i = 0; i < gs1; i++) {\n                let di = i / gs;\n                let p02 = p0.lerp(p2, di),\n                    p13 = p1.lerp(p3, di);\n\n                for (let j = 0; j < gs1; j++) {\n                    let dj = j / gs;\n                    let p01 = p0.lerp(p1, dj),\n                        p23 = p2.lerp(p3, dj);\n\n                    if (d !== 1.0) {\n                        new Line3(p02, p13).intersects(new Line3(p01, p23), p);\n                    } else {\n                        p = p23;\n                    }\n\n                    ind = last + i * gs1 + j;\n\n                    Vec3.doubleToTwoFloats(p, _tempHigh, _tempLow);\n\n                    let ind3 = ind * 3;\n\n                    vHigh[ind3] = _tempHigh.x;\n                    vHigh[ind3 + 1] = _tempHigh.y;\n                    vHigh[ind3 + 2] = _tempHigh.z;\n\n                    vLow[ind3] = _tempLow.x;\n                    vLow[ind3 + 1] = _tempLow.y;\n                    vLow[ind3 + 2] = _tempLow.z;\n\n                    if (i < gs) {\n                        this._indexes.push(ind, ind + gs1);\n                    }\n                }\n\n                if (i < gs) {\n                    this._indexes.push(ind + gs1, ind + 1);\n                }\n            }\n\n            this._createBuffers();\n        }\n    }\n\n    public setEdge3v(p2: Vec3, p3: Vec3, index: number) {\n        if (index === this._path.length) {\n            this.addEdge3v(p2, p3);\n            return;\n        }\n        if (this._path[index]) {\n            this._path[index][0] = p2;\n            this._path[index][1] = p3;\n\n            if (this._path.length > 1) {\n                let gs = this._gridSize,\n                    gs1 = gs + 1;\n\n                let vSize = gs1 * gs1;\n\n                let p = new Vec3();\n\n                let vHigh = this._verticesHigh,\n                    vLow = this._verticesLow;\n\n                if (index === this._path.length - 1) {\n                    let p0 = this._path[index - 1][0],\n                        p1 = this._path[index - 1][1];\n\n                    let prev = this._verticesHigh.length / 3 - vSize,\n                        ind = prev;\n\n                    let d = Math.abs(p0.sub(p1).normal().dot(p2.sub(p0).normal()));\n\n                    for (let i = 0; i < gs1; i++) {\n                        let di = i / gs;\n                        let p02 = p0.lerp(p2, di),\n                            p13 = p1.lerp(p3, di);\n\n                        for (let j = 0; j < gs1; j++) {\n                            let dj = j / gs;\n                            let p01 = p0.lerp(p1, dj),\n                                p23 = p2.lerp(p3, dj);\n\n                            if (d !== 1.0) {\n                                new Line3(p02, p13).intersects(new Line3(p01, p23), p);\n                            } else {\n                                p = p23;\n                            }\n\n                            ind = prev + i * gs1 + j;\n\n                            Vec3.doubleToTwoFloats(p, _tempHigh, _tempLow);\n\n                            let ind3 = ind * 3;\n\n                            vHigh[ind3] = _tempHigh.x;\n                            vHigh[ind3 + 1] = _tempHigh.y;\n                            vHigh[ind3 + 2] = _tempHigh.z;\n\n                            vLow[ind3] = _tempLow.x;\n                            vLow[ind3 + 1] = _tempLow.y;\n                            vLow[ind3 + 2] = _tempLow.z;\n                        }\n                    }\n                } else if (index === 0) {\n                    let ind = 0;\n\n                    let p0 = p2,\n                        p1 = p3;\n\n                    p2 = this._path[1][0];\n                    p3 = this._path[1][1];\n\n                    for (let i = 0; i < gs1; i++) {\n                        let di = i / gs;\n                        let p02 = p0.lerp(p2, di),\n                            p13 = p1.lerp(p3, di);\n\n                        for (let j = 0; j < gs1; j++) {\n                            let dj = j / gs;\n                            let p01 = p0.lerp(p1, dj),\n                                p23 = p2.lerp(p3, dj);\n\n                            new Line3(p02, p13).intersects(new Line3(p01, p23), p);\n\n                            ind = i * gs1 + j;\n\n                            Vec3.doubleToTwoFloats(p, _tempHigh, _tempLow);\n\n                            let ind3 = ind * 3;\n\n                            vHigh[ind3] = _tempHigh.x;\n                            vHigh[ind3 + 1] = _tempHigh.y;\n                            vHigh[ind3 + 2] = _tempHigh.z;\n\n                            vLow[ind3] = _tempLow.x;\n                            vLow[ind3 + 1] = _tempLow.y;\n                            vLow[ind3 + 2] = _tempLow.z;\n                        }\n                    }\n                } else if (index > 0 && index < this._path.length) {\n                    let p0 = this._path[index - 1][0],\n                        p1 = this._path[index - 1][1];\n\n                    let p4 = this._path[index + 1][0],\n                        p5 = this._path[index + 1][1];\n\n                    let next = index * vSize,\n                        prev = (index - 1) * vSize,\n                        ind = prev;\n\n                    for (let i = 0; i < gs1; i++) {\n                        let di = i / gs;\n                        let p02 = p0.lerp(p2, di),\n                            p35 = p3.lerp(p5, di),\n                            p24 = p2.lerp(p4, di),\n                            p13 = p1.lerp(p3, di);\n\n                        for (let j = 0; j < gs1; j++) {\n                            let dj = j / gs;\n                            let p01 = p0.lerp(p1, dj),\n                                p23 = p2.lerp(p3, dj);\n\n                            // prev\n                            new Line3(p02, p13).intersects(new Line3(p01, p23), p);\n\n                            let ij = i * gs1 + j;\n\n                            ind = prev + ij;\n\n                            Vec3.doubleToTwoFloats(p, _tempHigh, _tempLow);\n\n                            let ind3 = ind * 3;\n\n                            vHigh[ind3] = _tempHigh.x;\n                            vHigh[ind3 + 1] = _tempHigh.y;\n                            vHigh[ind3 + 2] = _tempHigh.z;\n\n                            vLow[ind3] = _tempLow.x;\n                            vLow[ind3 + 1] = _tempLow.y;\n                            vLow[ind3 + 2] = _tempLow.z;\n\n                            // next\n                            let p45 = p4.lerp(p5, dj);\n\n                            p23 = p2.lerp(p3, dj);\n\n                            new Line3(p24, p35).intersects(new Line3(p23, p45), p);\n\n                            ind = next + ij;\n\n                            Vec3.doubleToTwoFloats(p, _tempHigh, _tempLow);\n\n                            ind3 = ind * 3;\n\n                            vHigh[ind3] = _tempHigh.x;\n                            vHigh[ind3 + 1] = _tempHigh.y;\n                            vHigh[ind3 + 2] = _tempHigh.z;\n\n                            vLow[ind3] = _tempLow.x;\n                            vLow[ind3 + 1] = _tempLow.y;\n                            vLow[ind3 + 2] = _tempLow.z;\n                        }\n                    }\n                }\n\n                this._createBuffers();\n            }\n        } else {\n            console.warn(`strip index ${index} is out of range`);\n        }\n    }\n\n    public removeEdge(index: number) {\n        this._path.splice(index, 1);\n        this.setPath(([] as TStrip[]).concat(this._path));\n    }\n\n    public setGridSize(gridSize: number) {\n        this._gridSize = gridSize;\n        this.setPath(([] as TStrip[]).concat(this._path));\n    }\n\n    public getPath(): TStrip[] {\n        return this._path;\n    }\n\n    public setPath(path: TStripExt[] | TStrip[]) {\n        this._verticesHigh = [];\n        this._verticesLow = [];\n        this._indexes = [];\n        this._path = [];\n\n        for (let i = 0; i < path.length; i++) {\n            let p0 = path[i][0],\n                p1 = path[i][1];\n\n            if (p0 instanceof Array) {\n                p0 = new Vec3(p0[0], p0[1], p0[2]);\n            }\n\n            if (p1 instanceof Array) {\n                p1 = new Vec3(p1[0], p1[1], p1[2]);\n            }\n\n            this.addEdge3v(p0 as Vec3, p1 as Vec3);\n        }\n    }\n\n    public insertEdge3v(p0: Vec3, p1: Vec3, index: number) {\n        if (index < this._path.length) {\n            let p: TStrip[] = ([] as TStrip[]).concat(this._path);\n            p.splice(index, 0, [p0, p1]);\n            this.setPath(p);\n        } else if (index === this._path.length) {\n            this.addEdge3v(p0, p1);\n        }\n    }\n}\n\nexport {Strip};\n","import * as mercator from \"../mercator\";\nimport * as utils from \"../utils/shared\";\nimport {Billboard, IBillboardParams} from \"./Billboard\";\nimport {EntityCollection, EntityCollectionEvents} from \"./EntityCollection\";\nimport {Extent} from \"../Extent\";\nimport {Geometry, IGeometryParams} from \"./Geometry\";\nimport {GeoObject, IGeoObjectParams} from \"./GeoObject\";\nimport {LonLat} from \"../LonLat\";\nimport {Label, ILabelParams} from \"./Label\";\nimport {NumberArray3, Vec3} from \"../math/Vec3\";\nimport {NumberArray2} from \"../math/Vec2\";\nimport {Planet} from \"../scene/Planet\";\nimport {IPointCloudParams, PointCloud} from \"./PointCloud\";\nimport {IPolylineParams, Polyline} from \"./Polyline\";\nimport {IRayParams, Ray} from \"./Ray\";\nimport {Strip, IStripParams} from \"./Strip\";\nimport {Vector, VectorEventsType} from \"../layer/Vector\";\nimport {EntityCollectionNode} from \"../quadTree/EntityCollectionNode\";\n\nexport interface IEntityParams {\n    name?: string;\n    properties?: any;\n    cartesian?: Vec3 | NumberArray3;\n    lonlat?: LonLat | NumberArray3 | NumberArray2;\n    altitude?: number;\n    visibility?: boolean;\n    billboard?: Billboard | IBillboardParams;\n    label?: Label | ILabelParams;\n    polyline?: Polyline | IPolylineParams;\n    ray?: Ray | IRayParams;\n    pointCloud?: PointCloud | IPointCloudParams;\n    geometry?: Geometry | IGeometryParams;\n    geoObject?: GeoObject | IGeoObjectParams;\n    strip?: Strip;\n}\n\n/**\n * Entity instances aggregate multiple forms of visualization into a single high-level object.\n * They can be created manually and added to entity collection.\n *\n * @class\n * @param {Object} [options] - Entity options:\n * @param {string} [options.name] - A human-readable name to display to users. It does not have to be unique.\n * @param {Vec3|Array.<number>} [options.cartesian] - Spatial entities like billboard, label etc. cartesian position.\n * @param {LonLat} [options.lonlat] - Geodetic coordinates for an entities like billboard, label etc.\n * @param {boolean} [options.aground] - True for entities that have to be placed on the relief.\n * @param {boolean} [options.visibility] - Entity visibility.\n * @param {*} [options.billboard] - Billboard options(see {@link Billboard}).\n * @param {*} [options.label] - Label options(see {@link Label}).\n * @param {*} [options.polyline] - Polyline options(see {@link Polyline}).\n * @param {*} [options.ray] - Ray options(see {@link Ray}).\n * @param {*} [options.pointCloud] - Point cloud options(see {@link PointCloud}).\n * @param {*} [options.geometry] - Geometry options (see {@link Geometry}), available for vector layer only.\n * @param {*} [options.properties] - Entity custom properties.\n */\nclass Entity {\n\n    static __counter__: number = 0;\n\n    /**\n     * Uniq identifier.\n     * @public\n     * @readonly\n     */\n    protected __id: number;\n\n    /**\n     * Entity user defined properties.\n     * @public\n     * @type {Object}\n     */\n    public properties: any;\n\n\n    /**\n     * Children entities.\n     * @public\n     * @type {Array.<Entity>}\n     */\n    public childrenNodes: Entity[];\n\n    /**\n     * Parent entity.\n     * @public\n     * @type {Entity}\n     */\n    public parent: Entity | null;\n\n    /**\n     * Entity cartesian position.\n     * @protected\n     * @type {Vec3}\n     */\n    public _cartesian: Vec3;\n\n    /**\n     * Geodetic entity coordinates.\n     * @public\n     * @type {LonLat}\n     */\n    public _lonLat: LonLat;\n\n    /**\n     * World Mercator entity coordinates.\n     * @public\n     * @type {LonLat}\n     */\n    public _lonLatMerc: LonLat;\n\n    /**\n     * Entity visible terrain altitude.\n     * @public\n     * @type {number}\n     */\n    public _altitude: number;\n\n    /**\n     * Visibility flag.\n     * @protected\n     * @type {boolean}\n     */\n    protected _visibility: boolean;\n\n    /**\n     * Entity collection that this entity belongs to.\n     * @public\n     * @type {EntityCollection}\n     */\n    public _entityCollection: EntityCollection | null;\n\n    /**\n     * Entity collection array store index.\n     * @public\n     * @type {number}\n     */\n    public _entityCollectionIndex: number;\n\n    /**\n     * Assigned vector layer pointer.\n     * @public\n     * @type {Vector}\n     */\n    public _layer: Vector | null;\n\n    /**\n     * Assigned vector layer entity array index.\n     * @public\n     * @type {number}\n     */\n    public _layerIndex: number;\n\n    /**\n     * Picking color.\n     * @public\n     * @type {Vec3}\n     */\n    public _pickingColor: Vec3;\n\n    protected _featureConstructorArray: Record<string, [any, Function]>;\n\n    /**\n     * Billboard entity.\n     * @public\n     * @type {Billboard | null}\n     */\n    public billboard: Billboard | null;\n\n    /**\n     * Text label entity.\n     * @public\n     * @type {Label | null}\n     */\n    public label: Label | null;\n\n    /**\n     * Polyline entity.\n     * @public\n     * @type {Polyline | null}\n     */\n    public polyline: Polyline | null;\n\n    /**\n     * Ray entity.\n     * @public\n     * @type {Ray | null}\n     */\n    public ray: Ray | null;\n\n    /**\n     * PointCloud entity.\n     * @public\n     * @type {PointCloud | null}\n     */\n    public pointCloud: PointCloud | null;\n\n    /**\n     * Geometry entity(available for vector layer only).\n     * @public\n     * @type {Geometry | null}\n     */\n    public geometry: Geometry | null;\n\n    /**\n     * Geo object entity\n     * @public\n     * @type {Geometry | null}\n     */\n    public geoObject: GeoObject | null;\n\n    /**\n     * Strip entity.\n     * @public\n     * @type {Strip | null}\n     */\n    public strip: Strip | null;\n\n    public _nodePtr?: EntityCollectionNode;\n\n    constructor(options: IEntityParams = {}) {\n\n        options.properties = options.properties || {};\n\n        this.__id = Entity.__counter__++;\n\n        this.properties = options.properties || {};\n\n        this.properties.name = this.properties.name != undefined ? this.properties.name : \"\";\n\n        this.childrenNodes = [];\n\n        this.parent = null;\n\n        this._cartesian = utils.createVector3(options.cartesian);\n\n        this._lonLat = utils.createLonLat(options.lonlat);\n\n        this._lonLatMerc = new LonLat();\n\n        this._altitude = options.altitude || 0.0;\n\n        this._visibility = options.visibility != undefined ? options.visibility : true;\n\n        this._entityCollection = null;\n\n        this._entityCollectionIndex = -1;\n\n        this._layer = null;\n\n        this._layerIndex = -1;\n\n        this._pickingColor = new Vec3(0, 0, 0);\n\n        this._featureConstructorArray = {\n            billboard: [Billboard, this.setBillboard],\n            label: [Label, this.setLabel],\n            polyline: [Polyline, this.setPolyline],\n            pointCloud: [PointCloud, this.setPointCloud],\n            geometry: [Geometry, this.setGeometry],\n            geoObject: [GeoObject, this.setGeoObject],\n            strip: [Strip, this.setStrip],\n            ray: [Ray, this.setRay]\n        };\n\n        this.billboard = this._createOptionFeature<Billboard, IBillboardParams>(\"billboard\", options.billboard);\n\n        this.label = this._createOptionFeature<Label, ILabelParams>(\"label\", options.label);\n\n        this.polyline = this._createOptionFeature<Polyline, IPolylineParams>(\"polyline\", options.polyline);\n\n        this.ray = this._createOptionFeature<Ray, IRayParams>(\"ray\", options.ray);\n\n        this.pointCloud = this._createOptionFeature<PointCloud, IPolylineParams>(\"pointCloud\", options.pointCloud);\n\n        this.geometry = this._createOptionFeature<Geometry, IGeometryParams>(\"geometry\", options.geometry);\n\n        this.geoObject = this._createOptionFeature<GeoObject, IGeoObjectParams>(\"geoObject\", options.geoObject);\n\n        this.strip = this._createOptionFeature<Strip, IStripParams>(\"strip\", options.strip);\n    }\n\n    public get id(): number {\n        return this.__id;\n    }\n\n    public isEqual(entity: Entity): boolean {\n        return this.__id === entity.__id;\n    }\n\n    public get layerIndex(): number {\n        return this._layerIndex;\n    }\n\n    public get instanceName(): string {\n        return \"Entity\";\n    }\n\n    protected _createOptionFeature<T, K>(\n        featureName: string,\n        options?: T | K\n    ): T | null {\n        if (options) {\n            let c = this._featureConstructorArray[featureName];\n            return c[1].call(this, new c[0](options)) as T;\n        }\n        return null;\n    }\n\n    public getCollectionIndex(): number {\n        return this._entityCollectionIndex;\n    }\n\n    /**\n     * Adds current entity into the specified entity collection.\n     * @public\n     * @param {EntityCollection | Vector} collection - Specified entity collection or vector layer.\n     * @param {Boolean} [rightNow=false] - Entity insertion option for vector layer.\n     * @returns {Entity} - This object.\n     */\n    public addTo(collection: EntityCollection | Vector, rightNow: boolean = false) {\n        collection.add(this, rightNow);\n        return this;\n    }\n\n    /**\n     * Removes current entity from collection and layer.\n     * @public\n     */\n    public remove() {\n        this._layer && this._layer.removeEntity(this);\n        this._entityCollection && this._entityCollection.removeEntity(this);\n    }\n\n    /**\n     * Sets the entity visibility.\n     * @public\n     * @param {boolean} visibility - Entity visibility.\n     */\n    public setVisibility(visibility: boolean) {\n        this._visibility = visibility;\n\n        // billboards\n        this.billboard && this.billboard.setVisibility(visibility);\n\n        // geoObject\n        this.geoObject && this.geoObject.setVisibility(visibility);\n\n        // labels\n        this.label && this.label.setVisibility(visibility);\n\n        // polyline\n        this.polyline && this.polyline.setVisibility(visibility);\n\n        // ray\n        this.ray && this.ray.setVisibility(visibility);\n\n        // geometry\n        this.geometry && this.geometry.setVisibility(visibility);\n\n        for (let i = 0; i < this.childrenNodes.length; i++) {\n            this.childrenNodes[i].setVisibility(visibility);\n        }\n    }\n\n    /**\n     * Returns entity visibility.\n     * @public\n     * @returns {boolean} -\n     */\n    public getVisibility() {\n        return this._visibility;\n    }\n\n    /**\n     * Sets entity cartesian position.\n     * @public\n     * @param {Vec3} cartesian - Cartesian position in 3d space.\n     */\n    public setCartesian3v(cartesian: Vec3) {\n        this.setCartesian(cartesian.x, cartesian.y, cartesian.z);\n    }\n\n    /**\n     * Sets entity cartesian position.\n     * @public\n     * @param {number} x - 3d space X - position.\n     * @param {number} y - 3d space Y - position.\n     * @param {number} z - 3d space Z - position.\n     */\n    public setCartesian(x?: number, y?: number, z?: number) {\n        let p = this._cartesian;\n\n        p.x = x || 0.0;\n        p.y = y || 0.0;\n        p.z = z || 0.0;\n\n        // billboards\n        this.billboard && this.billboard.setPosition3v(p);\n\n        // geoObject\n        this.geoObject && this.geoObject.setPosition3v(p);\n\n        // labels\n        this.label && this.label.setPosition3v(p);\n\n        for (let i = 0; i < this.childrenNodes.length; i++) {\n            this.childrenNodes[i].setCartesian(x, y, z);\n        }\n\n        let ec = this._entityCollection;\n\n        if (ec && ec.renderNode && (ec.renderNode as Planet).ellipsoid) {\n            this._lonLat = (ec.renderNode as Planet).ellipsoid.cartesianToLonLat(p);\n\n            if (Math.abs(this._lonLat.lat) < mercator.MAX_LAT) {\n                this._lonLatMerc = this._lonLat.forwardMercator();\n            } else {\n                this._lonLatMerc.lon = this._lonLatMerc.lat = this._lonLatMerc.height = 0;\n            }\n        }\n\n        //ec && ec.events.dispatch(ec.events.entitymove, this);\n    }\n\n    /**\n     * Sets entity cartesian position without event dispatching.\n     * @public\n     * @param {Vec3} cartesian - Cartesian position in 3d space.\n     * @param {boolean} skipLonLat - skip geodetic calculation.\n     */\n    public _setCartesian3vSilent(cartesian: Vec3, skipLonLat: boolean = false) {\n        let p = this._cartesian;\n\n        p.x = cartesian.x || 0.0;\n        p.y = cartesian.y || 0.0;\n        p.z = cartesian.z || 0.0;\n\n        // billboards\n        this.billboard && this.billboard.setPosition3v(p);\n\n        // geoObject\n        this.geoObject && this.geoObject.setPosition3v(p);\n\n        // labels\n        this.label && this.label.setPosition3v(p);\n\n        for (let i = 0; i < this.childrenNodes.length; i++) {\n            this.childrenNodes[i].setCartesian(p.x, p.y, p.z);\n        }\n\n        let ec = this._entityCollection;\n\n        if (!skipLonLat && ec && ec.renderNode && (ec.renderNode as Planet).ellipsoid) {\n            this._lonLat = (ec.renderNode as Planet).ellipsoid.cartesianToLonLat(p);\n\n            if (Math.abs(this._lonLat.lat) < mercator.MAX_LAT) {\n                this._lonLatMerc = this._lonLat.forwardMercator();\n            } else {\n                //this._lonLatMerc = null;\n            }\n        }\n    }\n\n    /**\n     * Gets entity geodetic coordinates.\n     * @public\n     * @returns {LonLat} -\n     */\n    public getLonLat(): LonLat {\n        return this._lonLat.clone();\n    }\n\n    /**\n     * Sets geodetic coordinates of the entity point object.\n     * @public\n     * @param {LonLat} lonlat - WGS84 coordinates.\n     */\n    public setLonLat(lonlat: LonLat) {\n        let l = this._lonLat;\n\n        l.lon = lonlat.lon;\n        l.lat = lonlat.lat;\n        l.height = lonlat.height;\n\n        let ec = this._entityCollection;\n        if (ec && ec.renderNode && (ec.renderNode as Planet).ellipsoid) {\n            if (Math.abs(l.lat) < mercator.MAX_LAT) {\n                this._lonLatMerc = l.forwardMercator();\n            } else {\n                //this._lonLatMerc = null;\n            }\n\n            (ec.renderNode as Planet).ellipsoid.lonLatToCartesianRes(l, this._cartesian);\n            this.setCartesian3v(this._cartesian);\n        }\n    }\n\n    /**\n     * Sets geodetic coordinates of the entity point object.\n     * @public\n     * @param {number} lon - Longitude.\n     * @param {number} lat - Latitude\n     * @param {number} [height] - Height\n     */\n    public setLonLat2(lon: number, lat: number, height?: number) {\n        let l = this._lonLat;\n\n        l.lon = lon;\n        l.lat = lat;\n        l.height = height != undefined ? height : l.height;\n\n        let ec = this._entityCollection;\n        if (ec && ec.renderNode && (ec.renderNode as Planet).ellipsoid) {\n            if (Math.abs(l.lat) < mercator.MAX_LAT) {\n                this._lonLatMerc = l.forwardMercator();\n            } else {\n                this._lonLatMerc.lon = this._lonLatMerc.lat = this._lonLatMerc.height = 0;\n            }\n\n            (ec.renderNode as Planet).ellipsoid.lonLatToCartesianRes(l, this._cartesian);\n            this.setCartesian3v(this._cartesian);\n        }\n    }\n\n    /**\n     * Sets entity altitude over the planet.\n     * @public\n     * @param {number} altitude - Altitude.\n     */\n    public setAltitude(altitude: number) {\n        this._altitude = altitude;\n    }\n\n    /**\n     * Sets entity altitude over the planet.\n     * @public\n     * @return {number} Altitude.\n     */\n    public getAltitude(): number {\n        return this._altitude;\n    }\n\n    /**\n     * Returns cartesian position.\n     * @public\n     * @returns {Vec3} -\n     */\n    public getCartesian(): Vec3 {\n        return this._cartesian.clone();\n    }\n\n    /**\n     * Sets entity billboard.\n     * @public\n     * @param {Billboard} billboard - Billboard object.\n     * @returns {Billboard} -\n     */\n    public setBillboard(billboard: Billboard): Billboard {\n        if (this.billboard) {\n            this.billboard.remove();\n        }\n        this.billboard = billboard;\n        this.billboard._entity = this;\n        this.billboard.setPosition3v(this._cartesian);\n        this.billboard.setVisibility(this._visibility);\n        this._entityCollection && this._entityCollection.billboardHandler.add(billboard);\n        return billboard;\n    }\n\n    /**\n     * Sets entity label.\n     * @public\n     * @param {Label} label - Text label.\n     * @returns {Label} -\n     */\n    public setLabel(label: Label): Label {\n        if (this.label) {\n            this.label.remove();\n        }\n        this.label = label;\n        this.label._entity = this;\n        this.label.setPosition3v(this._cartesian);\n        this.label.setVisibility(this._visibility);\n        this._entityCollection && this._entityCollection.labelHandler.add(label);\n        return label;\n    }\n\n    /**\n     * Sets entity ray.\n     * @public\n     * @param {Ray} ray - Ray object.\n     * @returns {Ray} -\n     */\n    public setRay(ray: Ray): Ray {\n        if (this.ray) {\n            this.ray.remove();\n        }\n        this.ray = ray;\n        this.ray._entity = this;\n        this.ray.setVisibility(this._visibility);\n        this._entityCollection && this._entityCollection.rayHandler.add(ray);\n        return ray;\n    }\n\n    /**\n     * Sets entity polyline.\n     * @public\n     * @param {Polyline} polyline - Polyline object.\n     * @returns {Polyline} -\n     */\n    public setPolyline(polyline: Polyline): Polyline {\n        if (this.polyline) {\n            this.polyline.remove();\n        }\n        this.polyline = polyline;\n        this.polyline._entity = this;\n        this.polyline.setVisibility(this._visibility);\n        this._entityCollection && this._entityCollection.polylineHandler.add(polyline);\n        return polyline;\n    }\n\n    /**\n     * Sets entity pointCloud.\n     * @public\n     * @param {PointCloud} pointCloud - PointCloud object.\n     * @returns {PointCloud} -\n     */\n    public setPointCloud(pointCloud: PointCloud): PointCloud {\n        if (this.pointCloud) {\n            this.pointCloud.remove();\n        }\n        this.pointCloud = pointCloud;\n        this.pointCloud._entity = this;\n        this.pointCloud.setVisibility(this._visibility);\n        this._entityCollection && this._entityCollection.pointCloudHandler.add(pointCloud);\n        return pointCloud;\n    }\n\n    /**\n     * Sets entity geometry.\n     * @public\n     * @param {Geometry} geometry - Geometry object.\n     * @returns {Geometry} -\n     */\n    public setGeometry(geometry: Geometry): Geometry {\n        if (this.geometry) {\n            this.geometry.remove();\n        }\n        this.geometry = geometry;\n        this.geometry._entity = this;\n        this.geometry.setVisibility(this._visibility);\n        this._layer && this._layer.add(this);\n        return geometry;\n    }\n\n    /**\n     * Sets entity geoObject.\n     * @public\n     * @param {GeoObject} geoObject - GeoObject.\n     * @returns {GeoObject} -\n     */\n    public setGeoObject(geoObject: GeoObject): GeoObject {\n        if (this.geoObject) {\n            this.geoObject.remove();\n        }\n        this.geoObject = geoObject;\n        this.geoObject._entity = this;\n        this.geoObject.setPosition3v(this._cartesian);\n        this.geoObject.setVisibility(this._visibility);\n        this._entityCollection && this._entityCollection.geoObjectHandler.add(geoObject);\n        return geoObject;\n    }\n\n    /**\n     * Sets entity strip.\n     * @public\n     * @param {Strip} strip - Strip object.\n     * @returns {Strip} -\n     */\n    public setStrip(strip: Strip): Strip {\n        if (this.strip) {\n            this.strip.remove();\n        }\n        this.strip = strip;\n        this.strip._entity = this;\n        this.strip.setVisibility(this._visibility);\n        this._entityCollection && this._entityCollection.stripHandler.add(strip);\n        return strip;\n    }\n\n    public get layer(): Vector | null {\n        return this._layer;\n    }\n\n    public get rendererEvents(): VectorEventsType | EntityCollectionEvents | null {\n        if (this._layer) {\n            return this._layer.events;\n        } else if (this._entityCollection) {\n            return this._entityCollection.events;\n        }\n        return null;\n    }\n\n    /**\n     * Append child entity.\n     * @public\n     * @param {Entity} entity - Child entity.\n     */\n    public appendChild(entity: Entity) {\n        entity._entityCollection = this._entityCollection;\n        entity._pickingColor = this._pickingColor;\n        entity.parent = this;\n        this.childrenNodes.push(entity);\n        this._entityCollection && this._entityCollection.appendChildEntity(entity);\n    }\n\n    /**\n     * Appends entity items(billboard, label etc.) picking color.\n     * @public\n     */\n    public setPickingColor() {\n        let c = this._pickingColor;\n\n        this.billboard && this.billboard.setPickingColor3v(c);\n\n        this.label && this.label.setPickingColor3v(c);\n\n        this.polyline && this.polyline.setPickingColor3v(c);\n\n        this.ray && this.ray.setPickingColor3v(c);\n\n        this.strip && this.strip.setPickingColor3v(c);\n\n        this.geoObject && this.geoObject.setPickingColor3v(c);\n\n        for (let i = 0; i < this.childrenNodes.length; i++) {\n            this.childrenNodes[i].setPickingColor();\n        }\n    }\n\n    /**\n     * Return geodetic extent.\n     * @public\n     * @returns {Extent} -\n     */\n    public getExtent(): Extent {\n\n        let res;\n        let c = this._lonLat;\n\n        if (this.billboard || this.label) {\n            res = new Extent(new LonLat(c.lon, c.lat), new LonLat(c.lon, c.lat));\n        } else {\n            res = new Extent(new LonLat(180.0, 90.0), new LonLat(-180.0, -90.0));\n        }\n\n        let sw = res.southWest,\n            ne = res.northEast;\n\n        if (this.polyline) {\n            let e = this.polyline.getExtent();\n            if (e.southWest.lon < sw.lon) sw.lon = e.southWest.lon;\n            if (e.southWest.lat < sw.lat) sw.lat = e.southWest.lat;\n            if (e.northEast.lon > ne.lon) ne.lon = e.northEast.lon;\n            if (e.northEast.lat > ne.lat) ne.lat = e.northEast.lat;\n        }\n\n        if (this.geometry) {\n            let e = this.geometry.getExtent();\n            if (e.southWest.lon < sw.lon) sw.lon = e.southWest.lon;\n            if (e.southWest.lat < sw.lat) sw.lat = e.southWest.lat;\n            if (e.northEast.lon > ne.lon) ne.lon = e.northEast.lon;\n            if (e.northEast.lat > ne.lat) ne.lat = e.northEast.lat;\n        }\n\n        for (let i = 0; i < this.childrenNodes.length; i++) {\n            let e = this.childrenNodes[i].getExtent();\n            if (e.southWest.lon < sw.lon) sw.lon = e.southWest.lon;\n            if (e.southWest.lat < sw.lat) sw.lat = e.southWest.lat;\n            if (e.northEast.lon > ne.lon) ne.lon = e.northEast.lon;\n            if (e.northEast.lat > ne.lat) ne.lat = e.northEast.lat;\n        }\n\n        return res;\n    }\n}\n\nexport {Entity};\n","interface IObjGeometryData {\n    vertices: number[];\n    textures: number[];\n    normals: number[];\n}\n\ninterface IObjGeometry {\n    object: string;\n    groups: string[];\n    material: string;\n    data: IObjGeometryData\n}\n\ninterface IObjData {\n    geometries: IObjGeometry[];\n    materialLibs: string[];\n}\n\nexport function objParser(text: string) {\n    const objPositions: number[][] = [[0, 0, 0]];\n    const objTexcoords: number[][] = [[0, 0]];\n    const objNormals: number[][] = [[0, 0, 0]];\n\n    // same order as `f` indices\n    const objVertexData: [number[][], number[][], number[][]] = [\n        objPositions,\n        objTexcoords,\n        objNormals,\n    ];\n\n    // same order as `f` indices\n    let vertexData: [number[], number[], number[]] = [\n        [],   // positions\n        [],   // texcoords\n        [],   // normals\n    ];\n\n    const materialLibs: string[] = [];\n    const geometries: IObjGeometry[] = [];\n    let geometry: IObjGeometry | null;\n\n    let groups: string[] = ['default'];\n    let material: string = 'default';\n    let object: string = 'default';\n\n    function newGeometry() {\n        // If there is an existing geometry and it's\n        // not empty then start a new one.\n        if (geometry && geometry.data.vertices.length) {\n            geometry = null;\n        }\n    }\n\n    function setGeometry() {\n        if (!geometry) {\n\n            const vertices: number[] = [];\n            const textures: number[] = [];\n            const normals: number[] = [];\n\n            vertexData = [\n                vertices,\n                textures,\n                normals,\n            ];\n\n            geometry = {\n                object,\n                groups,\n                material,\n                data: {\n                    vertices,\n                    textures,\n                    normals,\n                },\n            };\n\n            geometries.push(geometry);\n        }\n    }\n\n    function addVertex(vert: string) {\n        const ptn = vert.split('/');\n        ptn.forEach((objIndexStr: string, i: number) => {\n            if (!objIndexStr) {\n                return;\n            }\n            const objIndex = parseInt(objIndexStr);\n            const index = objIndex + (objIndex >= 0 ? 0 : objVertexData[i].length);\n            vertexData[i].push(...objVertexData[i][index]);\n        });\n    }\n\n    const keywords: Record<string, (parts: string[], unparsedArgs: string) => void> = {\n        v(parts: string[]) {\n            objPositions.push(parts.map(parseFloat));\n        },\n        vn(parts: string[]) {\n            objNormals.push(parts.map(parseFloat));\n        },\n        vt(parts: string[]) {\n            // should check for missing v and extra w?\n            objTexcoords.push(parts.map(parseFloat));\n        },\n        f(parts: string[]) {\n            setGeometry();\n            const numTriangles = parts.length - 2;\n            for (let tri = 0; tri < numTriangles; ++tri) {\n                addVertex(parts[0]);\n                addVertex(parts[tri + 1]);\n                addVertex(parts[tri + 2]);\n            }\n        },\n        s: () => {\n        },    // smoothing group\n        mtllib(parts: string[], unparsedArgs: string) {\n            // the spec says there can be multiple filenames here\n            // but many exist with spaces in a single filename\n            materialLibs.push(unparsedArgs);\n        },\n        usemtl(parts: string[], unparsedArgs: string) {\n            material = unparsedArgs;\n            newGeometry();\n        },\n        g(parts: string[]) {\n            groups = parts;\n            newGeometry();\n        },\n        o(parts: string[], unparsedArgs: string) {\n            object = unparsedArgs;\n            newGeometry();\n        },\n    };\n\n    const keywordRE = /(\\w*)(?: )*(.*)/;\n    const lines = text.split('\\n');\n    for (let lineNo = 0; lineNo < lines.length; ++lineNo) {\n        const line = lines[lineNo].trim();\n        if (line === '' || line.startsWith('#')) {\n            continue;\n        }\n        const m = keywordRE.exec(line);\n        if (!m) {\n            continue;\n        }\n        const [, keyword, unparsedArgs] = m;\n        const parts = line.split(/\\s+/).slice(1);\n        const handler = keywords[keyword];\n        if (!handler) {\n            console.warn('unhandled keyword:', keyword);  // eslint-disable-line no-console\n            continue;\n        }\n        handler(parts, unparsedArgs);\n    }\n\n    // remove any arrays that have no entries.\n    for (const geometry of geometries) {\n        geometry.data = Object.fromEntries(\n            Object.entries(geometry.data).filter(([key, array]) => array.length > 0)\n        ) as IObjGeometryData;\n    }\n\n    return {\n        geometries,\n        materialLibs,\n    };\n}\n\nexport function transformLeftToRightCoordinateSystem(objData: IObjData): {\n    geometries: IObjGeometry[],\n    materialLibs: string[]\n} {\n\n    const convertedGeometries: IObjGeometry[] = objData.geometries.map(geometry => {\n        const vertices = geometry.data.vertices;\n        const normals = geometry.data.normals;\n        const textures = geometry.data.textures;\n\n        rotateObject(geometry.data, 0);\n\n        let convertedVertices: number[] = [];\n        let convertedNormals: number[] = [];\n        let convertedTextures: number[] = [];\n\n        // Convert positions\n        for (let i = 0; i < vertices.length; i += 3) {\n            const x = vertices[i];\n            const y = vertices[i + 1];\n            const z = vertices[i + 2];\n            convertedVertices.push(x, y, z);\n        }\n\n        // Convert normals\n        for (let i = 0; i < normals.length; i += 3) {\n            const x = normals[i];\n            const y = normals[i + 1];\n            const z = normals[i + 2];\n            convertedNormals.push(x, y, -z);\n        }\n\n        // Convert textures\n        for (let i = 0; i < textures.length; i += 2) {\n            const s = textures[i];\n            const t = 1 - textures[i + 1];\n            convertedTextures.push(s, t);\n        }\n\n        return {\n            object: geometry.object,\n            groups: geometry.groups,\n            material: geometry.material,\n            data: {\n                vertices: convertedVertices,\n                normals: convertedNormals,\n                textures: convertedTextures\n            }\n        };\n    });\n\n    return {\n        geometries: convertedGeometries,\n        materialLibs: objData.materialLibs\n    };\n}\n\nfunction rotateObject(obj: IObjGeometryData, angle: number): { vertices: number[], normals: number[] } {\n    const cosA = Math.cos(angle);\n    const sinA = Math.sin(angle);\n\n    const vertices = obj.vertices;\n    const normals = obj.normals;\n\n    for (let i = 0; i < vertices.length; i += 3) {\n        const x = vertices[i];\n        const y = vertices[i + 1];\n        const z = vertices[i + 2];\n\n        vertices[i] = x * cosA + z * sinA;\n        vertices[i + 1] = y;\n        vertices[i + 2] = -x * sinA + z * cosA;\n\n        const nx = normals[i];\n        const ny = normals[i + 1];\n        const nz = normals[i + 2];\n\n        normals[i] = nx * cosA + nz * sinA;\n        normals[i + 1] = ny;\n        normals[i + 2] = -nx * sinA + nz * cosA;\n    }\n\n    return {\n        vertices: vertices,\n        normals: normals\n    };\n}\n\n","import {htmlColorToFloat32Array, TypedArray} from './utils/shared';\nimport {NumberArray3, Vec3} from './math/Vec3';\nimport {MAX, MIN} from './math';\nimport {transformLeftToRightCoordinateSystem, objParser} from \"./utils/objParser\";\n\nfunction getColor(color?: number[] | TypedArray | string): Float32Array {\n    if (color instanceof Array) {\n        return new Float32Array(color);\n    } else if (typeof color === 'string') {\n        return htmlColorToFloat32Array(color);\n    }\n    return new Float32Array([1.0, 1.0, 1.0, 1.0]);\n}\n\ninterface IObject3dParams {\n    name?: string;\n    vertices?: number[];\n    texCoords?: number[];\n    indices?: number[];\n    normals?: number[];\n    center?: boolean;\n    src?: string;\n    color?: number[] | TypedArray | string;\n    scale?: number;\n}\n\nclass Object3d {\n\n    protected _name: string;\n    protected _vertices: number[];\n    protected _numVertices: number;\n    protected _texCoords: number[];\n\n    /**\n     * Image src.\n     * @protected\n     * @type {string}\n     */\n    protected _src: string | null;\n\n    protected color: Float32Array;\n\n    protected _indices: number[];\n    protected _normals: number[];\n\n    constructor(data: IObject3dParams = {}) {\n\n        this._name = data.name || \"noname\";\n        this._vertices = data.vertices || [];\n        this._numVertices = this._vertices.length / 3;\n        this._texCoords = data.texCoords || new Array(2 * this._numVertices);\n\n        if (data.center) {\n            Object3d.centering(this._vertices);\n        }\n\n        /**\n         * Image src.\n         * @protected\n         * @type {string}\n         */\n        this._src = data.src || null;\n\n        this.color = getColor(data.color);\n\n        if (data.scale) {\n            Object3d.scale(this._vertices, data.scale);\n        }\n\n        if (data.indices) {\n            this._indices = data.indices;\n            this._normals = data.normals || [];\n        } else {\n            this._normals = Object3d.getNormals(this._vertices);\n            this._indices = new Array(this._vertices.length / 3);\n            for (let i = 0, len = this._indices.length; i < len; i++) {\n                this._indices[i] = i;\n            }\n        }\n    }\n\n    static centering(verts: number[]) {\n        let min_x = MAX, min_y = MAX, min_z = MAX, max_x = MIN, max_y = MIN, max_z = MIN;\n        for (let i = 0, len = verts.length; i < len; i += 3) {\n            let x = verts[i], y = verts[i + 1], z = verts[i + 2];\n            if (x < min_x) min_x = x;\n            if (y < min_y) min_y = y;\n            if (z < min_z) min_z = z;\n            if (x > max_x) max_x = x;\n            if (y > max_y) max_y = y;\n            if (z > max_z) max_z = z;\n        }\n\n        let c_x = min_x + (max_x - min_x) * 0.5;\n        let c_y = min_y + (max_y - min_y) * 0.5;\n        let c_z = min_z + (max_z - min_z) * 0.5;\n\n        for (let i = 0, len = verts.length; i < len; i += 3) {\n            verts[i] -= c_x;\n            verts[i + 1] -= c_y;\n            verts[i + 2] -= c_z;\n        }\n    }\n\n    public get src(): string | null {\n        return this._src;\n    }\n\n    public set src(src: string | null) {\n        this._src = src;\n    }\n\n    public get name(): string {\n        return this._name;\n    }\n\n    public get vertices(): number[] {\n        return this._vertices;\n    }\n\n    public get normals(): number[] {\n        return this._normals;\n    }\n\n    public get indices(): number[] {\n        return this._indices;\n    }\n\n    public get texCoords(): number[] {\n        return this._texCoords;\n    }\n\n    public get numVertices(): number {\n        return this._numVertices;\n    }\n\n    static scale(vertices: number[], s: number) {\n        for (let i = 0; i < vertices.length; i++) {\n            vertices[i] *= s;\n        }\n    }\n\n    static centroid(vertices: number[]) {\n        let minX = 1000.0, minY = 1000.0, minZ = 1000.0, maxX = -1000.0, maxY = -1000.0, maxZ = -1000.0;\n\n        for (let i = 0; i < vertices.length; i += 3) {\n            let x = vertices[i], y = vertices[i + 1], z = vertices[i + 2];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (z < minZ) minZ = z;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            if (z > maxZ) maxZ = z;\n        }\n\n        return [minX + (maxX - minX) * 0.5, minY + (maxY - minY) * 0.5, minZ + (maxZ - minZ) * 0.5];\n    }\n\n    static translate(vertices: number[], v: NumberArray3) {\n        for (let i = 0; i < vertices.length; i += 3) {\n            vertices[i] -= v[0];\n            vertices[i + 1] -= v[1];\n            vertices[i + 2] -= v[2];\n        }\n    }\n\n    static getNormals(vertices: number[]): number[] {\n        let res = new Array(vertices.length);\n\n        for (let i = 0; i < vertices.length; i += 9) {\n\n            let t03 = i, t13 = i + 3, t23 = i + 6, v0_x = vertices[t03], v0_y = vertices[t03 + 1],\n                v0_z = vertices[t03 + 2], v1_x = vertices[t13], v1_y = vertices[t13 + 1], v1_z = vertices[t13 + 2],\n                v2_x = vertices[t23], v2_y = vertices[t23 + 1], v2_z = vertices[t23 + 2], vv0_x = v1_x - v0_x,\n                vv0_y = v1_y - v0_y, vv0_z = v1_z - v0_z, vv1_x = v2_x - v0_x, vv1_y = v2_y - v0_y, vv1_z = v2_z - v0_z,\n                n_x = vv0_y * vv1_z - vv0_z * vv1_y, n_y = vv0_z * vv1_x - vv0_x * vv1_z,\n                n_z = vv0_x * vv1_y - vv0_y * vv1_x;\n\n            let l = Math.sqrt(n_x * n_x + n_y * n_y + n_z * n_z);\n\n            n_x /= l;\n            n_y /= l;\n            n_z /= l;\n\n            res[t03] = n_x;\n            res[t03 + 1] = n_y;\n            res[t03 + 2] = n_z;\n\n            res[t13] = n_x;\n            res[t13 + 1] = n_y;\n            res[t13 + 2] = n_z;\n\n            res[t23] = n_x;\n            res[t23 + 1] = n_y;\n            res[t23 + 2] = n_z;\n        }\n\n        return res;\n    }\n\n    static createSphere(lonBands: number = 16, latBands: number = 16, radius: number = 1.0,\n                        offsetX: number = 0, offsetY: number = 0, offsetZ: number = 0): Object3d {\n\n        let vertices = [], indices = [], normals = [];\n\n        for (let latNumber = 0; latNumber <= latBands; latNumber++) {\n            let theta = latNumber * Math.PI / latBands;\n            let sinTheta = Math.sin(theta);\n            let cosTheta = Math.cos(theta);\n\n            for (let longNumber = 0; longNumber <= lonBands; longNumber++) {\n                let phi = longNumber * 2 * Math.PI / lonBands;\n                let sinPhi = Math.sin(phi);\n                let cosPhi = Math.cos(phi);\n                let x = cosPhi * sinTheta + offsetX;\n                let y = cosTheta + offsetY;\n                let z = sinPhi * sinTheta + offsetZ;\n                //var u = 1 - (longNumber / lonBands);\n                //var v = latNumber / latBands;\n                normals.push(x);\n                normals.push(y);\n                normals.push(z);\n                //texCoords.push(u);\n                //texCoords.push(v);\n                vertices.push(radius * x);\n                vertices.push(radius * y);\n                vertices.push(radius * z);\n            }\n        }\n\n        for (let latNumber = 0; latNumber < latBands; latNumber++) {\n            for (let longNumber = 0; longNumber < lonBands; longNumber++) {\n                let first = (latNumber * (lonBands + 1)) + longNumber;\n                let second = first + lonBands + 1;\n\n                indices.push(first);\n                indices.push(first + 1);\n                indices.push(second);\n\n                indices.push(second);\n                indices.push(first + 1);\n                indices.push(second + 1);\n            }\n        }\n\n        return new Object3d({\n            'vertices': vertices, 'normals': normals, 'indices': indices\n        });\n    }\n\n    static createDisc(radius: number = 1.0, height: number = 0.0,\n                      radialSegments: number = 8, isTop: boolean = true, startIndex: number = 0,\n                      offsetX: number = 0, offsetY: number = 0, offsetZ: number = 0\n    ): Object3d {\n\n        let vertices = [], indices = [], normals = [];\n\n        let thetaStart = 0.0, thetaLength = Math.PI * 2;\n\n        let sign = isTop ? 1.0 : -1.0;\n\n        let centerIndexStart = startIndex;\n\n        for (let x = 1; x <= radialSegments; x++) {\n            vertices.push(offsetX, height * sign + offsetY, offsetZ);\n            normals.push(0, sign, 0);\n            //texCoords.push(0.5, 0.5);\n            startIndex++;\n        }\n\n        let centerIndexEnd = startIndex;\n\n        for (let x = 0; x <= radialSegments; x++) {\n\n            let u = x / radialSegments;\n            let theta = u * thetaLength + thetaStart;\n\n            let cosTheta = Math.cos(theta);\n            let sinTheta = Math.sin(theta);\n\n            vertices.push(radius * sinTheta + offsetX, height * sign + offsetY, radius * cosTheta + offsetZ);\n            normals.push(0, sign, 0);\n            //texCoords.push((cosTheta * 0.5) + 0.5, (sinTheta * 0.5 * sign) + 0.5);\n\n            startIndex++;\n        }\n\n        for (let x = 0; x < radialSegments; x++) {\n            let c = centerIndexStart + x, i = centerIndexEnd + x;\n            if (isTop) {\n                indices.push(i, i + 1, c);\n            } else {\n                indices.push(i + 1, i, c);\n            }\n        }\n\n        return new Object3d({\n            'vertices': vertices, 'normals': normals, 'indices': indices\n        });\n    }\n\n    static createCylinder(radiusTop: number = 1.0, radiusBottom: number = 1.0, height: number = 1.0,\n                          radialSegments: number = 32, heightSegments: number = 1.0, isTop: boolean = true,\n                          isBottom: boolean = true, offsetX: number = 0, offsetY: number = 0, offsetZ: number = 0): Object3d {\n\n        let vertices: number[] = [],\n            indices: number[] = [],\n            normals: number[] = [];\n\n        let thetaStart = 0.0, thetaLength = Math.PI * 2;\n\n        let index = 0;\n        let indexArray = [];\n\n        let normal = new Vec3();\n\n        let slope = (radiusBottom - radiusTop) / height;\n\n        for (let y = 0; y <= heightSegments; y++) {\n\n            let indexRow = [];\n\n            let v = y / heightSegments;\n\n            let radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n            for (let x = 0; x <= radialSegments; x++) {\n\n                let u = x / radialSegments;\n\n                let theta = u * thetaLength + thetaStart;\n\n                let sinTheta = Math.sin(theta), cosTheta = Math.cos(theta);\n\n                vertices.push(radius * sinTheta + offsetX, -v * height + height + offsetY, radius * cosTheta + offsetZ);\n\n                normal.set(sinTheta, slope, cosTheta).normalize();\n                normals.push(normal.x, normal.y, normal.z);\n\n                //texCoords.push(u, 1 - v);\n\n                indexRow.push(index++);\n            }\n            indexArray.push(indexRow);\n        }\n\n        for (let x = 0; x < radialSegments; x++) {\n            for (let y = 0; y < heightSegments; y++) {\n\n                let a = indexArray[y][x], b = indexArray[y + 1][x], c = indexArray[y + 1][x + 1],\n                    d = indexArray[y][x + 1];\n\n                indices.push(a, b, d);\n                indices.push(b, c, d);\n            }\n        }\n\n        if (radiusTop !== 0.0 && isTop) {\n            let cap = Object3d.createDisc(radiusTop, height, radialSegments, true, index, offsetX, offsetY, offsetZ);\n            vertices.push(...cap.vertices);\n            normals.push(...cap.normals);\n            indices.push(...cap.indices);\n        }\n\n        if (radiusBottom !== 0.0 && isBottom) {\n            let cap = Object3d.createDisc(radiusBottom, 0, radialSegments, false, index + (isTop ? (1 + 2 * radialSegments) : 0), offsetX, offsetY, offsetZ);\n            vertices.push(...cap.vertices);\n            normals.push(...cap.normals);\n            indices.push(...cap.indices);\n        }\n\n        return new Object3d({\n            vertices: vertices,\n            normals: normals,\n            indices: indices\n        });\n    }\n\n    static createCube(length: number = 1, height: number = 1, depth: number = 1,\n                      xOffset: number = 0, yOffset: number = 0, zOffset: number = 0): Object3d {\n        let l = length * 0.5 + xOffset, h = height * 0.5 + yOffset, d = depth * 0.5 + zOffset;\n\n        return new Object3d({\n            vertices: [//bottom\n                -l, -h, d, l, -h, -d, l, -h, d, -l, -h, d, -l, -h, -d, l, -h, -d,\n\n                //top\n                -l, h, d, l, h, d, l, h, -d, -l, h, d, l, h, -d, -l, h, -d,\n\n                //front\n                -l, -h, d, l, -h, d, -l, h, d, -l, h, d, l, -h, d, l, h, d,\n\n                //back\n                -l, -h, -d, -l, h, -d, l, -h, -d, -l, h, -d, l, h, -d, l, -h, -d,\n\n                //left\n                l, -h, d, l, -h, -d, l, h, d, l, h, d, l, -h, -d, l, h, -d,\n\n                //right\n                -l, -h, d, -l, h, d, -l, -h, -d, -l, h, d, -l, h, -d, -l, -h, -d]\n        });\n    }\n\n    static createArrow(back: number = 0.0, height: number = 2.1, front: number = -15): Object3d {\n        return new Object3d({\n            vertices: [0, height, 0, 7, 0, 6, 0, 0, front,\n                0, 0, back, 7, 0, 6, 0, height, 0,\n                -7, 0, 6, 0, 0, back, 0, height, 0,\n                -7, 0, 6, 0, height, 0, 0, 0, front,\n                -7, 0, 6, 0, 0, front, 0, 0, back, 0, 0, back, 0, 0, front, 7, 0, 6]\n        });\n    }\n\n\n    static async loadObj(src: string): Promise<Object3d[]> {\n        const obj: any = await fetch(src, {mode: \"cors\",})\n            .then((response) => response.text())\n            .then((data) => transformLeftToRightCoordinateSystem(objParser(data)))\n            .catch(() => []);\n\n        return obj.geometries.map(({data: {vertices, normals, textures}}: any) => new Object3d({\n            vertices,\n            normals,\n            texCoords: textures\n        }));\n    }\n}\n\nexport {Object3d};","/**\n * Scene node base class.\n * @class\n * @param {string} name - Node name.\n */\nclass BaseNode {\n\n    static __counter__: number = 0;\n\n    protected __id: number;\n\n    /**\n     * Node name.\n     * @public\n     * @type {string}\n     */\n    protected _name: string;\n\n    /**\n     * Top scene tree node pointer.\n     * @public\n     * @type {BaseNode}\n     */\n    public topNode: BaseNode;\n\n    protected _dictionary: Record<string, BaseNode>;\n\n    /**\n     * Children nodes.\n     * @public\n     * @type {Array.<BaseNode>}\n     */\n    public childNodes: BaseNode[];\n\n    /**\n     * Parent node pointer.\n     * @public\n     * @type {BaseNode}\n     */\n    public parentNode: BaseNode | null;\n\n    constructor(name?: string) {\n\n        this.__id = BaseNode.__counter__++;\n\n        this._name = name || `nonameNode:${this.__id}`;\n\n        this.topNode = this;\n\n        this._dictionary = {};\n        this._dictionary[this._name] = this;\n\n        this.childNodes = [];\n\n        this.parentNode = null;\n    }\n\n    public get name(): string {\n        return this._name;\n    }\n\n    /**\n     * Adds node to the current hierarchy.\n     * @public\n     * @type {BaseNode}\n     */\n    public addNode(node: BaseNode) {\n        if (this.parentNode == null) {\n            node.topNode = this;\n        } else {\n            node.topNode = this.topNode;\n        }\n        node.parentNode = this;\n        node._dictionary = this.topNode._dictionary;\n        this.childNodes.push(node);\n        this.topNode._dictionary[node.name] = node;\n    }\n\n    /**\n     * Destroy node.\n     * @public\n     */\n    public destroy() {\n        for (let i = 0; i < this.childNodes.length; i++) {\n            this.childNodes[i].destroy();\n        }\n        this._clear();\n    }\n\n    /**\n     * Gets node by name in the current.\n     * @public\n     * @param {string} name - Node name.\n     * @return {RenderNode} Node object in the current node.\n     */\n    public getNodeByName(name: string): BaseNode {\n        return this._dictionary[name];\n    }\n\n    /**\n     * Clear current node.\n     * @protected\n     */\n    protected _clear() {\n        this.parentNode = null;\n        this.topNode = this;\n        this.childNodes.length = 0;\n    }\n\n    public isEqual(node: BaseNode): boolean {\n        return node.__id === this.__id;\n    }\n}\n\nexport {BaseNode};\n","import {BaseNode} from \"./BaseNode\";\nimport {Renderer} from \"../renderer/Renderer\";\nimport {LightSource} from \"../light/LightSource\";\nimport {EntityCollection} from \"../entity/EntityCollection\";\n\n/**\n * Render node is a logical part of a render mechanism. Represents scene rendering.\n * For example one scene node for rendering the Earth, another one for rendering the Moon, another node for rendering stars etc.\n * Each render node has own model view space defined with matrices(scale, rotation, translation, transformation).\n * There are collections of light sources, entities and so on in the node.\n * Access to the node is renderer.renderNodes[\"Earth\"]\n * @class\n * @extends {BaseNode}\n * @param {string} name - Node name.\n */\n\nclass RenderNode extends BaseNode {\n\n    /**\n     * Renderer that calls frame() callback.\n     * @public\n     * @type {Renderer}\n     */\n    public renderer: Renderer | null;\n\n    public drawMode: number;\n\n    /** Show rendering.\n     * @public\n     */\n    public show: boolean;\n\n    protected _isActive: boolean;\n\n    public override childNodes: RenderNode[];\n\n    /**\n     * Lighting calculations.\n     * @public\n     * @type {boolean}\n     */\n    public lightEnabled: boolean;\n\n    /**\n     * Point light array.\n     * @public\n     * @type {Array.<LightSource>}\n     */\n    public _lights: LightSource[];\n    public _lightsNames: string[];\n    public _lightsPositions: number[];\n    public _lightsParamsv: number[];\n    public _lightsParamsf: number[];\n\n    /**\n     * Entity collection array.\n     * @public\n     * @type {Array.<EntityCollection>}\n     */\n    public entityCollections: EntityCollection[];\n\n    protected _pickingId: number;\n\n    constructor(name?: string) {\n        super(name);\n\n        this.childNodes = [];\n\n        this.renderer = null;\n\n        this.drawMode = 0;\n\n        this.show = true;\n\n        this._isActive = true;\n\n        this.lightEnabled = false;\n\n        this._lights = [];\n        this._lightsNames = [];\n        this._lightsPositions = [];\n        this._lightsParamsv = [];\n        this._lightsParamsf = [];\n\n        this.entityCollections = [];\n\n        this._pickingId = -1;\n    }\n\n    /**\n     * Adds node to the current hierarchy.\n     * @public\n     * @type {RenderNode}\n     */\n    public override addNode(node: RenderNode) {\n        super.addNode(node);\n        this.renderer && node.assign(this.renderer);\n    }\n\n    /**\n     * Assign render node with renderer.\n     * @public\n     * @param {Renderer} renderer - Render node's renderer.\n     */\n    public assign(renderer: Renderer) {\n        this.renderer = renderer;\n        this._pickingId = renderer.addPickingCallback(this, this._entityCollectionPickingCallback);\n        this.initialize();\n    }\n\n    public initialize() {\n        if (this.renderer && this.renderer.isInitialized()) {\n            for (let i = 0; i < this.entityCollections.length; i++) {\n                this.entityCollections[i].bindRenderNode(this);\n            }\n            this.init();\n        }\n    }\n\n    public init() {\n        //virtual\n    }\n\n    public onremove() {\n        //virtual\n    }\n\n    public remove() {\n        let r = this.renderer,\n            n = this.name;\n\n        if (r) {\n            // TODO: replace to renderer\n            if (r.renderNodes[n] && r.renderNodes[n].isEqual(this)) {\n                // @ts-ignore\n                r.renderNodes[n] = null;\n                delete r.renderNodes[n];\n            }\n\n            for (let i = 0; i < r._renderNodesArr.length; i++) {\n                if (r._renderNodesArr[i].isEqual(this)) {\n                    r._renderNodesArr.splice(i, 1);\n                    break;\n                }\n            }\n            r.removePickingCallback(this._pickingId);\n            this._pickingId = -1;\n            this.onremove && this.onremove();\n        }\n    }\n\n    /**\n     * Adds entity collection.\n     * @public\n     * @param {EntityCollection} entityCollection - Entity collection.\n     * @param {boolean} [isHidden] - If it's true that this collection has specific rendering.\n     * @returns {RenderNode} -\n     */\n    public addEntityCollection(entityCollection: EntityCollection, isHidden?: boolean): RenderNode {\n        entityCollection.addTo(this, isHidden);\n        return this;\n    }\n\n    /**\n     * Removes entity collection.\n     * @public\n     * @param {EntityCollection} entityCollection - Entity collection for remove.\n     */\n    public removeEntityCollection(entityCollection: EntityCollection) {\n        entityCollection.remove();\n    }\n\n    /**\n     * Adds point light source.\n     * @public\n     * @param {LightSource} light - Light source.\n     * @returns {RenderNode}\n     */\n    public addLight(light: LightSource): RenderNode {\n        light.addTo(this);\n        return this;\n    }\n\n    /**\n     * Gets light object by its name.\n     * @public\n     * @param {string} name - Point light name.\n     * @returns {LightSource}\n     */\n    public getLightByName(name: string): LightSource | undefined {\n        let li = this._lightsNames.indexOf(name);\n        return this._lights[li];\n    }\n\n    /**\n     * Removes light source.\n     * @public\n     * @param {LightSource} light - Light source object.\n     */\n    public removeLight(light: LightSource) {\n        light.remove();\n    }\n\n    /**\n     * Calls render frame node's callback. Used in renderer.\n     * @public\n     */\n    public preDrawNode() {\n        this._isActive && this._preDrawNodes();\n    }\n\n\n    /**\n     * Calls render frame node's callback. Used in renderer.\n     * @public\n     */\n    public drawNode() {\n        this._isActive && this._drawNodes();\n    }\n\n    /**\n     * Gets render node activity.\n     * @public\n     * @returns {Boolean} -\n     */\n    public isActive(): boolean {\n        return this._isActive;\n    }\n\n    /**\n     * Rendering activation.\n     * @public\n     * @param {boolean} isActive - Activation flag.\n     */\n    public setActive(isActive: boolean) {\n        this._isActive = isActive;\n\n        if (this.renderer) {\n            if (this._isActive && this._pickingId === -1) {\n                // This picking callback MUST be the first picking callback\n                // in the rendering queue in the renderer. It affects on blending.\n                this._pickingId = this.renderer.addPickingCallback(\n                    this,\n                    this._entityCollectionPickingCallback\n                );\n            } else if (!this._isActive && this._pickingId !== -1) {\n                this.renderer.removePickingCallback(this._pickingId);\n                this._pickingId = -1;\n            }\n        }\n\n        for (let i = 0; i < this.childNodes.length; i++) {\n            this.childNodes[i].setActive(isActive);\n        }\n    }\n\n    /**\n     * Sets draw mode\n     * @public\n     * @param {Number} mode - Draw mode, such as gl.TRIANGLES, gl.TRIANGLE_STRIP, gl.LINES etc.\n     */\n    public setDrawMode(mode: number) {\n        this.drawMode = mode;\n        for (let i = 0; i < this.childNodes.length; i++) {\n            this.childNodes[i].setDrawMode(mode);\n        }\n    }\n\n    /**\n     * IMPORTANT: This function have to be called manually in each render node frame callback, before drawing scene geometry.\n     * @public\n     */\n    public transformLights() {\n        for (let i = 0; i < this._lights.length; i++) {\n            let ii = i * 3;\n            let tp;\n            tp = this._lights[i]._position;\n            this._lightsPositions[ii] = tp.x;\n            this._lightsPositions[ii + 1] = tp.y;\n            this._lightsPositions[ii + 2] = tp.z;\n        }\n\n        // for (let i = 0; i < this._lights.length; i++) {\n        //     var ii = i * 4;\n        //     var tp;\n        //     if (this._lights[i].directional) {\n        //         tp = r.activeCamera._normalMatrix.mulVec(this._lights[i]._position);\n        //         this._lightsTransformedPositions[ii + 3] = 0;\n        //     } else {\n        //         tp = r.activeCamera._viewMatrix.mulVec3(this._lights[i]._position);\n        //         this._lightsTransformedPositions[ii + 3] = 1;\n        //     }\n        //     this._lightsTransformedPositions[ii] = tp.x;\n        //     this._lightsTransformedPositions[ii + 1] = tp.y;\n        //     this._lightsTransformedPositions[ii + 2] = tp.z;\n        // }\n    }\n\n    public updateBillboardsTexCoords() {\n        for (let i = 0; i < this.entityCollections.length; i++) {\n            this.entityCollections[i].billboardHandler.refreshTexCoordsArr();\n        }\n    }\n\n    // public updateGeoObjectsTexCoords() {\n    //     for (let i = 0; i < this.entityCollections.length; i++) {\n    //         this.entityCollections[i].geoObjectHandler.refreshTexCoordsArr();\n    //     }\n    // }\n\n    public frame() {\n        // virtual\n    }\n\n    public preFrame() {\n        // virtual\n    }\n\n    protected _preDrawNodes() {\n        for (let i = 0; i < this.childNodes.length; i++) {\n            if (this.childNodes[i]._isActive) {\n                this.childNodes[i]._preDrawNodes();\n            }\n        }\n\n        if (this.show) {\n            //this.lightEnabled && this.transformLights();\n            this.preFrame();\n            this.drawEntityCollections(this.entityCollections);\n        }\n    }\n\n    protected _drawNodes() {\n        for (let i = 0; i < this.childNodes.length; i++) {\n            if (this.childNodes[i]._isActive) {\n                this.childNodes[i]._drawNodes();\n            }\n        }\n\n        if (this.show) {\n            this.frame();\n        }\n    }\n\n    public drawEntityCollections(ec: EntityCollection[]) {\n        this.renderer!.enqueueEntityCollectionsToDraw(ec);\n    }\n\n    /**\n     * Draw entity collections picking frame.\n     * @public\n     * @param {Array<EntityCollection>} ec - Entity collection array.\n     */\n    public drawPickingEntityCollections(ec: EntityCollection[]) {\n        if (ec.length) {\n\n            // billboard pass\n            let i = ec.length;\n            while (i--) {\n                ec[i]._fadingOpacity && ec[i].billboardHandler.drawPicking();\n            }\n\n            // geoObject pass\n            i = ec.length;\n            while (i--) {\n                ec[i]._fadingOpacity && ec[i].geoObjectHandler.drawPicking();\n            }\n\n            // label pass\n            i = ec.length;\n            while (i--) {\n                ec[i]._fadingOpacity && ec[i].labelHandler.drawPicking();\n            }\n\n            // ray pass\n            i = ec.length;\n            while (i--) {\n                ec[i]._fadingOpacity && ec[i].rayHandler.drawPicking();\n            }\n\n            // polyline pass\n            i = ec.length;\n            while (i--) {\n                ec[i]._visibility && ec[i].polylineHandler.drawPicking();\n            }\n\n            //Strip pass\n            i = ec.length;\n            while (i--) {\n                ec[i]._visibility && ec[i].stripHandler.drawPicking();\n            }\n\n            // //pointClouds pass\n            // i = ec.length;\n            // while (i--) {\n            //    ec[i]._visibility && ec[i].pointCloudHandler.drawPicking();\n            // }\n        }\n    }\n\n    protected _entityCollectionPickingCallback() {\n        this.drawPickingEntityCollections(this.entityCollections);\n    }\n}\n\nexport {RenderNode};\n","/**\n * Console logging singleton object.\n * @class\n */\nexport class Cons {\n\n    protected _container: HTMLElement;\n    protected _visibility: boolean;\n\n    constructor() {\n        this._container = document.createElement(\"div\");\n        this._container.classList.add(\"ogConsole\");\n        this._container.style.display = \"none\";\n        if (document.body) {\n            document.body.appendChild(this._container);\n        }\n\n        this._visibility = false;\n    }\n\n    public getVisibility(): boolean {\n        return this._visibility;\n    }\n\n    public setVisibility(visibility: boolean) {\n        if (this._visibility != visibility) {\n            this._visibility = visibility;\n            if (this._visibility) {\n                this.show();\n            } else {\n                this.hide();\n            }\n        }\n    }\n\n    /**\n     * Show console panel.\n     * @public\n     */\n    public show() {\n        if (!this._container.parentNode) {\n            if (document.body) {\n                document.body.appendChild(this._container);\n            }\n        }\n        this._container.style.display = \"block\";\n        this._visibility = true;\n    }\n\n    /**\n     * Hide console panel.\n     * @public\n     */\n    public hide() {\n        this._container.style.display = \"none\";\n        this._visibility = false;\n    }\n\n    /**\n     * Adds error text in the console.\n     * @public\n     * @param {string} str - Error text.\n     */\n    public logErr(str: string) {\n        let d = document.createElement(\"div\");\n        d.classList.add(\"ogConsole-text\");\n        d.classList.add(\"ogConsole-error\");\n        d.innerHTML = \"error: \" + str;\n        console.trace(d.innerHTML);\n        this._container.appendChild(d);\n        this.show();\n    }\n\n    /**\n     * Adds warning text in the console.\n     * @public\n     * @param {string} str - Warning text.\n     */\n    public logWrn(str: string) {\n        let d = document.createElement(\"div\");\n        d.classList.add(\"ogConsole-text\");\n        d.classList.add(\"ogConsole-warning\");\n        d.innerHTML = \"warning: \" + str;\n        console.trace(d.innerHTML);\n        this._container.appendChild(d);\n        this.show();\n    }\n\n    /**\n     * Adds log text in the console.\n     * @public\n     * @param {string} str - Log text.\n     */\n    public log(str: string) {\n        let d = document.createElement(\"div\");\n        d.classList.add(\"ogConsole-text\");\n        d.innerHTML = str;\n        console.trace(str);\n        this._container.appendChild(d);\n        this.show();\n    }\n}\n\nexport const cons = new Cons();","/**\n * @module og/webgl/types\n */\n\nlet _declarations: string[] = [\n    \"FLOAT\", \"DOUBLE\", \"BOOL\", \"INT\", \"UINT\",\n    \"VEC2\", \"VEC3\", \"VEC4\", \"DVEC2\",\n    \"DVEC3\", \"DVEC4\",\n    \"BVEC2\", \"BVEC3\", \"BVEC4\",\n    \"IVEC2\", \"IVEC3\", \"IVEC4\",\n    \"UVEC2\", \"UVEC3\", \"UVEC4\",\n    \"MAT2\", \"DMAT2\", \"MAT3\", \"DMAT3\", \"MAT4\", \"DMAT4\",\n    \"MAT2X3\", \"MAT2X4\", \"MAT3X2\", \"MAT3X4\", \"MAT4X2\",\n    \"MAT4X3\", \"DMAT2X3\", \"DMAT2X4\", \"DMAT3X2\", \"DMAT3X4\",\n    \"DMAT4X2\", \"DMAT4X3\",\n    \"SAMPLER1D\", \"SAMPLER2D\", \"SAMPLER3D\", \"SAMPLERCUBE\", \"SAMPLER2DSHADOW\",\n    \"SAMPLER2DARRAY\",\n    \"INTXX\", \"FLOATXX\"];\n\nexport const types: { [id: string]: number } = {};\n\nfor (let i = 0; i < _declarations.length; i++) {\n    types[_declarations[i]] = i;\n}\n\nexport const typeStr: { [id: string]: number } = {};\nfor (let i = 0; i < _declarations.length; i++) {\n    typeStr[_declarations[i].toLowerCase()] = types[_declarations[i]];\n}\n","/**\n * @module og/webgl/variableHandlers\n */\n\nimport {types} from \"./types\";\nimport {Program} from \"./Program\";\nimport {WebGLBufferExt} from \"./Handler\";\n\nexport type VariableHandler = {\n    u: { [id: number]: Function },\n    a: { [id: number]: Function }\n};\n\nexport type ProgramVariable = {\n    type: string | number,\n    func: Function,\n    _pName: WebGLUniformLocation | number,\n    value: number | Float32Array | Int32Array | WebGLBufferExt,\n    itemType: string | number,\n    normalized: boolean,\n    divisor: number\n};\n\n/*=========================\n   Uniforms callbacks\n =========================*/\nexport const variableHandlers: VariableHandler = {\n    u: [],\n    a: []\n};\n\nvariableHandlers.u[types.MAT4] = function (program: Program, variable: ProgramVariable) {\n    program.gl!.uniformMatrix4fv(variable._pName, false, variable.value as Float32Array);\n};\n\nvariableHandlers.u[types.MAT3] = function (program: Program, variable: ProgramVariable) {\n    program.gl!.uniformMatrix3fv(variable._pName, false, variable.value as Float32Array);\n};\n\nvariableHandlers.u[types.FLOAT] = function (program: Program, variable: ProgramVariable) {\n    program.gl!.uniform1f(variable._pName, variable.value as number);\n};\n\nvariableHandlers.u[types.INT] = function (program: Program, variable: ProgramVariable) {\n    program.gl!.uniform1i(variable._pName, variable.value as number);\n};\n\nvariableHandlers.u[types.VEC2] = function (program: Program, variable: ProgramVariable) {\n    program.gl!.uniform2fv(variable._pName, variable.value as Float32Array);\n};\n\nvariableHandlers.u[types.VEC3] = function (program: Program, variable: ProgramVariable) {\n    program.gl!.uniform3fv(variable._pName, variable.value as Float32Array);\n};\n\nvariableHandlers.u[types.VEC4] = function (program: Program, variable: ProgramVariable) {\n    program.gl!.uniform4fv(variable._pName, variable.value as Float32Array);\n};\n\nvariableHandlers.u[types.SAMPLER2D] = function (program: Program, variable: ProgramVariable) {\n    let pgl = program.gl!;\n    pgl.activeTexture(pgl.TEXTURE0 + program._textureID);\n    pgl.bindTexture(pgl.TEXTURE_2D, variable.value);\n    pgl.uniform1i(variable._pName, program._textureID);\n    program._textureID++;\n};\n\nvariableHandlers.u[types.SAMPLERCUBE] = function (program: Program, variable: ProgramVariable) {\n    let pgl = program.gl!;\n    pgl.activeTexture(pgl.TEXTURE0 + program._textureID);\n    pgl.bindTexture(pgl.TEXTURE_CUBE_MAP, variable.value);\n    pgl.uniform1i(variable._pName, program._textureID);\n    program._textureID++;\n};\n\nvariableHandlers.u[types.SAMPLER2DARRAY] = function (program: Program, variable: ProgramVariable) {\n    let value = variable.value as Int32Array;\n    let pgl = program.gl!,\n        size = value.length;\n    let samplerArr = new Int32Array(size);\n    for (let i = 0; i < size; i++) {\n        pgl.activeTexture(pgl.TEXTURE0 + program._textureID + i);\n        pgl.bindTexture(pgl.TEXTURE_2D, value[i]);\n        samplerArr[i] = i;\n    }\n    pgl.uniform1iv(variable._pName, samplerArr);\n};\n\nvariableHandlers.u[types.INTXX] = function (program: Program, variable: ProgramVariable) {\n    program.gl!.uniform1iv(variable._pName, variable.value as Int32Array);\n};\n\nvariableHandlers.u[types.FLOATXX] = function (program: Program, variable: ProgramVariable) {\n    program.gl!.uniform1fv(variable._pName, variable.value as Float32Array);\n};\n\n/*========================\n   Attributes callbacks\n ========================*/\nvariableHandlers.a[types.FLOAT] = function (program: Program, variable: ProgramVariable) {\n    program.gl!.vertexAttrib1f(variable._pName as number, variable.value as number);\n};\n\nvariableHandlers.a[types.VEC2] = function (program: Program, variable: ProgramVariable) {\n    program.gl!.vertexAttrib2fv(variable._pName as number, variable.value as Float32Array);\n};\n\nvariableHandlers.a[types.VEC3] = function (program: Program, variable: ProgramVariable) {\n    program.gl!.vertexAttrib3fv(variable._pName as number, variable.value as Float32Array);\n};\n\n//VariableHandlers.a[types.VEC4] = function (program, variable) {\n//    program.gl.vertexAttrib4fv(variable._pName, variable.value);\n//};\n","import {cons} from \"../cons\";\nimport {ProgramVariable, variableHandlers} from \"./variableHandlers\";\nimport {types, typeStr} from \"./types\";\nimport {WebGLBufferExt} from \"./Handler\";\n\nconst itemTypes: string[] = [\"BYTE\", \"SHORT\", \"UNSIGNED_BYTE\", \"UNSIGNED_SHORT\", \"FLOAT\", \"HALF_FLOAT\"];\n\ntype WebGLProgramExt = WebGLProgram & { [id: string]: WebGLUniformLocation };\n\ntype ProgramMaterial = {\n    attributes: Record<string, any>;\n    uniforms: Record<string, any>,\n    vertexShader: string;\n    fragmentShader: string\n};\n\n/**\n * Represents more comfortable using WebGL shader program.\n * @class\n * @param {string} name - Program name.\n * @param {ProgramMaterial} material - Object stores uniforms, attributes and program codes:\n * @param {Record<string, any>} material.uniforms - Uniforms definition section.\n * @param {Record<string, any>} material.attributes - Attributes definition section.\n * @param {string} material.vertexShader - Vertex glsl code.\n * @param {string} material.fragmentShader - Fragment glsl code.\n */\nclass Program {\n    /**\n     * Shader program name.\n     * @public\n     * @type {string}\n     */\n    public name: string;\n\n    public attributes: { [id: string]: number };\n\n    public uniforms: { [id: string]: WebGLUniformLocation };\n\n    public _attributes: Record<string, ProgramVariable>;\n\n    public _uniforms: Record<string, ProgramVariable>;\n\n    public vertexShader: string;\n\n    public fragmentShader: string;\n\n    public drawElementsInstanced: Function | null;\n    public vertexAttribDivisor: Function | null;\n\n    /**\n     * Webgl context.\n     * @public\n     * @type {WebGL2RenderingContext | null}\n     */\n    public gl: WebGL2RenderingContext | null;\n\n    /**\n     * All program variables.\n     * @private\n     * @type {Record<string, ProgramVariable>}\n     */\n    protected _variables: Record<string, ProgramVariable>;\n\n    /**\n     * Program pointer.\n     * @private\n     * @type {WebGLProgramExt | null}\n     */\n    public _p: WebGLProgramExt | null;\n\n    /**\n     * Texture counter.\n     * @protected\n     * @type {number}\n     */\n    public _textureID: number;\n\n    /**\n     * Program attributes array.\n     * @private\n     * @type {number[]}\n     */\n    protected _attribArrays: number[];\n\n    /**\n     * Program attributes divisors.\n     * @protected\n     * @type {number[]}\n     */\n    protected _attribDivisor: number[];\n\n    constructor(name: string, material: ProgramMaterial) {\n\n        this.name = name;\n\n        this._attributes = {};\n        for (let t in material.attributes) {\n            if (\n                typeof material.attributes[t] === \"string\" ||\n                typeof material.attributes[t] === \"number\"\n            ) {\n                this._attributes[t] = {type: material.attributes[t]} as ProgramVariable;\n            } else {\n                this._attributes[t] = material.attributes[t];\n            }\n        }\n\n        this._uniforms = {};\n        for (let t in material.uniforms) {\n            if (\n                typeof material.uniforms[t] === \"string\" ||\n                typeof material.uniforms[t] === \"number\"\n            ) {\n                this._uniforms[t] = {type: material.uniforms[t]} as ProgramVariable;\n            } else {\n                this._uniforms[t] = material.uniforms[t];\n            }\n        }\n\n        this.vertexShader = material.vertexShader;\n\n        this.fragmentShader = material.fragmentShader;\n\n        this.gl = null;\n\n        this._variables = {};\n\n        this._p = null;\n\n        this._textureID = 0;\n\n        this._attribArrays = [];\n\n        this._attribDivisor = [];\n\n        this.attributes = {};\n\n        this.uniforms = {};\n\n        this.vertexAttribDivisor = null;\n        this.drawElementsInstanced = null;\n    }\n\n    /**\n     * Bind program buffer.\n     * @function\n     * @param {Program} program - Used program.\n     * @param {Object} variable - Variable represents buffer data.\n     */\n    static bindBuffer(program: Program, variable: ProgramVariable) {\n        let gl = program.gl;\n        if (gl) {\n            gl.bindBuffer(gl.ARRAY_BUFFER, variable.value);\n            gl.vertexAttribPointer(\n                variable._pName as number,\n                (variable.value as WebGLBufferExt).itemSize,\n                variable.itemType as number,\n                variable.normalized,\n                0,\n                0\n            );\n        }\n    }\n\n    /**\n     * Sets the current program frame.\n     * @public\n     */\n    public use() {\n        this.gl && this.gl.useProgram(this._p!);\n    }\n\n    /**\n     * Sets program variables.\n     * @public\n     * @param {Object} material - Variables and values object.\n     */\n    public set(material: Record<string, any>) {\n        this._textureID = 0;\n        for (let i in material) {\n            this._variables[i].value = material[i];\n            this._variables[i].func(this, this._variables[i]);\n        }\n    }\n\n    /**\n     * Apply current variables.\n     * @public\n     */\n    public apply() {\n        this._textureID = 0;\n        let v = this._variables;\n        for (let i in v) {\n            v[i].func(this, v[i]);\n        }\n    }\n\n    /**\n     * Calls drawElements index buffer function.\n     * @public\n     * @param {number} mode - Draw mode(GL_TRIANGLES, GL_LINESTRING etc.).\n     * @param {Object} buffer - Index buffer.\n     */\n    public drawIndexBuffer(mode: number, buffer: WebGLBufferExt) {\n        let gl = this.gl!;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n        gl.drawElements(mode, buffer.numItems, gl.UNSIGNED_SHORT, 0);\n    }\n\n    /**\n     * Calls drawArrays function.\n     * @public\n     * @param {number} mode - Draw mode GL_TRIANGLES, GL_LINESTRING, etc.\n     * @param {number} numItems - Items to draw\n     */\n    public drawArrays(mode: number, numItems: number) {\n        this.gl!.drawArrays(mode, 0, numItems);\n    }\n\n    /**\n     * Check and log for a shader compile errors and warnings. Returns True - if no errors otherwise returns False.\n     * @private\n     * @param {WebGLShader} shader - WebGl shader program.\n     * @param {string} src - Shader program source.\n     * @returns {boolean} -\n     */\n    protected _getShaderCompileStatus(shader: WebGLShader, src: string): boolean {\n\n        if (!this.gl) return false;\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            cons.logErr(\n                `Shader program \"${this.name}\":${this.gl.getShaderInfoLog(shader)}.`\n            );\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Returns compiled vertex shader program pointer.\n     * @private\n     * @param {string} src - Vertex shader source code.\n     * @returns {Object} -\n     */\n    protected _createVertexShader(src: string): WebGLShader | undefined {\n        if (!this.gl) return;\n        let shader = this.gl.createShader(this.gl.VERTEX_SHADER);\n        if (shader && this._getShaderCompileStatus(shader, src)) {\n            return shader;\n        }\n    }\n\n    /**\n     * Returns compiled fragment shader program pointer.\n     * @private\n     * @param {string} src - Vertex shader source code.\n     * @returns {Object} -\n     */\n    protected _createFragmentShader(src: string): WebGLShader | undefined {\n        if (!this.gl) return;\n        let shader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\n        if (shader && this._getShaderCompileStatus(shader, src)) {\n            return shader;\n        }\n    }\n\n    /**\n     * Disable current program vertexAttribArrays.\n     * @public\n     */\n    public disableAttribArrays() {\n        let gl = this.gl!;\n        let a = this._attribArrays;\n        for (let i = 0, len = a.length; i < len; i++) {\n            gl.disableVertexAttribArray(a[i]);\n            this.vertexAttribDivisor!(a[i], 0);\n        }\n    }\n\n    /**\n     * Enable current program vertexAttribArrays.\n     * @public\n     */\n    public enableAttribArrays() {\n        let gl = this.gl!;\n        let a = this._attribArrays;\n        let d = this._attribDivisor;\n        for (let i = 0, len = a.length; i < len; i++) {\n            gl.enableVertexAttribArray(a[i]);\n            this.vertexAttribDivisor!(a[i], d[i]);\n        }\n    }\n\n    // public vertexAttribDivisor(index: number, divisor: number) {\n    //     const gl = this.gl!;\n    //     gl.vertexAttribDivisor ?\n    //         gl.vertexAttribDivisor(index, divisor) :\n    //         gl.getExtension('ANGLE_instanced_arrays').vertexAttribDivisorANGLE(index, divisor);\n    // }\n\n    /**\n     * Delete program.\n     * @public\n     */\n    public delete() {\n        this.gl && this.gl.deleteProgram(this._p!);\n    }\n\n    /**\n     * Creates program.\n     * @public\n     * @param {Object} gl - WebGl context.\n     */\n    public createProgram(gl: WebGL2RenderingContext) {\n        this.gl = gl;\n\n        this._p = this.gl.createProgram() as WebGLProgramExt;\n\n        if (!this._p) return;\n\n        let fs = this._createFragmentShader(this.fragmentShader);\n        let vs = this._createVertexShader(this.vertexShader);\n\n        if (!fs || !vs) return;\n\n        gl.attachShader(this._p, fs);\n        gl.attachShader(this._p, vs);\n\n        gl.linkProgram(this._p);\n\n\n        if (!this.drawElementsInstanced) {\n            if (gl.drawElementsInstanced) {\n                this.drawElementsInstanced = gl.drawElementsInstanced.bind(gl);\n            } else {\n                let ext = gl.getExtension('ANGLE_instanced_arrays');\n                if (ext) {\n                    this.drawElementsInstanced = ext.drawElementsInstancedANGLE.bind(ext);\n                }\n            }\n            // this.drawElementsInstanced =\n            //     gl.drawElementsInstanced ?\n            //         gl.drawElementsInstanced.bind(gl) :\n            //         gl.getExtension('ANGLE_instanced_arrays').drawElementsInstancedANGLE.bind(gl.getExtension('ANGLE_instanced_arrays'));\n        }\n\n        if (!this.vertexAttribDivisor) {\n            if (gl.vertexAttribDivisor) {\n                this.vertexAttribDivisor = gl.vertexAttribDivisor.bind(gl);\n            } else {\n                let ext = gl.getExtension('ANGLE_instanced_arrays');\n                if (ext) {\n                    this.vertexAttribDivisor = ext.vertexAttribDivisorANGLE.bind(ext);\n                }\n            }\n            // this.vertexAttribDivisor =\n            //     gl.vertexAttribDivisor ?\n            //         gl.vertexAttribDivisor.bind(gl) :\n            //         gl.getExtension('ANGLE_instanced_arrays').vertexAttribDivisorANGLE.bind(gl.getExtension('ANGLE_instanced_arrays'));\n        }\n\n\n        if (!gl.getProgramParameter(this._p, gl.LINK_STATUS)) {\n            cons.logErr(`Shader program \"${this.name}\": initialization failed. ${gl.getProgramInfoLog(this._p)}.`);\n            gl.deleteProgram(this._p);\n            return;\n        }\n\n        this.use();\n\n        for (let a in this._attributes) {\n            //this.attributes[a]._name = a;\n            this._variables[a] = this._attributes[a];\n            this._attributes[a].func = Program.bindBuffer;\n\n            let t = this._attributes[a].itemType as string;\n            let itemTypeStr: string = t ? t.trim().toUpperCase() : \"FLOAT\";\n\n            if (itemTypes.indexOf(itemTypeStr) == -1) {\n                cons.logErr(`Shader program \"${this.name}\": attribute '${a}', item type '${this._attributes[a].itemType}' not exists.`);\n                this._attributes[a].itemType = gl.FLOAT;\n            } else {\n                this._attributes[a].itemType = (gl as any)[itemTypeStr];\n            }\n\n            this._attributes[a].normalized = this._attributes[a].normalized || false;\n            this._attributes[a].divisor = this._attributes[a].divisor || 0;\n\n            this._p[a] = gl.getAttribLocation(this._p, a);\n\n            if (this._p[a] == undefined) {\n                cons.logErr(`Shader program \"${this.name}\":  attribute '${a}' not exists.`);\n                gl.deleteProgram(this._p);\n                return;\n            }\n\n            let type: string | number = this._attributes[a].type;\n            if (typeof type === \"string\") {\n                type = typeStr[type.trim().toLowerCase()];\n            }\n\n            let d = this._attributes[a].divisor;\n            if (type === types.MAT4) {\n                let loc = this._p[a] as number;\n                this._attribArrays.push(loc, loc + 1, loc + 2, loc + 3);\n                this._attribDivisor.push(d, d, d, d);\n            } else {\n                this._attribArrays.push(this._p[a] as number);\n                this._attribDivisor.push(d);\n            }\n\n            gl.enableVertexAttribArray(this._p[a] as number);\n\n            this._attributes[a]._pName = this._p[a];\n            this.attributes[a] = this._p[a] as number;\n        }\n\n        for (let u in this._uniforms) {\n\n            if (typeof this._uniforms[u].type === \"string\") {\n                let t: string = this._uniforms[u].type as string;\n                this._uniforms[u].func = variableHandlers.u[typeStr[t.trim().toLowerCase()]];\n            } else {\n                this._uniforms[u].func = variableHandlers.u[this._uniforms[u].type as number];\n            }\n\n            this._variables[u] = this._uniforms[u];\n            this._p[u] = gl.getUniformLocation(this._p, u)!;\n\n            if (this._p[u] == undefined) {\n                cons.logErr(`Shader program \"${this.name}\": uniform '${u}' not exists.`);\n                gl.deleteProgram(this._p);\n                return;\n            }\n\n            this._uniforms[u]._pName = this._p[u];\n            this.uniforms[u] = this._p[u];\n        }\n\n        gl.detachShader(this._p as WebGLProgram, fs);\n        gl.detachShader(this._p as WebGLProgram, vs);\n\n        gl.deleteShader(fs);\n        gl.deleteShader(vs);\n    }\n}\n\nexport {Program};\n","import {Program} from '../webgl/Program';\n\nconst PROJECT = `vec2 project(vec4 p) {\n                    return (0.5 * p.xyz / p.w + 0.5).xy * viewport;\n                }`;\n\nconst ROTATE2D =\n    `mat2 rotate2d(float angle) {\n        return mat2(cos(angle), -sin(angle),\n           sin(angle), cos(angle));\n     }`;\n\nexport function billboardPicking(): Program {\n    return new Program(\"billboardPicking\", {\n        uniforms: {\n            viewport: \"vec2\",\n            projectionMatrix: \"mat4\",\n            viewMatrix: \"mat4\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            planetRadius: \"float\",\n            uScaleByDistance: \"vec3\",\n            opacity: \"float\",\n            depthOffset: \"float\"\n        },\n        attributes: {\n            a_vertices: \"vec2\",\n            a_positionsHigh: \"vec3\",\n            a_positionsLow: \"vec3\",\n            a_offset: \"vec3\",\n            a_size: \"vec2\",\n            a_rotation: \"float\",\n            a_rgba: \"vec4\"\n        },\n        vertexShader:\n            `precision highp float;\n            attribute vec2 a_vertices;\n            attribute vec3 a_positionsHigh;\n            attribute vec3 a_positionsLow;\n            attribute vec3 a_offset;\n            attribute vec2 a_size;\n            attribute float a_rotation;\n            attribute vec4 a_rgba;\n\n            varying vec3 v_rgb;\n\n            uniform mat4 viewMatrix;\n            uniform mat4 projectionMatrix;\n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n            uniform vec3 uScaleByDistance;\n            uniform float opacity;\n            uniform float planetRadius;\n            uniform vec2 viewport;\n            uniform float depthOffset;\n\n            const vec3 ZERO3 = vec3(0.0);\n\n            ${PROJECT}\n\n            ${ROTATE2D}\n\n            void main() {\n\n                vec3 a_positions = a_positionsHigh + a_positionsLow;\n                vec3 cameraPos = eyePositionHigh + eyePositionLow;\n\n                vec3 look = a_positions - cameraPos;\n                float lookDist = length(look);\n                v_rgb = a_rgba.rgb;\n\n                if(opacity * step(lookDist, sqrt(dot(cameraPos,cameraPos) - planetRadius) + sqrt(dot(a_positions,a_positions) - planetRadius)) == 0.0){\n                    return;\n                }\n\n                vec3 up = vec3( viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1] );\n                vec3 right = vec3( viewMatrix[0][0], viewMatrix[1][0], viewMatrix[2][0] );\n\n                float scd = (1.0 - smoothstep(uScaleByDistance[0], uScaleByDistance[1], lookDist)) * (1.0 - step(uScaleByDistance[2], lookDist));\n\n                mat4 viewMatrixRTE = viewMatrix;\n                viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                vec3 highDiff = a_positionsHigh - eyePositionHigh;\n                vec3 lowDiff = a_positionsLow - eyePositionLow;\n                vec4 posRTE = viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n                vec4 projPos = projectionMatrix * posRTE;\n                                \n                float camSlope = dot(vec3(viewMatrix[0][2], viewMatrix[1][2], viewMatrix[2][2]), normalize(cameraPos));                \n                if(camSlope > 0.5) {\n                    float dist = dot(look, normalize(cameraPos));\n                    projPos.z += dist * 0.02;\n                }else{\n                    projPos.z += -(abs(projPos.z)) * 0.002;                 \n                }\n                \n                projPos.z += depthOffset + a_offset.z;\n                                \n                vec2 screenPos = project(projPos);\n\n                vec2 v =  screenPos + rotate2d(a_rotation) * (a_vertices * a_size * scd + a_offset.xy);\n\n                gl_Position = vec4((2.0 * v / viewport - 1.0) * projPos.w, projPos.z, projPos.w);\n            }`,\n        fragmentShader:\n            `precision highp float;\n            varying vec3 v_rgb;\n            void main () {\n                gl_FragColor = vec4(v_rgb, 1.0);\n            }`\n    });\n}\n\nexport function billboard_screen(): Program {\n    return new Program(\"billboard\", {\n        uniforms: {\n            viewport: \"vec2\",\n            u_texture: \"sampler2d\",\n            projectionMatrix: \"mat4\",\n            viewMatrix: \"mat4\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            planetRadius: \"float\",\n            uScaleByDistance: \"vec3\",\n            opacity: \"float\",\n            depthOffset: \"float\"\n        },\n        attributes: {\n            a_vertices: \"vec2\",\n            a_texCoord: \"vec2\",\n            a_positionsHigh: \"vec3\",\n            a_positionsLow: \"vec3\",\n            a_offset: \"vec3\",\n            a_size: \"vec2\",\n            a_rotation: \"float\",\n            a_rgba: \"vec4\",\n        },\n        vertexShader:\n            `precision highp float;\n            attribute vec2 a_vertices;\n            attribute vec2 a_texCoord;\n            attribute vec3 a_positionsHigh;\n            attribute vec3 a_positionsLow;\n            attribute vec3 a_offset;\n            attribute vec2 a_size;\n            attribute float a_rotation;\n            attribute vec4 a_rgba;\n\n            varying vec2 v_texCoords;\n            varying vec4 v_rgba;\n\n            uniform mat4 viewMatrix;\n            uniform mat4 projectionMatrix;\n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n            uniform vec3 uScaleByDistance;\n            uniform float opacity;\n            uniform float planetRadius;\n            uniform vec2 viewport;\n            uniform float depthOffset;\n\n            const vec3 ZERO3 = vec3(0.0);\n\n            ${PROJECT}\n\n            ${ROTATE2D}\n\n            void main() {\n                \n                vec3 a_positions = a_positionsHigh + a_positionsLow;\n                vec3 cameraPos = eyePositionHigh + eyePositionLow;\n\n                v_texCoords = a_texCoord;\n                vec3 look = a_positions - cameraPos;\n                float lookDist = length(look);\n                v_rgba = a_rgba;\n\n                if(opacity * step(lookDist, sqrt(dot(cameraPos,cameraPos) - planetRadius) + sqrt(dot(a_positions,a_positions) - planetRadius)) == 0.0){\n                    return;\n                }\n\n                vec3 up = vec3( viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1] );\n                vec3 right = vec3( viewMatrix[0][0], viewMatrix[1][0], viewMatrix[2][0] );\n\n                float scd = (1.0 - smoothstep(uScaleByDistance[0], uScaleByDistance[1], lookDist)) * (1.0 - step(uScaleByDistance[2], lookDist));\n\n                mat4 viewMatrixRTE = viewMatrix;\n                viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                vec3 highDiff = a_positionsHigh - eyePositionHigh;\n                vec3 lowDiff = a_positionsLow - eyePositionLow;\n                vec4 posRTE = viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n                vec4 projPos = projectionMatrix * posRTE;\n                                                \n                float camSlope = dot(vec3(viewMatrix[0][2], viewMatrix[1][2], viewMatrix[2][2]), normalize(cameraPos));                \n                if(camSlope > 0.5) {\n                    float dist = dot(look, normalize(cameraPos));\n                    projPos.z += dist * 0.02;\n                }else{\n                    projPos.z += -(abs(projPos.z)) * 0.002;                 \n                }\n                \n                projPos.z += depthOffset + a_offset.z;\n                \n                vec2 screenPos = project(projPos);\n\n                vec2 v = screenPos + rotate2d(a_rotation) * (a_vertices * a_size * scd + a_offset.xy);\n\n                gl_Position = vec4((2.0 * v / viewport - 1.0) * projPos.w, projPos.z, projPos.w);\n            }`,\n        fragmentShader:\n            `precision highp float;\n            uniform sampler2D u_texture;\n            varying vec2 v_texCoords;\n            varying vec4 v_rgba;\n            void main () {\n                vec4 color = texture2D(u_texture, v_texCoords);\n                if(color.a < 0.1)\n                    discard;\n                gl_FragColor = color * v_rgba;\n            }`\n    });\n}","import * as shaders from \"../shaders/billboard\";\nimport {spliceTypedArray, TypedArray} from \"../utils/shared\";\nimport {EntityCollection} from \"./EntityCollection\";\nimport {Planet} from \"../scene/Planet\";\nimport {Renderer} from \"../renderer/Renderer\";\nimport {LOCK_FREE} from \"./LabelWorker\";\nimport {Vec3} from \"../math/Vec3\";\nimport {Vec4} from \"../math/Vec4\";\nimport {WebGLBufferExt} from \"../webgl/Handler\";\nimport {BaseBillboard} from \"./BaseBillboard\";\n\nconst PICKINGCOLOR_BUFFER = 0;\nconst POSITION_BUFFER = 1;\nconst SIZE_BUFFER = 2;\nconst OFFSET_BUFFER = 3;\nconst RGBA_BUFFER = 4;\nconst ROTATION_BUFFER = 5;\nconst TEXCOORD_BUFFER = 6;\nconst VERTEX_BUFFER = 7;\n\n/**\n * @class BaseBillboardHandler\n */\nclass BaseBillboardHandler {\n\n    static __counter__: number = 0;\n\n    public __id: number;\n\n    /**\n     * Picking rendering option.\n     * @public\n     * @type {boolean}\n     */\n    public pickingEnabled: boolean;\n\n    public _entityCollection: EntityCollection;\n\n    protected _renderer: Renderer | null;\n\n    protected _billboards: BaseBillboard[];\n\n    protected _positionHighBuffer: WebGLBufferExt | null;\n    protected _positionLowBuffer: WebGLBufferExt | null;\n    protected _sizeBuffer: WebGLBufferExt | null;\n    protected _offsetBuffer: WebGLBufferExt | null;\n    protected _rgbaBuffer: WebGLBufferExt | null;\n    protected _rotationBuffer: WebGLBufferExt | null;\n    protected _texCoordBuffer: WebGLBufferExt | null;\n    protected _vertexBuffer: WebGLBufferExt | null;\n\n    protected _texCoordArr: Float32Array;\n    protected _vertexArr: Float32Array;\n    protected _positionHighArr: Float32Array;\n    protected _positionLowArr: Float32Array;\n    protected _sizeArr: Float32Array;\n    protected _offsetArr: Float32Array;\n    protected _rgbaArr: Float32Array;\n    protected _rotationArr: Float32Array;\n\n    protected _pickingColorBuffer: WebGLBufferExt | null;\n    protected _pickingColorArr: Float32Array;\n\n    protected _buffersUpdateCallbacks: Function[];\n\n    protected _changedBuffers: boolean[];\n\n    constructor(entityCollection: EntityCollection) {\n\n        this.__id = BaseBillboardHandler.__counter__++;\n\n        this.pickingEnabled = true;\n\n        this._entityCollection = entityCollection;\n\n        this._renderer = null;\n\n        this._billboards = [];\n\n        this._positionHighBuffer = null;\n        this._positionLowBuffer = null;\n        this._sizeBuffer = null;\n        this._offsetBuffer = null;\n        this._rgbaBuffer = null;\n        this._rotationBuffer = null;\n        this._texCoordBuffer = null;\n        this._vertexBuffer = null;\n        this._pickingColorBuffer = null;\n\n        this._texCoordArr = new Float32Array([]);\n        this._vertexArr = new Float32Array([]);\n        this._positionHighArr = new Float32Array([]);\n        this._positionLowArr = new Float32Array([]);\n        this._sizeArr = new Float32Array([]);\n        this._offsetArr = new Float32Array([]);\n        this._rgbaArr = new Float32Array([]);\n        this._rotationArr = new Float32Array([]);\n        this._pickingColorArr = new Float32Array([]);\n\n        this._buffersUpdateCallbacks = [];\n        this._buffersUpdateCallbacks[PICKINGCOLOR_BUFFER] = this.createPickingColorBuffer;\n        this._buffersUpdateCallbacks[POSITION_BUFFER] = this.createPositionBuffer;\n        this._buffersUpdateCallbacks[SIZE_BUFFER] = this.createSizeBuffer;\n        this._buffersUpdateCallbacks[OFFSET_BUFFER] = this.createOffsetBuffer;\n        this._buffersUpdateCallbacks[RGBA_BUFFER] = this.createRgbaBuffer;\n        this._buffersUpdateCallbacks[ROTATION_BUFFER] = this.createRotationBuffer;\n        this._buffersUpdateCallbacks[TEXCOORD_BUFFER] = this.createTexCoordBuffer;\n        this._buffersUpdateCallbacks[VERTEX_BUFFER] = this.createVertexBuffer;\n\n        this._changedBuffers = new Array(this._buffersUpdateCallbacks.length);\n    }\n\n    public isEqual(handler: BaseBillboardHandler) {\n        return handler && (handler.__id === this.__id);\n    }\n\n    static concArr(dest: number[], curr: number[]) {\n        for (let i = 0; i < curr.length; i++) {\n            dest.push(curr[i]);\n        }\n    }\n\n    public initProgram() {\n        if (this._renderer && this._renderer.handler) {\n            if (!this._renderer.handler.programs.billboard) {\n                this._renderer.handler.addProgram(shaders.billboard_screen());\n            }\n\n            if (!this._renderer.handler.programs.billboardPicking) {\n                this._renderer.handler.addProgram(shaders.billboardPicking());\n            }\n        }\n    }\n\n    public setRenderer(renderer: Renderer) {\n        this._renderer = renderer;\n        this.initProgram();\n    }\n\n    public refresh() {\n        let i = this._changedBuffers.length;\n        while (i--) {\n            this._changedBuffers[i] = true;\n        }\n    }\n\n    protected _removeBillboards() {\n        let i = this._billboards.length;\n        while (i--) {\n            let bi = this._billboards[i];\n            bi._handlerIndex = -1;\n            bi._handler = null;\n            bi._isReady = false;\n            bi._lockId = LOCK_FREE;\n        }\n        this._billboards.length = 0;\n        this._billboards = [];\n    }\n\n    public clear() {\n        // @ts-ignore\n        this._texCoordArr = null;\n        // @ts-ignore\n        this._vertexArr = null;\n        // @ts-ignore\n        this._positionHighArr = null;\n        // @ts-ignore\n        this._positionLowArr = null;\n        // @ts-ignore\n        this._sizeArr = null;\n        // @ts-ignore\n        this._offsetArr = null;\n        // @ts-ignore\n        this._rgbaArr = null;\n        // @ts-ignore\n        this._rotationArr = null;\n        // @ts-ignore\n        this._pickingColorArr = null;\n\n        this._texCoordArr = new Float32Array([]);\n        this._vertexArr = new Float32Array([]);\n        this._positionHighArr = new Float32Array([]);\n        this._positionLowArr = new Float32Array([]);\n        this._sizeArr = new Float32Array([]);\n        this._offsetArr = new Float32Array([]);\n        this._rgbaArr = new Float32Array([]);\n        this._rotationArr = new Float32Array([]);\n        this._pickingColorArr = new Float32Array([]);\n\n        this._removeBillboards();\n        this._deleteBuffers();\n        this.refresh();\n    }\n\n    protected _deleteBuffers() {\n        if (this._renderer) {\n            let gl = this._renderer.handler.gl!;\n            gl.deleteBuffer(this._positionHighBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._positionLowBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._sizeBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._offsetBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._rgbaBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._rotationBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._vertexBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._texCoordBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._pickingColorBuffer as WebGLBuffer);\n        }\n\n        this._positionHighBuffer = null;\n        this._positionLowBuffer = null;\n        this._sizeBuffer = null;\n        this._offsetBuffer = null;\n        this._rgbaBuffer = null;\n        this._rotationBuffer = null;\n        this._vertexBuffer = null;\n        this._texCoordBuffer = null;\n        this._pickingColorBuffer = null;\n    }\n\n    public update() {\n        if (this._renderer) {\n            let i = this._changedBuffers.length;\n            while (i--) {\n                if (this._changedBuffers[i]) {\n                    this._buffersUpdateCallbacks[i].call(this);\n                    this._changedBuffers[i] = false;\n                }\n            }\n        }\n    }\n\n    public add(billboard: BaseBillboard) {\n        if (billboard._handlerIndex == -1) {\n            billboard._isReady = true;\n            billboard._handler = this;\n            billboard._handlerIndex = this._billboards.length;\n            this._billboards.push(billboard);\n        }\n    }\n\n    protected _displayPASS() {\n        let r = this._renderer!;\n        let h = r.handler;\n        h.programs.billboard.activate();\n        let sh = h.programs.billboard._program;\n        let sha = sh.attributes,\n            shu = sh.uniforms;\n\n        let gl = h.gl!,\n            ec = this._entityCollection;\n\n        gl.disable(gl.CULL_FACE);\n\n        gl.uniform1f(shu.depthOffset, ec.polygonOffsetUnits);\n\n        gl.uniform1i(shu.u_texture, 0);\n\n        gl.uniformMatrix4fv(shu.viewMatrix, false, r.activeCamera!.getViewMatrix());\n        gl.uniformMatrix4fv(shu.projectionMatrix, false, r.activeCamera!.getProjectionMatrix());\n\n        gl.uniform3fv(shu.eyePositionHigh, r.activeCamera!.eyeHigh);\n        gl.uniform3fv(shu.eyePositionLow, r.activeCamera!.eyeLow);\n\n        gl.uniform3fv(shu.uScaleByDistance, ec.scaleByDistance);\n\n        gl.uniform1f(shu.opacity, ec._fadingOpacity);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._texCoordBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_texCoord, this._texCoordBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_vertices, this._vertexBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._positionHighBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_positionsHigh, this._positionHighBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._positionLowBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_positionsLow, this._positionLowBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._rgbaBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_rgba, this._rgbaBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._sizeBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_size, this._sizeBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._offsetBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_offset, this._offsetBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.uniform1f(shu.planetRadius, (ec.renderNode as Planet)._planetRadius2 || 0);\n\n        gl.uniform2fv(shu.viewport, [h.canvas!.clientWidth, h.canvas!.clientHeight]);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._rotationBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_rotation, this._rotationBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.drawArrays(gl.TRIANGLES, 0, this._vertexBuffer!.numItems);\n\n        gl.enable(gl.CULL_FACE);\n    }\n\n    protected _pickingPASS() {\n        let r = this._renderer!;\n        let h = r.handler;\n        h.programs.billboardPicking.activate();\n        let sh = h.programs.billboardPicking._program;\n        let sha = sh.attributes,\n            shu = sh.uniforms;\n\n        let gl = h.gl!,\n            ec = this._entityCollection;\n\n        gl.disable(gl.CULL_FACE);\n\n        gl.uniform1f(shu.depthOffset, ec.polygonOffsetUnits);\n\n        gl.uniformMatrix4fv(shu.viewMatrix, false, r.activeCamera!.getViewMatrix());\n        gl.uniformMatrix4fv(shu.projectionMatrix, false, r.activeCamera!.getProjectionMatrix());\n\n        gl.uniform3fv(shu.eyePositionHigh, r.activeCamera!.eyeHigh);\n        gl.uniform3fv(shu.eyePositionLow, r.activeCamera!.eyeLow);\n\n        gl.uniform3fv(shu.uScaleByDistance, ec.scaleByDistance);\n\n        gl.uniform1f(shu.opacity, ec._fadingOpacity);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_vertices, this._vertexBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._positionHighBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_positionsHigh, this._positionHighBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._positionLowBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_positionsLow, this._positionLowBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._pickingColorBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_rgba, this._pickingColorBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._sizeBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_size, this._sizeBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._offsetBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_offset, this._offsetBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.uniform1f(shu.planetRadius, (ec.renderNode as Planet)._planetRadius2 || 0);\n\n        gl.uniform2fv(shu.viewport, [h.canvas!.clientWidth, h.canvas!.clientHeight]);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._rotationBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(sha.a_rotation, this._rotationBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.drawArrays(gl.TRIANGLES, 0, this._vertexBuffer!.numItems);\n\n        gl.enable(gl.CULL_FACE);\n    }\n\n    public draw() {\n        if (this._billboards.length) {\n            this.update();\n            this._displayPASS();\n        }\n    }\n\n    public drawPicking() {\n        if (this._billboards.length && this.pickingEnabled) {\n            this._pickingPASS();\n        }\n    }\n\n    public reindexBillboardsArray(startIndex: number) {\n        let b = this._billboards;\n        for (let i = startIndex; i < b.length; i++) {\n            b[i]._handlerIndex = i;\n        }\n    }\n\n    protected _removeBillboard(billboard: BaseBillboard) {\n\n        let bi = billboard._handlerIndex;\n\n        this._billboards.splice(bi, 1);\n\n        let i = bi * 24;\n        this._rgbaArr = spliceTypedArray(this._rgbaArr, i, 24) as Float32Array;\n\n        i = bi * 18;\n        this._positionHighArr = spliceTypedArray(this._positionHighArr, i, 18) as Float32Array;\n        this._positionLowArr = spliceTypedArray(this._positionLowArr, i, 18) as Float32Array;\n        this._offsetArr = spliceTypedArray(this._offsetArr, i, 18) as Float32Array;\n        //this._alignedAxisArr = spliceTypedArray(this._alignedAxisArr, i, 18) as Float32Array;\n        this._pickingColorArr = spliceTypedArray(this._pickingColorArr, i, 18) as Float32Array;\n\n        i = bi * 12;\n        this._vertexArr = spliceTypedArray(this._vertexArr, i, 12) as Float32Array;\n        this._sizeArr = spliceTypedArray(this._sizeArr, i, 12) as Float32Array;\n        this._texCoordArr = spliceTypedArray(this._texCoordArr, i, 12) as Float32Array;\n\n        i = bi * 6;\n        this._rotationArr = spliceTypedArray(this._rotationArr, i, 6) as Float32Array;\n\n        this.reindexBillboardsArray(bi);\n        this.refresh();\n\n        billboard._handlerIndex = -1;\n        billboard._handler = null;\n        billboard._isReady = false;\n        billboard._lockId = LOCK_FREE;\n    }\n\n    public setAlignedAxisArr(index: number, alignedAxis: Vec3) {\n        //...\n    }\n\n    public remove(billboard: BaseBillboard) {\n        if (billboard._handler) {\n            if (billboard._isReady && this.__id === billboard._handler.__id) {\n                this._removeBillboard(billboard);\n            } else {\n                billboard._handler = null;\n            }\n        }\n    }\n\n    public setPositionArr(index: number, positionHigh: Vec3, positionLow: Vec3) {\n        let i = index * 18;\n\n        // High\n        let a = this._positionHighArr,\n            x = positionHigh.x,\n            y = positionHigh.y,\n            z = positionHigh.z;\n\n        a[i] = x;\n        a[i + 1] = y;\n        a[i + 2] = z;\n\n        a[i + 3] = x;\n        a[i + 4] = y;\n        a[i + 5] = z;\n\n        a[i + 6] = x;\n        a[i + 7] = y;\n        a[i + 8] = z;\n\n        a[i + 9] = x;\n        a[i + 10] = y;\n        a[i + 11] = z;\n\n        a[i + 12] = x;\n        a[i + 13] = y;\n        a[i + 14] = z;\n\n        a[i + 15] = x;\n        a[i + 16] = y;\n        a[i + 17] = z;\n\n        // Low\n        a = this._positionLowArr;\n        x = positionLow.x;\n        y = positionLow.y;\n        z = positionLow.z;\n\n        a[i] = x;\n        a[i + 1] = y;\n        a[i + 2] = z;\n\n        a[i + 3] = x;\n        a[i + 4] = y;\n        a[i + 5] = z;\n\n        a[i + 6] = x;\n        a[i + 7] = y;\n        a[i + 8] = z;\n\n        a[i + 9] = x;\n        a[i + 10] = y;\n        a[i + 11] = z;\n\n        a[i + 12] = x;\n        a[i + 13] = y;\n        a[i + 14] = z;\n\n        a[i + 15] = x;\n        a[i + 16] = y;\n        a[i + 17] = z;\n\n        this._changedBuffers[POSITION_BUFFER] = true;\n    }\n\n    public setPickingColorArr(index: number, color: Vec3) {\n        let i = index * 18;\n        let a = this._pickingColorArr,\n            x = color.x / 255,\n            y = color.y / 255,\n            z = color.z / 255;\n\n        a[i] = x;\n        a[i + 1] = y;\n        a[i + 2] = z;\n\n        a[i + 3] = x;\n        a[i + 4] = y;\n        a[i + 5] = z;\n\n        a[i + 6] = x;\n        a[i + 7] = y;\n        a[i + 8] = z;\n\n        a[i + 9] = x;\n        a[i + 10] = y;\n        a[i + 11] = z;\n\n        a[i + 12] = x;\n        a[i + 13] = y;\n        a[i + 14] = z;\n\n        a[i + 15] = x;\n        a[i + 16] = y;\n        a[i + 17] = z;\n\n        this._changedBuffers[PICKINGCOLOR_BUFFER] = true;\n    }\n\n    public setSizeArr(index: number, width: number, height: number) {\n        let i = index * 12;\n        let a = this._sizeArr,\n            x = width,\n            y = height;\n\n        a[i] = x;\n        a[i + 1] = y;\n\n        a[i + 2] = x;\n        a[i + 3] = y;\n\n        a[i + 4] = x;\n        a[i + 5] = y;\n\n        a[i + 6] = x;\n        a[i + 7] = y;\n\n        a[i + 8] = x;\n        a[i + 9] = y;\n\n        a[i + 10] = x;\n        a[i + 11] = y;\n\n        this._changedBuffers[SIZE_BUFFER] = true;\n    }\n\n    public setOffsetArr(index: number, offset: Vec3) {\n        let i = index * 18;\n        let a = this._offsetArr,\n            x = offset.x,\n            y = offset.y,\n            z = offset.z;\n\n        a[i] = x;\n        a[i + 1] = y;\n        a[i + 2] = z;\n\n        a[i + 3] = x;\n        a[i + 4] = y;\n        a[i + 5] = z;\n\n        a[i + 6] = x;\n        a[i + 7] = y;\n        a[i + 8] = z;\n\n        a[i + 9] = x;\n        a[i + 10] = y;\n        a[i + 11] = z;\n\n        a[i + 12] = x;\n        a[i + 13] = y;\n        a[i + 14] = z;\n\n        a[i + 15] = x;\n        a[i + 16] = y;\n        a[i + 17] = z;\n\n        this._changedBuffers[OFFSET_BUFFER] = true;\n    }\n\n    public setRgbaArr(index: number, rgba: Vec4) {\n        let i = index * 24;\n        let a = this._rgbaArr,\n            x = rgba.x,\n            y = rgba.y,\n            z = rgba.z,\n            w = rgba.w;\n\n        a[i] = x;\n        a[i + 1] = y;\n        a[i + 2] = z;\n        a[i + 3] = w;\n\n        a[i + 4] = x;\n        a[i + 5] = y;\n        a[i + 6] = z;\n        a[i + 7] = w;\n\n        a[i + 8] = x;\n        a[i + 9] = y;\n        a[i + 10] = z;\n        a[i + 11] = w;\n\n        a[i + 12] = x;\n        a[i + 13] = y;\n        a[i + 14] = z;\n        a[i + 15] = w;\n\n        a[i + 16] = x;\n        a[i + 17] = y;\n        a[i + 18] = z;\n        a[i + 19] = w;\n\n        a[i + 20] = x;\n        a[i + 21] = y;\n        a[i + 22] = z;\n        a[i + 23] = w;\n\n        this._changedBuffers[RGBA_BUFFER] = true;\n    }\n\n    public setRotationArr(index: number, rotation: number) {\n        let i = index * 6;\n        let a = this._rotationArr;\n\n        a[i] = rotation;\n        a[i + 1] = rotation;\n        a[i + 2] = rotation;\n        a[i + 3] = rotation;\n        a[i + 4] = rotation;\n        a[i + 5] = rotation;\n\n        this._changedBuffers[ROTATION_BUFFER] = true;\n    }\n\n    public setTexCoordArr(index: number, tcoordArr: number[] | TypedArray) {\n        let i = index * 12;\n        let a = this._texCoordArr;\n\n        a[i] = tcoordArr[0];\n        a[i + 1] = tcoordArr[1];\n\n        a[i + 2] = tcoordArr[2];\n        a[i + 3] = tcoordArr[3];\n\n        a[i + 4] = tcoordArr[4];\n        a[i + 5] = tcoordArr[5];\n\n        a[i + 6] = tcoordArr[6];\n        a[i + 7] = tcoordArr[7];\n\n        a[i + 8] = tcoordArr[8];\n        a[i + 9] = tcoordArr[9];\n\n        a[i + 10] = tcoordArr[10];\n        a[i + 11] = tcoordArr[11];\n\n        this._changedBuffers[TEXCOORD_BUFFER] = true;\n    }\n\n    public setVisibility(index: number, visibility: boolean) {\n        let vArr: number[];\n        if (visibility) {\n            vArr = [-0.5, 0.5, -0.5, -0.5, 0.5, -0.5, 0.5, -0.5, 0.5, 0.5, -0.5, 0.5];\n        } else {\n            vArr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        }\n        this.setVertexArr(index, vArr);\n    }\n\n    public setVertexArr(index: number, vertexArr: number[] | Float32Array) {\n        let i = index * 12;\n        let a = this._vertexArr;\n\n        a[i] = vertexArr[0];\n        a[i + 1] = vertexArr[1];\n        a[i + 2] = vertexArr[2];\n\n        a[i + 3] = vertexArr[3];\n        a[i + 4] = vertexArr[4];\n        a[i + 5] = vertexArr[5];\n\n        a[i + 6] = vertexArr[6];\n        a[i + 7] = vertexArr[7];\n        a[i + 8] = vertexArr[8];\n\n        a[i + 9] = vertexArr[9];\n        a[i + 10] = vertexArr[10];\n        a[i + 11] = vertexArr[11];\n\n        this._changedBuffers[VERTEX_BUFFER] = true;\n    }\n\n    public createPositionBuffer() {\n        let h = this._renderer!.handler,\n            numItems = this._positionHighArr.length / 3;\n\n        if (!this._positionHighBuffer || this._positionHighBuffer.numItems !== numItems) {\n            h.gl!.deleteBuffer(this._positionHighBuffer as WebGLBuffer);\n            h.gl!.deleteBuffer(this._positionLowBuffer as WebGLBuffer);\n            this._positionHighBuffer = h.createStreamArrayBuffer(3, numItems);\n            this._positionLowBuffer = h.createStreamArrayBuffer(3, numItems);\n        }\n\n        h.setStreamArrayBuffer(this._positionHighBuffer!, this._positionHighArr);\n        h.setStreamArrayBuffer(this._positionLowBuffer!, this._positionLowArr);\n    }\n\n    public createSizeBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._sizeBuffer as WebGLBuffer);\n        this._sizeBuffer = h.createArrayBuffer(this._sizeArr, 2, this._sizeArr.length / 2);\n    }\n\n    public createOffsetBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._offsetBuffer as WebGLBuffer);\n        this._offsetBuffer = h.createArrayBuffer(this._offsetArr, 3, this._offsetArr.length / 3);\n    }\n\n    createRgbaBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._rgbaBuffer as WebGLBuffer);\n        this._rgbaBuffer = h.createArrayBuffer(this._rgbaArr, 4, this._rgbaArr.length / 4);\n    }\n\n    public createRotationBuffer() {\n        let h = this._renderer!.handler;\n\n        if (!this._rotationBuffer || this._rotationBuffer.numItems !== this._rotationArr.length) {\n            h.gl!.deleteBuffer(this._rotationBuffer as WebGLBuffer);\n            this._rotationBuffer = h.createStreamArrayBuffer(1, this._rotationArr.length);\n        }\n\n        h.setStreamArrayBuffer(this._rotationBuffer, this._rotationArr);\n    }\n\n    public createVertexBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._vertexBuffer as WebGLBuffer);\n        this._vertexBuffer = h.createArrayBuffer(this._vertexArr, 2, this._vertexArr.length / 2);\n    }\n\n    public createTexCoordBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._texCoordBuffer as WebGLBuffer);\n        this._texCoordBuffer = h.createArrayBuffer(this._texCoordArr, 2, this._texCoordArr.length / 2);\n    }\n\n    //createAlignedAxisBuffer() {\n    //    var h = this._renderer.handler;\n    //    h.gl.deleteBuffer(this._alignedAxisBuffer);\n    //    this._alignedAxisBuffer = h.createArrayBuffer(\n    //        this._alignedAxisArr,\n    //        3,\n    //        this._alignedAxisArr.length / 3\n    //    );\n    //}\n\n    public createPickingColorBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._pickingColorBuffer as WebGLBuffer);\n        this._pickingColorBuffer = h.createArrayBuffer(this._pickingColorArr, 3, this._pickingColorArr.length / 3);\n    }\n\n    public refreshTexCoordsArr() {\n    }\n}\n\nexport {BaseBillboardHandler};","import {BaseBillboardHandler} from \"./BaseBillboardHandler\";\nimport {Billboard} from \"./Billboard\";\nimport {concatTypedArrays} from \"../utils/shared\";\nimport {EntityCollection} from \"./EntityCollection\";\n\n/**\n * @class BillboardHandler\n */\nclass BillboardHandler extends BaseBillboardHandler {\n\n    protected override _billboards: Billboard[];\n\n    constructor(props: EntityCollection) {\n        super(props);\n\n        this._billboards = [];\n    }\n\n    public override add(billboard: Billboard) {\n        if (billboard._handlerIndex == -1) {\n            super.add(billboard);\n\n            this._addBillboardToArrays(billboard);\n            this.refresh();\n            let src = billboard.getSrc() || (billboard.getImage() && billboard.getImage()!.src);\n            if (src) {\n                billboard.setSrc(src);\n            }\n        }\n    }\n\n    protected _addBillboardToArrays(billboard: Billboard) {\n        if (billboard.getVisibility()) {\n            this._vertexArr = concatTypedArrays(\n                this._vertexArr,\n                [-0.5, 0.5, -0.5, -0.5, 0.5, -0.5, 0.5, -0.5, 0.5, 0.5, -0.5, 0.5]\n            ) as Float32Array;\n        } else {\n            this._vertexArr = concatTypedArrays(\n                this._vertexArr,\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n            ) as Float32Array;\n        }\n\n        this._texCoordArr = concatTypedArrays(\n            this._texCoordArr,\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        ) as Float32Array;\n\n        let x = billboard._positionHigh.x,\n            y = billboard._positionHigh.y,\n            z = billboard._positionHigh.z,\n            w;\n        this._positionHighArr = concatTypedArrays(this._positionHighArr, [\n            x, y, z,\n            x, y, z,\n            x, y, z,\n            x, y, z,\n            x, y, z,\n            x, y, z\n        ]) as Float32Array;\n\n        x = billboard._positionLow.x;\n        y = billboard._positionLow.y;\n        z = billboard._positionLow.z;\n        this._positionLowArr = concatTypedArrays(this._positionLowArr, [\n            x, y, z,\n            x, y, z,\n            x, y, z,\n            x, y, z,\n            x, y, z,\n            x, y, z\n        ]) as Float32Array;\n\n        x = billboard._width;\n        y = billboard._height;\n        this._sizeArr = concatTypedArrays(this._sizeArr, [x, y, x, y, x, y, x, y, x, y, x, y]) as Float32Array;\n\n        x = billboard._offset.x;\n        y = billboard._offset.y;\n        z = billboard._offset.z;\n        this._offsetArr = concatTypedArrays(this._offsetArr, [\n            x, y, z,\n            x, y, z,\n            x, y, z,\n            x, y, z,\n            x, y, z,\n            x, y, z\n        ]) as Float32Array;\n\n        x = billboard._color.x;\n        y = billboard._color.y;\n        z = billboard._color.z;\n        w = billboard._color.w;\n        this._rgbaArr = concatTypedArrays(this._rgbaArr, [\n            x, y, z, w,\n            x, y, z, w,\n            x, y, z, w,\n            x, y, z, w,\n            x, y, z, w,\n            x, y, z, w\n        ]) as Float32Array;\n\n        x = billboard._rotation;\n        this._rotationArr = concatTypedArrays(this._rotationArr, [x, x, x, x, x, x]) as Float32Array;\n\n        x = billboard._entity!._pickingColor.x / 255;\n        y = billboard._entity!._pickingColor.y / 255;\n        z = billboard._entity!._pickingColor.z / 255;\n        this._pickingColorArr = concatTypedArrays(this._pickingColorArr, [x, y, z, x, y, z, x, y, z, x, y, z, x, y, z, x, y, z]) as Float32Array;\n    }\n\n    public get billboards(): Billboard[] {\n        return this._billboards\n    }\n\n    public override refreshTexCoordsArr() {\n        let bc = this._entityCollection;\n        if (bc && this._renderer) {\n            let ta = this._renderer.billboardsTextureAtlas;\n            for (let i = 0; i < this._billboards.length; i++) {\n                let bi = this._billboards[i];\n                let img = bi.getImage();\n                if (img) {\n                    let imageNode = ta.get(img.__nodeIndex!);\n                    if (imageNode) {\n                        this.setTexCoordArr(bi._handlerIndex, imageNode.texCoords);\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport {BillboardHandler};\n","import * as shaders from \"../shaders/geoObject\";\nimport {concatArrays, loadImage, makeArrayTyped, spliceArray, TypedArray} from \"../utils/shared\";\nimport {EntityCollection} from \"./EntityCollection\";\nimport {GeoObject} from \"./GeoObject\";\nimport {Planet} from \"../scene/Planet\";\nimport {Vec3} from \"../math/Vec3\";\nimport {Vec4} from \"../math/Vec4\";\nimport {WebGLBufferExt, WebGLTextureExt} from \"../webgl/Handler\";\n\nconst VERTEX_BUFFER = 0;\nconst POSITION_BUFFER = 1;\nconst RGBA_BUFFER = 2;\nconst NORMALS_BUFFER = 3;\nconst INDEX_BUFFER = 4;\nconst DIRECTION_BUFFER = 5;\nconst PITCH_ROLL_BUFFER = 6;\nconst SIZE_BUFFER = 7;\nconst PICKINGCOLOR_BUFFER = 8;\nconst VISIBLE_BUFFER = 9;\nconst TEXCOORD_BUFFER = 10;\n\nfunction setParametersToArray(arr: number[] | TypedArray, index: number = 0, length: number = 0, itemSize: number = 1, ...params: number[]): number[] | TypedArray {\n    const currIndex = index * length;\n    for (let i = currIndex, len = currIndex + length; i < len; i++) {\n        arr[i] = params[i % itemSize];\n    }\n    return arr;\n}\n\n// function setParametersToArrayArr(arr: number[] | TypedArray, index: number = 0, length: number = 0, itemSize: number = 1, paramsArr: number[]): number[] | TypedArray {\n//     const currIndex = index * length;\n//     for (let i = currIndex, len = currIndex + length; i < len; i++) {\n//         arr[i] = paramsArr[i % itemSize];\n//     }\n//     return arr;\n// }\n\nclass InstanceData {\n\n    public isFree: boolean;\n\n    public _geoObjectHandler: GeoObjectHandler;\n\n    public geoObjects: GeoObject[];\n\n    public numInstances: number;\n\n    public _texture: WebGLTextureExt | null;\n    public _textureSrc: string | null;\n\n    public _pitchRollArr: number[] | TypedArray;\n    public _sizeArr: number[] | TypedArray;\n    public _vertexArr: number[] | TypedArray;\n    public _positionHighArr: number[] | TypedArray;\n    public _positionLowArr: number[] | TypedArray;\n    public _directionArr: number[] | TypedArray;\n    public _rgbaArr: number[] | TypedArray;\n    public _normalsArr: number[] | TypedArray;\n    public _indicesArr: number[] | TypedArray;\n    public _pickingColorArr: number[] | TypedArray;\n    public _visibleArr: number[] | TypedArray;\n    public _texCoordArr: number[] | TypedArray;\n\n    public _pitchRollBuffer: WebGLBufferExt | null;\n    public _sizeBuffer: WebGLBufferExt | null;\n    public _vertexBuffer: WebGLBufferExt | null;\n    public _positionHighBuffer: WebGLBufferExt | null;\n    public _positionLowBuffer: WebGLBufferExt | null;\n    public _directionBuffer: WebGLBufferExt | null;\n    public _rgbaBuffer: WebGLBufferExt | null;\n    public _normalsBuffer: WebGLBufferExt | null;\n    public _indicesBuffer: WebGLBufferExt | null;\n    public _pickingColorBuffer: WebGLBufferExt | null;\n    public _visibleBuffer: WebGLBufferExt | null;\n    public _texCoordBuffer: WebGLBufferExt | null;\n\n    public _buffersUpdateCallbacks: Function[];\n\n    public _changedBuffers: boolean[];\n\n    constructor(geoObjectHandler: GeoObjectHandler) {\n\n        this.isFree = true;\n\n        this._geoObjectHandler = geoObjectHandler;\n\n        this.geoObjects = [];\n\n        this.numInstances = 0;\n\n        this._texture = null;\n        this._textureSrc = null;\n\n        this._pitchRollArr = [];\n        this._sizeArr = [];\n        this._vertexArr = [];\n        this._positionHighArr = [];\n        this._positionLowArr = [];\n        this._directionArr = [];\n        this._rgbaArr = [];\n        this._normalsArr = [];\n        this._indicesArr = [];\n        this._pickingColorArr = [];\n        this._visibleArr = [];\n        this._texCoordArr = [];\n\n        this._pitchRollBuffer = null;\n        this._sizeBuffer = null;\n        this._vertexBuffer = null;\n        this._positionHighBuffer = null;\n        this._positionLowBuffer = null;\n        this._directionBuffer = null;\n        this._rgbaBuffer = null;\n        this._normalsBuffer = null;\n        this._indicesBuffer = null;\n        this._pickingColorBuffer = null;\n        this._visibleBuffer = null;\n        this._texCoordBuffer = null;\n\n        this._buffersUpdateCallbacks = [];\n        this._buffersUpdateCallbacks[PICKINGCOLOR_BUFFER] = this.createPickingColorBuffer;\n        this._buffersUpdateCallbacks[POSITION_BUFFER] = this.createPositionBuffer;\n        this._buffersUpdateCallbacks[DIRECTION_BUFFER] = this.createDirectionBuffer;\n        this._buffersUpdateCallbacks[NORMALS_BUFFER] = this.createNormalsBuffer;\n        this._buffersUpdateCallbacks[RGBA_BUFFER] = this.createRgbaBuffer;\n        this._buffersUpdateCallbacks[INDEX_BUFFER] = this.createIndicesBuffer;\n        this._buffersUpdateCallbacks[VERTEX_BUFFER] = this.createVertexBuffer;\n        this._buffersUpdateCallbacks[SIZE_BUFFER] = this.createSizeBuffer;\n        this._buffersUpdateCallbacks[PITCH_ROLL_BUFFER] = this.createPitchRollBuffer;\n        this._buffersUpdateCallbacks[VISIBLE_BUFFER] = this.createVisibleBuffer;\n        this._buffersUpdateCallbacks[TEXCOORD_BUFFER] = this.createTexCoordBuffer;\n\n        this._changedBuffers = new Array(this._buffersUpdateCallbacks.length);\n    }\n\n    public createTexture(image: HTMLCanvasElement | ImageBitmap | ImageData | HTMLImageElement) {\n        if (this._geoObjectHandler && this._geoObjectHandler._planet) {\n            this._texture = this._geoObjectHandler._planet.renderer!.handler.createTextureDefault(image);\n        }\n    }\n\n    public clear() {\n\n        this.numInstances = 0;\n\n        this.geoObjects = [];\n\n        this._pitchRollArr = [];\n        this._sizeArr = [];\n        this._vertexArr = [];\n        this._positionHighArr = [];\n        this._positionLowArr = [];\n        this._directionArr = [];\n        this._rgbaArr = [];\n        this._normalsArr = [];\n        this._indicesArr = [];\n        this._pickingColorArr = [];\n        this._visibleArr = [];\n        this._texCoordArr = [];\n\n        this._deleteBuffers();\n\n        this.isFree = false;\n\n        //this._geoObjectHandler = null;\n    }\n\n    public _deleteBuffers() {\n\n        if (this._geoObjectHandler && this._geoObjectHandler._planet && this._geoObjectHandler._planet.renderer) {\n\n            let h = this._geoObjectHandler._planet.renderer.handler,\n                gl = h.gl!;\n\n            h.deleteTexture(this._texture);\n            this._texture = null;\n\n            gl.deleteBuffer(this._pitchRollBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._sizeBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._vertexBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._positionHighBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._positionLowBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._directionBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._rgbaBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._normalsBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._indicesBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._pickingColorBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._visibleBuffer as WebGLBuffer);\n            gl.deleteBuffer(this._texCoordBuffer as WebGLBuffer);\n        }\n\n        this._pitchRollBuffer = null;\n        this._sizeBuffer = null;\n        this._vertexBuffer = null;\n        this._positionHighBuffer = null;\n        this._positionLowBuffer = null;\n        this._directionBuffer = null;\n        this._rgbaBuffer = null;\n        this._normalsBuffer = null;\n        this._indicesBuffer = null;\n        this._pickingColorBuffer = null;\n        this._visibleBuffer = null;\n        this._texCoordBuffer = null;\n    }\n\n    public createVertexBuffer() {\n        const h = this._geoObjectHandler._planet!.renderer!.handler;\n        h.gl!.deleteBuffer(this._vertexBuffer!);\n        this._vertexArr = makeArrayTyped(this._vertexArr);\n        this._vertexBuffer = h.createArrayBuffer(this._vertexArr as Float32Array, 3, this._vertexArr.length / 3);\n    }\n\n    public createPitchRollBuffer() {\n\n        let h = this._geoObjectHandler._planet!.renderer!.handler,\n            numItems = this._pitchRollArr.length / 2;\n\n        if (!this._pitchRollBuffer || this._pitchRollBuffer.numItems !== numItems) {\n            h.gl!.deleteBuffer(this._pitchRollBuffer!);\n            this._pitchRollBuffer = h.createStreamArrayBuffer(2, numItems);\n        }\n\n        this._pitchRollArr = makeArrayTyped(this._pitchRollArr);\n\n        h.setStreamArrayBuffer(this._pitchRollBuffer, this._pitchRollArr as Float32Array);\n    }\n\n    public createVisibleBuffer() {\n\n        const h = this._geoObjectHandler._planet!.renderer!.handler,\n            numItems = this._visibleArr.length;\n\n        if (!this._visibleBuffer || this._visibleBuffer.numItems !== numItems) {\n            h.gl!.deleteBuffer(this._visibleBuffer!);\n            this._visibleBuffer = h.createStreamArrayBuffer(1, numItems);\n        }\n\n        this._visibleArr = makeArrayTyped(this._visibleArr);\n\n        h.setStreamArrayBuffer(this._visibleBuffer, this._visibleArr as Uint8Array);\n    }\n\n    public createSizeBuffer() {\n        let h = this._geoObjectHandler._planet!.renderer!.handler,\n            numItems = this._sizeArr.length;\n\n        if (!this._sizeBuffer || this._sizeBuffer.numItems !== numItems) {\n            h.gl!.deleteBuffer(this._sizeBuffer as WebGLBuffer);\n            this._sizeBuffer = h.createStreamArrayBuffer(1, numItems);\n        }\n\n        this._sizeArr = makeArrayTyped(this._sizeArr);\n\n        h.setStreamArrayBuffer(this._sizeBuffer, this._sizeArr as Float32Array);\n    }\n\n    public createTexCoordBuffer() {\n        const h = this._geoObjectHandler._planet!.renderer!.handler;\n        h.gl!.deleteBuffer(this._texCoordBuffer as WebGLBuffer);\n        this._texCoordArr = makeArrayTyped(this._texCoordArr);\n        this._texCoordBuffer = h.createArrayBuffer(this._texCoordArr as Uint8Array, 2, this._texCoordArr.length / 2);\n    }\n\n    public createPositionBuffer() {\n        let h = this._geoObjectHandler._planet!.renderer!.handler,\n            numItems = this._positionHighArr.length / 3;\n\n        if (!this._positionHighBuffer || this._positionHighBuffer.numItems !== numItems) {\n            h.gl!.deleteBuffer(this._positionHighBuffer as WebGLBuffer);\n            h.gl!.deleteBuffer(this._positionLowBuffer as WebGLBuffer);\n            this._positionHighBuffer = h.createStreamArrayBuffer(3, numItems);\n            this._positionLowBuffer = h.createStreamArrayBuffer(3, numItems);\n        }\n\n        this._positionHighArr = makeArrayTyped(this._positionHighArr);\n        this._positionLowArr = makeArrayTyped(this._positionLowArr);\n\n        h.setStreamArrayBuffer(this._positionHighBuffer!, this._positionHighArr as Float32Array);\n        h.setStreamArrayBuffer(this._positionLowBuffer!, this._positionLowArr as Float32Array);\n    }\n\n    public createRgbaBuffer() {\n        let h = this._geoObjectHandler._planet!.renderer!.handler,\n            numItems = this._rgbaArr.length / 4;\n\n        if (!this._rgbaBuffer || this._rgbaBuffer.numItems !== numItems) {\n            h.gl!.deleteBuffer(this._rgbaBuffer as WebGLBuffer);\n            this._rgbaBuffer = h.createStreamArrayBuffer(4, numItems);\n        }\n\n        this._rgbaArr = makeArrayTyped(this._rgbaArr);\n\n        h.setStreamArrayBuffer(this._rgbaBuffer, this._rgbaArr as Uint8Array);\n    }\n\n    public createDirectionBuffer() {\n        let h = this._geoObjectHandler._planet!.renderer!.handler,\n            numItems = this._directionArr.length / 3;\n\n        if (!this._directionBuffer || this._directionBuffer.numItems !== numItems) {\n            h.gl!.deleteBuffer(this._directionBuffer as WebGLBuffer);\n            this._directionBuffer = h.createStreamArrayBuffer(3, numItems);\n        }\n\n        this._directionArr = makeArrayTyped(this._directionArr);\n\n        h.setStreamArrayBuffer(this._directionBuffer, this._directionArr as Float32Array);\n    }\n\n    public createNormalsBuffer() {\n        const h = this._geoObjectHandler._planet!.renderer!.handler;\n        h.gl!.deleteBuffer(this._normalsBuffer as WebGLBuffer);\n        this._normalsArr = makeArrayTyped(this._normalsArr);\n        this._normalsBuffer = h.createArrayBuffer(this._normalsArr as Uint8Array, 3, this._normalsArr.length / 3);\n    }\n\n    public createIndicesBuffer() {\n        const h = this._geoObjectHandler._planet!.renderer!.handler;\n        h.gl!.deleteBuffer(this._indicesBuffer as WebGLBuffer);\n        this._indicesArr = makeArrayTyped(this._indicesArr, Uint32Array);\n        this._indicesBuffer = h.createElementArrayBuffer(this._indicesArr as Uint32Array, 1, this._indicesArr.length);\n    }\n\n    public createPickingColorBuffer() {\n        const h = this._geoObjectHandler._planet!.renderer!.handler;\n        h.gl!.deleteBuffer(this._pickingColorBuffer as WebGLBuffer);\n        this._pickingColorArr = makeArrayTyped(this._pickingColorArr);\n        this._pickingColorBuffer = h.createArrayBuffer(this._pickingColorArr as Uint8Array, 3, this._pickingColorArr.length / 3);\n    }\n\n    public refresh() {\n        let i = this._changedBuffers.length;\n        while (i--) {\n            this._changedBuffers[i] = true;\n        }\n    }\n\n    public update() {\n        if (this._geoObjectHandler._planet) {\n            let i = this._changedBuffers.length;\n            while (i--) {\n                if (this._changedBuffers[i]) {\n                    this._buffersUpdateCallbacks[i].call(this);\n                    this._changedBuffers[i] = false;\n                }\n            }\n            this.isFree = true;\n        }\n    }\n}\n\nclass GeoObjectHandler {\n    static __counter__ = 0;\n\n    protected __id: number;\n\n    /**\n     * Picking rendering option.\n     * @public\n     * @type {boolean}\n     */\n    public pickingEnabled: boolean;\n\n    protected _entityCollection: EntityCollection;\n\n    public _planet: Planet | null;\n\n    protected _geoObjects: GeoObject[];\n\n    protected _instanceDataMap: Map<string, InstanceData>;\n    protected _instanceDataMapValues: InstanceData[];\n    protected _dataTagUpdateQueue: InstanceData[];\n\n    constructor(entityCollection: EntityCollection) {\n\n        this.__id = GeoObjectHandler.__counter__++;\n\n        this.pickingEnabled = true;\n\n        this._entityCollection = entityCollection;\n\n        this._planet = null;\n\n        this._geoObjects = [];\n\n        this._instanceDataMap = new Map<string, InstanceData>();\n        this._instanceDataMapValues = [];\n\n        this._dataTagUpdateQueue = [];\n    }\n\n    public initProgram() {\n        if (this._planet && this._planet.renderer) {\n            if (!this._planet.renderer.handler.programs.geo_object) {\n                this._planet.renderer.handler.addProgram(shaders.geo_object());\n            }\n            if (!this._planet.renderer.handler.programs.geo_object_picking) {\n                this._planet.renderer.handler.addProgram(shaders.geo_object_picking());\n            }\n        }\n    }\n\n    public setRenderNode(renderNode: Planet) {\n\n        this._planet = renderNode;\n\n        this.initProgram();\n\n        //\n        // in case of lazy initialization loading data here\n        for (let i = 0; i < this._instanceDataMapValues.length; i++) {\n            this._loadDataTagTexture(this._instanceDataMapValues[i]);\n        }\n\n        for (let i = 0; i < this._geoObjects.length; i++) {\n            this._geoObjects[i].updateDirection();\n        }\n\n        this.update();\n    }\n\n    protected _addGeoObjectToArray(geoObject: GeoObject) {\n        const tag = geoObject.tag;\n\n        let tagData = this._instanceDataMap.get(tag);\n\n        if (!tagData) {\n            tagData = new InstanceData(this);\n            this._instanceDataMap.set(tag, tagData);\n            this._instanceDataMapValues = Array.from(this._instanceDataMap.values());\n\n            //\n            // Setting instanced data\n            tagData._vertexArr = geoObject.vertices\n            tagData._normalsArr = geoObject.normals;\n            tagData._indicesArr = geoObject.indices;\n            tagData._texCoordArr = geoObject.texCoords;\n            tagData._textureSrc = geoObject.object3d.src;\n\n            this._loadDataTagTexture(tagData);\n        }\n\n        geoObject._tagDataIndex = tagData.numInstances++;\n        geoObject._tagData = tagData;\n        tagData.geoObjects.push(geoObject);\n\n        let itemSize = 3;\n\n        tagData._visibleArr = concatArrays(tagData._visibleArr, setParametersToArray([], 0, 1, 1, geoObject.getVisibility() ? 1 : 0));\n\n        let x = geoObject._positionHigh.x,\n            y = geoObject._positionHigh.y,\n            z = geoObject._positionHigh.z,\n            w;\n\n        tagData._positionHighArr = concatArrays(tagData._positionHighArr, setParametersToArray([], 0, itemSize, itemSize, x, y, z));\n\n        x = geoObject._positionLow.x;\n        y = geoObject._positionLow.y;\n        z = geoObject._positionLow.z;\n        tagData._positionLowArr = concatArrays(tagData._positionLowArr, setParametersToArray([], 0, itemSize, itemSize, x, y, z));\n\n        x = geoObject._entity!._pickingColor.x / 255;\n        y = geoObject._entity!._pickingColor.y / 255;\n        z = geoObject._entity!._pickingColor.z / 255;\n        tagData._pickingColorArr = concatArrays(tagData._pickingColorArr, setParametersToArray([], 0, itemSize, itemSize, x, y, z));\n\n        x = geoObject._direction.x;\n        y = geoObject._direction.y;\n        z = geoObject._direction.z;\n        tagData._directionArr = concatArrays(tagData._directionArr, setParametersToArray([], 0, itemSize, itemSize, x, y, z));\n\n        itemSize = 4;\n\n        x = geoObject._color.x;\n        y = geoObject._color.y;\n        z = geoObject._color.z;\n        w = geoObject._color.w;\n        tagData._rgbaArr = concatArrays(tagData._rgbaArr, setParametersToArray([], 0, itemSize, itemSize, x, y, z, w));\n\n        itemSize = 2;\n\n        x = geoObject.getPitch();\n        y = geoObject.getRoll();\n        tagData._pitchRollArr = concatArrays(tagData._pitchRollArr, setParametersToArray([], 0, itemSize, itemSize, x, y));\n\n        itemSize = 1;\n\n        tagData._sizeArr = concatArrays(tagData._sizeArr, setParametersToArray([], 0, itemSize, itemSize, geoObject.getScale()));\n    }\n\n    public _displayPASS() {\n        let r = this._planet!.renderer!,\n            sh = r.handler.programs.geo_object,\n            p = sh._program,\n            u = p.uniforms,\n            a = p.attributes,\n            gl = r.handler.gl!,\n            ec = this._entityCollection;\n\n        sh.activate();\n\n        //\n        // Could be in VAO\n        //\n        gl.uniform3fv(u.uScaleByDistance, ec.scaleByDistance);\n\n        gl.uniform3fv(u.eyePositionHigh, r.activeCamera!.eyeHigh);\n        gl.uniform3fv(u.eyePositionLow, r.activeCamera!.eyeLow);\n\n        gl.uniformMatrix4fv(u.projectionMatrix, false, r.activeCamera!.getProjectionMatrix());\n        gl.uniformMatrix4fv(u.viewMatrix, false, r.activeCamera!.getViewMatrix());\n\n        gl.uniform3fv(u.lightsPositions, this._planet!._lightsPositions);\n        gl.uniform3fv(u.lightsParamsv, this._planet!._lightsParamsv);\n        gl.uniform1fv(u.lightsParamsf, this._planet!._lightsParamsf);\n\n        for (let i = 0; i < this._instanceDataMapValues.length; i++) {\n            let tagData = this._instanceDataMapValues[i];\n\n            //\n            //  Instance individual data\n            //\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._directionBuffer!);\n            gl.vertexAttribPointer(a.aDirection, tagData._directionBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._sizeBuffer!);\n            gl.vertexAttribPointer(a.aScale, tagData._sizeBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._pitchRollBuffer!);\n            gl.vertexAttribPointer(a.aPitchRoll, tagData._pitchRollBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._rgbaBuffer!);\n            gl.vertexAttribPointer(a.aColor, tagData._rgbaBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._visibleBuffer!);\n            gl.vertexAttribPointer(a.aDispose, tagData._visibleBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.uniform1f(u.uUseTexture, tagData._texture ? 1 : 0);\n\n            //\n            // Instance common data(could be in VAO)\n            //\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._positionHighBuffer!);\n            gl.vertexAttribPointer(a.aPositionHigh, tagData._positionHighBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._positionLowBuffer!);\n            gl.vertexAttribPointer(a.aPositionLow, tagData._positionLowBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._normalsBuffer!);\n            gl.vertexAttribPointer(a.aVertexNormal, tagData._normalsBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._vertexBuffer!);\n            gl.vertexAttribPointer(a.aVertexPosition, tagData._vertexBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, (tagData._texture || r.handler.defaultTexture)!);\n            gl.uniform1i(u.uTexture, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._texCoordBuffer!);\n            gl.vertexAttribPointer(a.aTexCoord, tagData._texCoordBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, tagData._indicesBuffer!);\n            p.drawElementsInstanced!(gl.TRIANGLES, tagData._indicesBuffer!.numItems, gl.UNSIGNED_INT, 0, tagData.numInstances);\n        }\n    }\n\n    public drawPicking() {\n        if (this._geoObjects.length && this.pickingEnabled) {\n            this.update();\n            this._pickingPASS();\n        }\n    }\n\n    protected _pickingPASS() {\n        let r = this._planet!.renderer!,\n            sh = r.handler.programs.geo_object_picking,\n            p = sh._program,\n            u = p.uniforms,\n            a = p.attributes,\n            gl = r.handler.gl!,\n            ec = this._entityCollection;\n\n        sh.activate();\n\n        gl.uniform3fv(u.uScaleByDistance, ec.scaleByDistance);\n\n        gl.uniform1f(u.pickingScale, ec.pickingScale);\n\n        gl.uniform3fv(u.eyePositionHigh, r.activeCamera!.eyeHigh);\n        gl.uniform3fv(u.eyePositionLow, r.activeCamera!.eyeLow);\n\n        gl.uniformMatrix4fv(u.projectionMatrix, false, r.activeCamera!.getProjectionMatrix());\n        gl.uniformMatrix4fv(u.viewMatrix, false, r.activeCamera!.getViewMatrix());\n\n        for (let i = 0; i < this._instanceDataMapValues.length; i++) {\n            let tagData = this._instanceDataMapValues[i];\n\n            //\n            // Instance individual data\n            //\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._directionBuffer!);\n            gl.vertexAttribPointer(a.aDirection, tagData._directionBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._sizeBuffer!);\n            gl.vertexAttribPointer(a.aScale, tagData._sizeBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._pitchRollBuffer!);\n            gl.vertexAttribPointer(a.aPitchRoll, tagData._pitchRollBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._pickingColorBuffer!);\n            gl.vertexAttribPointer(a.aPickingColor, tagData._pickingColorBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._positionHighBuffer!);\n            gl.vertexAttribPointer(a.aPositionHigh, tagData._positionHighBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._positionLowBuffer!);\n            gl.vertexAttribPointer(a.aPositionLow, tagData._positionLowBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._visibleBuffer!);\n            gl.vertexAttribPointer(a.aDispose, tagData._visibleBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            //\n            // Instance common data(could be in VAO)\n            //\n            gl.bindBuffer(gl.ARRAY_BUFFER, tagData._vertexBuffer!);\n            gl.vertexAttribPointer(a.aVertexPosition, tagData._vertexBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, tagData._indicesBuffer!);\n            p.drawElementsInstanced!(gl.TRIANGLES, tagData._indicesBuffer!.numItems, gl.UNSIGNED_INT, 0, tagData.numInstances);\n        }\n    }\n\n    async _loadDataTagTexture(tagData: InstanceData) {\n        if (this._planet && tagData._textureSrc) {\n            const image = await loadImage(tagData._textureSrc);\n            tagData.createTexture(image);\n        }\n    }\n\n    public setDirectionArr(tagData: InstanceData, tagDataIndex: number, direction: Vec3) {\n        setParametersToArray(tagData._directionArr, tagDataIndex, 3, 3, direction.x, direction.y, direction.z);\n        tagData._changedBuffers[DIRECTION_BUFFER] = true;\n        this._updateTag(tagData);\n    }\n\n    public setVisibility(tagData: InstanceData, tagDataIndex: number, visibility: boolean) {\n        setParametersToArray(tagData._visibleArr, tagDataIndex, 1, 1, visibility ? 1 : 0);\n        tagData._changedBuffers[VISIBLE_BUFFER] = true;\n        this._updateTag(tagData);\n    }\n\n    public setPositionArr(tagData: InstanceData, tagDataIndex: number, positionHigh: Vec3, positionLow: Vec3) {\n        setParametersToArray(tagData._positionHighArr, tagDataIndex, 3, 3, positionHigh.x, positionHigh.y, positionHigh.z);\n        setParametersToArray(tagData._positionLowArr, tagDataIndex, 3, 3, positionLow.x, positionLow.y, positionLow.z);\n        tagData._changedBuffers[POSITION_BUFFER] = true;\n        this._updateTag(tagData);\n    }\n\n    public setRgbaArr(tagData: InstanceData, tagDataIndex: number, rgba: Vec4) {\n        setParametersToArray(tagData._rgbaArr, tagDataIndex, 4, 4, rgba.x, rgba.y, rgba.z, rgba.w);\n        tagData._changedBuffers[RGBA_BUFFER] = true;\n        this._updateTag(tagData);\n    }\n\n    public setPickingColorArr(tagData: InstanceData, tagDataIndex: number, color: Vec3) {\n        setParametersToArray(tagData._pickingColorArr, tagDataIndex, 3, 3, color.x / 255, color.y / 255, color.z / 255);\n        tagData._changedBuffers[PICKINGCOLOR_BUFFER] = true;\n        this._updateTag(tagData);\n    }\n\n    // setTexCoordArr(tagData, tagDataIndex, tcoordArr) {\n    //     setParametersToArray(tagData._texCoordArr, tagDataIndex, 2, 2, ...tcoordArr);\n    //     tagData._changedBuffers[TEXCOORD_BUFFER] = true;\n    //     this._updateTag(tagData);\n    // }\n\n    public setPitchRollArr(tagData: InstanceData, tagDataIndex: number, pitch: number, roll: number) {\n        setParametersToArray(tagData._pitchRollArr, tagDataIndex, 2, 2, pitch, roll);\n        tagData._changedBuffers[PITCH_ROLL_BUFFER] = true;\n        this._updateTag(tagData);\n    }\n\n    public setScaleArr(tagData: InstanceData, tagDataIndex: number, scale: number) {\n        setParametersToArray(tagData._sizeArr, tagDataIndex, 1, 1, scale);\n        tagData._changedBuffers[SIZE_BUFFER] = true;\n        this._updateTag(tagData);\n    }\n\n    protected _updateTag(dataTag: InstanceData) {\n        if (dataTag.isFree) {\n            dataTag.isFree = false;\n            this._dataTagUpdateQueue.push(dataTag);\n        }\n    }\n\n    public update() {\n        for (let i = 0, len = this._dataTagUpdateQueue.length; i < len; i++) {\n            this._dataTagUpdateQueue[i].update();\n        }\n        this._dataTagUpdateQueue = [];\n    }\n\n    public _removeAll() {\n        let i = this._geoObjects.length;\n        while (i--) {\n            const gi = this._geoObjects[i];\n\n            gi._tagDataIndex = -1;\n            gi._tagData = null;\n\n            gi._handlerIndex = -1;\n            gi._handler = null;\n        }\n        this._geoObjects.length = 0;\n        this._geoObjects = [];\n\n        for (let i = 0; i < this._instanceDataMapValues.length; i++) {\n            this._instanceDataMapValues[i].clear();\n        }\n\n        this._instanceDataMap.clear();\n        this._instanceDataMapValues = [];\n    }\n\n    public clear() {\n        this._removeAll();\n    }\n\n    public draw() {\n        if (this._geoObjects.length) {\n            this.update();\n            this._displayPASS();\n        }\n    }\n\n    public add(geoObject: GeoObject) {\n\n        if (geoObject._handlerIndex === -1) {\n\n            geoObject._handler = this;\n            geoObject._handlerIndex = this._geoObjects.length;\n\n            this._geoObjects.push(geoObject);\n            this._addGeoObjectToArray(geoObject);\n\n            geoObject.updateDirection();\n\n            geoObject._tagData!.refresh();\n\n            this._updateTag(geoObject._tagData!);\n        }\n    }\n\n    public remove(geoObject: GeoObject) {\n        if (geoObject._handler && this.__id == geoObject._handler.__id) {\n            this._removeGeoObject(geoObject);\n        }\n    }\n\n    public _clearDataTagQueue() {\n        this._dataTagUpdateQueue = [];\n    }\n\n\n    public _removeGeoObject(geoObject: GeoObject) {\n\n        let tagData = geoObject._tagData!;\n        let tag = geoObject.tag;\n\n        tagData.numInstances--;\n\n        let isEmpty = false;\n        // dataTag becomes empty, remove it from the rendering\n        if (tagData.numInstances === 0) {\n            tagData.clear();\n            this._instanceDataMap.delete(tag);\n            this._instanceDataMapValues = [];\n            this._clearDataTagQueue();\n            isEmpty = true;\n        }\n\n        this._geoObjects.splice(geoObject._handlerIndex, 1);\n        for (let i = geoObject._handlerIndex, len = this._geoObjects.length; i < len; i++) {\n            let gi = this._geoObjects[i];\n            gi._handlerIndex = gi._handlerIndex - 1;\n        }\n\n        let tdi = geoObject._tagDataIndex;\n        tagData.geoObjects.splice(tdi, 1);\n\n        for (let i = geoObject._tagDataIndex, len = tagData.geoObjects.length; i < len; i++) {\n            let gi = tagData.geoObjects[i];\n            gi._tagDataIndex = gi._tagDataIndex - 1;\n        }\n\n        tagData._rgbaArr = spliceArray(tagData._rgbaArr, tdi * 4, 4);\n        tagData._positionHighArr = spliceArray(tagData._positionHighArr, tdi * 3, 3);\n        tagData._positionLowArr = spliceArray(tagData._positionLowArr, tdi * 3, 3);\n        tagData._directionArr = spliceArray(tagData._directionArr, tdi * 3, 3);\n        tagData._pickingColorArr = spliceArray(tagData._pickingColorArr, tdi * 3, 3);\n        tagData._pitchRollArr = spliceArray(tagData._pitchRollArr, tdi * 2, 2);\n        tagData._sizeArr = spliceArray(tagData._sizeArr, tdi, 1);\n        tagData._visibleArr = spliceArray(tagData._visibleArr, tdi, 1);\n\n        geoObject._handlerIndex = -1;\n        geoObject._handler = null;\n\n        geoObject._tagDataIndex = -1;\n        geoObject._tagData = null;\n\n        if (!isEmpty) {\n            tagData.refresh();\n            this._updateTag(tagData);\n        }\n    }\n}\n\nexport {GeoObjectHandler, InstanceData};\n","import {Program} from \"../webgl/Program\";\n\nexport const geo_object = (): Program =>\n    new Program(\"geo_object\", {\n        uniforms: {\n            viewMatrix: \"mat4\",\n            projectionMatrix: \"mat4\",\n\n            uScaleByDistance: \"vec3\",\n\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n\n            lightsPositions: \"vec3\",\n            lightsParamsv: \"vec3\",\n            lightsParamsf: \"float\",\n\n            uTexture: \"sampler2d\",\n            uUseTexture: \"float\"\n        },\n        attributes: {\n            aVertexPosition: \"vec3\",\n            aVertexNormal: \"vec3\",\n            aTexCoord: \"vec2\",\n\n            aPositionHigh: {type: \"vec3\", divisor: 1},\n            aPositionLow: {type: \"vec3\", divisor: 1},\n            aDirection: {type: \"vec3\", divisor: 1},\n            aPitchRoll: {type: \"vec2\", divisor: 1},\n            aColor: {type: \"vec4\", divisor: 1},\n            aScale: {type: \"float\", divisor: 1},\n            aDispose: {type: \"float\", divisor: 1}\n        },\n        vertexShader:\n            `precision highp float;\n            \n            attribute vec3 aVertexPosition;\n            attribute vec3 aVertexNormal; \n            attribute vec3 aPositionHigh;\n            attribute vec3 aPositionLow;    \n            attribute vec3 aDirection;\n            attribute vec2 aPitchRoll;\n            attribute vec4 aColor;\n            attribute float aScale;\n            attribute float aDispose;\n            attribute float aUseTexture;\n            attribute vec2 aTexCoord;\n            \n            uniform float uUseTexture;\n            uniform vec3 uScaleByDistance;\n            uniform mat4 projectionMatrix;\n            uniform mat4 viewMatrix;\n            \n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n\n            varying vec3 cameraPosition;\n            varying vec3 vNormal;\n            varying vec3 v_vertex;           \n            varying vec4 vColor;\n            varying float vDispose;\n            varying float vUseTexture;\n            varying vec2 vTexCoords;\n            \n            const float PI = 3.141592653589793;\n            \n            const float RADIANS = PI / 180.0;\n           \n            void main(void) {\n            \n                if (aDispose == 0.0) {\n                   return;\n                }\n            \n                vUseTexture = uUseTexture;\n                vColor = aColor;\n                vTexCoords = aTexCoord;\n              \n                float roll = aPitchRoll.y;\n                mat3 rotZ = mat3(\n                     vec3(cos(roll), sin(roll), 0.0),\n                     vec3(-sin(roll), cos(roll), 0.0), \n                     vec3(0.0, 0.0, 1.0) \n                );\n\n                float pitch = aPitchRoll.x;\n                mat3 rotX = mat3(\n                    vec3(1.0, 0.0, 0.0),\n                    vec3(0.0, cos(pitch), sin(pitch)), \n                    vec3(0.0, -sin(pitch), cos(pitch)) \n               );\n\n                vec3 position = aPositionHigh + aPositionLow;\n                cameraPosition = eyePositionHigh + eyePositionLow;\n                vec3 r = cross(normalize(-position), aDirection);\n                mat3 modelMatrix = mat3(r, normalize(position), -aDirection) * rotX * rotZ;\n\n                mat4 viewMatrixRTE = viewMatrix;\n                viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                vec3 highDiff = aPositionHigh - eyePositionHigh;\n                vec3 lowDiff = aPositionLow - eyePositionLow;\n             \n                vec3 look = cameraPosition - position;\n                float lookLength = length(look);\n                vNormal = modelMatrix * aVertexNormal;\n                               \n                // if(lookLength > uScaleByDistance[1])\n                // {\n                //     scd = uScaleByDistance[1] / uScaleByDistance[0];\n                // }\n                // else if(lookLength > uScaleByDistance[0])\n                // {\n                //     scd = lookLength / uScaleByDistance[0];\n                // }\n                // ... is the same math\n                float scd = uScaleByDistance[2] * clamp(lookLength, uScaleByDistance[0], uScaleByDistance[1]) / uScaleByDistance[0];\n                \n                vec3 vert = modelMatrix * aVertexPosition * aScale * scd;\n                v_vertex = position + vert;\n                \n                // @hack\n                // Mac/Safari affects on lowDiff somehow. \n                vert += lowDiff;\n                               \n                gl_Position = projectionMatrix * viewMatrixRTE  * vec4(highDiff + vert, 1.0);\n            }`,\n\n        fragmentShader: `precision highp float;\n\n                #define MAX_POINT_LIGHTS 1\n                \n                uniform vec3 lightsPositions[MAX_POINT_LIGHTS];\n                uniform vec3 lightsParamsv[MAX_POINT_LIGHTS * 3];\n                uniform float lightsParamsf[MAX_POINT_LIGHTS];                \n                uniform sampler2D uTexture;\n                \n                varying vec3 cameraPosition;\n                varying vec3 v_vertex;                \n                varying vec4 vColor;\n                varying vec3 vNormal;\n                varying vec2 vTexCoords;\n                varying float vUseTexture;\n                \n                void main(void) {                \n                    vec3 normal = normalize(vNormal);\n                \n                    vec3 lightDir = normalize(lightsPositions[0]);\n                    vec3 viewDir = normalize(cameraPosition - v_vertex);                \n                    vec3 reflectionDirection = reflect(-lightDir, normal);\n                    float reflection = max( dot(reflectionDirection, viewDir), 0.0);\n                    float specularLightWeighting = pow( reflection, lightsParamsf[0]);                                        \n                    float diffuseLightWeighting = max(dot(normal, lightDir), 0.0);\n                    vec3 lightWeighting = lightsParamsv[0] + lightsParamsv[1] * diffuseLightWeighting + lightsParamsv[2] * specularLightWeighting;\n                    vec4 tColor = texture2D(uTexture, vTexCoords);\n                    if(vUseTexture > 0.0){\n                        gl_FragColor = vec4(tColor.rgb * lightWeighting, tColor.a);\n                    } else {\n                        gl_FragColor = vec4(vColor.rgb * lightWeighting, vColor.a);\n                    }\n                }`\n    });\n\nexport const geo_object_picking = (): Program =>\n    new Program(\"geo_object_picking\", {\n        uniforms: {\n            viewMatrix: \"mat4\",\n            projectionMatrix: \"mat4\",\n            uScaleByDistance: \"vec3\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            pickingScale: \"float\"\n        },\n        attributes: {\n            aVertexPosition: \"vec3\",\n            aPositionHigh: {type: \"vec3\", divisor: 1},\n            aPositionLow: {type: \"vec3\", divisor: 1},\n            aDirection: {type: \"vec3\", divisor: 1},\n            aPitchRoll: {type: \"vec2\", divisor: 1},\n            aPickingColor: {type: \"vec3\", divisor: 1},\n            aScale: {type: \"float\", divisor: 1},\n            aDispose: {type: \"float\", divisor: 1}\n        },\n        vertexShader: `precision highp float;\n\n            attribute vec3 aVertexPosition;\n            attribute vec3 aPositionHigh;\n            attribute vec3 aPositionLow;    \n            attribute vec3 aDirection;\n            attribute vec3 aPickingColor;\n            attribute vec2 aPitchRoll;\n            attribute float aScale;\n            attribute float aDispose;\n            \n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n            uniform vec3 uScaleByDistance;\n            uniform mat4 projectionMatrix;\n            uniform mat4 viewMatrix;\n            uniform float pickingScale;\n\n            varying vec3 vColor;\n            \n            const float RADIANS = 3.141592653589793 / 180.0;\n\n            void main(void) {\n\n                if (aDispose == 0.0) {\n                    return;\n                 }\n            \n                 vColor = aPickingColor;\n               \n                 float roll = aPitchRoll.y;\n                 mat3 rotZ = mat3(\n                      vec3(cos(roll), sin(roll), 0.0),\n                      vec3(-sin(roll), cos(roll), 0.0), \n                      vec3(0.0, 0.0, 1.0) \n                 );\n \n                 float pitch = aPitchRoll.x;\n                 mat3 rotX = mat3(\n                     vec3(1.0, 0.0, 0.0),\n                     vec3(0.0, cos(pitch), sin(pitch)), \n                     vec3(0.0, -sin(pitch), cos(pitch)) \n                );\n \n                 vec3 position = aPositionHigh + aPositionLow;\n                 vec3 cameraPosition = eyePositionHigh + eyePositionLow;\n                 vec3 r = cross(normalize(-position), aDirection);\n                 mat3 modelMatrix = mat3(r, normalize(position), -aDirection) * rotX * rotZ;\n \n                 mat4 viewMatrixRTE = viewMatrix;\n                 viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n \n                 vec3 highDiff = aPositionHigh - eyePositionHigh;\n                 vec3 lowDiff = aPositionLow - eyePositionLow;\n              \n                 vec3 look = cameraPosition - position;\n                 float lookLength = length(look);\n                                \n                 // if(lookLength > uScaleByDistance[1])\n                 // {\n                 //     scd = uScaleByDistance[1] / uScaleByDistance[0];\n                 // }\n                 // else if(lookLength > uScaleByDistance[0])\n                 // {\n                 //     scd = lookLength / uScaleByDistance[0];\n                 // }\n                 // ... is the same math above\n                 // @hack\n                 // pickingScale replace to this line, because when it s\n                 // tays in the vert above it affects on Mac Safari jitter\n                 float scd = pickingScale * uScaleByDistance[2] * clamp(lookLength, uScaleByDistance[0], uScaleByDistance[1]) / uScaleByDistance[0];\n\n                 vec3 vert = modelMatrix * aVertexPosition * aScale * scd;\n                 \n                 vert += lowDiff;\n                                \n                 gl_Position = projectionMatrix * viewMatrixRTE  * vec4(highDiff + vert, 1.0);\n            }`,\n        fragmentShader:\n            `precision highp float;\n            varying vec3 vColor;\n            void main () {\n                gl_FragColor = vec4(vColor, 1.0);\n            }`\n    });\n","import {Program} from '../webgl/Program';\n\nconst DEFINE = `\n#define EMPTY -1.0\n#define RTL 1.0`;\n\nconst PROJECT = `vec2 project(vec4 p) {\n                    return (0.5 * p.xyz / p.w + 0.5).xy * viewport;\n                }`;\n\nconst ROTATE2D =\n    `mat2 rotate2d(float angle) {\n        return mat2(cos(angle), -sin(angle),\n           sin(angle), cos(angle));\n     }`;\n\nexport function label_webgl2(): Program {\n    return new Program(\"label\", {\n        uniforms: {\n            viewport: \"vec2\",\n            fontTextureArr: \"sampler2darray\",\n            sdfParamsArr: \"vec4\",\n            projectionMatrix: \"mat4\",\n            viewMatrix: \"mat4\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            planetRadius: \"float\",\n            scaleByDistance: \"vec3\",\n            opacity: \"float\",\n            isOutlinePass: \"int\",\n            depthOffset: \"float\"\n        },\n        attributes: {\n            a_outline: \"float\",\n            a_gliphParam: \"vec4\",\n            a_vertices: \"vec2\",\n            a_texCoord: \"vec4\",\n            a_positionsHigh: \"vec3\",\n            a_positionsLow: \"vec3\",\n            a_size: \"float\",\n            a_rotation: \"float\",\n            a_rgba: \"vec4\",\n            a_offset: \"vec3\",\n            a_fontIndex: \"float\"\n        },\n        vertexShader:\n            `#version 300 es\n            \n            ${DEFINE}\n            \n            in float a_outline;\n            in vec4 a_gliphParam;\n            in vec2 a_vertices;\n            in vec4 a_texCoord;\n            in vec3 a_positionsHigh;\n            in vec3 a_positionsLow;\n            in vec3 a_offset;\n            in float a_size;\n            in float a_rotation;\n            in vec4 a_rgba;\n            in float a_fontIndex;\n\n            out vec2 v_uv;\n            out vec4 v_rgba;\n            flat out int v_fontIndex;            \n            out vec4 v_outlineColor;\n            flat out float v_outline;\n\n            uniform vec2 viewport;\n            uniform mat4 viewMatrix;\n            uniform mat4 projectionMatrix;\n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n            uniform float planetRadius;\n            uniform vec3 scaleByDistance;\n            uniform float opacity;\n            uniform float depthOffset;\n\n            const vec3 ZERO3 = vec3(0.0);\n           \n            ${PROJECT}\n\n            ${ROTATE2D}\n\n            void main() {\n\n                if(a_texCoord.w == EMPTY) {\n                    gl_Position = vec4(0.0);\n                    v_fontIndex = -1;\n                    return;\n                }\n               \n                vec3 a_positions = a_positionsHigh + a_positionsLow;\n                vec3 cameraPos = eyePositionHigh + eyePositionLow;\n\n                v_outline = a_outline;\n\n                v_fontIndex = int(a_fontIndex);\n                v_uv = a_texCoord.xy;\n                vec3 look = a_positions - cameraPos;\n                float lookDist = length(look);\n                v_rgba = a_rgba;\n                \n                if(opacity * step(lookDist, sqrt(dot(cameraPos,cameraPos) - planetRadius) + sqrt(dot(a_positions,a_positions) - planetRadius)) == 0.0){\n                    return;\n                }\n\n                float scd = (1.0 - smoothstep(scaleByDistance[0], scaleByDistance[1], lookDist)) * (1.0 - step(scaleByDistance[2], lookDist));\n\n                v_rgba.a *= opacity;\n\n                mat4 viewMatrixRTE = viewMatrix;\n                viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                vec3 highDiff = a_positionsHigh - eyePositionHigh;\n                vec3 lowDiff = a_positionsLow - eyePositionLow;\n                vec4 posRTE = viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n                vec4 projPos = projectionMatrix * posRTE;\n                                \n                float camSlope = dot(vec3(viewMatrix[0][2], viewMatrix[1][2], viewMatrix[2][2]), normalize(cameraPos));                \n                if(camSlope > 0.5) {\n                    float dist = dot(look, normalize(cameraPos));\n                    projPos.z += dist * 0.02;                  \n                }else{\n                    projPos.z += -(abs(projPos.z)) * 0.002;                 \n                }\n                        \n                projPos.z += depthOffset + a_offset.z;\n                               \n                vec2 screenPos = project(projPos);\n                \n                vec2 vert = a_vertices;                \n                vec4 gp = a_gliphParam;                                \n                if(a_texCoord.w == RTL){\n                    vert.x = step(vert.x * 0.5 + 1.0, 1.0);\n                    gp.x = -a_gliphParam.x;\n                    gp.z = -(a_gliphParam.z + a_texCoord.z);\n                }else{\n                    gp.z = a_gliphParam.z + a_texCoord.z;\n                }\n                                \n                vec2 v = screenPos + rotate2d(a_rotation) * ((vert * gp.xy + gp.zw) * a_size * scd + a_offset.xy);\n\n                gl_Position = vec4((2.0 * v / viewport - 1.0) * projPos.w, projPos.z, projPos.w);\n            }`,\n        fragmentShader:\n            `#version 300 es\n\n            uniform int isOutlinePass;\n            \n            precision highp float;\n\n            const int MAX_SIZE = 11;\n\n            // x - ATLAS_WIDTH = 512.0;\n            // y - ATLAS_HEIGHT = 512.0;\n            // z - ATLAS_GLYPH_SIZE = 32.0;\n            // w - ATLAS_FIELD_RANGE = 8.0;\n\n            uniform sampler2D fontTextureArr[MAX_SIZE];\n            uniform vec4 sdfParamsArr[MAX_SIZE];\n\n            flat in int v_fontIndex;\n            in vec2 v_uv;\n            in vec4 v_rgba;           \n\n            flat in float v_outline;\n\n            in vec3 v_pickingColor;\n\n            layout(location = 0) out vec4 outScreen;\n\n            float median(float r, float g, float b) {\n                return max(min(r, g), min(max(r, g), b));\n            }\n\n            float getDistance() {\n                vec3 msdf;\n                if(v_fontIndex == 0) {\n                    msdf = texture(fontTextureArr[0], v_uv).rgb;\n                } else if(v_fontIndex == 1){\n                    msdf = texture(fontTextureArr[1], v_uv).rgb;\n                } else if(v_fontIndex == 2){\n                    msdf = texture(fontTextureArr[2], v_uv).rgb;\n                } else if(v_fontIndex == 3){\n                    msdf = texture(fontTextureArr[3], v_uv).rgb;\n                } else if(v_fontIndex == 4){\n                    msdf = texture(fontTextureArr[4], v_uv).rgb;\n                } else if(v_fontIndex == 5){\n                    msdf = texture(fontTextureArr[5], v_uv).rgb;\n                } else if(v_fontIndex == 6){\n                    msdf = texture(fontTextureArr[6], v_uv).rgb;\n                } else if(v_fontIndex == 7){\n                    msdf = texture(fontTextureArr[7], v_uv).rgb;\n                } else if(v_fontIndex == 8){\n                    msdf = texture(fontTextureArr[8], v_uv).rgb;\n                } else if(v_fontIndex == 9){\n                    msdf = texture(fontTextureArr[9], v_uv).rgb;\n                } else if(v_fontIndex == 10){\n                    msdf = texture(fontTextureArr[10], v_uv).rgb;\n                }\n                return median(msdf.r, msdf.g, msdf.b);\n            }\n                        \n            void main () {\n            \n                if(v_fontIndex == -1) {\n                    return;\n                }\n                \n                vec4 sdfParams = sdfParamsArr[v_fontIndex];\n                float sd = getDistance();             \n                vec2 dxdy = fwidth(v_uv) * sdfParams.xy;\n\n                if(isOutlinePass == 0){                             \n                    float dist = sd + min(0.001, 0.5 - 1.0 / sdfParams.w) - 0.5;\n                    float opacity = clamp(dist * sdfParams.w / length(dxdy) + 0.5, 0.0, 1.0);\n                    if(opacity <= 0.1){\n                        discard;\n                    }\n                    outScreen = vec4(v_rgba.rgb, opacity * v_rgba.a);\n                } else {             \n                    float dist = sd + min(v_outline, 0.5 - 1.0 / sdfParams.w) - 0.5;\n                    float opacity = clamp(dist * sdfParams.w / length(dxdy) + 0.5, 0.0, 1.0);                       \n                    if(opacity <= 0.1){\n                        discard;\n                    }\n                    outScreen = vec4(v_rgba.rgb, opacity * v_rgba.a);\n                    //outScreen = v_rgba * strokeAlpha * (0.5 - opacity) * 2.0;\n                }         \n            }`\n    });\n}\n\nexport function label_screen(): Program {\n    return new Program(\"label\", {\n        uniforms: {\n            viewport: \"vec2\",\n            fontTextureArr: \"sampler2darray\",\n            sdfParamsArr: \"vec4\",\n            projectionMatrix: \"mat4\",\n            viewMatrix: \"mat4\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            planetRadius: \"float\",\n            scaleByDistance: \"vec3\",\n            opacity: \"float\",\n            isOutlinePass: \"int\",\n            depthOffset: \"float\"\n        },\n        attributes: {\n            a_outline: \"float\",\n            a_gliphParam: \"vec4\",\n            a_vertices: \"vec2\",\n            a_texCoord: \"vec4\",\n            a_positionsHigh: \"vec3\",\n            a_positionsLow: \"vec3\",\n            a_size: \"float\",\n            a_rotation: \"float\",\n            a_rgba: \"vec4\",\n            a_offset: \"vec3\",\n            a_fontIndex: \"float\"\n        },\n        vertexShader:\n            `            \n            ${DEFINE}\n                        \n            attribute float a_outline;\n            attribute vec4 a_gliphParam;\n            attribute vec2 a_vertices;\n            attribute vec4 a_texCoord;\n            attribute vec3 a_positionsHigh;\n            attribute vec3 a_positionsLow;\n            attribute vec3 a_offset;\n            attribute float a_size;\n            attribute float a_rotation;\n            attribute vec4 a_rgba;\n            attribute float a_fontIndex;\n\n            varying float v_outline;\n            varying vec2 v_uv;\n            varying vec4 v_rgba;\n            varying float v_fontIndex;            \n\n            uniform vec2 viewport;\n            uniform mat4 viewMatrix;\n            uniform mat4 projectionMatrix;\n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n            uniform float planetRadius;\n            uniform vec3 scaleByDistance;\n            uniform float opacity;\n            uniform float depthOffset;\n\n            const vec3 ZERO3 = vec3(0.0);\n\n            ${PROJECT}\n\n            ${ROTATE2D}\n\n            void main() {\n\n                if(a_texCoord.w == EMPTY) {\n                    gl_Position = vec4(0.0);\n                    v_fontIndex = -1.0;\n                    return;\n                }\n               \n                vec3 a_positions = a_positionsHigh + a_positionsLow;\n                vec3 cameraPos = eyePositionHigh + eyePositionLow;\n\n                v_outline = a_outline;\n                v_uv = vec2(a_texCoord.xy);\n                v_rgba = a_rgba;\n                v_fontIndex = a_fontIndex;\n                \n                vec3 look = a_positions - cameraPos;\n                float lookDist = length(look);\n                \n                if(opacity * step(lookDist, sqrt(dot(cameraPos,cameraPos) - planetRadius) + sqrt(dot(a_positions,a_positions) - planetRadius)) == 0.0){\n                    return;\n                }\n\n                float scd = (1.0 - smoothstep(scaleByDistance[0], scaleByDistance[1], lookDist)) * (1.0 - step(scaleByDistance[2], lookDist));\n\n                v_rgba.a *= opacity;\n\n                mat4 viewMatrixRTE = viewMatrix;\n                viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                vec3 highDiff = a_positionsHigh - eyePositionHigh;\n                vec3 lowDiff = a_positionsLow - eyePositionLow;\n                vec4 posRTE = viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n                vec4 projPos = projectionMatrix * posRTE;\n                                \n                float camSlope = dot(vec3(viewMatrix[0][2], viewMatrix[1][2], viewMatrix[2][2]), normalize(cameraPos));                \n                if(camSlope > 0.5) {\n                    float dist = dot(look, normalize(cameraPos));\n                    projPos.z += dist * 0.02;                  \n                }else{\n                    projPos.z += -(abs(projPos.z)) * 0.002;                 \n                }\n                        \n                projPos.z += depthOffset + a_offset.z;\n                               \n                vec2 screenPos = project(projPos);\n                \n                vec2 vert = a_vertices;                \n                vec4 gp = a_gliphParam;                                \n                if(a_texCoord.w == RTL){\n                    vert.x = step(vert.x * 0.5 + 1.0, 1.0);\n                    gp.x = -a_gliphParam.x;\n                    gp.z = -(a_gliphParam.z + a_texCoord.z);\n                }else{\n                    gp.z = a_gliphParam.z + a_texCoord.z;\n                }\n                                \n                vec2 v = screenPos + rotate2d(a_rotation) * ((vert * gp.xy + gp.zw) * a_size * scd + a_offset.xy);\n                \n                gl_Position = vec4((2.0 * v / viewport - 1.0) * projPos.w, projPos.z, projPos.w);\n            }`,\n        fragmentShader:\n            `#extension GL_OES_standard_derivatives : enable\n\n            precision highp float;\n            precision highp int;\n\n            const int MAX_SIZE = 11;\n\n            // x - ATLAS_WIDTH = 512.0;\n            // y - ATLAS_HEIGHT = 512.0;\n            // z - ATLAS_GLYPH_SIZE = 32.0;\n            // w - ATLAS_FIELD_RANGE = 8.0;\n\n            uniform sampler2D fontTextureArr[MAX_SIZE];\n            uniform vec4 sdfParamsArr[MAX_SIZE];\n            uniform int isOutlinePass;\n            \n            varying float v_outline;\n            varying vec2 v_uv;\n            varying vec4 v_rgba;           \n            varying float v_fontIndex;\n            \n            float fontIndex;\n\n            float median(float r, float g, float b) {\n                return max(min(r, g), min(max(r, g), b));\n            }\n\n            float getDistance() {\n                vec3 msdf;\n                if(fontIndex >= 0.0 && fontIndex < 1.0) {\n                    msdf = texture2D(fontTextureArr[0], v_uv).rgb;\n                } else if(fontIndex >= 1.0 && fontIndex < 2.0){\n                    msdf = texture2D(fontTextureArr[1], v_uv).rgb;\n                } else if(fontIndex >= 2.0 && fontIndex < 3.0){\n                    msdf = texture2D(fontTextureArr[2], v_uv).rgb;\n                } else if(fontIndex >= 3.0 && fontIndex < 4.0){\n                    msdf = texture2D(fontTextureArr[3], v_uv).rgb;\n                } else if(fontIndex >= 4.0 && fontIndex < 5.0){\n                    msdf = texture2D(fontTextureArr[4], v_uv).rgb;\n                } else if(fontIndex >= 5.0 && fontIndex < 6.0){\n                    msdf = texture2D(fontTextureArr[5], v_uv).rgb;\n                } else if(fontIndex >= 6.0 && fontIndex < 7.0){\n                    msdf = texture2D(fontTextureArr[6], v_uv).rgb;\n                } else if(fontIndex >= 7.0 && fontIndex < 8.0){\n                    msdf = texture2D(fontTextureArr[7], v_uv).rgb;\n                } else if(fontIndex >= 8.0 && fontIndex < 9.0){\n                    msdf = texture2D(fontTextureArr[8], v_uv).rgb;\n                } else if(fontIndex >= 9.0 && fontIndex < 10.0){\n                    msdf = texture2D(fontTextureArr[9], v_uv).rgb;\n                } else if(fontIndex >= 10.0 && fontIndex < 11.0){\n                    msdf = texture2D(fontTextureArr[10], v_uv).rgb;\n                }\n                return median(msdf.r, msdf.g, msdf.b);\n            }\n\n\n            vec4 getSDFParams() {\n                if(fontIndex >= 0.0 && fontIndex < 1.0) {\n                    return sdfParamsArr[0];\n                } else if(fontIndex >= 1.0 && fontIndex < 2.0){\n                    return sdfParamsArr[1];\n                } else if(fontIndex >= 2.0 && fontIndex < 3.0){\n                    return sdfParamsArr[2];\n                } else if(fontIndex >= 3.0 && fontIndex < 4.0){\n                    return sdfParamsArr[3];\n                } else if(fontIndex >= 4.0 && fontIndex < 5.0){\n                    return sdfParamsArr[4];\n                } else if(fontIndex >= 5.0 && fontIndex < 6.0){\n                    return sdfParamsArr[5];\n                } else if(fontIndex >= 6.0 && fontIndex < 7.0){\n                    return sdfParamsArr[6];\n                } else if(fontIndex >= 7.0 && fontIndex < 8.0){\n                    return sdfParamsArr[7];\n                } else if(fontIndex >= 8.0 && fontIndex < 9.0){\n                    return sdfParamsArr[8];\n                } else if(fontIndex >= 9.0 && fontIndex < 10.0){\n                    return sdfParamsArr[9];\n                } else if(fontIndex >= 10.0 && fontIndex < 11.0){\n                    return sdfParamsArr[10];\n                }\n            }\n                    \n            void main () {\n\n                fontIndex = v_fontIndex + 0.1;\n                \n                if(v_fontIndex < 0.0){\n                    return;\n                }\n                \n                vec4 sdfParams = getSDFParams();\n                float sd = getDistance();             \n                vec2 dxdy = fwidth(v_uv) * sdfParams.xy;\n                float dist = sd + min(0.001, 0.5 - 1.0 / sdfParams.w) - 0.5;\n                float opacity = clamp(dist * sdfParams.w / length(dxdy) + 0.5, 0.0, 1.0);\n\n                if(isOutlinePass == 0){                             \n                    //gl_FragColor = vec4(v_rgba.rgb, opacity * v_rgba.a);\n                } else {                \n                    float strokeDist = sd + min(v_outline, 0.5 - 1.0 / sdfParams.w) - 0.5;\n                    float strokeAlpha = v_rgba.a * clamp(strokeDist * sdfParams.w / length(dxdy) + 0.5, 0.0, 1.0);                    \n                    if(strokeAlpha < 0.1){\n                        discard;\n                    }\n                    //gl_FragColor = v_rgba * strokeAlpha * (0.5 - opacity) * 2.0;\n                }\n            }`\n    });\n}\n\nexport function labelPicking(): Program {\n    return new Program(\"labelPicking\", {\n        uniforms: {\n            viewport: \"vec2\",\n            projectionMatrix: \"mat4\",\n            viewMatrix: \"mat4\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            planetRadius: \"float\",\n            scaleByDistance: \"vec3\",\n            opacity: \"float\",\n            depthOffset: \"float\"\n        },\n        attributes: {\n            a_gliphParam: \"vec4\",\n            a_vertices: \"vec2\",\n            a_texCoord: \"vec4\",\n            a_positionsHigh: \"vec3\",\n            a_positionsLow: \"vec3\",\n            a_offset: \"vec3\",\n            a_size: \"float\",\n            a_rotation: \"float\",\n            a_rgba: \"vec4\"\n        },\n        vertexShader:\n            `\n            \n            ${DEFINE}\n            \n            attribute vec4 a_gliphParam;\n            attribute vec2 a_vertices;\n            attribute vec4 a_texCoord;\n            attribute vec3 a_positionsHigh;\n            attribute vec3 a_positionsLow;\n            attribute vec3 a_offset;\n            attribute float a_size;\n            attribute float a_rotation;\n            attribute vec4 a_rgba;\n\n            varying vec4 v_rgba;\n\n            uniform vec2 viewport;\n            uniform mat4 viewMatrix;\n            uniform mat4 projectionMatrix;\n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n            uniform float planetRadius;\n            uniform vec3 scaleByDistance;\n            uniform float opacity;\n            uniform float depthOffset;\n\n            const vec3 ZERO3 = vec3(0.0);\n\n            ${PROJECT}\n\n            ${ROTATE2D}\n\n            void main() {\n                vec3 a_positions = a_positionsHigh + a_positionsLow;\n                vec3 cameraPos = eyePositionHigh + eyePositionLow;\n                v_rgba = a_rgba;\n                \n                if(a_texCoord.w == EMPTY) {\n                    v_rgba.a = 0.0;\n                    gl_Position = vec4(0.0);\n                    return;\n                }\n\n                vec3 look = a_positions - cameraPos;\n                float lookDist = length(look);\n                if(opacity * step(lookDist, sqrt(dot(cameraPos,cameraPos) - planetRadius) + sqrt(dot(a_positions,a_positions) - planetRadius)) == 0.0){\n                    return;\n                }\n\n                float scd = (1.0 - smoothstep(scaleByDistance[0], scaleByDistance[1], lookDist)) * (1.0 - step(scaleByDistance[2], lookDist));\n\n                v_rgba.a *= opacity;\n\n                mat4 viewMatrixRTE = viewMatrix;\n                viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                vec3 highDiff = a_positionsHigh - eyePositionHigh;\n                vec3 lowDiff = a_positionsLow - eyePositionLow;\n                vec4 posRTE = viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n                vec4 projPos = projectionMatrix * posRTE;\n                \n                float camSlope = dot(vec3(viewMatrix[0][2], viewMatrix[1][2], viewMatrix[2][2]), normalize(cameraPos));                \n                if(camSlope > 0.5) {\n                    float dist = dot(look, normalize(cameraPos));\n                    projPos.z += dist * 0.02;                  \n                }else{\n                    projPos.z += -(abs(projPos.z)) * 0.002;                 \n                }\n                        \n                projPos.z += depthOffset + a_offset.z;\n                \n                vec2 screenPos = project(projPos);\n                \n                vec2 vert = a_vertices;                \n                vec4 gp = a_gliphParam;                                \n                if(a_texCoord.w == RTL){\n                    vert.x = step(vert.x * 0.5 + 1.0, 1.0);\n                    gp.x = -a_gliphParam.x;\n                    gp.z = -(a_gliphParam.z + a_texCoord.z);\n                }else{\n                    gp.z = a_gliphParam.z + a_texCoord.z;\n                }\n                                \n                vec2 v = screenPos + rotate2d(a_rotation) * ((vert * gp.xy + gp.zw) * a_size * scd + a_offset.xy);\n                                \n                gl_Position = vec4((2.0 * v / viewport - 1.0) * projPos.w, projPos.z, projPos.w);\n            }`,\n        fragmentShader:\n            `precision highp float;\n\n            varying vec4 v_rgba;\n\n            varying vec3 v_pickingColor;\n\n            void main () {\n\n                vec4 color = v_rgba;\n                if (color.a < 0.05) {\n                    return;\n                }\n\n                gl_FragColor = vec4(v_rgba.rgb, v_rgba.a);\n            }`\n    });\n}","import * as shaders from \"../shaders/label\";\nimport {ALIGN, Label} from \"./Label\";\nimport {BaseBillboardHandler} from \"./BaseBillboardHandler\";\nimport {concatTypedArrays, spliceTypedArray} from \"../utils/shared\";\nimport {EntityCollection} from \"./EntityCollection\";\nimport {LOCK_FREE} from \"./LabelWorker\";\nimport {Planet} from \"../scene/Planet\";\nimport {WebGLBufferExt} from \"../webgl/Handler\";\nimport {Vec3} from \"../math/Vec3\";\nimport {Vec4} from \"../math/Vec4\";\n\ntype LabelWorkerCallbackData = {\n    vertexArr: Float32Array,\n    texCoordArr: Float32Array,\n    gliphParamArr: Float32Array,\n    positionHighArr: Float32Array,\n    positionLowArr: Float32Array,\n    sizeArr: Float32Array,\n    offsetArr: Float32Array,\n    rgbaArr: Float32Array,\n    rotationArr: Float32Array,\n    fontIndexArr: Float32Array,\n    outlineArr: Float32Array,\n    outlineColorArr: Float32Array,\n    pickingColorArr: Float32Array\n}\n\nconst PICKINGCOLOR_BUFFER = 0;\nconst POSITION_BUFFER = 1;\nconst SIZE_BUFFER = 2;\nconst OFFSET_BUFFER = 3;\nconst RGBA_BUFFER = 4;\nconst ROTATION_BUFFER = 5;\nconst TEXCOORD_BUFFER = 6;\nconst VERTEX_BUFFER = 7;\nconst FONTINDEX_BUFFER = 8;\nconst OUTLINE_BUFFER = 9;\nconst OUTLINECOLOR_BUFFER = 10;\n\nconst EMPTY = -1.0;\nconst RTL = 1.0;\n\nclass LabelHandler extends BaseBillboardHandler {\n\n    protected override _billboards: Label[];\n\n    protected _gliphParamBuffer: WebGLBufferExt | null;\n    protected _fontIndexBuffer: WebGLBufferExt | null;\n    protected _outlineBuffer: WebGLBufferExt | null;\n    protected _outlineColorBuffer: WebGLBufferExt | null;\n\n    protected _gliphParamArr: Float32Array;\n    protected _fontIndexArr: Float32Array;\n    protected _outlineArr: Float32Array;\n    protected _outlineColorArr: Float32Array;\n\n    public _maxLetters: number;\n\n    constructor(entityCollection: EntityCollection, maxLetters: number = 21) {\n        super(entityCollection);\n\n        this._billboards = [];\n\n        this._gliphParamBuffer = null;\n        this._fontIndexBuffer = null;\n        this._outlineBuffer = null;\n        this._outlineColorBuffer = null;\n\n        this._gliphParamArr = new Float32Array([]);\n        this._fontIndexArr = new Float32Array([]);\n        this._outlineArr = new Float32Array([]);\n        this._outlineColorArr = new Float32Array([]);\n\n        this._buffersUpdateCallbacks[FONTINDEX_BUFFER] = this.createFontIndexBuffer;\n        this._buffersUpdateCallbacks[OUTLINE_BUFFER] = this.createOutlineBuffer;\n        this._buffersUpdateCallbacks[OUTLINECOLOR_BUFFER] = this.createOutlineColorBuffer;\n\n        this._changedBuffers = new Array(this._buffersUpdateCallbacks.length);\n\n        this._maxLetters = maxLetters;\n    }\n\n    public override initProgram() {\n        if (this._renderer && this._renderer.handler && this._renderer.handler.gl) {\n            if (!this._renderer.handler.programs.label) {\n                if (this._renderer.handler.gl.type === \"webgl2\") {\n                    this._renderer.handler.addProgram(shaders.label_webgl2());\n                } else {\n                    this._renderer.handler.addProgram(shaders.label_screen());\n                }\n            }\n\n            if (!this._renderer.handler.programs.labelPicking) {\n                this._renderer.handler.addProgram(shaders.labelPicking());\n            }\n        }\n    }\n\n    public get labels(): Label[] {\n        return this._billboards;\n    }\n\n    public override add(label: Label) {\n        if (!label._handler) {\n            label._handler = this;\n            this.assignFontAtlas(label);\n            this.refresh();\n        }\n    }\n\n    public updateFonts() {\n        let l = [...this._billboards];\n        this._billboards = [];\n        for (let i = 0; i < l.length; i++) {\n            this.assignFontAtlas(l[i]);\n        }\n    }\n\n    protected _addLabelToArrays(label: Label) {\n        this._renderer && this._renderer.labelWorker.make({handler: this, label: label});\n    }\n\n    public assignFontAtlas(label: Label) {\n        if (this._entityCollection && this._renderer) {\n            label.assignFontAtlas(this._renderer.fontAtlas);\n            this._addLabelToArrays(label);\n        } else {\n            this._billboards.push(label);\n        }\n    }\n\n    public workerCallback(data: LabelWorkerCallbackData, label: Label) {\n        if (label._lockId !== LOCK_FREE && label._handler && this.isEqual(label._handler)) {\n            label._isReady = true;\n            label._lockId = LOCK_FREE;\n            label._handlerIndex = this._billboards.length;\n\n            this._billboards.push(label);\n\n            this._vertexArr = concatTypedArrays(this._vertexArr, data.vertexArr) as Float32Array;\n            this._texCoordArr = concatTypedArrays(this._texCoordArr, data.texCoordArr) as Float32Array;\n            this._gliphParamArr = concatTypedArrays(this._gliphParamArr, data.gliphParamArr) as Float32Array;\n            this._positionHighArr = concatTypedArrays(this._positionHighArr, data.positionHighArr) as Float32Array;\n            this._positionLowArr = concatTypedArrays(this._positionLowArr, data.positionLowArr) as Float32Array;\n            this._sizeArr = concatTypedArrays(this._sizeArr, data.sizeArr) as Float32Array;\n            this._offsetArr = concatTypedArrays(this._offsetArr, data.offsetArr) as Float32Array;\n            this._rgbaArr = concatTypedArrays(this._rgbaArr, data.rgbaArr) as Float32Array;\n            this._rotationArr = concatTypedArrays(this._rotationArr, data.rotationArr) as Float32Array;\n            this._fontIndexArr = concatTypedArrays(this._fontIndexArr, data.fontIndexArr) as Float32Array;\n            this._outlineArr = concatTypedArrays(this._outlineArr, data.outlineArr) as Float32Array;\n            this._outlineColorArr = concatTypedArrays(this._outlineColorArr, data.outlineColorArr) as Float32Array;\n            this._pickingColorArr = concatTypedArrays(this._pickingColorArr, data.pickingColorArr) as Float32Array;\n\n            label.update();\n\n            this.refresh();\n        }\n    }\n\n    public override clear() {\n        // @ts-ignore\n        this._texCoordArr = null;\n        // @ts-ignore\n        this._gliphParamArr = null;\n        // @ts-ignore\n        this._vertexArr = null;\n        // @ts-ignore\n        this._positionHighArr = null;\n        // @ts-ignore\n        this._positionLowArr = null;\n        // @ts-ignore\n        this._sizeArr = null;\n        // @ts-ignore\n        this._offsetArr = null;\n        // @ts-ignore\n        this._rgbaArr = null;\n        // @ts-ignore\n        this._rotationArr = null;\n        // @ts-ignore\n        this._fontIndexArr = null;\n        // @ts-ignore\n        this._outlineArr = null;\n        // @ts-ignore\n        this._outlineColorArr = null;\n\n        this._texCoordArr = new Float32Array([]);\n        this._gliphParamArr = new Float32Array([]);\n        this._vertexArr = new Float32Array([]);\n        this._positionHighArr = new Float32Array([]);\n        this._positionLowArr = new Float32Array([]);\n        this._sizeArr = new Float32Array([]);\n        this._offsetArr = new Float32Array([]);\n        this._rgbaArr = new Float32Array([]);\n        this._rotationArr = new Float32Array([]);\n        this._fontIndexArr = new Float32Array([]);\n        this._outlineArr = new Float32Array([]);\n        this._outlineColorArr = new Float32Array([]);\n\n        this._removeBillboards();\n        this._deleteBuffers();\n        this.refresh();\n    }\n\n    protected override _deleteBuffers() {\n        if (this._renderer) {\n            let gl = this._renderer.handler.gl!;\n            gl.deleteBuffer(this._gliphParamBuffer!);\n            gl.deleteBuffer(this._sizeBuffer!);\n            gl.deleteBuffer(this._fontIndexBuffer!);\n            gl.deleteBuffer(this._texCoordBuffer!);\n            gl.deleteBuffer(this._outlineBuffer!);\n            gl.deleteBuffer(this._outlineColorBuffer!);\n            gl.deleteBuffer(this._positionHighBuffer!);\n            gl.deleteBuffer(this._positionLowBuffer!);\n            gl.deleteBuffer(this._sizeBuffer!);\n            gl.deleteBuffer(this._offsetBuffer!);\n            gl.deleteBuffer(this._rgbaBuffer!);\n            gl.deleteBuffer(this._rotationBuffer!);\n            gl.deleteBuffer(this._vertexBuffer!);\n            gl.deleteBuffer(this._texCoordBuffer!);\n            gl.deleteBuffer(this._pickingColorBuffer!);\n\n            this._gliphParamBuffer = null;\n            this._sizeBuffer = null;\n            this._fontIndexBuffer = null;\n            this._texCoordBuffer = null;\n            this._outlineBuffer = null;\n            this._outlineColorBuffer = null;\n            this._positionHighBuffer = null;\n            this._positionLowBuffer = null;\n            this._sizeBuffer = null;\n            this._offsetBuffer = null;\n            this._rgbaBuffer = null;\n            this._rotationBuffer = null;\n            this._vertexBuffer = null;\n            this._texCoordBuffer = null;\n            this._pickingColorBuffer = null;\n        }\n    }\n\n    public override _displayPASS() {\n        let r = this._renderer!;\n        let h = r.handler;\n        h.programs.label.activate();\n        let sh = h.programs.label._program;\n        let sha = sh.attributes,\n            shu = sh.uniforms;\n\n        let gl = h.gl!,\n            ec = this._entityCollection;\n\n        gl.disable(gl.CULL_FACE);\n\n        gl.uniform1iv(shu.fontTextureArr, r.fontAtlas.samplerArr);\n        gl.uniform4fv(shu.sdfParamsArr, r.fontAtlas.sdfParamsArr);\n        gl.uniformMatrix4fv(shu.viewMatrix, false, r.activeCamera!.getViewMatrix());\n        gl.uniformMatrix4fv(shu.projectionMatrix, false, r.activeCamera!.getProjectionMatrix());\n        gl.uniform3fv(shu.eyePositionHigh, r.activeCamera!.eyeHigh);\n        gl.uniform3fv(shu.eyePositionLow, r.activeCamera!.eyeLow);\n        gl.uniform3fv(shu.scaleByDistance, ec.scaleByDistance);\n        gl.uniform1f(shu.opacity, ec._fadingOpacity);\n        gl.uniform1f(shu.planetRadius, (ec.renderNode as Planet)._planetRadius2 || 0);\n        gl.uniform2fv(shu.viewport, [h.canvas!.clientWidth, h.canvas!.clientHeight]);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._texCoordBuffer!);\n        gl.vertexAttribPointer(sha.a_texCoord, this._texCoordBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._gliphParamBuffer!);\n        gl.vertexAttribPointer(sha.a_gliphParam, this._gliphParamBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer!);\n        gl.vertexAttribPointer(sha.a_vertices, this._vertexBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._positionHighBuffer!);\n        gl.vertexAttribPointer(sha.a_positionsHigh, this._positionHighBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._positionLowBuffer!);\n        gl.vertexAttribPointer(sha.a_positionsLow, this._positionLowBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._sizeBuffer!);\n        gl.vertexAttribPointer(sha.a_size, this._sizeBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._rotationBuffer!);\n        gl.vertexAttribPointer(sha.a_rotation, this._rotationBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._offsetBuffer!);\n        gl.vertexAttribPointer(sha.a_offset, this._offsetBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._fontIndexBuffer!);\n        gl.vertexAttribPointer(sha.a_fontIndex, this._fontIndexBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        //\n        // outline PASS\n        gl.uniform1i(shu.isOutlinePass, 1);\n        gl.uniform1f(shu.depthOffset, ec.polygonOffsetUnits);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._outlineColorBuffer!);\n        gl.vertexAttribPointer(sha.a_rgba, this._outlineColorBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._outlineBuffer!);\n        gl.vertexAttribPointer(sha.a_outline, this._outlineBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.drawArrays(gl.TRIANGLES, 0, this._vertexBuffer!.numItems);\n\n        //\n        // no outline PASS\n        gl.depthFunc(gl.EQUAL);\n        gl.uniform1i(shu.isOutlinePass, 0);\n        gl.uniform1f(shu.depthOffset, ec.polygonOffsetUnits);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._rgbaBuffer!);\n        gl.vertexAttribPointer(sha.a_rgba, this._rgbaBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.drawArrays(gl.TRIANGLES, 0, this._vertexBuffer!.numItems);\n\n        gl.depthFunc(gl.LESS);\n\n        gl.enable(gl.CULL_FACE);\n    }\n\n    protected override _pickingPASS() {\n        let r = this._renderer!;\n        let h = r.handler;\n        h.programs.labelPicking.activate();\n        let sh = h.programs.labelPicking._program;\n        let sha = sh.attributes,\n            shu = sh.uniforms;\n\n        let gl = h.gl!,\n            ec = this._entityCollection;\n\n        let rn = ec.renderNode;\n\n        gl.disable(gl.CULL_FACE);\n\n        gl.uniformMatrix4fv(shu.viewMatrix, false, r.activeCamera!.getViewMatrix());\n        gl.uniformMatrix4fv(shu.projectionMatrix, false, r.activeCamera!.getProjectionMatrix());\n        gl.uniform3fv(shu.eyePositionHigh, r.activeCamera!.eyeHigh);\n        gl.uniform3fv(shu.eyePositionLow, r.activeCamera!.eyeLow);\n        gl.uniform3fv(shu.scaleByDistance, ec.scaleByDistance);\n        gl.uniform1f(shu.opacity, ec._fadingOpacity);\n        gl.uniform1f(shu.planetRadius, (rn as Planet)._planetRadius2 || 0);\n        gl.uniform2fv(shu.viewport, [h.canvas!.clientWidth, h.canvas!.clientHeight]);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._texCoordBuffer!);\n        gl.vertexAttribPointer(sha.a_texCoord, this._texCoordBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._gliphParamBuffer!);\n        gl.vertexAttribPointer(sha.a_gliphParam, this._gliphParamBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer!);\n        gl.vertexAttribPointer(sha.a_vertices, this._vertexBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._positionHighBuffer!);\n        gl.vertexAttribPointer(sha.a_positionsHigh, this._positionHighBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._positionLowBuffer!);\n        gl.vertexAttribPointer(sha.a_positionsLow, this._positionLowBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._sizeBuffer!);\n        gl.vertexAttribPointer(sha.a_size, this._sizeBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._rotationBuffer!);\n        gl.vertexAttribPointer(sha.a_rotation, this._rotationBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._offsetBuffer!);\n        gl.vertexAttribPointer(sha.a_offset, this._offsetBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._pickingColorBuffer!);\n        gl.vertexAttribPointer(sha.a_rgba, this._pickingColorBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.uniform1f(shu.depthOffset, ec.polygonOffsetUnits);\n\n        gl.drawArrays(gl.TRIANGLES, 0, this._vertexBuffer!.numItems);\n\n        gl.enable(gl.CULL_FACE);\n    }\n\n    protected override _removeBillboard(label: Label) {\n\n        let li = label._handlerIndex;\n\n        this._billboards.splice(li, 1);\n\n        let ml = 24 * this._maxLetters;\n        let i = li * ml;\n        this._rgbaArr = spliceTypedArray<Float32Array>(this._rgbaArr, i, ml);\n        this._outlineColorArr = spliceTypedArray<Float32Array>(this._outlineColorArr, i, ml);\n        this._texCoordArr = spliceTypedArray<Float32Array>(this._texCoordArr, i, ml);\n        this._gliphParamArr = spliceTypedArray<Float32Array>(this._gliphParamArr, i, ml);\n\n        ml = 18 * this._maxLetters;\n        i = li * ml;\n        this._positionHighArr = spliceTypedArray<Float32Array>(this._positionHighArr, i, ml);\n        this._positionLowArr = spliceTypedArray<Float32Array>(this._positionLowArr, i, ml);\n        this._offsetArr = spliceTypedArray<Float32Array>(this._offsetArr, i, ml);\n        this._pickingColorArr = spliceTypedArray<Float32Array>(this._pickingColorArr, i, ml);\n\n        ml = 12 * this._maxLetters;\n        i = li * ml;\n        this._vertexArr = spliceTypedArray<Float32Array>(this._vertexArr, i, ml);\n\n        ml = 6 * this._maxLetters;\n        i = li * ml;\n        this._sizeArr = spliceTypedArray<Float32Array>(this._sizeArr, i, ml);\n        this._rotationArr = spliceTypedArray<Float32Array>(this._rotationArr, i, ml);\n        this._fontIndexArr = spliceTypedArray<Float32Array>(this._fontIndexArr, i, ml);\n        this._outlineArr = spliceTypedArray<Float32Array>(this._outlineArr, i, ml);\n\n        this.reindexBillboardsArray(li);\n        this.refresh();\n\n        label._handlerIndex = -1;\n        label._handler = null;\n        label._isReady = false;\n    }\n\n    public setText(index: number, text: string, fontIndex: number, align: number, isRTL: boolean = false) {\n\n        text = text.normalize('NFKC');\n\n        let fa = this._renderer!.fontAtlas.atlasesArr[fontIndex];\n\n        if (!fa) return;\n\n        let i = index * 24 * this._maxLetters;\n        let a = this._texCoordArr,\n            g = this._gliphParamArr;\n\n        let c = 0;\n\n        let len = Math.min(this._maxLetters, text.length);\n        let _rtl_ = 0.0;\n        if (isRTL) {\n            _rtl_ = RTL;\n        }\n\n        let offset = 0.0;\n        let kern = fa.kernings;\n\n        for (c = 0; c < len; c++) {\n            let j = i + c * 24;\n            let char = text[c];\n            let n = fa.get(char.charCodeAt(0)) || fa.get(\" \".charCodeAt(0))!;\n            if (!n) continue;\n            let tc = n.texCoords;\n\n            let m = n.metrics;\n\n            a[j] = tc[0];\n            a[j + 1] = tc[1];\n            a[j + 2] = offset;\n            a[j + 3] = _rtl_;\n\n            a[j + 4] = tc[2];\n            a[j + 5] = tc[3];\n            a[j + 6] = offset;\n            a[j + 7] = _rtl_;\n\n            a[j + 8] = tc[4];\n            a[j + 9] = tc[5];\n            a[j + 10] = offset;\n            a[j + 11] = _rtl_;\n\n            a[j + 12] = tc[6];\n            a[j + 13] = tc[7];\n            a[j + 14] = offset;\n            a[j + 15] = _rtl_;\n\n            a[j + 16] = tc[8];\n            a[j + 17] = tc[9];\n            a[j + 18] = offset;\n            a[j + 19] = _rtl_;\n\n            a[j + 20] = tc[10];\n            a[j + 21] = tc[11];\n            a[j + 22] = offset;\n            a[j + 23] = _rtl_;\n\n            //\n            // Gliph\n            //\n            g[j] = m.nWidth;\n            g[j + 1] = m.nHeight;\n            g[j + 2] = m.nXOffset;\n            g[j + 3] = m.nYOffset;\n\n            g[j + 4] = m.nWidth;\n            g[j + 5] = m.nHeight;\n            g[j + 6] = m.nXOffset;\n            g[j + 7] = m.nYOffset;\n\n            g[j + 8] = m.nWidth;\n            g[j + 9] = m.nHeight;\n            g[j + 10] = m.nXOffset;\n            g[j + 11] = m.nYOffset;\n\n            g[j + 12] = m.nWidth;\n            g[j + 13] = m.nHeight;\n            g[j + 14] = m.nXOffset;\n            g[j + 15] = m.nYOffset;\n\n            g[j + 16] = m.nWidth;\n            g[j + 17] = m.nHeight;\n            g[j + 18] = m.nXOffset;\n            g[j + 19] = m.nYOffset;\n\n            g[j + 20] = m.nWidth;\n            g[j + 21] = m.nHeight;\n            g[j + 22] = m.nXOffset;\n            g[j + 23] = m.nYOffset;\n\n            let k = kern[char.charCodeAt(0)];\n            if (k && text[c + 1]) {\n                let kk = k[text[c + 1].charCodeAt(0)];\n                if (kk) {\n                    offset += m.nAdvance + kk;\n                } else {\n                    offset += m.nAdvance;\n                }\n            } else {\n                offset += m.nAdvance;\n            }\n        }\n\n        // 49/512 - font atlas left border letter offset\n        if (align === ALIGN.CENTER) {\n            offset *= -0.5;\n            for (c = 0; c < len; c++) {\n                let j = i + c * 24;\n                a[j + 2] += offset;\n                a[j + 6] += offset;\n                a[j + 10] += offset;\n                a[j + 14] += offset;\n                a[j + 18] += offset;\n                a[j + 22] += offset;\n            }\n        }\n\n        for (; c < this._maxLetters; c++) {\n            let j = i + c * 24;\n            a[j + 3] = EMPTY;\n            a[j + 7] = EMPTY;\n            a[j + 11] = EMPTY;\n            a[j + 15] = EMPTY;\n            a[j + 19] = EMPTY;\n            a[j + 23] = EMPTY;\n        }\n\n        this._changedBuffers[TEXCOORD_BUFFER] = true;\n    }\n\n    public override setPositionArr(index: number, positionHigh: Vec3, positionLow: Vec3) {\n        let i = index * 18 * this._maxLetters;\n        let a = this._positionHighArr,\n            x = positionHigh.x,\n            y = positionHigh.y,\n            z = positionHigh.z,\n            b = this._positionLowArr,\n            xl = positionLow.x,\n            yl = positionLow.y,\n            zl = positionLow.z;\n\n        for (let q = 0; q < this._maxLetters; q++) {\n            let j = i + q * 18;\n            a[j] = x;\n            a[j + 1] = y;\n            a[j + 2] = z;\n\n            a[j + 3] = x;\n            a[j + 4] = y;\n            a[j + 5] = z;\n\n            a[j + 6] = x;\n            a[j + 7] = y;\n            a[j + 8] = z;\n\n            a[j + 9] = x;\n            a[j + 10] = y;\n            a[j + 11] = z;\n\n            a[j + 12] = x;\n            a[j + 13] = y;\n            a[j + 14] = z;\n\n            a[j + 15] = x;\n            a[j + 16] = y;\n            a[j + 17] = z;\n\n            // low\n            b[j] = xl;\n            b[j + 1] = yl;\n            b[j + 2] = zl;\n\n            b[j + 3] = xl;\n            b[j + 4] = yl;\n            b[j + 5] = zl;\n\n            b[j + 6] = xl;\n            b[j + 7] = yl;\n            b[j + 8] = zl;\n\n            b[j + 9] = xl;\n            b[j + 10] = yl;\n            b[j + 11] = zl;\n\n            b[j + 12] = xl;\n            b[j + 13] = yl;\n            b[j + 14] = zl;\n\n            b[j + 15] = xl;\n            b[j + 16] = yl;\n            b[j + 17] = zl;\n        }\n\n        this._changedBuffers[POSITION_BUFFER] = true;\n    }\n\n    public override setPickingColorArr(index: number, color: Vec3) {\n        let i = index * 18 * this._maxLetters;\n        let a = this._pickingColorArr,\n            x = color.x / 255,\n            y = color.y / 255,\n            z = color.z / 255;\n\n        for (let q = 0; q < this._maxLetters; q++) {\n            let j = i + q * 18;\n            a[j] = x;\n            a[j + 1] = y;\n            a[j + 2] = z;\n\n            a[j + 3] = x;\n            a[j + 4] = y;\n            a[j + 5] = z;\n\n            a[j + 6] = x;\n            a[j + 7] = y;\n            a[j + 8] = z;\n\n            a[j + 9] = x;\n            a[j + 10] = y;\n            a[j + 11] = z;\n\n            a[j + 12] = x;\n            a[j + 13] = y;\n            a[j + 14] = z;\n\n            a[j + 15] = x;\n            a[j + 16] = y;\n            a[j + 17] = z;\n        }\n\n        this._changedBuffers[PICKINGCOLOR_BUFFER] = true;\n    }\n\n    public override setSizeArr(index: number, size: number) {\n        let i = index * 6 * this._maxLetters;\n        let a = this._sizeArr;\n\n        for (let q = 0; q < this._maxLetters; q++) {\n            let j = i + q * 6;\n            a[j] = size;\n            a[j + 1] = size;\n            a[j + 2] = size;\n            a[j + 3] = size;\n            a[j + 4] = size;\n            a[j + 5] = size;\n        }\n\n        this._changedBuffers[SIZE_BUFFER] = true;\n    }\n\n    public override setOffsetArr(index: number, offset: Vec3) {\n        let i = index * 18 * this._maxLetters;\n        let a = this._offsetArr,\n            x = offset.x,\n            y = offset.y,\n            z = offset.z;\n\n        for (let q = 0; q < this._maxLetters; q++) {\n            let j = i + q * 18;\n            a[j] = x;\n            a[j + 1] = y;\n            a[j + 2] = z;\n\n            a[j + 3] = x;\n            a[j + 4] = y;\n            a[j + 5] = z;\n\n            a[j + 6] = x;\n            a[j + 7] = y;\n            a[j + 8] = z;\n\n            a[j + 9] = x;\n            a[j + 10] = y;\n            a[j + 11] = z;\n\n            a[j + 12] = x;\n            a[j + 13] = y;\n            a[j + 14] = z;\n\n            a[j + 15] = x;\n            a[j + 16] = y;\n            a[j + 17] = z;\n        }\n\n        this._changedBuffers[OFFSET_BUFFER] = true;\n    }\n\n    public override setRgbaArr(index: number, rgba: Vec4) {\n        let i = index * 24 * this._maxLetters;\n        let a = this._rgbaArr,\n            x = rgba.x,\n            y = rgba.y,\n            z = rgba.z,\n            w = rgba.w;\n\n        for (let q = 0; q < this._maxLetters; q++) {\n            let j = i + q * 24;\n\n            a[j] = x;\n            a[j + 1] = y;\n            a[j + 2] = z;\n            a[j + 3] = w;\n\n            a[j + 4] = x;\n            a[j + 5] = y;\n            a[j + 6] = z;\n            a[j + 7] = w;\n\n            a[j + 8] = x;\n            a[j + 9] = y;\n            a[j + 10] = z;\n            a[j + 11] = w;\n\n            a[j + 12] = x;\n            a[j + 13] = y;\n            a[j + 14] = z;\n            a[j + 15] = w;\n\n            a[j + 16] = x;\n            a[j + 17] = y;\n            a[j + 18] = z;\n            a[j + 19] = w;\n\n            a[j + 20] = x;\n            a[j + 21] = y;\n            a[j + 22] = z;\n            a[j + 23] = w;\n        }\n\n        this._changedBuffers[RGBA_BUFFER] = true;\n    }\n\n    public setOutlineColorArr(index: number, rgba: Vec4) {\n        let i = index * 24 * this._maxLetters;\n        let a = this._outlineColorArr,\n            x = rgba.x,\n            y = rgba.y,\n            z = rgba.z,\n            w = rgba.w;\n\n        for (let q = 0; q < this._maxLetters; q++) {\n            let j = i + q * 24;\n\n            a[j] = x;\n            a[j + 1] = y;\n            a[j + 2] = z;\n            a[j + 3] = w;\n\n            a[j + 4] = x;\n            a[j + 5] = y;\n            a[j + 6] = z;\n            a[j + 7] = w;\n\n            a[j + 8] = x;\n            a[j + 9] = y;\n            a[j + 10] = z;\n            a[j + 11] = w;\n\n            a[j + 12] = x;\n            a[j + 13] = y;\n            a[j + 14] = z;\n            a[j + 15] = w;\n\n            a[j + 16] = x;\n            a[j + 17] = y;\n            a[j + 18] = z;\n            a[j + 19] = w;\n\n            a[j + 20] = x;\n            a[j + 21] = y;\n            a[j + 22] = z;\n            a[j + 23] = w;\n        }\n\n        this._changedBuffers[OUTLINECOLOR_BUFFER] = true;\n    }\n\n    public setOutlineArr(index: number, outline: number) {\n        let i = index * 6 * this._maxLetters;\n        let a = this._outlineArr;\n\n        for (let q = 0; q < this._maxLetters; q++) {\n            let j = i + q * 6;\n            a[j] = outline;\n            a[j + 1] = outline;\n            a[j + 2] = outline;\n            a[j + 3] = outline;\n            a[j + 4] = outline;\n            a[j + 5] = outline;\n        }\n\n        this._changedBuffers[OUTLINE_BUFFER] = true;\n    }\n\n    public override setRotationArr(index: number, rotation: number) {\n        let i = index * 6 * this._maxLetters;\n        let a = this._rotationArr;\n\n        for (let q = 0; q < this._maxLetters; q++) {\n            let j = i + q * 6;\n            a[j] = rotation;\n            a[j + 1] = rotation;\n            a[j + 2] = rotation;\n            a[j + 3] = rotation;\n            a[j + 4] = rotation;\n            a[j + 5] = rotation;\n        }\n\n        this._changedBuffers[ROTATION_BUFFER] = true;\n    }\n\n    public override setVisibility(index: number, visibility: boolean) {\n        let vArr;\n        if (visibility) {\n            vArr = [0, 0, 0, -1, 1, -1, 1, -1, 1, 0, 0, 0];\n        } else {\n            vArr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        }\n        this.setVertexArr(index, vArr);\n    }\n\n    public override setVertexArr(index: number, vertexArr: number[] | Float32Array) {\n        let i = index * 12 * this._maxLetters;\n        let a = this._vertexArr;\n\n        for (let q = 0; q < this._maxLetters; q++) {\n            let j = i + q * 12;\n\n            a[j] = vertexArr[0];\n            a[j + 1] = vertexArr[1];\n\n            a[j + 2] = vertexArr[2];\n            a[j + 3] = vertexArr[3];\n\n            a[j + 4] = vertexArr[4];\n            a[j + 5] = vertexArr[5];\n\n            a[j + 6] = vertexArr[6];\n            a[j + 7] = vertexArr[7];\n\n            a[j + 8] = vertexArr[8];\n            a[j + 9] = vertexArr[9];\n\n            a[j + 10] = vertexArr[10];\n            a[j + 11] = vertexArr[11];\n        }\n\n        this._changedBuffers[VERTEX_BUFFER] = true;\n    }\n\n    public setFontIndexArr(index: number, fontIndex: number) {\n        let i = index * 6 * this._maxLetters;\n        let a = this._fontIndexArr;\n\n        for (let q = 0; q < this._maxLetters; q++) {\n            let j = i + q * 6;\n            a[j] = fontIndex;\n            a[j + 1] = fontIndex;\n            a[j + 2] = fontIndex;\n            a[j + 3] = fontIndex;\n            a[j + 4] = fontIndex;\n            a[j + 5] = fontIndex;\n        }\n\n        this._changedBuffers[FONTINDEX_BUFFER] = true;\n    }\n\n    public override createSizeBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._sizeBuffer as WebGLBuffer);\n        this._sizeBuffer = h.createArrayBuffer(this._sizeArr, 1, this._sizeArr.length);\n    }\n\n    public createFontIndexBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._fontIndexBuffer as WebGLBuffer);\n        this._fontIndexBuffer = h.createArrayBuffer(this._fontIndexArr, 1, this._fontIndexArr.length);\n    }\n\n    public override createTexCoordBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._texCoordBuffer as WebGLBuffer);\n        this._texCoordBuffer = h.createArrayBuffer(this._texCoordArr, 4, this._texCoordArr.length / 4);\n\n        h.gl!.deleteBuffer(this._gliphParamBuffer as WebGLBuffer);\n        this._gliphParamBuffer = h.createArrayBuffer(this._gliphParamArr, 4, this._gliphParamArr.length / 4);\n    }\n\n    public createOutlineBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._outlineBuffer as WebGLBuffer);\n        this._outlineBuffer = h.createArrayBuffer(this._outlineArr, 1, this._outlineArr.length);\n    }\n\n    public createOutlineColorBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._outlineColorBuffer as WebGLBuffer);\n        this._outlineColorBuffer = h.createArrayBuffer(this._outlineColorArr, 4, this._outlineColorArr.length / 4);\n    }\n\n    public setMaxLetters(c: number) {\n        this._maxLetters = c;\n        // TODO: ...\n    }\n}\n\nexport {LabelHandler};\n","import * as shaders from \"../shaders/pointCloud\";\nimport {EntityCollection} from \"./EntityCollection\";\nimport {PointCloud} from \"./PointCloud\";\nimport {Renderer} from \"../renderer/Renderer\";\nimport {RenderNode} from \"../scene/RenderNode\";\n\nclass PointCloudHandler {\n    static __counter__: number = 0;\n    protected __id: number;\n\n    /**\n     * Picking rendering option.\n     * @public\n     * @type {boolean}\n     */\n    public pickingEnabled = true;\n\n    /**\n     * Parent collection\n     * @public\n     * @type {EntityCollection}\n     */\n    public _entityCollection: EntityCollection;\n\n    /**\n     * Renderer\n     * @protected\n     * @type {Renderer|null}\n     */\n    protected _renderer: Renderer | null;\n\n    /**\n     * Point cloud array\n     * @protected\n     * @type {Array.<PointCloud>}\n     */\n    protected _pointClouds: PointCloud[];\n\n    constructor(entityCollection: EntityCollection) {\n\n        this.__id = PointCloudHandler.__counter__++;\n\n        this.pickingEnabled = true;\n        this._entityCollection = entityCollection;\n        this._renderer = null;\n        this._pointClouds = [];\n    }\n\n    protected _initProgram() {\n        if (this._renderer && this._renderer.handler) {\n            if (!this._renderer.handler.programs.pointCloud) {\n                this._renderer.handler.addProgram(shaders.pointCloud());\n            }\n        }\n    }\n\n    public setRenderNode(renderNode: RenderNode) {\n        this._renderer = renderNode.renderer;\n        this._initProgram();\n        for (let i = 0; i < this._pointClouds.length; i++) {\n            this._pointClouds[i].setRenderNode(renderNode);\n        }\n    }\n\n    public add(pointCloud: PointCloud) {\n        if (pointCloud._handlerIndex === -1) {\n            pointCloud._handler = this;\n            pointCloud._handlerIndex = this._pointClouds.length;\n            this._pointClouds.push(pointCloud);\n            this._entityCollection &&\n            this._entityCollection.renderNode &&\n            pointCloud.setRenderNode(this._entityCollection.renderNode);\n        }\n    }\n\n    public remove(pointCloud: PointCloud) {\n\n        let index = pointCloud._handlerIndex;\n        if (index !== -1) {\n\n            pointCloud._deleteBuffers();\n\n            pointCloud._handlerIndex = -1;\n            pointCloud._handler = null;\n            this._pointClouds.splice(index, 1);\n            this._reindexPointCloudArray(index);\n        }\n    }\n\n    protected _reindexPointCloudArray(startIndex: number) {\n        let pc = this._pointClouds;\n        for (let i = startIndex; i < pc.length; i++) {\n            pc[i]._handlerIndex = i;\n        }\n    }\n\n    public draw() {\n        let i = this._pointClouds.length;\n        while (i--) {\n            this._pointClouds[i].draw();\n        }\n    }\n\n    public drawPicking() {\n        if (this.pickingEnabled) {\n            let i = this._pointClouds.length;\n            while (i--) {\n                this._pointClouds[i].drawPicking();\n            }\n        }\n    }\n\n    public clear() {\n        let i = this._pointClouds.length;\n        while (i--) {\n            this._pointClouds[i]._deleteBuffers();\n            this._pointClouds[i]._handler = null;\n            this._pointClouds[i]._handlerIndex = -1;\n        }\n        this._pointClouds.length = 0;\n        this._pointClouds = [];\n    }\n}\n\nexport {PointCloudHandler};\n","import { Program } from '../webgl/Program';\n\n//Picking is the same\nexport function pointCloud(): Program {\n    return new Program(\"pointCloud\", {\n        uniforms: {\n            projectionViewMatrix: \"mat4\",\n            opacity: \"float\",\n            pointSize: \"float\"\n        },\n        attributes: {\n            coordinates: \"vec3\",\n            colors: \"vec3\"\n        },\n        vertexShader:\n            `attribute vec3 coordinates;\n            attribute vec4 colors;\n            uniform mat4 projectionViewMatrix;\n            uniform float opacity;\n            uniform float pointSize;\n            varying vec4 color;\n            void main() {\n                color = colors;\n                color.a *= opacity;\n                gl_Position = projectionViewMatrix * vec4(coordinates, 1.0);\n                gl_PointSize = pointSize;\n            }`,\n        fragmentShader:\n            `precision highp float;\n            varying vec4 color;\n            void main(void) {\n                gl_FragColor = color;\n            }`\n    });\n}","import * as shaders from '../shaders/polyline';\nimport {EntityCollection} from \"./EntityCollection\";\nimport {Polyline} from \"./Polyline\";\nimport {Renderer} from \"../renderer/Renderer\";\nimport {RenderNode} from \"../scene/RenderNode\";\n\nclass PolylineHandler {\n    static __counter__: number = 0;\n    protected __id: number;\n    public _entityCollection: EntityCollection;\n    public pickingEnabled: boolean;\n    protected _renderer: Renderer | null;\n    protected _polylines: Polyline[];\n\n    constructor(entityCollection: EntityCollection) {\n\n        this.__id = PolylineHandler.__counter__++;\n\n        this._entityCollection = entityCollection;\n\n        this._renderer = null;\n\n        this._polylines = [];\n\n        this.pickingEnabled = true;\n    }\n\n    protected _initProgram() {\n        if (this._renderer && this._renderer.handler) {\n            if (!this._renderer.handler.programs.polyline_screen) {\n                this._renderer.handler.addProgram(shaders.polyline_screen());\n            }\n            if (!this._renderer.handler.programs.polyline_picking) {\n                this._renderer.handler.addProgram(shaders.polyline_picking());\n            }\n        }\n    }\n\n    public setRenderNode(renderNode: RenderNode) {\n        this._renderer = renderNode.renderer;\n        this._initProgram();\n        for (let i = 0; i < this._polylines.length; i++) {\n            this._polylines[i].setRenderNode(renderNode);\n        }\n    }\n\n    public add(polyline: Polyline) {\n        if (polyline._handlerIndex === -1) {\n            polyline._handler = this;\n            polyline._handlerIndex = this._polylines.length;\n            this._polylines.push(polyline);\n            this._entityCollection && this._entityCollection.renderNode &&\n            polyline.setRenderNode(this._entityCollection.renderNode);\n        }\n    }\n\n    public remove(polyline: Polyline) {\n        let index = polyline._handlerIndex;\n        if (index !== -1) {\n            polyline._deleteBuffers();\n            polyline._handlerIndex = -1;\n            polyline._handler = null;\n            this._polylines.splice(index, 1);\n            this.reindexPolylineArray(index);\n        }\n    }\n\n    public reindexPolylineArray(startIndex: number) {\n        let ls = this._polylines;\n        for (let i = startIndex; i < ls.length; i++) {\n            ls[i]._handlerIndex = i;\n        }\n    }\n\n    public draw() {\n        let i = this._polylines.length;\n        while (i--) {\n            this._polylines[i].draw();\n        }\n    }\n\n    public drawPicking() {\n        if (this.pickingEnabled) {\n            let i = this._polylines.length;\n            while (i--) {\n                this._polylines[i].drawPicking();\n            }\n        }\n    }\n\n    public clear() {\n        let i = this._polylines.length;\n        while (i--) {\n            this._polylines[i]._deleteBuffers();\n            this._polylines[i]._handler = null;\n            this._polylines[i]._handlerIndex = -1;\n        }\n        this._polylines.length = 0;\n        this._polylines = [];\n    }\n}\n\nexport {PolylineHandler};","import { Program } from '../webgl/Program';\n\nexport function polyline_screen(): Program {\n    return new Program(\"polyline_screen\", {\n        uniforms: {\n            viewport: \"vec2\",\n            proj: \"mat4\",\n            view: \"mat4\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            uFloatParams: \"vec2\",\n            thickness: \"float\",\n            opacity: \"float\",\n            depthOffset: \"float\"\n        },\n        attributes: {\n            prevHigh: \"vec3\",\n            currentHigh: \"vec3\",\n            nextHigh: \"vec3\",\n\n            prevLow: \"vec3\",\n            currentLow: \"vec3\",\n            nextLow: \"vec3\",\n\n            order: \"float\",\n\n            color: \"vec4\"\n        },\n\n        vertexShader:\n            `precision highp float;\n\n                attribute vec3 prevHigh;\n                attribute vec3 currentHigh;\n                attribute vec3 nextHigh;\n\n                attribute vec3 prevLow;\n                attribute vec3 currentLow;\n                attribute vec3 nextLow;\n\n                attribute float order;\n\n                attribute vec4 color;\n\n                uniform float thickness;\n                uniform mat4 proj;\n                uniform mat4 view;\n                uniform vec2 viewport;\n                uniform vec3 eyePositionHigh;\n                uniform vec3 eyePositionLow;\n                uniform float opacity;\n                uniform float depthOffset;\n\n                varying vec4 vColor;\n                varying vec3 vPos;\n                varying vec3 uCamPos;\n\n                const float NEAR = -1.0;\n\n                vec2 getIntersection(vec2 start1, vec2 end1, vec2 start2, vec2 end2){\n                    vec2 dir = end2 - start2;\n                    vec2 perp = vec2(-dir.y, dir.x);\n                    float d2 = dot(perp, start2);\n                    float seg = dot(perp, start1) - d2;\n                    float prl = seg - dot(perp, end1) + d2;\n                    if(prl > -1.0 && prl < 1.0){\n                        return start1;\n                    }\n                    float u = seg / prl;\n                    return start1 + u * (end1 - start1);\n                }\n\n                vec2 project(vec4 p){\n                    return (0.5 * p.xyz / p.w + 0.5).xy * viewport;\n                }\n\n                void main(){\n\n                    uCamPos = eyePositionHigh + eyePositionLow;\n\n                    vColor = vec4(color.rgb, color.a * opacity);\n\n                    vec3 current = currentHigh + currentLow;\n\n                    vPos = current;\n\n                    mat4 viewMatrixRTE = view;\n                    viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                    vec3 highDiff, lowDiff;\n\n                    highDiff = currentHigh - eyePositionHigh;\n                    lowDiff = currentLow - eyePositionLow;\n                    vec4 vCurrent = viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n\n                    highDiff = prevHigh - eyePositionHigh;\n                    lowDiff = prevLow - eyePositionLow;\n                    vec4 vPrev = viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n\n                    highDiff = nextHigh - eyePositionHigh;\n                    lowDiff = nextLow - eyePositionLow;\n                    vec4 vNext = viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n\n                    /*Clip near plane, the point behind view plane*/\n                    if(vCurrent.z > NEAR) {\n                        if(vPrev.z < NEAR && abs(order) == 1.0){\n                            vCurrent = vPrev + (vCurrent - vPrev) * (NEAR - vPrev.z) / (vCurrent.z - vPrev.z);\n                        } else if(vNext.z < NEAR && abs(order) == 2.0){\n                            vCurrent = vNext + (vCurrent - vNext) * (NEAR - vNext.z) / (vCurrent.z - vNext.z);\n                        }\n                    }\n\n                    vec4 dCurrent = proj * vCurrent;\n                    vec2 _next = project(proj * vNext);\n                    vec2 _prev = project(proj * vPrev);\n                    vec2 _current = project(dCurrent);\n\n                    if(_prev == _current){\n                        if(_next == _current){\n                            _next = _current + vec2(1.0, 0.0);\n                            _prev = _current - _next;\n                        }else{\n                            _prev = _current + normalize(_current - _next);\n                        }\n                    }\n\n                    if(_next == _current){\n                        _next = _current + normalize(_current - _prev);\n                    }\n\n                    vec2 sNext = _next,\n                         sCurrent = _current,\n                         sPrev = _prev;\n\n                    vec2 dirNext = normalize(sNext - sCurrent);\n                    vec2 dirPrev = normalize(sPrev - sCurrent);\n                    float dotNP = dot(dirNext, dirPrev);\n\n                    vec2 normalNext = normalize(vec2(-dirNext.y, dirNext.x));\n                    vec2 normalPrev = normalize(vec2(dirPrev.y, -dirPrev.x));\n\n                    float d = thickness * sign(order);\n\n                    vec2 m;\n                    if(dotNP >= 0.99991){\n                        m = sCurrent - normalPrev * d;\n                    }else{\n                        m = getIntersection( sCurrent + normalPrev * d, sPrev + normalPrev * d,\n                                sCurrent + normalNext * d, sNext + normalNext * d );\n\n                        if( dotNP > 0.5 && dot(dirNext + dirPrev, m - sCurrent) < 0.0 ){\n                            float occw = order * sign(dirNext.x * dirPrev.y - dirNext.y * dirPrev.x);\n                            if(occw == -1.0){\n                                m = sCurrent + normalPrev * d;\n                            }else if(occw == 1.0){\n                                m = sCurrent + normalNext * d;\n                            }else if(occw == -2.0){\n                                m = sCurrent + normalNext * d;\n                            }else if(occw == 2.0){\n                                m = sCurrent + normalPrev * d;\n                            }\n                        }else if(distance(sCurrent, m) > min(distance(sCurrent, sNext), distance(sCurrent, sPrev))){\n                            m = sCurrent + normalNext * d;\n                        }\n                    }\n\n                    gl_Position = vec4((2.0 * m / viewport - 1.0) * dCurrent.w, dCurrent.z + depthOffset, dCurrent.w);\n                }`,\n\n        fragmentShader:\n            `precision highp float;\n                uniform vec2 uFloatParams;\n                varying vec3 uCamPos;\n                varying vec4 vColor;\n                varying vec3 vPos;\n                void main() {\n                    vec3 look = vPos - uCamPos;\n                    float lookLength = length(look);\n                    float a = vColor.a * step(lookLength, sqrt(dot(uCamPos,uCamPos) - uFloatParams[0]) + sqrt(dot(vPos,vPos) - uFloatParams[0]));\n                    gl_FragColor = vec4(vColor.rgb, a);\n                }`\n    });\n}\n\nexport function polyline_picking(): Program {\n    return new Program(\"polyline_picking\", {\n        uniforms: {\n            viewport: \"vec2\",\n            proj: \"mat4\",\n            view: \"mat4\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            uFloatParams: \"vec2\",\n            color: \"vec4\",\n            thickness: \"float\",\n            depthOffset: \"float\"\n        },\n        attributes: {\n            prevHigh: \"vec3\",\n            currentHigh: \"vec3\",\n            nextHigh: \"vec3\",\n\n            prevLow: \"vec3\",\n            currentLow: \"vec3\",\n            nextLow: \"vec3\",\n\n            order: \"float\"\n        },\n\n        vertexShader:\n            `precision highp float;\n                \n                attribute vec3 prevHigh;\n                attribute vec3 currentHigh;\n                attribute vec3 nextHigh;\n                \n                attribute vec3 prevLow;\n                attribute vec3 currentLow;\n                attribute vec3 nextLow;\n\n                attribute float order;\n\n                uniform float thickness;\n                uniform vec4 color;\n                uniform mat4 proj;\n                uniform mat4 view;\n                uniform vec2 viewport;\n                uniform vec3 eyePositionHigh;\n                uniform vec3 eyePositionLow;\n                uniform float depthOffset;\n\n                varying vec4 vColor;\n                varying vec3 vPos;\n                varying vec3 uCamPos;\n               \n                \n                const float NEAR = -1.0;\n                \n                vec2 getIntersection(vec2 start1, vec2 end1, vec2 start2, vec2 end2){\n                    vec2 dir = end2 - start2;\n                    vec2 perp = vec2(-dir.y, dir.x);\n                    float d2 = dot(perp, start2);\n                    float seg = dot(perp, start1) - d2;\n                    float prl = seg - dot(perp, end1) + d2;\n                    if(prl > -1.0 && prl < 1.0){\n                        return start1;\n                    }\n                    float u = seg / prl;\n                    return start1 + u * (end1 - start1);\n                }\n                \n                vec2 project(vec4 p){\n                    return (0.5 * p.xyz / p.w + 0.5).xy * viewport;\n                }\n                \n                void main(){\n\n                    uCamPos = eyePositionHigh + eyePositionLow;\n\n                    vColor = color;\n\n                    vec3 current = currentHigh + currentLow;\n\n                    vPos = current;                    \n\n                    vec3 highDiff, lowDiff;\n\n                    mat4 viewMatrixRTE = view;\n                    viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                    highDiff = currentHigh - eyePositionHigh;\n                    lowDiff = currentLow - eyePositionLow;\n                    vec4 vCurrent = viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n\n                    highDiff = prevHigh - eyePositionHigh;\n                    lowDiff = prevLow - eyePositionLow;    \n                    vec4 vPrev = viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n\n                    highDiff = nextHigh - eyePositionHigh;\n                    lowDiff = nextLow - eyePositionLow;    \n                    vec4 vNext = viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n\n                    /*Clip near plane*/\n                    if(vCurrent.z > NEAR) {\n                        if(vPrev.z < NEAR && abs(order) == 1.0){\n                            vCurrent = vPrev + (vCurrent - vPrev) * (NEAR - vPrev.z) / (vCurrent.z - vPrev.z);\n                        } else if(vNext.z < NEAR && abs(order) == 2.0){\n                            vCurrent = vNext + (vCurrent - vNext) * (NEAR - vNext.z) / (vCurrent.z - vNext.z);\n                        }\n                    }\n                    \n                    vec4 dCurrent = proj * vCurrent;\n                    vec2 _next = project(proj * vNext);\n                    vec2 _prev = project(proj * vPrev);\n                    vec2 _current = project(dCurrent);\n                    if(_prev == _current){\n                        if(_next == _current){\n                            _next = _current + vec2(1.0, 0.0);\n                            _prev = _current - _next;\n                        }else{\n                            _prev = _current + normalize(_current - _next);\n                        }\n                    }\n                    if(_next == _current){\n                        _next = _current + normalize(_current - _prev);\n                    }\n                    \n                    vec2 sNext = _next,\n                         sCurrent = _current,\n                         sPrev = _prev;\n\n                    vec2 dirNext = normalize(sNext - sCurrent);\n                    vec2 dirPrev = normalize(sPrev - sCurrent);\n                    float dotNP = dot(dirNext, dirPrev);\n                    \n                    vec2 normalNext = normalize(vec2(-dirNext.y, dirNext.x));\n                    vec2 normalPrev = normalize(vec2(dirPrev.y, -dirPrev.x));\n                    \n                    float d = thickness * sign(order);\n                    \n                    vec2 m;\n                    if(dotNP >= 0.99991){\n                        m = sCurrent - normalPrev * d;\n                    }else{\n                        m = getIntersection( sCurrent + normalPrev * d, sPrev + normalPrev * d,\n                                sCurrent + normalNext * d, sNext + normalNext * d );\n                        \n                        if( dotNP > 0.5 && dot(dirNext + dirPrev, m - sCurrent) < 0.0 ){\n                            float occw = order * sign(dirNext.x * dirPrev.y - dirNext.y * dirPrev.x);\n                            if(occw == -1.0){\n                                m = sCurrent + normalPrev * d;\n                            }else if(occw == 1.0){\n                                m = sCurrent + normalNext * d;\n                            }else if(occw == -2.0){\n                                m = sCurrent + normalNext * d;\n                            }else if(occw == 2.0){\n                                m = sCurrent + normalPrev * d;\n                            }\n                        }\n                        else if(distance(sCurrent, m) > min(distance(sCurrent, sNext), distance(sCurrent, sPrev))){\n                            m = sCurrent + normalNext * d;\n                        }\n                    }\n                    gl_Position = vec4((2.0 * m / viewport - 1.0) * dCurrent.w, dCurrent.z + depthOffset, dCurrent.w);\n                }`,\n\n        fragmentShader:\n            `precision highp float;\n                uniform vec2 uFloatParams;\n                varying vec3 uCamPos;\n                varying vec4 vColor;\n                varying vec3 vPos;\n                void main() {\n                    vec3 look = vPos - uCamPos;\n                    float lookLength = length(look);\n                    float a = vColor.a * step(lookLength, sqrt(dot(uCamPos,uCamPos) - uFloatParams[0]) + sqrt(dot(vPos,vPos) - uFloatParams[0]));                    \n                    gl_FragColor = vec4(vColor.rgb, a);\n                }`\n    });\n}","import * as shaders from \"../shaders/ray\";\nimport {concatArrays, makeArrayTyped, spliceArray, TypedArray} from \"../utils/shared\";\nimport {EntityCollection} from \"./EntityCollection\";\nimport {Ray} from \"./Ray\";\nimport {Renderer} from \"../renderer/Renderer\";\nimport {Vec3} from \"../math/Vec3\";\nimport {Vec4} from \"../math/Vec4\";\nimport {WebGLBufferExt} from \"../webgl/Handler\";\n\nconst PICKINGCOLOR_BUFFER = 0;\nconst START_POSITION_BUFFER = 1;\nconst END_POSITION_BUFFER = 2;\nconst RGBA_BUFFER = 3;\nconst THICKNESS_BUFFER = 4;\nconst VERTEX_BUFFER = 5;\n\n/*\n * og.RayHandler\n *\n *\n */\nclass RayHandler {\n\n    static __counter__: number = 0;\n\n    protected __id: number;\n\n    /**\n     * Picking rendering option.\n     * @public\n     * @type {boolean}\n     */\n    public pickingEnabled: boolean;\n\n    protected _entityCollection: EntityCollection;\n\n    protected _renderer: Renderer | null;\n\n    protected _rays: Ray[];\n\n    protected _vertexBuffer: WebGLBufferExt | null;\n    protected _startPositionHighBuffer: WebGLBufferExt | null;\n    protected _startPositionLowBuffer: WebGLBufferExt | null;\n    protected _endPositionHighBuffer: WebGLBufferExt | null;\n    protected _endPositionLowBuffer: WebGLBufferExt | null;\n    protected _thicknessBuffer: WebGLBufferExt | null;\n    protected _rgbaBuffer: WebGLBufferExt | null;\n    protected _pickingColorBuffer: WebGLBufferExt | null;\n\n    protected _vertexArr: TypedArray | number[];\n    protected _startPositionHighArr: TypedArray | number[];\n    protected _startPositionLowArr: TypedArray | number[];\n    protected _endPositionHighArr: TypedArray | number[];\n    protected _endPositionLowArr: TypedArray | number[];\n    protected _thicknessArr: TypedArray | number[];\n    protected _rgbaArr: TypedArray | number[];\n    protected _pickingColorArr: TypedArray | number[];\n\n    protected _buffersUpdateCallbacks: Function[];\n    protected _changedBuffers: boolean[];\n\n    constructor(entityCollection: EntityCollection) {\n\n        this.__id = RayHandler.__counter__++;\n\n        /**\n         * Picking rendering option.\n         * @public\n         * @type {boolean}\n         */\n        this.pickingEnabled = true;\n\n        this._entityCollection = entityCollection;\n\n        this._renderer = null;\n\n        this._rays = [];\n\n        this._vertexBuffer = null;\n        this._startPositionHighBuffer = null;\n        this._startPositionLowBuffer = null;\n        this._endPositionHighBuffer = null;\n        this._endPositionLowBuffer = null;\n        this._thicknessBuffer = null;\n        this._rgbaBuffer = null;\n        this._pickingColorBuffer = null;\n\n        this._vertexArr = [];\n        this._startPositionHighArr = [];\n        this._startPositionLowArr = [];\n        this._endPositionHighArr = [];\n        this._endPositionLowArr = [];\n        this._thicknessArr = [];\n        this._rgbaArr = [];\n        this._pickingColorArr = [];\n\n        this._buffersUpdateCallbacks = [];\n        this._buffersUpdateCallbacks[VERTEX_BUFFER] = this.createVertexBuffer;\n        this._buffersUpdateCallbacks[START_POSITION_BUFFER] = this.createStartPositionBuffer;\n        this._buffersUpdateCallbacks[END_POSITION_BUFFER] = this.createEndPositionBuffer;\n        this._buffersUpdateCallbacks[THICKNESS_BUFFER] = this.createThicknessBuffer;\n        this._buffersUpdateCallbacks[RGBA_BUFFER] = this.createRgbaBuffer;\n        this._buffersUpdateCallbacks[PICKINGCOLOR_BUFFER] = this.createPickingColorBuffer;\n\n        this._changedBuffers = new Array(this._buffersUpdateCallbacks.length);\n    }\n\n    static concArr(dest: number[], curr: number[]) {\n        for (let i = 0; i < curr.length; i++) {\n            dest.push(curr[i]);\n        }\n    }\n\n    public initProgram() {\n        if (this._renderer && this._renderer.handler) {\n            if (!this._renderer.handler.programs.rayScreen) {\n                this._renderer.handler.addProgram(shaders.rayScreen());\n            }\n\n            // @todo: ray picking\n            // if (!this._renderer.handler.programs.billboardPicking) {\n            //     this._renderer.handler.addProgram(shaders.billboardPicking());\n            // }\n        }\n    }\n\n    public setRenderer(renderer: Renderer) {\n        this._renderer = renderer;\n        this.initProgram();\n    }\n\n    public refresh() {\n        let i = this._changedBuffers.length;\n        while (i--) {\n            this._changedBuffers[i] = true;\n        }\n    }\n\n    protected _removeRays() {\n        let i = this._rays.length;\n        while (i--) {\n            let ri = this._rays[i];\n            ri._handlerIndex = -1;\n            ri._handler = null;\n        }\n        this._rays.length = 0;\n        this._rays = [];\n    }\n\n    public clear() {\n        //@ts-ignore\n        this._vertexArr = null;\n        //@ts-ignore\n        this._startPositionHighArr = null;\n        //@ts-ignore\n        this._startPositionLowArr = null;\n        //@ts-ignore\n        this._endPositionHighArr = null;\n        //@ts-ignore\n        this._endPositionLowArr = null;\n        //@ts-ignore\n        this._thicknessArr = null;\n        //@ts-ignore\n        this._rgbaArr = null;\n\n        this._vertexArr = new Float32Array([]);\n        this._startPositionHighArr = new Float32Array([]);\n        this._startPositionLowArr = new Float32Array([]);\n        this._endPositionHighArr = new Float32Array([]);\n        this._endPositionLowArr = new Float32Array([]);\n        this._thicknessArr = new Float32Array([]);\n        this._rgbaArr = new Float32Array([]);\n\n        this._removeRays();\n        this._deleteBuffers();\n        this.refresh();\n    }\n\n    protected _deleteBuffers() {\n        if (this._renderer) {\n            let gl = this._renderer.handler.gl;\n\n            if (gl) {\n                gl.deleteBuffer(this._startPositionHighBuffer as WebGLBuffer);\n                gl.deleteBuffer(this._startPositionLowBuffer as WebGLBuffer);\n                gl.deleteBuffer(this._endPositionHighBuffer as WebGLBuffer);\n                gl.deleteBuffer(this._endPositionLowBuffer as WebGLBuffer);\n                gl.deleteBuffer(this._thicknessBuffer as WebGLBuffer);\n                gl.deleteBuffer(this._rgbaBuffer as WebGLBuffer);\n                gl.deleteBuffer(this._vertexBuffer as WebGLBuffer);\n            }\n\n            this._startPositionHighBuffer = null;\n            this._startPositionLowBuffer = null;\n            this._endPositionHighBuffer = null;\n            this._endPositionLowBuffer = null;\n            this._thicknessBuffer = null;\n            this._rgbaBuffer = null;\n            this._vertexBuffer = null;\n        }\n    }\n\n    public update() {\n        if (this._renderer) {\n            let i = this._changedBuffers.length;\n            while (i--) {\n                if (this._changedBuffers[i]) {\n                    this._buffersUpdateCallbacks[i].call(this);\n                    this._changedBuffers[i] = false;\n                }\n            }\n        }\n    }\n\n    public add(ray: Ray) {\n        if (ray._handlerIndex == -1) {\n            ray._handler = this;\n            ray._handlerIndex = this._rays.length;\n            this._rays.push(ray);\n            this._addRayToArrays(ray);\n            this.refresh();\n        }\n    }\n\n    protected _addRayToArrays(ray: Ray) {\n        if (ray.getVisibility()) {\n            this._vertexArr = concatArrays(\n                this._vertexArr,\n                [-0.5, 1.0, -0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 1.0, -0.5, 1.0]\n            );\n        } else {\n            this._vertexArr = concatArrays(\n                this._vertexArr,\n                [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n            );\n        }\n\n        let x = ray._startPositionHigh.x,\n            y = ray._startPositionHigh.y,\n            z = ray._startPositionHigh.z;\n        this._startPositionHighArr = concatArrays(this._startPositionHighArr, [x, y, z, x, y, z, x, y, z, x, y, z, x, y, z, x, y, z]);\n\n        x = ray._startPositionLow.x;\n        y = ray._startPositionLow.y;\n        z = ray._startPositionLow.z;\n        this._startPositionLowArr = concatArrays(this._startPositionLowArr, [x, y, z, x, y, z, x, y, z, x, y, z, x, y, z, x, y, z]);\n\n        x = ray._endPositionHigh.x;\n        y = ray._endPositionHigh.y;\n        z = ray._endPositionHigh.z;\n        this._endPositionHighArr = concatArrays(this._endPositionHighArr, [x, y, z, x, y, z, x, y, z, x, y, z, x, y, z, x, y, z]);\n\n        x = ray._endPositionLow.x;\n        y = ray._endPositionLow.y;\n        z = ray._endPositionLow.z;\n        this._endPositionLowArr = concatArrays(this._endPositionLowArr, [x, y, z, x, y, z, x, y, z, x, y, z, x, y, z, x, y, z]);\n\n        x = ray._thickness;\n        this._thicknessArr = concatArrays(this._thicknessArr, [x, x, x, x, x, x]);\n\n        let r0 = ray._startColor.x,\n            g0 = ray._startColor.y,\n            b0 = ray._startColor.z,\n            a0 = ray._startColor.w,\n            r1 = ray._endColor.x,\n            g1 = ray._endColor.y,\n            b1 = ray._endColor.z,\n            a1 = ray._endColor.w;\n        this._rgbaArr = concatArrays(this._rgbaArr, [\n            r1, g1, b1, a1,\n            r0, g0, b0, a0,\n            r0, g0, b0, a0,\n            r0, g0, b0, a0,\n            r1, g1, b1, a1,\n            r1, g1, b1, a1\n        ]);\n\n        x = ray._entity!._pickingColor.x / 255;\n        y = ray._entity!._pickingColor.y / 255;\n        z = ray._entity!._pickingColor.z / 255;\n        this._pickingColorArr = concatArrays(this._pickingColorArr, [x, y, z, x, y, z, x, y, z, x, y, z, x, y, z, x, y, z]);\n    }\n\n    protected _displayPASS() {\n        let r = this._renderer!;\n        let h = r.handler;\n        h.programs.rayScreen.activate();\n        let sh = h.programs.rayScreen._program;\n        let sha = sh.attributes,\n            shu = sh.uniforms;\n\n        let gl = h.gl!,\n            ec = this._entityCollection;\n\n        //gl.polygonOffset(ec.polygonOffsetFactor, ec.polygonOffsetUnits);\n\n        gl.disable(gl.CULL_FACE);\n\n        gl.uniform1f(shu.uOpacity, ec._fadingOpacity);\n\n        gl.uniformMatrix4fv(shu.viewMatrix, false, r.activeCamera!.getViewMatrix());\n        gl.uniformMatrix4fv(shu.projectionMatrix, false, r.activeCamera!.getProjectionMatrix());\n\n        gl.uniform3fv(shu.eyePositionHigh, r.activeCamera!.eyeHigh);\n        gl.uniform3fv(shu.eyePositionLow, r.activeCamera!.eyeLow);\n\n        gl.uniform1f(shu.resolution, r.activeCamera!._tanViewAngle_hradOneByHeight);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._startPositionHighBuffer!);\n        gl.vertexAttribPointer(sha.a_startPosHigh, this._startPositionHighBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._startPositionLowBuffer!);\n        gl.vertexAttribPointer(sha.a_startPosLow, this._startPositionLowBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._endPositionHighBuffer!);\n        gl.vertexAttribPointer(sha.a_endPosHigh, this._endPositionHighBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._endPositionLowBuffer!);\n        gl.vertexAttribPointer(sha.a_endPosLow, this._endPositionLowBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._rgbaBuffer!);\n        gl.vertexAttribPointer(sha.a_rgba, this._rgbaBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._thicknessBuffer!);\n        gl.vertexAttribPointer(sha.a_thickness, this._thicknessBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer!);\n        gl.vertexAttribPointer(sha.a_vertices, this._vertexBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.drawArrays(gl.TRIANGLES, 0, this._vertexBuffer!.numItems);\n\n        gl.enable(gl.CULL_FACE);\n    }\n\n    protected _pickingPASS() {\n        // ...\n    }\n\n    public draw() {\n        if (this._rays.length) {\n            this.update();\n            this._displayPASS();\n        }\n    }\n\n    public drawPicking() {\n        if (this._rays.length && this.pickingEnabled) {\n            this._pickingPASS();\n        }\n    }\n\n    public reindexRaysArray(startIndex: number) {\n        let r = this._rays;\n        for (let i = startIndex; i < r.length; i++) {\n            r[i]._handlerIndex = i;\n        }\n    }\n\n    protected _removeRay(ray: Ray) {\n\n        let ri = ray._handlerIndex;\n\n        this._rays.splice(ri, 1);\n\n        let i = ri * 24;\n        this._rgbaArr = spliceArray(this._rgbaArr, i, 24);\n\n        i = ri * 18;\n        this._startPositionHighArr = spliceArray(this._startPositionHighArr, i, 18);\n        this._startPositionLowArr = spliceArray(this._startPositionLowArr, i, 18);\n        this._endPositionHighArr = spliceArray(this._endPositionHighArr, i, 18);\n        this._endPositionLowArr = spliceArray(this._endPositionLowArr, i, 18);\n        this._pickingColorArr = spliceArray(this._pickingColorArr, i, 18);\n\n        i = ri * 12;\n        this._vertexArr = spliceArray(this._vertexArr, i, 12);\n\n        i = ri * 6;\n        this._thicknessArr = spliceArray(this._thicknessArr, i, 6);\n\n        this.reindexRaysArray(ri);\n        this.refresh();\n\n        ray._handlerIndex = -1;\n        ray._handler = null;\n    }\n\n    public remove(ray: Ray) {\n        if (ray._handler && this.__id === ray._handler.__id) {\n            this._removeRay(ray);\n        }\n    }\n\n    public setStartPositionArr(index: number, positionHigh: Vec3, positionLow: Vec3) {\n        let i = index * 18;\n\n        // High\n        let a = this._startPositionHighArr,\n            x = positionHigh.x,\n            y = positionHigh.y,\n            z = positionHigh.z;\n\n        a[i] = x;\n        a[i + 1] = y;\n        a[i + 2] = z;\n\n        a[i + 3] = x;\n        a[i + 4] = y;\n        a[i + 5] = z;\n\n        a[i + 6] = x;\n        a[i + 7] = y;\n        a[i + 8] = z;\n\n        a[i + 9] = x;\n        a[i + 10] = y;\n        a[i + 11] = z;\n\n        a[i + 12] = x;\n        a[i + 13] = y;\n        a[i + 14] = z;\n\n        a[i + 15] = x;\n        a[i + 16] = y;\n        a[i + 17] = z;\n\n        // Low\n        a = this._startPositionLowArr;\n        x = positionLow.x;\n        y = positionLow.y;\n        z = positionLow.z;\n\n        a[i] = x;\n        a[i + 1] = y;\n        a[i + 2] = z;\n\n        a[i + 3] = x;\n        a[i + 4] = y;\n        a[i + 5] = z;\n\n        a[i + 6] = x;\n        a[i + 7] = y;\n        a[i + 8] = z;\n\n        a[i + 9] = x;\n        a[i + 10] = y;\n        a[i + 11] = z;\n\n        a[i + 12] = x;\n        a[i + 13] = y;\n        a[i + 14] = z;\n\n        a[i + 15] = x;\n        a[i + 16] = y;\n        a[i + 17] = z;\n\n        this._changedBuffers[START_POSITION_BUFFER] = true;\n    }\n\n    public setEndPositionArr(index: number, positionHigh: Vec3, positionLow: Vec3) {\n        let i = index * 18;\n\n        // High\n        let a = this._endPositionHighArr,\n            x = positionHigh.x,\n            y = positionHigh.y,\n            z = positionHigh.z;\n\n        a[i] = x;\n        a[i + 1] = y;\n        a[i + 2] = z;\n\n        a[i + 3] = x;\n        a[i + 4] = y;\n        a[i + 5] = z;\n\n        a[i + 6] = x;\n        a[i + 7] = y;\n        a[i + 8] = z;\n\n        a[i + 9] = x;\n        a[i + 10] = y;\n        a[i + 11] = z;\n\n        a[i + 12] = x;\n        a[i + 13] = y;\n        a[i + 14] = z;\n\n        a[i + 15] = x;\n        a[i + 16] = y;\n        a[i + 17] = z;\n\n        // Low\n        a = this._endPositionLowArr;\n        x = positionLow.x;\n        y = positionLow.y;\n        z = positionLow.z;\n\n        a[i] = x;\n        a[i + 1] = y;\n        a[i + 2] = z;\n\n        a[i + 3] = x;\n        a[i + 4] = y;\n        a[i + 5] = z;\n\n        a[i + 6] = x;\n        a[i + 7] = y;\n        a[i + 8] = z;\n\n        a[i + 9] = x;\n        a[i + 10] = y;\n        a[i + 11] = z;\n\n        a[i + 12] = x;\n        a[i + 13] = y;\n        a[i + 14] = z;\n\n        a[i + 15] = x;\n        a[i + 16] = y;\n        a[i + 17] = z;\n\n        this._changedBuffers[END_POSITION_BUFFER] = true;\n    }\n\n    public setPickingColorArr(index: number, color: Vec3) {\n        let i = index * 18;\n        let a = this._pickingColorArr,\n            x = color.x / 255,\n            y = color.y / 255,\n            z = color.z / 255;\n\n        a[i] = x;\n        a[i + 1] = y;\n        a[i + 2] = z;\n\n        a[i + 3] = x;\n        a[i + 4] = y;\n        a[i + 5] = z;\n\n        a[i + 6] = x;\n        a[i + 7] = y;\n        a[i + 8] = z;\n\n        a[i + 9] = x;\n        a[i + 10] = y;\n        a[i + 11] = z;\n\n        a[i + 12] = x;\n        a[i + 13] = y;\n        a[i + 14] = z;\n\n        a[i + 15] = x;\n        a[i + 16] = y;\n        a[i + 17] = z;\n\n        this._changedBuffers[PICKINGCOLOR_BUFFER] = true;\n    }\n\n    public setRgbaArr(index: number, startColor: Vec4, endColor: Vec4) {\n        let i = index * 24;\n        let a = this._rgbaArr,\n            r0 = startColor.x,\n            g0 = startColor.y,\n            b0 = startColor.z,\n            a0 = startColor.w,\n            r1 = endColor.x,\n            g1 = endColor.y,\n            b1 = endColor.z,\n            a1 = endColor.w;\n\n        a[i] = r1;\n        a[i + 1] = g1;\n        a[i + 2] = b1;\n        a[i + 3] = a1;\n\n        a[i + 4] = r0;\n        a[i + 5] = g0;\n        a[i + 6] = b0;\n        a[i + 7] = a0;\n\n        a[i + 8] = r0;\n        a[i + 9] = g0;\n        a[i + 10] = b0;\n        a[i + 11] = a0;\n\n        a[i + 12] = r0;\n        a[i + 13] = g0;\n        a[i + 14] = b0;\n        a[i + 15] = a0;\n\n        a[i + 16] = r1;\n        a[i + 17] = g1;\n        a[i + 18] = b1;\n        a[i + 19] = a1;\n\n        a[i + 20] = r1;\n        a[i + 21] = g1;\n        a[i + 22] = b1;\n        a[i + 23] = a1;\n\n        this._changedBuffers[RGBA_BUFFER] = true;\n    }\n\n    public setThicknessArr(index: number, thickness: number) {\n        let i = index * 6;\n        let a = this._thicknessArr;\n\n        a[i] = thickness;\n        a[i + 1] = thickness;\n        a[i + 2] = thickness;\n        a[i + 3] = thickness;\n        a[i + 4] = thickness;\n        a[i + 5] = thickness;\n\n        this._changedBuffers[THICKNESS_BUFFER] = true;\n    }\n\n    public setVisibility(index: number, visibility: boolean) {\n        let vArr: number[];\n        if (visibility) {\n            vArr = [-0.5, 1.0, -0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 1.0, -0.5, 1.0];\n        } else {\n            vArr = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];\n        }\n        this.setVertexArr(index, vArr);\n    }\n\n    public setVertexArr(index: number, vertexArr: number[]) {\n        let i = index * 12;\n        let a = this._vertexArr;\n\n        a[i] = vertexArr[0];\n        a[i + 1] = vertexArr[1];\n        a[i + 2] = vertexArr[2];\n\n        a[i + 3] = vertexArr[3];\n        a[i + 4] = vertexArr[4];\n        a[i + 5] = vertexArr[5];\n\n        a[i + 6] = vertexArr[6];\n        a[i + 7] = vertexArr[7];\n        a[i + 8] = vertexArr[8];\n\n        a[i + 9] = vertexArr[9];\n        a[i + 10] = vertexArr[10];\n        a[i + 11] = vertexArr[11];\n\n        this._changedBuffers[VERTEX_BUFFER] = true;\n    }\n\n    public createStartPositionBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._startPositionHighBuffer as WebGLBuffer);\n        this._startPositionHighArr = makeArrayTyped(this._startPositionHighArr);\n        this._startPositionHighBuffer = h.createArrayBuffer(\n            this._startPositionHighArr as Float32Array,\n            3,\n            this._startPositionHighArr.length / 3,\n            h.gl!.DYNAMIC_DRAW\n        );\n        h.gl!.deleteBuffer(this._startPositionLowBuffer as WebGLBuffer);\n        this._startPositionLowArr = makeArrayTyped(this._startPositionLowArr);\n\n        this._startPositionLowBuffer = h.createArrayBuffer(\n            this._startPositionLowArr as Float32Array,\n            3,\n            this._startPositionLowArr.length / 3,\n            h.gl!.DYNAMIC_DRAW\n        );\n    }\n\n    public createEndPositionBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._endPositionHighBuffer as WebGLBuffer);\n        this._endPositionHighArr = makeArrayTyped(this._endPositionHighArr);\n        this._endPositionHighBuffer = h.createArrayBuffer(\n            this._endPositionHighArr as Float32Array,\n            3,\n            this._endPositionHighArr.length / 3,\n            h.gl!.DYNAMIC_DRAW\n        );\n        h.gl!.deleteBuffer(this._endPositionLowBuffer as WebGLBuffer);\n        this._endPositionLowArr = makeArrayTyped(this._endPositionLowArr);\n        this._endPositionLowBuffer = h.createArrayBuffer(\n            this._endPositionLowArr as Float32Array,\n            3,\n            this._endPositionLowArr.length / 3,\n            h.gl!.DYNAMIC_DRAW\n        );\n    }\n\n    public createRgbaBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._rgbaBuffer as WebGLBuffer);\n        this._rgbaArr = makeArrayTyped(this._rgbaArr);\n        this._rgbaBuffer = h.createArrayBuffer(this._rgbaArr as Float32Array, 4, this._rgbaArr.length / 4);\n    }\n\n    public createThicknessBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._thicknessBuffer as WebGLBuffer);\n        this._thicknessArr = makeArrayTyped(this._thicknessArr);\n        this._thicknessBuffer = h.createArrayBuffer(\n            this._thicknessArr as Float32Array,\n            1,\n            this._thicknessArr.length,\n            h.gl!.DYNAMIC_DRAW\n        );\n    }\n\n    public createVertexBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._vertexBuffer as WebGLBuffer);\n        this._vertexArr = makeArrayTyped(this._vertexArr);\n        this._vertexBuffer = h.createArrayBuffer(\n            this._vertexArr as Float32Array,\n            2,\n            this._vertexArr.length / 2,\n            h.gl!.DYNAMIC_DRAW\n        );\n    }\n\n    public createPickingColorBuffer() {\n        let h = this._renderer!.handler;\n        h.gl!.deleteBuffer(this._pickingColorBuffer as WebGLBuffer);\n        this._pickingColorArr = makeArrayTyped(this._pickingColorArr);\n        this._pickingColorBuffer = h.createArrayBuffer(\n            this._pickingColorArr as Float32Array,\n            3,\n            this._pickingColorArr.length / 3\n        );\n    }\n}\n\nexport {RayHandler};\n","import {Program} from '../webgl/Program';\n\nexport function rayScreen(): Program {\n    return new Program(\"rayScreen\", {\n        uniforms: {\n            projectionMatrix: \"mat4\",\n            viewMatrix: \"mat4\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            resolution: \"float\",\n            uOpacity: \"float\"\n        },\n        attributes: {\n            a_vertices: \"vec2\",\n            a_startPosHigh: \"vec3\",\n            a_startPosLow: \"vec3\",\n            a_endPosHigh: \"vec3\",\n            a_endPosLow: \"vec3\",\n            a_thickness: \"float\",\n            a_rgba: \"vec4\"\n        },\n        vertexShader:\n            `precision highp float;\n\n            attribute vec4 a_rgba;\n            attribute vec3 a_startPosHigh;\n            attribute vec3 a_startPosLow;\n            attribute vec3 a_endPosHigh;\n            attribute vec3 a_endPosLow;\n            attribute vec2 a_vertices;\n            attribute float a_thickness;\n\n            varying vec4 v_rgba;\n\n            uniform mat4 viewMatrix;\n            uniform mat4 projectionMatrix;\n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n            uniform float resolution;\n            uniform float uOpacity;\n\n            void main() {\n\n                v_rgba = vec4(a_rgba.rgb, a_rgba.a * uOpacity);\n\n                vec3 v = (a_endPosHigh - a_startPosHigh) + (a_endPosLow - a_startPosLow);\n\n                vec3 look = (a_startPosHigh - eyePositionHigh) + (a_startPosLow - eyePositionLow) + v * a_vertices.y;\n                vec3 up = normalize(normalize(v));\n                vec3 right = normalize(cross(look,up));\n \n                float dist = dot(look, vec3(viewMatrix[0][2], viewMatrix[1][2], viewMatrix[2][2]));\n                float focalSize = 2.0 * dist * resolution;\n                vec3 vert = right * a_thickness * focalSize * a_vertices.x;\n\n                vec3 highDiff;\n                vec3 lowDiff;\n\n                if(a_vertices.y == 0.0){\n                    highDiff = a_startPosHigh - eyePositionHigh;\n                    vert += a_startPosLow - eyePositionLow;\n                }else{\n                    highDiff = a_endPosHigh - eyePositionHigh;\n                    vert += a_endPosLow - eyePositionLow;\n                }\n\n                mat4 viewMatrixRTE = viewMatrix;\n                viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n                \n                gl_Position = projectionMatrix * viewMatrixRTE * vec4(highDiff + vert, 1.0);\n            }`,\n        fragmentShader:\n            `precision highp float;\n            varying vec4 v_rgba;\n            void main () {\n                gl_FragColor = v_rgba;\n            }`\n    });\n}\n","import {EntityCollection} from \"./EntityCollection\";\nimport {Program} from \"../webgl/Program\";\nimport {Renderer} from \"../renderer/Renderer\";\nimport {RenderNode} from \"../scene/RenderNode\";\nimport {Strip} from \"./Strip\";\n\nclass StripHandler {\n\n    static __counter__: number = 0;\n    protected __id: number;\n\n    /**\n     * Picking rendering option.\n     * @public\n     * @type {boolean}\n     */\n    public pickingEnabled: boolean;\n\n    /**\n     * Parent collection\n     * @protected\n     * @type {EntityCollection}\n     */\n    protected _entityCollection: EntityCollection;\n\n    /**\n     * Renderer\n     * @protected\n     * @type {Renderer | null}\n     */\n    protected _renderer: Renderer | null;\n\n    /**\n     * Strip objects array\n     * @protected\n     * @type {Array.<Strip>}\n     */\n    protected _strips: Strip[];\n\n    constructor(entityCollection: EntityCollection) {\n\n        this.__id = StripHandler.__counter__++;\n\n        this.pickingEnabled = true;\n\n        this._entityCollection = entityCollection;\n\n        this._renderer = null;\n\n        this._strips = [];\n    }\n\n    protected _initProgram() {\n        if (this._renderer && this._renderer.handler) {\n            !this._renderer.handler.programs.strip &&\n            this._renderer.handler.addProgram(\n                new Program(\"strip\", {\n                    uniforms: {\n                        projectionMatrix: {type: \"mat4\"},\n                        viewMatrix: {type: \"mat4\"},\n                        eyePositionHigh: \"vec3\",\n                        eyePositionLow: \"vec3\",\n                        uColor: {type: \"vec4\"},\n                        uOpacity: {type: \"float\"}\n                    },\n                    attributes: {\n                        aVertexPositionHigh: {type: \"vec3\"},\n                        aVertexPositionLow: {type: \"vec3\"}\n                    },\n                    vertexShader: `attribute vec3 aVertexPositionHigh;\n                        attribute vec3 aVertexPositionLow;\n                        uniform mat4 projectionMatrix;\n                        uniform mat4 viewMatrix;\n                        uniform vec3 eyePositionHigh;\n                        uniform vec3 eyePositionLow;\n                        void main(void) {\n\n                            vec3 highDiff = aVertexPositionHigh - eyePositionHigh;\n                            vec3 lowDiff = aVertexPositionLow - eyePositionLow;\n\n                            mat4 viewMatrixRTE = viewMatrix;\n                            viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                            gl_Position = projectionMatrix * viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n                        }`,\n                    fragmentShader: `precision highp float;\n                        uniform vec4 uColor;\n                        uniform float uOpacity;\n                        void main(void) {\n                            gl_FragColor = vec4(uColor.rgb, uColor.a * uOpacity);\n                        }`\n                })\n            );\n        }\n    }\n\n    public setRenderNode(renderNode: RenderNode) {\n        this._renderer = renderNode.renderer;\n        this._initProgram();\n        for (let i = 0; i < this._strips.length; i++) {\n            this._strips[i].setRenderNode(renderNode);\n        }\n    }\n\n    public add(strip: Strip) {\n        if (strip._handlerIndex === -1) {\n            strip._handler = this;\n            strip._handlerIndex = this._strips.length;\n            this._strips.push(strip);\n            this._entityCollection &&\n            this._entityCollection.renderNode &&\n            strip.setRenderNode(this._entityCollection.renderNode);\n        }\n    }\n\n    public remove(strip: Strip) {\n        let index = strip._handlerIndex;\n        if (index !== -1) {\n            strip._deleteBuffers();\n            strip._handlerIndex = -1;\n            strip._handler = null;\n            this._strips.splice(index, 1);\n            this.reindexStripArray(index);\n        }\n    }\n\n    public reindexStripArray(startIndex: number) {\n        let pc = this._strips;\n        for (let i = startIndex; i < pc.length; i++) {\n            pc[i]._handlerIndex = i;\n        }\n    }\n\n    public draw() {\n        let i = this._strips.length;\n        while (i--) {\n            this._strips[i].draw();\n        }\n    }\n\n    public drawPicking() {\n        if (this.pickingEnabled) {\n            let i = this._strips.length;\n            while (i--) {\n                this._strips[i].drawPicking();\n            }\n        }\n    }\n\n    public clear() {\n        let i = this._strips.length;\n        while (i--) {\n            this._strips[i]._deleteBuffers();\n            this._strips[i]._handler = null;\n            this._strips[i]._handlerIndex = -1;\n        }\n        this._strips.length = 0;\n        this._strips = [];\n    }\n}\n\nexport {StripHandler};\n","import * as math from \"../math\";\nimport {BillboardHandler} from \"./BillboardHandler\";\nimport {createEvents, EventsHandler} from \"../Events\";\nimport {Entity} from \"./Entity\";\nimport {Ellipsoid} from \"../ellipsoid/Ellipsoid\";\nimport {EntityCollectionNode} from \"../quadTree/EntityCollectionNode\";\nimport {GeoObjectHandler} from \"./GeoObjectHandler\";\nimport {Label} from \"./Label\";\nimport {LabelHandler} from \"./LabelHandler\";\nimport {NumberArray3} from \"../math/Vec3\";\nimport {Planet} from \"../scene/Planet\";\nimport {PointCloudHandler} from \"./PointCloudHandler\";\nimport {PolylineHandler} from \"./PolylineHandler\";\nimport {RayHandler} from \"./RayHandler\";\nimport {RenderNode} from \"../scene/RenderNode\";\nimport {StripHandler} from \"./StripHandler\";\nimport {Vector} from \"../layer/Vector\";\n\nexport type EntityCollectionEvents = EventsHandler<EntityCollectionEventList>;\n\ninterface IEntityCollectionParams {\n    polygonOffsetUnits?: number;\n    visibility?: boolean;\n    labelMaxLetters?: number;\n    pickingEnabled?: boolean;\n    scaleByDistance?: NumberArray3;\n    pickingScale?: number;\n    opacity?: number;\n\n    entities?: Entity[];\n}\n\n/**\n * An observable collection of og.Entity instances where each entity has a unique id.\n * Entity collection provide handlers for each type of entity like billboard, label or 3ds object.\n * @constructor\n * @param {Object} [options] - Entity options:\n * @param {Array.<Entity>} [options.entities] - Entities array.\n * @param {boolean} [options.visibility=true] - Entity visibility.\n * @param {Array.<number>} [options.scaleByDistance] - Entity scale by distance parameters. (exactly 3 entries)\n * First index - near distance to the entity, after entity becomes full scale.\n * Second index - far distance to the entity, when entity becomes zero scale.\n * Third index - far distance to the entity, when entity becomes invisible.\n * @param {number} [options.opacity] - Entity global opacity.\n * @param {boolean} [options.pickingEnabled=true] - Entity picking enable.\n * @param {Number} [options.polygonOffsetUnits=0.0] - The multiplier by which an implementation-specific value is multiplied with to create a constant depth offset. The default value is 0.\n * //@fires EntityCollection#entitymove\n * @fires EntityCollection#draw\n * @fires EntityCollection#drawend\n * @fires EntityCollection#add\n * @fires EntityCollection#remove\n * @fires EntityCollection#entityadd\n * @fires EntityCollection#entityremove\n * @fires EntityCollection#visibilitychange\n * @fires EntityCollection#mousemove\n * @fires EntityCollection#mouseenter\n * @fires EntityCollection#mouseleave\n * @fires EntityCollection#lclick\n * @fires EntityCollection#rclick\n * @fires EntityCollection#mclick\n * @fires EntityCollection#ldblclick\n * @fires EntityCollection#rdblclick\n * @fires EntityCollection#mdblclick\n * @fires EntityCollection#lup\n * @fires EntityCollection#rup\n * @fires EntityCollection#mup\n * @fires EntityCollection#ldown\n * @fires EntityCollection#rdown\n * @fires EntityCollection#mdown\n * @fires EntityCollection#lhold\n * @fires EntityCollection#rhold\n * @fires EntityCollection#mhold\n * @fires EntityCollection#mousewheel\n * @fires EntityCollection#touchmove\n * @fires EntityCollection#touchstart\n * @fires EntityCollection#touchend\n * @fires EntityCollection#doubletouch\n * @fires EntityCollection#touchleave\n * @fires EntityCollection#touchenter\n */\nclass EntityCollection {\n\n    static __counter__: number = 0;\n\n    /**\n     * Uniq identifier.\n     * @public\n     * @readonly\n     */\n    protected __id: number;\n\n    /**\n     * Render node collections array index.\n     * @protected\n     * @type {number}\n     */\n    protected _renderNodeIndex: number;\n\n    /**\n     * Render node context.\n     * @public\n     * @type {RenderNode}\n     */\n    public renderNode: RenderNode | null;\n\n    /**\n     * Visibility option.\n     * @public\n     * @type {boolean}\n     */\n    public _visibility: boolean;\n\n    /**\n     * Specifies the scale Units for gl.polygonOffset function to calculate depth values, 0.0 is default.\n     * @public\n     * @type {Number}\n     */\n    public polygonOffsetUnits: number;\n\n    /**\n     * Billboards handler\n     * @public\n     * @type {BillboardHandler}\n     */\n    public billboardHandler: BillboardHandler;\n\n    /**\n     * Labels handler\n     * @public\n     * @type {LabelHandler}\n     */\n    public labelHandler: LabelHandler;\n\n    /**\n     * Polyline handler\n     * @public\n     * @type {PolylineHandler}\n     */\n    public polylineHandler: PolylineHandler;\n\n    /**\n     * Ray handler\n     * @public\n     * @type {RayHandler}\n     */\n    public rayHandler: RayHandler;\n\n    /**\n     * PointCloud handler\n     * @public\n     * @type {PointCloudHandler}\n     */\n    public pointCloudHandler: PointCloudHandler;\n\n    /**\n     * Strip handler\n     * @public\n     * @type {StripHandler}\n     */\n    public stripHandler: StripHandler;\n\n    /**\n     * Geo object handler\n     * @public\n     * @type {GeoObjectHandler}\n     */\n    public geoObjectHandler: GeoObjectHandler;\n\n    /**\n     * Entities array.\n     * @public\n     * @type {Array.<Entity>}\n     */\n    public _entities: Entity[];\n\n    /**\n     * First index - near distance to the entity, after entity becomes full scale.\n     * Second index - far distance to the entity, when entity becomes zero scale.\n     * Third index - far distance to the entity, when entity becomes invisible.\n     * @public\n     * @type {Array.<number>} - (exactly 3 entries)\n     */\n    public scaleByDistance: NumberArray3;\n\n    public pickingScale: number;\n\n    /**\n     * Global opacity.\n     * @protected\n     * @type {number}\n     */\n    protected _opacity: number;\n\n    /**\n     * Opacity state during the animated opacity.\n     * @public\n     * @type {number}\n     */\n    public _fadingOpacity: number;\n\n    /**\n     * Entity collection events handler.\n     * @public\n     * @type {EntityCollectionEvents}\n     */\n    public events: EntityCollectionEvents;\n\n    public rendererEvents: EntityCollectionEvents;\n\n    /**\n     * Used in EntityCollectionNode, also could be merged with _quadNode\n     */\n    public _layer?: Vector;\n    public _quadNode?: EntityCollectionNode;\n\n    constructor(options: IEntityCollectionParams = {}) {\n\n        this.__id = EntityCollection.__counter__++;\n\n        this._renderNodeIndex = -1;\n\n        this.renderNode = null;\n\n        this._visibility = options.visibility == undefined ? true : options.visibility;\n\n        this.polygonOffsetUnits =\n            options.polygonOffsetUnits != undefined ? options.polygonOffsetUnits : 0.0;\n\n        this.billboardHandler = new BillboardHandler(this);\n\n        this.labelHandler = new LabelHandler(this, options.labelMaxLetters);\n\n        this.polylineHandler = new PolylineHandler(this);\n\n        this.rayHandler = new RayHandler(this);\n\n        this.pointCloudHandler = new PointCloudHandler(this);\n\n        this.stripHandler = new StripHandler(this);\n\n        this.geoObjectHandler = new GeoObjectHandler(this);\n\n        if (options.pickingEnabled != undefined) {\n            this.setPickingEnabled(options.pickingEnabled);\n        }\n\n        this._entities = [];\n\n        this.scaleByDistance = options.scaleByDistance || [math.MAX32, math.MAX32, math.MAX32];\n\n        this.pickingScale = options.pickingScale || 1.0;\n\n        this._opacity = options.opacity == undefined ? 1.0 : options.opacity;\n\n        this._fadingOpacity = this._opacity;\n\n        this.events = this.rendererEvents = createEvents<EntityCollectionEventList>(ENTITYCOLLECTION_EVENTS, this);\n\n        // initialize current entities\n        if (options.entities) {\n            this.addEntities(options.entities);\n        }\n    }\n\n    get id(): number {\n        return this.__id;\n    }\n\n    public isEqual(ec: EntityCollection): boolean {\n        return this.__id === ec.__id;\n    }\n\n    /**\n     * Sets collection visibility.\n     * @public\n     * @param {boolean} visibility - Visibility flag.\n     */\n    public setVisibility(visibility: boolean) {\n        this._visibility = visibility;\n        this._fadingOpacity = this._opacity * (visibility ? 1 : 0);\n        this.events.dispatch(this.events.visibilitychange, this);\n    }\n\n    /**\n     * Returns collection visibility.\n     * @public\n     * @returns {boolean} -\n     */\n    public getVisibility(): boolean {\n        return this._visibility;\n    }\n\n    /**\n     * Sets collection opacity.\n     * @public\n     * @param {number} opacity - Opacity.\n     */\n    public setOpacity(opacity: number) {\n        this._opacity = opacity;\n    }\n\n    /**\n     * Sets collection picking ability.\n     * @public\n     * @param {boolean} enable - Picking enable flag.\n     */\n    public setPickingEnabled(enable: boolean) {\n        this.billboardHandler.pickingEnabled = enable;\n        this.labelHandler.pickingEnabled = enable;\n        this.polylineHandler.pickingEnabled = enable;\n        this.rayHandler.pickingEnabled = enable;\n        this.pointCloudHandler.pickingEnabled = enable;\n        this.stripHandler.pickingEnabled = enable;\n        this.geoObjectHandler.pickingEnabled = enable;\n    }\n\n    /**\n     * Gets collection opacity.\n     * @public\n     * @returns {number} -\n     */\n    public getOpacity(): number {\n        return this._opacity;\n    }\n\n    /**\n     * Sets scale by distance parameters.\n     * @public\n     * @param {number} near - Full scale entity distance.\n     * @param {number} far - Zero scale entity distance.\n     * @param {number} [farInvisible] - Entity visibility distance.\n     */\n    public setScaleByDistance(near: number, far: number, farInvisible?: number) {\n        this.scaleByDistance[0] = near;\n        this.scaleByDistance[1] = far;\n        this.scaleByDistance[2] = farInvisible || math.MAX32;\n    }\n\n    public appendChildEntity(entity: Entity) {\n        this._addRecursively(entity);\n    }\n\n    protected _addRecursively(entity: Entity) {\n        // billboard\n        entity.billboard && this.billboardHandler.add(entity.billboard);\n\n        // label\n        entity.label && this.labelHandler.add(entity.label);\n\n        // polyline\n        entity.polyline && this.polylineHandler.add(entity.polyline);\n\n        // ray\n        entity.ray && this.rayHandler.add(entity.ray);\n\n        // pointCloud\n        entity.pointCloud && this.pointCloudHandler.add(entity.pointCloud);\n\n        // strip\n        entity.strip && this.stripHandler.add(entity.strip);\n\n        //geoObject\n        entity.geoObject && this.geoObjectHandler.add(entity.geoObject);\n\n        this.events.dispatch(this.events.entityadd, entity);\n\n        for (let i = 0; i < entity.childrenNodes.length; i++) {\n            entity.childrenNodes[i]._entityCollection = this;\n            entity.childrenNodes[i]._entityCollectionIndex = entity._entityCollectionIndex;\n            entity.childrenNodes[i]._pickingColor = entity._pickingColor;\n            this._addRecursively(entity.childrenNodes[i]);\n        }\n    }\n\n    /**\n     * Adds entity to the collection and returns collection.\n     * @public\n     * @param {Entity} entity - Entity.\n     * @returns {EntityCollection} -\n     */\n    public add(entity: Entity): EntityCollection {\n        if (!entity._entityCollection) {\n            entity._entityCollection = this;\n            entity._entityCollectionIndex = this._entities.length;\n            this._entities.push(entity);\n            let rn: RenderNode | null = this.renderNode;\n            if (rn) {\n                rn.renderer && rn.renderer.assignPickingColor<Entity>(entity);\n                if ((rn as Planet).ellipsoid && entity._cartesian.isZero()) {\n                    entity.setCartesian3v((rn as Planet).ellipsoid.lonLatToCartesian(entity._lonLat));\n                }\n            }\n            this._addRecursively(entity);\n            entity.setPickingColor();\n        }\n        return this;\n    }\n\n    /**\n     * Adds entities array to the collection and returns collection.\n     * @public\n     * @param {Array.<Entity>} entities - Entities array.\n     * @returns {EntityCollection} -\n     */\n    public addEntities(entities: Entity[]): EntityCollection {\n        for (let i = 0, len = entities.length; i < len; i++) {\n            this.add(entities[i]);\n        }\n        return this;\n    }\n\n    /**\n     * Returns true if the entity belongs this collection, otherwise returns false.\n     * @public\n     * @param {Entity} entity - Entity.\n     * @returns {boolean} -\n     */\n    public belongs(entity: Entity) {\n        return entity._entityCollection && this._renderNodeIndex === entity._entityCollection._renderNodeIndex;\n    }\n\n    protected _removeRecursively(entity: Entity) {\n        entity._entityCollection = null;\n        entity._entityCollectionIndex = -1;\n\n        // billboard\n        entity.billboard && this.billboardHandler.remove(entity.billboard);\n\n        // label\n        entity.label && this.labelHandler.remove(entity.label);\n\n        // polyline\n        entity.polyline && this.polylineHandler.remove(entity.polyline);\n\n        // ray\n        entity.ray && this.rayHandler.remove(entity.ray);\n\n        // pointCloud\n        entity.pointCloud && this.pointCloudHandler.remove(entity.pointCloud);\n\n        // strip\n        entity.strip && this.stripHandler.remove(entity.strip);\n\n        // geoObject\n        entity.geoObject && this.geoObjectHandler.remove(entity.geoObject);\n\n        for (let i = 0; i < entity.childrenNodes.length; i++) {\n            this._removeRecursively(entity.childrenNodes[i]);\n        }\n    }\n\n    /**\n     * Removes entity from this collection.\n     * @public\n     * @param {Entity} entity - Entity to remove.\n     */\n    public removeEntity(entity: Entity) {\n        this._entities.splice(entity._entityCollectionIndex, 1);\n        this.reindexEntitiesArray(entity._entityCollectionIndex);\n\n        // clear picking color\n        if (this.renderNode && this.renderNode.renderer) {\n            this.renderNode.renderer.clearPickingColor(entity);\n            entity._pickingColor.clear();\n        }\n\n        if (this.belongs(entity)) {\n            this._removeRecursively(entity);\n        }\n\n        this.events.dispatch(this.events.entityremove, entity);\n    }\n\n    public _removeEntitySilent(entity: Entity) {\n        this._entities.splice(entity._entityCollectionIndex, 1);\n        this.reindexEntitiesArray(entity._entityCollectionIndex);\n\n        // clear picking color\n        if (this.renderNode && this.renderNode.renderer) {\n            this.renderNode.renderer.clearPickingColor(entity);\n            entity._pickingColor.clear();\n        }\n\n        if (this.belongs(entity)) {\n            this._removeRecursively(entity);\n        }\n    }\n\n    /**\n     * Creates or refresh collected entities picking color.\n     * @public\n     */\n    public createPickingColors() {\n        if (!(this.renderNode && this.renderNode.renderer)) return;\n        let e = this._entities;\n        for (let i = 0; i < e.length; i++) {\n            if (!e[i].parent) {\n                this.renderNode.renderer.assignPickingColor<Entity>(e[i]);\n                e[i].setPickingColor();\n            }\n        }\n    }\n\n    /**\n     * Refresh collected entities indexes from startIndex entities collection array position.\n     * @public\n     * @param {number} startIndex - Entities collection array index.\n     */\n    public reindexEntitiesArray(startIndex: number) {\n        let e = this._entities;\n        for (let i = startIndex; i < e.length; i++) {\n            e[i]._entityCollectionIndex = i;\n        }\n    }\n\n    /**\n     * Adds this collection to render node.\n     * @public\n     * @param {RenderNode} renderNode - Render node.\n     * @param {boolean} [isHidden] - Uses in vector layers that render in planet render specific function.\n     * @returns {EntityCollection} -\n     */\n    public addTo(renderNode: RenderNode, isHidden: boolean = false) {\n        if (!this.renderNode) {\n            this.renderNode = renderNode;\n\n            if (!isHidden) {\n                this._renderNodeIndex = renderNode.entityCollections.length;\n                renderNode.entityCollections.push(this);\n            }\n\n            (renderNode as Planet).ellipsoid && this._updateGeodeticCoordinates((renderNode as Planet).ellipsoid);\n\n            this.bindRenderNode(renderNode);\n\n            this.events.dispatch(this.events.add, this);\n        }\n        return this;\n    }\n\n    /**\n     * This function is called in the RenderNode assign function.\n     * @public\n     * @param {RenderNode} renderNode\n     */\n    public bindRenderNode(renderNode: RenderNode) {\n        if (renderNode.renderer && renderNode.renderer.isInitialized()) {\n\n            this.billboardHandler.setRenderer(renderNode.renderer);\n            this.labelHandler.setRenderer(renderNode.renderer);\n            this.rayHandler.setRenderer(renderNode.renderer);\n\n            this.geoObjectHandler.setRenderNode(renderNode as Planet);\n            this.polylineHandler.setRenderNode(renderNode);\n            this.pointCloudHandler.setRenderNode(renderNode);\n            this.stripHandler.setRenderNode(renderNode);\n\n            this.updateBillboardsTextureAtlas();\n            this.updateLabelsFontAtlas();\n            this.createPickingColors();\n        }\n    }\n\n    /**\n     * Updates coordinates all lonLat entities in collection after collection attached to the planet node.\n     * @protected\n     * @param {Ellipsoid} ellipsoid - Globe ellipsoid.\n     */\n    protected _updateGeodeticCoordinates(ellipsoid: Ellipsoid) {\n        let e = this._entities;\n        let i = e.length;\n        while (i--) {\n            let ei = e[i];\n            ei._lonLat && ei.setCartesian3v(ellipsoid.lonLatToCartesian(ei._lonLat));\n        }\n    }\n\n    /**\n     * Updates billboard texture atlas.\n     * @public\n     */\n    public updateBillboardsTextureAtlas() {\n        let b = this.billboardHandler.billboards;\n        for (let i = 0; i < b.length; i++) {\n            b[i].setSrc(b[i].getSrc());\n        }\n    }\n\n    /**\n     * Updates labels font atlas.\n     * @public\n     */\n    public updateLabelsFontAtlas() {\n        if (this.renderNode) {\n            // let l = ([] as Label[]).concat(this.labelHandler.labels);\n            // this.labelHandler._billboards = [];\n            // for (let i = 0; i < l.length; i++) {\n            //     this.labelHandler.assignFontAtlas(l[i]);\n            // }\n            this.labelHandler.updateFonts();\n        }\n    }\n\n    /**\n     * Removes collection from render node.\n     * @public\n     */\n    public remove() {\n        if (this.renderNode) {\n            if (this._renderNodeIndex !== -1) {\n                this.renderNode.entityCollections.splice(this._renderNodeIndex, 1);\n                // reindex in the renderNode\n                for (let i = this._renderNodeIndex; i < this.renderNode.entityCollections.length; i++) {\n                    this.renderNode.entityCollections[i]._renderNodeIndex = i;\n                }\n            }\n            this.renderNode = null;\n            this._renderNodeIndex = -1;\n            this.events.dispatch(this.events.remove, this);\n        }\n    }\n\n    /**\n     * Gets entity array.\n     * @public\n     * @returns {Array.<Entity>} -\n     */\n    public getEntities(): Entity[] {\n        return ([] as Entity[]).concat(this._entities);\n    }\n\n    /**\n     * Safety entities loop.\n     * @public\n     * @param {function} callback - Entity callback.\n     */\n    public each(callback: Function) {\n        let i = this._entities.length;\n        while (i--) {\n            let ei = this._entities[i];\n            ei && callback(ei);\n        }\n    }\n\n    /**\n     * Removes all entities from collection and clear handlers.\n     * @public\n     */\n    public clear() {\n        // TODO: Optimize by replace delete\n        // code to the clearEntity function.\n        this.billboardHandler.clear();\n        this.labelHandler.clear();\n        this.polylineHandler.clear();\n        this.rayHandler.clear();\n        this.pointCloudHandler.clear();\n        this.stripHandler.clear();\n        this.geoObjectHandler.clear();\n\n        let i = this._entities.length;\n        while (i--) {\n            let ei = this._entities[i];\n            if (this.renderNode && this.renderNode.renderer) {\n                this.renderNode.renderer.clearPickingColor(ei);\n                ei._pickingColor.clear();\n            }\n            this._clearEntity(ei);\n        }\n        this._entities.length = 0;\n        this._entities = [];\n    }\n\n    /**\n     * Clears entity recursively.\n     * @private\n     * @param {Entity} entity - Entity to clear.\n     */\n    protected _clearEntity(entity: Entity) {\n        entity._entityCollection = null;\n        entity._entityCollectionIndex = -1;\n        for (let i = 0; i < entity.childrenNodes.length; i++) {\n            this._clearEntity(entity.childrenNodes[i]);\n        }\n    }\n}\n\ntype EntityCollectionEventList = [\n    //\"entitymove\",\n    \"draw\",\n    \"drawend\",\n    \"add\",\n    \"remove\",\n    \"entityadd\",\n    \"entityremove\",\n    \"visibilitychange\",\n    \"mousemove\",\n    \"mouseenter\",\n    \"mouseleave\",\n    \"lclick\",\n    \"rclick\",\n    \"mclick\",\n    \"ldblclick\",\n    \"rdblclick\",\n    \"mdblclick\",\n    \"lup\",\n    \"rup\",\n    \"mup\",\n    \"ldown\",\n    \"rdown\",\n    \"mdown\",\n    \"lhold\",\n    \"rhold\",\n    \"mhold\",\n    \"mousewheel\",\n    \"touchmove\",\n    \"touchstart\",\n    \"touchend\",\n    \"doubletouch\",\n    \"touchleave\",\n    \"touchenter\"\n]\n\nconst ENTITYCOLLECTION_EVENTS: EntityCollectionEventList = [\n    // /**\n    //  * Triggered when entity has moved.\n    //  * @event EntityCollection#entitymove\n    //  */\n    // \"entitymove\",\n\n    /**\n     * Triggered when collection entities begin draw.\n     * @event EntityCollection#draw\n     */\n    \"draw\",\n\n    /**\n     * Triggered after collection has drawn.\n     * @event EntityCollection#drawend\n     */\n    \"drawend\",\n\n    /**\n     * Triggered when added to the render node.\n     * @event EntityCollection#add\n     */\n    \"add\",\n\n    /**\n     * Triggered when removed from the render node.\n     * @event EntityCollection#remove\n     */\n    \"remove\",\n\n    /**\n     * Triggered when new entity added to the collection.\n     * @event EntityCollection#entityadd\n     */\n    \"entityadd\",\n\n    /**\n     * Triggered when entity removes from the collection.\n     * @event EntityCollection#entityremove\n     */\n    \"entityremove\",\n\n    /**\n     * Triggered when visibility changes.\n     * @event EntityCollection#visibilitychange\n     */\n    \"visibilitychange\",\n\n    /**\n     * Triggered when mouse moves over the entity.\n     * @event EntityCollection#mousemove\n     */\n    \"mousemove\",\n\n    /**\n     * Triggered when mouse has entered over the entity.\n     * @event EntityCollection#mouseenter\n     */\n    \"mouseenter\",\n\n    /**\n     * Triggered when mouse leaves the entity.\n     * @event EntityCollection#mouseleave\n     */\n    \"mouseleave\",\n\n    /**\n     * Mouse left button clicked.\n     * @event EntityCollection#lclick\n     */\n    \"lclick\",\n\n    /**\n     * Mouse right button clicked.\n     * @event EntityCollection#rclick\n     */\n    \"rclick\",\n\n    /**\n     * Mouse right button clicked.\n     * @event EntityCollection#mclick\n     */\n    \"mclick\",\n\n    /**\n     * Mouse left button double click.\n     * @event EntityCollection#ldblclick\n     */\n    \"ldblclick\",\n\n    /**\n     * Mouse right button double click.\n     * @event EntityCollection#rdblclick\n     */\n    \"rdblclick\",\n\n    /**\n     * Mouse middle button double click.\n     * @event EntityCollection#mdblclick\n     */\n    \"mdblclick\",\n\n    /**\n     * Mouse left button up(stop pressing).\n     * @event EntityCollection#lup\n     */\n    \"lup\",\n\n    /**\n     * Mouse right button up(stop pressing).\n     * @event EntityCollection#rup\n     */\n    \"rup\",\n\n    /**\n     * Mouse middle button up(stop pressing).\n     * @event EntityCollection#mup\n     */\n    \"mup\",\n\n    /**\n     * Mouse left button is just pressed down(start pressing).\n     * @event EntityCollection#ldown\n     */\n    \"ldown\",\n\n    /**\n     * Mouse right button is just pressed down(start pressing).\n     * @event EntityCollection#rdown\n     */\n    \"rdown\",\n\n    /**\n     * Mouse middle button is just pressed down(start pressing).\n     * @event EntityCollection#mdown\n     */\n    \"mdown\",\n\n    /**\n     * Mouse left button is pressing.\n     * @event EntityCollection#lhold\n     */\n    \"lhold\",\n\n    /**\n     * Mouse right button is pressing.\n     * @event EntityCollection#rhold\n     */\n    \"rhold\",\n\n    /**\n     * Mouse middle button is pressing.\n     * @event EntityCollection#mhold\n     */\n    \"mhold\",\n\n    /**\n     * Mouse wheel is rotated.\n     * @event EntityCollection#mousewheel\n     */\n    \"mousewheel\",\n\n    /**\n     * Triggered when touch moves over the entity.\n     * @event EntityCollection#touchmove\n     */\n    \"touchmove\",\n\n    /**\n     * Triggered when entity begins to touch.\n     * @event EntityCollection#touchstart\n     */\n    \"touchstart\",\n\n    /**\n     * Triggered when entity ends touching.\n     * @event EntityCollection#touchend\n     */\n    \"touchend\",\n\n    /**\n     * Triggered entity double touch.\n     * @event EntityCollection#doubletouch\n     */\n    \"doubletouch\",\n\n    /**\n     * Triggered when touching leaves entity.\n     * @event EntityCollection#touchleave\n     */\n    \"touchleave\",\n\n    /**\n     * Triggered when touch enters over the entity.\n     * @event EntityCollection#touchenter\n     */\n    \"touchenter\"\n];\n\nexport {EntityCollection};\n","import * as mercator from '../mercator';\nimport {NW, NE, SW, SE, RENDERING, VISIBLE_DISTANCE} from './quadTree';\nimport {EntityCollection} from '../entity/EntityCollection';\nimport {Extent} from '../Extent';\nimport {LonLat} from '../LonLat';\nimport {Node} from \"../quadTree/Node\";\nimport {Planet} from \"../scene/Planet\";\nimport {Sphere} from '../bv/Sphere';\nimport {Segment} from \"../segment/Segment\";\nimport {Vec3} from '../math/Vec3';\nimport {Vector} from \"../layer/Vector\";\nimport {Entity} from \"../entity/Entity\";\n\ntype NodesDict = Record<number, Node>;\n\n/**\n * @todo: remove planet parameter. It's already available in the layer.\n */\nclass EntityCollectionNode {\n\n    public layer: Vector;\n    public parentNode: EntityCollectionNode | null;\n    public childrenNodes: EntityCollectionNode[];\n    public partId: number;\n    public nodeId: number;\n    public state: number | null;\n    public extent: Extent;\n    public count: number;\n    public deferredEntities: Entity[];\n    public entityCollection: EntityCollection | null;\n    public zoom: number;\n    public bsphere: Sphere;\n\n    public _inTheQueue: boolean;\n\n    constructor(layer: Vector, partId: number, parent: EntityCollectionNode | null, id: number, extent: Extent, planet: Planet, zoom: number) {\n        this.layer = layer;\n        this.parentNode = parent;\n        this.childrenNodes = [];\n        this.partId = partId;\n        this.nodeId = partId + id;\n        this.state = null;\n        this.extent = extent;\n        this.count = 0;\n        this.deferredEntities = [];\n        this.entityCollection = null;\n        this.zoom = zoom;\n        this._inTheQueue = false;\n\n        this.bsphere = new Sphere();\n\n        planet && this._setExtentBounds();\n    }\n\n    public insertEntity(entity: Entity, rightNow: boolean = false) {\n        this.buildTree([entity], rightNow);\n    }\n\n    protected _addEntitiesToCollection(entities: Entity[], rightNow: boolean = false) {\n        if (entities.length) {\n            const l = this.layer;\n            const p = l._planet!;\n\n            let ec = this.entityCollection;\n\n            if (!ec) {\n                ec = new EntityCollection({\n                    pickingEnabled: l._pickingEnabled,\n                    labelMaxLetters: l.labelMaxLetters\n                });\n                ec._layer = this.layer;\n                ec.addTo(p, true);\n                ec._quadNode = this;\n                l._bindEventsDefault(ec);\n                this.entityCollection = ec;\n            }\n\n            if (rightNow || !l.async) {\n                this.entityCollection!.addEntities(entities);\n            } else {\n                this.deferredEntities.push.apply(this.deferredEntities, entities);\n            }\n        }\n    }\n\n    protected _setExtentBounds() {\n        if (!this.nodeId) {\n            this.bsphere.radius = this.layer._planet!.ellipsoid.equatorialSize;\n            this.bsphere.center = new Vec3();\n        } else {\n            this.bsphere.setFromExtent(this.layer._planet!.ellipsoid, this.extent.inverseMercator());\n        }\n    }\n\n    public __setLonLat__(entity: Entity): LonLat {\n\n        if (entity._lonLat.isZero() && !entity._cartesian.isZero()) {\n            entity._lonLat = this.layer._planet!.ellipsoid.cartesianToLonLat(entity._cartesian);\n        }\n\n        if (Math.abs(entity._lonLat.lat) < mercator.MAX_LAT) {\n            entity._lonLatMerc = entity._lonLat.forwardMercator();\n        } else {\n            entity._lonLatMerc = new LonLat();\n        }\n        return entity._lonLatMerc;\n    }\n\n    public buildTree(entities: Entity[], rightNow: boolean = false) {\n\n        this.count += entities.length;\n\n        if (entities.length > this.layer._nodeCapacity) {\n            const cn = this.childrenNodes;\n            if (!cn.length) {\n                this.createChildrenNodes();\n            }\n\n            let en_nw = [],\n                en_ne = [],\n                en_sw = [],\n                en_se = [];\n\n            let i = entities.length;\n            while (i--) {\n                const ei = entities[i];\n                if (cn[NW].isInside(ei)) {\n                    ei._nodePtr = cn[NW];\n                    en_nw.push(ei);\n                } else if (cn[NE].isInside(ei)) {\n                    ei._nodePtr = cn[NE];\n                    en_ne.push(ei);\n                } else if (cn[SW].isInside(ei)) {\n                    ei._nodePtr = cn[SW];\n                    en_sw.push(ei);\n                } else if (cn[SE].isInside(ei)) {\n                    ei._nodePtr = cn[SE];\n                    en_se.push(ei);\n                }\n            }\n\n            en_nw.length && cn[NW].buildTree(en_nw, rightNow);\n            en_ne.length && cn[NE].buildTree(en_ne, rightNow);\n            en_sw.length && cn[SW].buildTree(en_sw, rightNow);\n            en_se.length && cn[SE].buildTree(en_se, rightNow);\n\n        } else {\n            this._addEntitiesToCollection(entities, rightNow);\n        }\n    }\n\n    public isInside(entity: Entity): boolean {\n        if (entity._lonLatMerc) {\n            return this.extent.isInside(entity._lonLatMerc);\n        } else {\n            return false;\n        }\n    }\n\n    public createChildrenNodes() {\n        const l = this.layer;\n        const ext = this.extent;\n        const size_x = ext.getWidth() * 0.5;\n        const size_y = ext.getHeight() * 0.5;\n        const ne = ext.northEast;\n        const sw = ext.southWest;\n        const id = this.nodeId * 4 + 1;\n        const c = new LonLat(sw.lon + size_x, sw.lat + size_y);\n        const nd = this.childrenNodes;\n        const p = this.layer._planet!;\n        const z = this.zoom + 1;\n\n        nd[NW] = new EntityCollectionNode(l, NW, this, id, new Extent(new LonLat(sw.lon, sw.lat + size_y), new LonLat(sw.lon + size_x, ne.lat)), p, z);\n        nd[NE] = new EntityCollectionNode(l, NE, this, id, new Extent(c, new LonLat(ne.lon, ne.lat)), p, z);\n        nd[SW] = new EntityCollectionNode(l, SW, this, id, new Extent(new LonLat(sw.lon, sw.lat), c), p, z);\n        nd[SE] = new EntityCollectionNode(l, SE, this, id, new Extent(new LonLat(sw.lon + size_x, sw.lat), new LonLat(ne.lon, sw.lat + size_y)), p, z);\n    }\n\n    public collectRenderCollectionsPASS1(visibleNodes: NodesDict, outArr: EntityCollection[]) {\n        const n = visibleNodes[this.nodeId];\n        if (n) {\n            const cn = this.childrenNodes;\n            if (this.entityCollection) {\n                this.renderCollection(outArr, visibleNodes);\n            } else if (cn.length) {\n                if (n.state === RENDERING) {\n                    this.layer._secondPASS.push(this);\n                } else {\n                    cn[NW].collectRenderCollectionsPASS1(visibleNodes, outArr);\n                    cn[NE].collectRenderCollectionsPASS1(visibleNodes, outArr);\n                    cn[SW].collectRenderCollectionsPASS1(visibleNodes, outArr);\n                    cn[SE].collectRenderCollectionsPASS1(visibleNodes, outArr);\n                }\n            }\n        }\n    }\n\n    public collectRenderCollectionsPASS2(visibleNodes: NodesDict, outArr: EntityCollection[], renderingNodeId: number) {\n        const p = this.layer._planet!;\n        const cam = p.camera;\n\n        const altVis = (cam.eye.distance(this.bsphere.center) - this.bsphere.radius <\n            VISIBLE_DISTANCE * Math.sqrt(cam._lonLat.height)) || cam._lonLat.height > 10000;\n\n        if (this.count > 0 && altVis && cam.frustum.containsSphere(this.bsphere)) {\n\n            const cn = this.childrenNodes;\n\n            if (this.entityCollection) {\n                this.renderCollection(outArr, visibleNodes, renderingNodeId);\n            } else if (cn.length) {\n                cn[NW].collectRenderCollectionsPASS2(visibleNodes, outArr, renderingNodeId);\n                cn[NE].collectRenderCollectionsPASS2(visibleNodes, outArr, renderingNodeId);\n                cn[SW].collectRenderCollectionsPASS2(visibleNodes, outArr, renderingNodeId);\n                cn[SE].collectRenderCollectionsPASS2(visibleNodes, outArr, renderingNodeId);\n            }\n        }\n    }\n\n    public applyCollection() {\n        this.entityCollection!.addEntities(this.deferredEntities);\n        this.deferredEntities.length = 0;\n        this.deferredEntities = [];\n        this._inTheQueue = false;\n    }\n\n    public traverseTree(callback: Function) {\n\n        const cn = this.childrenNodes;\n\n        if (this.entityCollection) {\n            callback(this);\n        } else if (cn.length) {\n            cn[NW].traverseTree(callback);\n            cn[NE].traverseTree(callback);\n            cn[SW].traverseTree(callback);\n            cn[SE].traverseTree(callback);\n        }\n    }\n\n    public renderCollection(outArr: EntityCollection[], visibleNodes: NodesDict, renderingNodeId?: number) {\n\n        const l = this.layer;\n\n        l._renderingNodes[this.nodeId] = true;\n\n        if (this.deferredEntities.length && !this._inTheQueue) {\n            if (l.async) {\n                l._queueDeferredNode(this);\n            } else {\n                this.applyCollection();\n            }\n        }\n\n        const ec = this.entityCollection!;\n\n        ec._fadingOpacity = l._fadingOpacity;\n        ec.scaleByDistance = l.scaleByDistance;\n        ec.pickingScale = l.pickingScale;\n        ec.polygonOffsetUnits = l.polygonOffsetUnits;\n\n        outArr.push(ec);\n\n        if (l.clampToGround || l.relativeToGround) {\n            const e = ec._entities;\n            let i = e.length;\n\n            if (visibleNodes[this.nodeId] && visibleNodes[this.nodeId].state === RENDERING) {\n                while (i--) {\n                    let ei = e[i];\n                    this.alignEntityToTheGround(ei, visibleNodes[this.nodeId].segment);\n                }\n            } else if (renderingNodeId) {\n                while (i--) {\n                    let ei = e[i];\n                    this.alignEntityToTheGround(ei, visibleNodes[renderingNodeId].segment);\n                }\n            } else {\n                const n = l._planet!._renderedNodes;\n                while (i--) {\n                    let ei = e[i];\n                    let j = n.length;\n                    while (j--) {\n                        if (n[j].segment.isEntityInside(ei)) {\n                            this.alignEntityToTheGround(ei, n[j].segment);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    public alignEntityToTheGround(entity: Entity, segment: Segment) {\n        let res = new Vec3();\n        segment.getEntityTerrainPoint(entity, res);\n        let alt = (Number(this.layer.relativeToGround) && entity._altitude) || 0.0;\n        if (alt) {\n            let n = this.layer._planet!.ellipsoid.getSurfaceNormal3v(res);\n            entity._setCartesian3vSilent(res.addA(n.scale(alt)));\n        } else {\n            entity._setCartesian3vSilent(res);\n        }\n    }\n\n    public isVisible(): boolean {\n        if (this.layer._renderingNodes[this.nodeId]) {\n            return true;\n        }\n        return false;\n    }\n}\n\nclass EntityCollectionNodeWGS84 extends EntityCollectionNode {\n\n    public isNorth: boolean;\n\n    constructor(layer: Vector, partId: number, parent: EntityCollectionNodeWGS84 | null, id: number, extent: Extent, planet: Planet, zoom: number) {\n        super(layer, partId, parent, id, extent, planet, zoom);\n        this.isNorth = false;\n    }\n\n    public override createChildrenNodes() {\n        const l = this.layer;\n        const ext = this.extent;\n        const size_x = ext.getWidth() * 0.5;\n        const size_y = ext.getHeight() * 0.5;\n        const ne = ext.northEast;\n        const sw = ext.southWest;\n        const id = this.nodeId * 4 + 1;\n        const c = new LonLat(sw.lon + size_x, sw.lat + size_y);\n        const nd = this.childrenNodes;\n        const p = this.layer._planet!;\n        const z = this.zoom + 1;\n\n        nd[NW] = new EntityCollectionNodeWGS84(l, NW, this, id, new Extent(new LonLat(sw.lon, sw.lat + size_y), new LonLat(sw.lon + size_x, ne.lat)), p, z);\n        nd[NE] = new EntityCollectionNodeWGS84(l, NE, this, id, new Extent(c, new LonLat(ne.lon, ne.lat)), p, z);\n        nd[SW] = new EntityCollectionNodeWGS84(l, SW, this, id, new Extent(new LonLat(sw.lon, sw.lat), c), p, z);\n        nd[SE] = new EntityCollectionNodeWGS84(l, SE, this, id, new Extent(new LonLat(sw.lon + size_x, sw.lat), new LonLat(ne.lon, sw.lat + size_y)), p, z);\n    }\n\n    protected override _setExtentBounds() {\n        if (this.extent.northEast.lat > 0) {\n            this.isNorth = true;\n        }\n        this.bsphere.setFromExtent(this.layer._planet!.ellipsoid, this.extent);\n    }\n\n    public override __setLonLat__(entity: Entity): LonLat {\n        if (entity._lonLat.isZero()) {\n            entity._lonLat = this.layer._planet!.ellipsoid.cartesianToLonLat(entity._cartesian);\n        }\n        return entity._lonLat;\n    }\n\n    public override isVisible(): boolean {\n        if (this.isNorth && this.layer._renderingNodesNorth[this.nodeId]) {\n            return true;\n        } else if (this.layer._renderingNodesSouth[this.nodeId]) {\n            return true;\n        }\n        return false;\n    }\n\n    public override isInside(entity: Entity): boolean {\n        return this.extent.isInside(entity._lonLat);\n    }\n\n    public override renderCollection(outArr: EntityCollection[], visibleNodes: NodesDict, renderingNode: number) {\n\n        if (this.isNorth) {\n            this.layer._renderingNodesNorth[this.nodeId] = true;\n        } else {\n            this.layer._renderingNodesSouth[this.nodeId] = true;\n        }\n\n        if (this.deferredEntities.length && !this._inTheQueue) {\n            if (this.layer.async) {\n                this.layer._queueDeferredNode(this);\n            } else {\n                this.applyCollection();\n            }\n        }\n\n        const ec = this.entityCollection!;\n\n        ec._fadingOpacity = this.layer._fadingOpacity;\n        ec.scaleByDistance = this.layer.scaleByDistance;\n        ec.pickingScale = this.layer.pickingScale;\n\n        outArr.push(ec);\n    }\n}\n\nexport {EntityCollectionNode, EntityCollectionNodeWGS84};\n","/**\n * @module og/math/coder\n */\n\nimport * as math from \"../math\";\nimport {NumberArray4, Vec4} from \"./Vec4\";\nimport {NumberArray3} from \"./Vec3\";\nimport {NumberArray2, Vec2} from \"./Vec2\";\n\n/**\n * Encode 32 bit float value to the RGBA vector.\n * @function\n * @param {number} v - 32 bit float value.\n * @returns {Vec4} - RGBA vector value.\n */\nexport function encodeFloatToRGBA(v: number): Vec4 {\n    let enc = new Vec4((1.0 * v) % 1, (255.0 * v) % 1, (65025.0 * v) % 1, (160581375.0 * v) % 1);\n    let yzww = new Vec4(enc.y / 255, enc.z / 255, enc.w / 255, 0);\n    return enc.subA(yzww);\n}\n\n/**\n * Decode RGBA vector to 32 bit float value.\n * @function\n * @param {Vec4} rgba - RGBA encoded 32 bit float value.\n * @returns {number} - Float value.\n */\nexport function decodeFloatFromRGBA(rgba: Vec4): number {\n    let s = 1.0 - math.step(128.0, rgba.x) * 2.0;\n    let e = 2.0 * math.mod(rgba.x, 128.0) + math.step(128.0, rgba.y) - 127.0;\n    let m = math.mod(rgba.y, 128.0) * 65536.0 + rgba.z * 256.0 + rgba.w + 8388608.0;\n    return s * math.exp2(e) * (m * 1.1920928955078125e-7);\n}\n\n/**\n * Decode RGBA vector to 32 bit float value.\n * @function\n * @param {NumberArray4 | NumberArray3} arr - RGBA encoded 32 bit float value.\n * @param {boolean} [use32=false] Use 32 bit result\n * @returns {number} - Float value.\n */\nexport function decodeFloatFromRGBAArr(arr: NumberArray4 | NumberArray3 | Uint8Array, use32: boolean = false): number {\n    let s = 1.0 - math.step(128.0, arr[0]) * 2.0;\n    let e = 2.0 * math.mod(arr[0], 128.0) + math.step(128.0, arr[1]) - 127.0;\n    let m = math.mod(arr[1], 128.0) * 65536.0 + arr[2] * 256.0 + (use32 ? arr[3] || 0.0 : 0.0) + 8388608.0;\n    return s * math.exp2(e) * (m * 1.1920928955078125e-7);\n}\n\n/**\n * Separate 64 bit value to two 32-bit float values.\n * @function\n * @param {number} value - Double type value.\n * @returns {Float32Array} Encoded array. (exactly 2 entries)\n */\nexport function doubleToTwoFloats(value: number): Float32Array {\n    let high: number, low: number;\n    if (value >= 0.0) {\n        let doubleHigh = Math.floor(value / 65536.0) * 65536.0;\n        high = Math.fround(doubleHigh);\n        low = Math.fround(value - doubleHigh);\n    } else {\n        let doubleHigh = Math.floor(-value / 65536.0) * 65536.0;\n        high = Math.fround(-doubleHigh);\n        low = Math.fround(value + doubleHigh);\n    }\n    return new Float32Array([high, low]);\n}\n\n/**\n * Separate 64 bit value to two 32-bit float values.\n * @function\n * @param {number} value - Double type value.\n * @param {NumberArray2 | Float32Array} - Reference out array.\n * @returns {NumberArray2 | Float32Array} Encoded array. (exactly 2 entries)\n */\nexport function doubleToTwoFloats2(value: number, highLowArr: NumberArray2 | Float32Array): NumberArray2 | Float32Array {\n    if (value >= 0.0) {\n        let doubleHigh = Math.floor(value / 65536.0) * 65536.0;\n        highLowArr[0] = Math.fround(doubleHigh);\n        highLowArr[1] = Math.fround(value - doubleHigh);\n    } else {\n        let doubleHigh = Math.floor(-value / 65536.0) * 65536.0;\n        highLowArr[0] = Math.fround(-doubleHigh);\n        highLowArr[1] = Math.fround(value + doubleHigh);\n    }\n    return highLowArr;\n}\n\n/**\n * Separate 64 bit value to two 32-bit float values.\n * @function\n * @param {number} value - Double type value.\n * @param {Vec2} highLowVec - Reference out vector object.\n * @returns {Vec2} Encoded array. (exactly 2 entries)\n */\nexport function doubleToTwoFloatsV2(value: number, highLowVec: Vec2): Vec2 {\n    if (value >= 0.0) {\n        let doubleHigh = Math.floor(value / 65536.0) * 65536.0;\n        highLowVec.x = Math.fround(doubleHigh);\n        highLowVec.y = Math.fround(value - doubleHigh);\n    } else {\n        let doubleHigh = Math.floor(-value / 65536.0) * 65536.0;\n        highLowVec.x = Math.fround(-doubleHigh);\n        highLowVec.y = Math.fround(value + doubleHigh);\n    }\n    return highLowVec;\n}\n","// @ts-nocheck\n\n/* eslint-disable no-unused-vars */\n/* eslint-disable curly */\n/* eslint-disable operator-linebreak */\n/* eslint-disable no-mixed-operators */\n\n/**\n * @module og/utils/earcut\n */\n\n'use strict';\n\n// ISC License\n//\n// Copyright (c) 2016, Mapbox\n//\n// Permission to use, copy, modify, and/or distribute this software for any purpose\n// with or without fee is hereby granted, provided that the above copyright notice\n// and this permission notice appear in all copies.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n// REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n// FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n// INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n// OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n// THIS SOFTWARE.\n//\n//https://github.com/mapbox/earcut\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, size;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (let i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and size are later used to transform coords into integers for z-order calculation\n        size = Math.max(maxX - minX, maxY - minY);\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, size);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) return null;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, size, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && size) indexCurve(ear, minX, minY, size);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (size ? isEarHashed(ear, minX, minY, size) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertice leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, size, 1);\n\n                // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, size, 2);\n\n                // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, size);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, size) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, size),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, size);\n\n    // first look for points inside the triangle in increasing z-order\n    var p = ear.nextZ;\n\n    while (p && p.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.nextZ;\n    }\n\n    // then look for points in decreasing z-order\n    p = ear.prevZ;\n\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, size) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, size);\n                earcutLinked(c, triangles, dim, minX, minY, size);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n            pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, size) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, size);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and size of the data bounding box\nfunction zOrder(x, y, minX, minY, size) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) / size;\n    y = 32767 * (y - minY) / size;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n        (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n        (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\n        locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if ((equals(p1, q1) && equals(p2, q2)) ||\n        (equals(p1, q2) && equals(p2, q1))) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\n        area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n            intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n            (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertice nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nfunction deviation(data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (let i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (let i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n}\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (let i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nfunction flatten(data) {\n    var dim = data[0][0].length,\n        result = { vertices: [], holes: [], dimensions: dim },\n        holeIndex = 0;\n\n    for (let i = 0; i < data.length; i++) {\n        for (let j = 0; j < data[i].length; j++) {\n            for (let d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n}\n\nexport { earcut, flatten };\n","import * as mercator from \"../mercator\";\nimport * as quadTree from \"../quadTree/quadTree\";\nimport {Extent} from \"../Extent\";\nimport {Handler} from \"../webgl/Handler\";\nimport {doubleToTwoFloatsV2} from \"../math/coder\";\nimport {Vector} from \"../layer/Vector\";\nimport {NumberArray2, Vec2} from \"../math/Vec2\";\nimport {Node} from \"../quadTree/Node\";\nimport {Vec3} from \"../math/Vec3\";\nimport {Vec4} from \"../math/Vec4\";\nimport {\n    CoordinatesType,\n    GeometryType,\n    Geometry,\n    IMultiLineStringCoordinates,\n    ILineStringCoordinates,\n    IMultiPolygonCoordinates,\n    IPolygonCoordinates\n} from \"./Geometry\";\n\nimport {earcut, flatten} from \"../utils/earcut\";\nimport {WebGLBufferExt} from \"../webgl/Handler\";\n\nconst POLYVERTICES_BUFFER = 0;\nconst POLYINDEXES_BUFFER = 1;\nconst POLYCOLORS_BUFFER = 2;\nconst LINEVERTICES_BUFFER = 3;\nconst LINEINDEXES_BUFFER = 4;\nconst LINEORDERS_BUFFER = 5;\nconst LINECOLORS_BUFFER = 6;\nconst LINETHICKNESS_BUFFER = 7;\nconst LINESTROKES_BUFFER = 8;\nconst LINESTROKECOLORS_BUFFER = 9;\nconst POLYPICKINGCOLORS_BUFFER = 10;\nconst LINEPICKINGCOLORS_BUFFER = 11;\n\nfunction doubleToTwoFloats(v: NumberArray2, high: Vec2, low: Vec2) {\n    let x = v[0],\n        y = v[1];\n\n    if (x >= 0.0) {\n        let doubleHigh = Math.floor(x / 65536.0) * 65536.0;\n        high.x = Math.fround(doubleHigh);\n        low.x = Math.fround(x - doubleHigh);\n    } else {\n        let doubleHigh = Math.floor(-x / 65536.0) * 65536.0;\n        high.x = Math.fround(-doubleHigh);\n        low.x = Math.fround(x + doubleHigh);\n    }\n\n    if (y >= 0.0) {\n        let doubleHigh = Math.floor(y / 65536.0) * 65536.0;\n        high.y = Math.fround(doubleHigh);\n        low.y = Math.fround(y - doubleHigh);\n    } else {\n        let doubleHigh = Math.floor(-y / 65536.0) * 65536.0;\n        high.y = Math.fround(-doubleHigh);\n        low.y = Math.fround(y + doubleHigh);\n    }\n}\n\nlet tempHigh = new Vec2(),\n    tempLow = new Vec2(),\n    tempHighLow = new Vec2();\n\nclass GeometryHandler {\n\n    static __counter__: number = 0;\n\n    protected __id: number;\n\n    protected _layer: Vector;\n\n    protected _handler: Handler | null;\n\n    protected _geometries: Geometry[];\n\n    protected _updatedGeometryArr: Geometry[];\n    protected _updatedGeometry: Record<number, boolean>;\n\n    protected _removeGeometryExtentArr: Extent[];\n    protected _removeGeometryExtents: Record<number, boolean>;\n\n    // Polygon arrays\n    protected _polyVerticesHighMerc: number[];\n    protected _polyVerticesLowMerc: number[];\n    protected _polyColors: number[];\n    protected _polyPickingColors: number[];\n    protected _polyIndexes: number[];\n\n    // Line arrays\n    protected _lineVerticesHighMerc: number[];\n    protected _lineVerticesLowMerc: number[];\n    protected _lineOrders: number[];\n    protected _lineIndexes: number[];\n    protected _lineColors: number[];\n    protected _linePickingColors: number[];\n    protected _lineThickness: number[];\n    protected _lineStrokes: number[];\n    protected _lineStrokeColors: number[];\n\n    // Buffers\n    public _polyVerticesHighBufferMerc: WebGLBufferExt | null;\n    public _polyVerticesLowBufferMerc: WebGLBufferExt | null;\n    public _polyColorsBuffer: WebGLBufferExt | null;\n    public _polyPickingColorsBuffer: WebGLBufferExt | null;\n    public _polyIndexesBuffer: WebGLBufferExt | null;\n\n    public _lineVerticesHighBufferMerc: WebGLBufferExt | null;\n    public _lineVerticesLowBufferMerc: WebGLBufferExt | null;\n    public _lineColorsBuffer: WebGLBufferExt | null;\n    public _linePickingColorsBuffer: WebGLBufferExt | null;\n    public _lineThicknessBuffer: WebGLBufferExt | null;\n    public _lineStrokesBuffer: WebGLBufferExt | null;\n    public _lineStrokeColorsBuffer: WebGLBufferExt | null;\n    public _lineOrdersBuffer: WebGLBufferExt | null;\n    public _lineIndexesBuffer: WebGLBufferExt | null;\n\n    protected _buffersUpdateCallbacks: Function[];\n\n    protected _changedBuffers: boolean[];\n\n    constructor(layer: Vector) {\n        this.__id = GeometryHandler.__counter__++;\n\n        this._layer = layer;\n\n        this._handler = null;\n\n        this._geometries = [];\n\n        this._updatedGeometryArr = [];\n        this._updatedGeometry = {};\n\n        this._removeGeometryExtentArr = [];\n        this._removeGeometryExtents = {};\n\n        // Polygon arrays\n        this._polyVerticesHighMerc = [];\n        this._polyVerticesLowMerc = [];\n        this._polyColors = [];\n        this._polyPickingColors = [];\n        this._polyIndexes = [];\n\n        // Line arrays\n        this._lineVerticesHighMerc = [];\n        this._lineVerticesLowMerc = [];\n        this._lineOrders = [];\n        this._lineIndexes = [];\n        this._lineColors = [];\n        this._linePickingColors = [];\n        this._lineThickness = [];\n        this._lineStrokes = [];\n        this._lineStrokeColors = [];\n\n        // Buffers\n        this._polyVerticesHighBufferMerc = null;\n        this._polyVerticesLowBufferMerc = null;\n        this._polyColorsBuffer = null;\n        this._polyPickingColorsBuffer = null;\n        this._polyIndexesBuffer = null;\n\n        this._lineVerticesHighBufferMerc = null;\n        this._lineVerticesLowBufferMerc = null;\n        this._lineColorsBuffer = null;\n        this._linePickingColorsBuffer = null;\n        this._lineThicknessBuffer = null;\n        this._lineStrokesBuffer = null;\n        this._lineStrokeColorsBuffer = null;\n        this._lineOrdersBuffer = null;\n        this._lineIndexesBuffer = null;\n\n        this._buffersUpdateCallbacks = [];\n        this._buffersUpdateCallbacks[POLYVERTICES_BUFFER] = this.createPolyVerticesBuffer;\n        this._buffersUpdateCallbacks[POLYINDEXES_BUFFER] = this.createPolyIndexesBuffer;\n        this._buffersUpdateCallbacks[POLYCOLORS_BUFFER] = this.createPolyColorsBuffer;\n        this._buffersUpdateCallbacks[LINEVERTICES_BUFFER] = this.createLineVerticesBuffer;\n        this._buffersUpdateCallbacks[LINEINDEXES_BUFFER] = this.createLineIndexesBuffer;\n        this._buffersUpdateCallbacks[LINEORDERS_BUFFER] = this.createLineOrdersBuffer;\n        this._buffersUpdateCallbacks[LINECOLORS_BUFFER] = this.createLineColorsBuffer;\n        this._buffersUpdateCallbacks[LINETHICKNESS_BUFFER] = this.createLineThicknessBuffer;\n        this._buffersUpdateCallbacks[LINESTROKES_BUFFER] = this.createLineStrokesBuffer;\n        this._buffersUpdateCallbacks[LINESTROKECOLORS_BUFFER] = this.createLineStrokeColorsBuffer;\n        this._buffersUpdateCallbacks[POLYPICKINGCOLORS_BUFFER] = this.createPolyPickingColorsBuffer;\n        this._buffersUpdateCallbacks[LINEPICKINGCOLORS_BUFFER] = this.createLinePickingColorsBuffer;\n\n        this._changedBuffers = new Array(this._buffersUpdateCallbacks.length);\n    }\n\n    static appendLineData(\n        pathArr: CoordinatesType[][],\n        isClosed: boolean,\n        color: Vec4,\n        pickingColor: Vec3,\n        thickness: number,\n        strokeColor: Vec4,\n        strokeSize: number,\n        outVerticesHigh: number[],\n        outVerticesLow: number[],\n        outOrders: number[],\n        outIndexes: number[],\n        outColors: number[],\n        outPickingColors: number[],\n        outThickness: number[],\n        outStrokeColors: number[],\n        outStrokes: number[],\n        outVerticesHigh2: number[],\n        outVerticesLow2: number[]\n    ) {\n        var index = 0;\n\n        if (outIndexes.length > 0) {\n            index = outIndexes[outIndexes.length - 5] + 9;\n            outIndexes.push(index, index);\n        } else {\n            outIndexes.push(0, 0);\n        }\n\n        var t = thickness,\n            c = [color.x, color.y, color.z, color.w],\n            s = strokeSize,\n            sc = [strokeColor.x, strokeColor.y, strokeColor.z, strokeColor.w],\n            p = [pickingColor.x, pickingColor.y, pickingColor.z, 1.0];\n\n        for (let j = 0; j < pathArr.length; j++) {\n            var path = pathArr[j];\n\n            if (path.length === 0) {\n                continue;\n            }\n\n            let startIndex = index;\n            let last: CoordinatesType;\n            if (isClosed) {\n                last = path[path.length - 1];\n            } else {\n                let p0 = path[0],\n                    p1 = path[1];\n\n                if (!p1) {\n                    p1 = p0;\n                }\n\n                last = [p0[0] + p0[0] - p1[0], p0[1] + p0[1] - p1[1]];\n            }\n\n            doubleToTwoFloats(last as NumberArray2, tempHigh, tempLow);\n\n            outVerticesHigh.push(\n                tempHigh.x, tempHigh.y,\n                tempHigh.x, tempHigh.y,\n                tempHigh.x, tempHigh.y,\n                tempHigh.x, tempHigh.y\n            );\n            outVerticesLow.push(\n                tempLow.x, tempLow.y,\n                tempLow.x, tempLow.y,\n                tempLow.x, tempLow.y,\n                tempLow.x, tempLow.y\n            );\n\n            outVerticesHigh2.push(\n                tempHigh.x, tempHigh.y,\n                tempHigh.x, tempHigh.y,\n                tempHigh.x, tempHigh.y,\n                tempHigh.x, tempHigh.y\n            );\n            outVerticesLow2.push(\n                tempLow.x, tempLow.y,\n                tempLow.x, tempLow.y,\n                tempLow.x, tempLow.y,\n                tempLow.x, tempLow.y\n            );\n\n            outOrders.push(1, -1, 2, -2);\n\n            outThickness.push(t, t, t, t);\n            outStrokes.push(s, s, s, s);\n            outColors.push(\n                c[0], c[1], c[2], c[3],\n                c[0], c[1], c[2], c[3],\n                c[0], c[1], c[2], c[3],\n                c[0], c[1], c[2], c[3]\n            );\n            outStrokeColors.push(\n                sc[0], sc[1], sc[2], sc[3],\n                sc[0], sc[1], sc[2], sc[3],\n                sc[0], sc[1], sc[2], sc[3],\n                sc[0], sc[1], sc[2], sc[3]\n            );\n            outPickingColors.push(\n                p[0], p[1], p[2], p[3],\n                p[0], p[1], p[2], p[3],\n                p[0], p[1], p[2], p[3],\n                p[0], p[1], p[2], p[3]\n            );\n\n            for (let i = 0; i < path.length; i++) {\n                let cur = path[i];\n\n                doubleToTwoFloats(cur as NumberArray2, tempHigh, tempLow);\n\n                outVerticesHigh.push(\n                    tempHigh.x, tempHigh.y,\n                    tempHigh.x, tempHigh.y,\n                    tempHigh.x, tempHigh.y,\n                    tempHigh.x, tempHigh.y\n                );\n                outVerticesLow.push(\n                    tempLow.x, tempLow.y,\n                    tempLow.x, tempLow.y,\n                    tempLow.x, tempLow.y,\n                    tempLow.x, tempLow.y\n                );\n\n                outVerticesHigh2.push(\n                    tempHigh.x, tempHigh.y,\n                    tempHigh.x, tempHigh.y,\n                    tempHigh.x, tempHigh.y,\n                    tempHigh.x, tempHigh.y\n                );\n                outVerticesLow2.push(\n                    tempLow.x, tempLow.y,\n                    tempLow.x, tempLow.y,\n                    tempLow.x, tempLow.y,\n                    tempLow.x, tempLow.y\n                );\n\n                outOrders.push(1, -1, 2, -2);\n                outThickness.push(t, t, t, t);\n                outStrokes.push(s, s, s, s);\n                outColors.push(\n                    c[0], c[1], c[2], c[3],\n                    c[0], c[1], c[2], c[3],\n                    c[0], c[1], c[2], c[3],\n                    c[0], c[1], c[2], c[3]\n                );\n                outStrokeColors.push(\n                    sc[0], sc[1], sc[2], sc[3],\n                    sc[0], sc[1], sc[2], sc[3],\n                    sc[0], sc[1], sc[2], sc[3],\n                    sc[0], sc[1], sc[2], sc[3]\n                );\n                outPickingColors.push(\n                    p[0], p[1], p[2], p[3],\n                    p[0], p[1], p[2], p[3],\n                    p[0], p[1], p[2], p[3],\n                    p[0], p[1], p[2], p[3]\n                );\n                outIndexes.push(index++, index++, index++, index++);\n            }\n\n            let first: CoordinatesType;\n            if (isClosed) {\n                first = path[0];\n                outIndexes.push(startIndex, startIndex + 1, startIndex + 1, startIndex + 1);\n            } else {\n                let p0 = path[path.length - 1],\n                    p1 = path[path.length - 2];\n\n                if (!p1) {\n                    p1 = p0;\n                }\n\n                first = [p0[0] + p0[0] - p1[0], p0[1] + p0[1] - p1[1]];\n                outIndexes.push(index - 1, index - 1, index - 1, index - 1);\n            }\n\n            doubleToTwoFloats(first as NumberArray2, tempHigh, tempLow);\n\n            outVerticesHigh.push(\n                tempHigh.x, tempHigh.y,\n                tempHigh.x, tempHigh.y,\n                tempHigh.x, tempHigh.y,\n                tempHigh.x, tempHigh.y\n            );\n            outVerticesLow.push(\n                tempLow.x, tempLow.y,\n                tempLow.x, tempLow.y,\n                tempLow.x, tempLow.y,\n                tempLow.x, tempLow.y\n            );\n\n            outVerticesHigh2.push(\n                tempHigh.x, tempHigh.y,\n                tempHigh.x, tempHigh.y,\n                tempHigh.x, tempHigh.y,\n                tempHigh.x, tempHigh.y\n            );\n            outVerticesLow2.push(\n                tempLow.x, tempLow.y,\n                tempLow.x, tempLow.y,\n                tempLow.x, tempLow.y,\n                tempLow.x, tempLow.y\n            );\n\n            outOrders.push(1, -1, 2, -2);\n            outThickness.push(t, t, t, t);\n            outStrokes.push(s, s, s, s);\n            outColors.push(\n                c[0], c[1], c[2], c[3],\n                c[0], c[1], c[2], c[3],\n                c[0], c[1], c[2], c[3],\n                c[0], c[1], c[2], c[3]\n            );\n            outStrokeColors.push(\n                sc[0], sc[1], sc[2], sc[3],\n                sc[0], sc[1], sc[2], sc[3],\n                sc[0], sc[1], sc[2], sc[3],\n                sc[0], sc[1], sc[2], sc[3]\n            );\n            outPickingColors.push(\n                p[0], p[1], p[2], p[3],\n                p[0], p[1], p[2], p[3],\n                p[0], p[1], p[2], p[3],\n                p[0], p[1], p[2], p[3]\n            );\n\n            if (j < pathArr.length - 1) {\n                index += 8;\n                outIndexes.push(index, index);\n            }\n        }\n    }\n\n    public assignHandler(handler: Handler) {\n        this._handler = handler;\n        this.refresh();\n        if (handler.isInitialized()) {\n            this.update();\n        }\n    }\n\n    /**\n     * @public\n     * @param {Geometry} geometry - Geometry object.\n     */\n    public add(geometry: Geometry) {\n        //\n        // Triangulates polygon and sets geometry data.\n        if (geometry._handlerIndex === -1) {\n            geometry._handler = this;\n            geometry._handlerIndex = this._geometries.length;\n\n            this._geometries.push(geometry);\n\n            let pickingColor = geometry._entity!._pickingColor.scaleTo(1 / 255);\n\n            geometry._polyVerticesHighMerc = [];\n            geometry._polyVerticesLowMerc = [];\n            geometry._lineVerticesHighMerc = [];\n            geometry._lineVerticesLowMerc = [];\n\n            if ((geometry._coordinates as IPolygonCoordinates)[0].length) {\n                if (geometry.type === GeometryType.POLYGON) {\n                    let coordinates = geometry._coordinates as IPolygonCoordinates;\n                    let ci: IPolygonCoordinates = [];\n                    for (let j = 0; j < coordinates.length; j++) {\n                        ci[j] = [];\n                        for (let k = 0; k < coordinates[j].length; k++) {\n                            ci[j][k] = [mercator.forward_lon(coordinates[j][k][0]), mercator.forward_lat(coordinates[j][k][1])];\n                        }\n                    }\n\n                    let data = flatten(ci);\n                    let indexes: number[] = earcut(data.vertices, data.holes, 2);\n\n                    geometry._polyVerticesHandlerIndex = this._polyVerticesHighMerc.length;\n                    geometry._polyIndexesHandlerIndex = this._polyIndexes.length;\n\n                    for (let i = 0; i < indexes.length; i++) {\n                        this._polyIndexes.push(indexes[i] + geometry._polyVerticesHandlerIndex * 0.5);\n                    }\n\n                    let color = geometry._style.fillColor;\n\n                    let verticesHigh = [],\n                        verticesLow = [];\n\n                    for (let i = 0; i < data.vertices.length * 0.5; i++) {\n                        this._polyColors.push(color.x, color.y, color.z, color.w);\n                        this._polyPickingColors.push(pickingColor.x, pickingColor.y, pickingColor.z, 1.0);\n                    }\n\n                    for (let i = 0; i < data.vertices.length; i++) {\n                        doubleToTwoFloatsV2(data.vertices[i], tempHighLow);\n                        verticesHigh[i] = tempHighLow.x;\n                        verticesLow[i] = tempHighLow.y;\n                    }\n\n                    geometry._polyVerticesHighMerc = verticesHigh;\n                    geometry._polyVerticesLowMerc = verticesLow;\n\n                    this._polyVerticesHighMerc.push.apply(this._polyVerticesHighMerc, verticesHigh);\n                    this._polyVerticesLowMerc.push.apply(this._polyVerticesLowMerc, verticesLow);\n\n                    geometry._polyVerticesLength = data.vertices.length;\n                    geometry._polyIndexesLength = indexes.length;\n\n                    // Creates polygon stroke data\n                    geometry._lineVerticesHandlerIndex = this._lineVerticesHighMerc.length;\n                    geometry._lineOrdersHandlerIndex = this._lineOrders.length;\n                    geometry._lineIndexesHandlerIndex = this._lineIndexes.length;\n                    geometry._lineColorsHandlerIndex = this._lineColors.length;\n                    geometry._lineThicknessHandlerIndex = this._lineThickness.length;\n\n                    GeometryHandler.appendLineData(\n                        ci,\n                        true,\n                        geometry._style.lineColor,\n                        pickingColor,\n                        geometry._style.lineWidth,\n                        geometry._style.strokeColor,\n                        geometry._style.strokeWidth,\n                        this._lineVerticesHighMerc,\n                        this._lineVerticesLowMerc,\n                        this._lineOrders,\n                        this._lineIndexes,\n                        this._lineColors,\n                        this._linePickingColors,\n                        this._lineThickness,\n                        this._lineStrokeColors,\n                        this._lineStrokes,\n                        geometry._lineVerticesHighMerc,\n                        geometry._lineVerticesLowMerc\n                    );\n\n                    geometry._lineVerticesLength = this._lineVerticesHighMerc.length - geometry._lineVerticesHandlerIndex;\n                    geometry._lineOrdersLength = this._lineOrders.length - geometry._lineOrdersHandlerIndex;\n                    geometry._lineIndexesLength = this._lineIndexes.length - geometry._lineIndexesHandlerIndex;\n                    geometry._lineColorsLength = this._lineColors.length - geometry._lineColorsHandlerIndex;\n                    geometry._lineThicknessLength = this._lineThickness.length - geometry._lineThicknessHandlerIndex;\n\n                } else if (geometry.type === GeometryType.MULTIPOLYGON) {\n\n                    let coordinates = geometry._coordinates as IMultiPolygonCoordinates;\n                    let vertices: number[] = [],\n                        indexes: number[] = [];\n\n                    // Creates polygon stroke data\n                    geometry._lineVerticesHandlerIndex = this._lineVerticesHighMerc.length;\n                    geometry._lineOrdersHandlerIndex = this._lineOrders.length;\n                    geometry._lineIndexesHandlerIndex = this._lineIndexes.length;\n                    geometry._lineColorsHandlerIndex = this._lineColors.length;\n                    geometry._lineThicknessHandlerIndex = this._lineThickness.length;\n\n                    for (let i = 0; i < coordinates.length; i++) {\n                        let cci: CoordinatesType[][] = coordinates[i];\n                        let ci: CoordinatesType[][] = [];\n                        for (let j = 0; j < cci.length; j++) {\n                            ci[j] = [];\n                            for (let k = 0; k < coordinates[i][j].length; k++) {\n                                ci[j][k] = [mercator.forward_lon(cci[j][k][0]), mercator.forward_lat(cci[j][k][1])];\n                            }\n                        }\n                        let data = flatten(ci);\n                        let dataIndexes: number[] = earcut(data.vertices, data.holes, 2);\n\n                        for (let j = 0; j < dataIndexes.length; j++) {\n                            indexes.push(dataIndexes[j] + vertices.length * 0.5);\n                        }\n\n                        vertices.push.apply(vertices, data.vertices);\n\n                        GeometryHandler.appendLineData(\n                            ci,\n                            true,\n                            geometry._style.lineColor,\n                            pickingColor,\n                            geometry._style.lineWidth,\n                            geometry._style.strokeColor,\n                            geometry._style.strokeWidth,\n                            this._lineVerticesHighMerc,\n                            this._lineVerticesLowMerc,\n                            this._lineOrders,\n                            this._lineIndexes,\n                            this._lineColors,\n                            this._linePickingColors,\n                            this._lineThickness,\n                            this._lineStrokeColors,\n                            this._lineStrokes,\n                            geometry._lineVerticesHighMerc,\n                            geometry._lineVerticesLowMerc\n                        );\n                    }\n\n                    geometry._polyVerticesHandlerIndex = this._polyVerticesHighMerc.length;\n                    geometry._polyIndexesHandlerIndex = this._polyIndexes.length;\n\n                    for (let i = 0; i < indexes.length; i++) {\n                        this._polyIndexes.push(indexes[i] + geometry._polyVerticesHandlerIndex * 0.5);\n                    }\n\n                    let color = geometry._style.fillColor;\n\n                    let verticesHigh = [],\n                        verticesLow = [];\n\n                    for (let i = 0; i < vertices.length * 0.5; i++) {\n                        this._polyColors.push(color.x, color.y, color.z, color.w);\n                        this._polyPickingColors.push(\n                            pickingColor.x,\n                            pickingColor.y,\n                            pickingColor.z,\n                            1.0\n                        );\n                    }\n\n                    for (let i = 0; i < vertices.length; i++) {\n                        doubleToTwoFloatsV2(vertices[i], tempHighLow);\n                        verticesHigh[i] = tempHighLow.x;\n                        verticesLow[i] = tempHighLow.y;\n                    }\n\n                    geometry._polyVerticesHighMerc = verticesHigh;\n                    geometry._polyVerticesLowMerc = verticesLow;\n\n                    this._polyVerticesHighMerc.push.apply(this._polyVerticesHighMerc, verticesHigh);\n                    this._polyVerticesLowMerc.push.apply(this._polyVerticesLowMerc, verticesLow);\n\n                    geometry._polyVerticesLength = vertices.length;\n                    geometry._polyIndexesLength = indexes.length;\n\n                    geometry._lineVerticesLength = this._lineVerticesHighMerc.length - geometry._lineVerticesHandlerIndex;\n                    geometry._lineOrdersLength = this._lineOrders.length - geometry._lineOrdersHandlerIndex;\n                    geometry._lineIndexesLength = this._lineIndexes.length - geometry._lineIndexesHandlerIndex;\n                    geometry._lineColorsLength = this._lineColors.length - geometry._lineColorsHandlerIndex;\n                    geometry._lineThicknessLength = this._lineThickness.length - geometry._lineThicknessHandlerIndex;\n\n                } else if (geometry.type === GeometryType.LINESTRING) {\n\n                    let coordinates: ILineStringCoordinates = geometry._coordinates as ILineStringCoordinates;\n                    let ci = new Array(coordinates.length);\n                    for (let j = 0; j < coordinates.length; j++) {\n                        ci[j] = [mercator.forward_lon(coordinates[j][0]), mercator.forward_lat(coordinates[j][1])];\n                    }\n\n                    // Creates polygon stroke data\n                    geometry._lineVerticesHandlerIndex = this._lineVerticesHighMerc.length;\n                    geometry._lineOrdersHandlerIndex = this._lineOrders.length;\n                    geometry._lineIndexesHandlerIndex = this._lineIndexes.length;\n                    geometry._lineColorsHandlerIndex = this._lineColors.length;\n                    geometry._lineThicknessHandlerIndex = this._lineThickness.length;\n\n                    GeometryHandler.appendLineData(\n                        [ci],\n                        false,\n                        geometry._style.lineColor,\n                        pickingColor,\n                        geometry._style.lineWidth,\n                        geometry._style.strokeColor,\n                        geometry._style.strokeWidth,\n                        this._lineVerticesHighMerc,\n                        this._lineVerticesLowMerc,\n                        this._lineOrders,\n                        this._lineIndexes,\n                        this._lineColors,\n                        this._linePickingColors,\n                        this._lineThickness,\n                        this._lineStrokeColors,\n                        this._lineStrokes,\n                        geometry._lineVerticesHighMerc,\n                        geometry._lineVerticesLowMerc\n                    );\n\n                    geometry._lineVerticesLength = this._lineVerticesHighMerc.length - geometry._lineVerticesHandlerIndex;\n                    geometry._lineOrdersLength = this._lineOrders.length - geometry._lineOrdersHandlerIndex;\n                    geometry._lineIndexesLength = this._lineIndexes.length - geometry._lineIndexesHandlerIndex;\n                    geometry._lineColorsLength = this._lineColors.length - geometry._lineColorsHandlerIndex;\n                    geometry._lineThicknessLength = this._lineThickness.length - geometry._lineThicknessHandlerIndex;\n\n                } else if (geometry.type === GeometryType.MULTILINESTRING) {\n\n                    let coordinates = geometry._coordinates as IMultiLineStringCoordinates;\n                    let ci: IMultiLineStringCoordinates = [];\n                    for (let j = 0; j < coordinates.length; j++) {\n                        ci[j] = [];\n                        for (let k = 0; k < coordinates[j].length; k++) {\n                            ci[j][k] = [mercator.forward_lon(coordinates[j][k][0]), mercator.forward_lat(coordinates[j][k][1])];\n                        }\n                    }\n\n                    // Creates polygon stroke data\n                    geometry._lineVerticesHandlerIndex = this._lineVerticesHighMerc.length;\n                    geometry._lineOrdersHandlerIndex = this._lineOrders.length;\n                    geometry._lineIndexesHandlerIndex = this._lineIndexes.length;\n                    geometry._lineColorsHandlerIndex = this._lineColors.length;\n                    geometry._lineThicknessHandlerIndex = this._lineThickness.length;\n\n                    GeometryHandler.appendLineData(\n                        ci,\n                        false,\n                        geometry._style.lineColor,\n                        pickingColor,\n                        geometry._style.lineWidth,\n                        geometry._style.strokeColor,\n                        geometry._style.strokeWidth,\n                        this._lineVerticesHighMerc,\n                        this._lineVerticesLowMerc,\n                        this._lineOrders,\n                        this._lineIndexes,\n                        this._lineColors,\n                        this._linePickingColors,\n                        this._lineThickness,\n                        this._lineStrokeColors,\n                        this._lineStrokes,\n                        geometry._lineVerticesHighMerc,\n                        geometry._lineVerticesLowMerc\n                    );\n\n                    geometry._lineVerticesLength = this._lineVerticesHighMerc.length - geometry._lineVerticesHandlerIndex;\n                    geometry._lineOrdersLength = this._lineOrders.length - geometry._lineOrdersHandlerIndex;\n                    geometry._lineIndexesLength = this._lineIndexes.length - geometry._lineIndexesHandlerIndex;\n                    geometry._lineColorsLength = this._lineColors.length - geometry._lineColorsHandlerIndex;\n                    geometry._lineThicknessLength = this._lineThickness.length - geometry._lineThicknessHandlerIndex;\n                }\n            }\n\n            // Refresh visibility\n            this.setGeometryVisibility(geometry);\n\n            !this._updatedGeometry[geometry.__id] && this._updatedGeometryArr.push(geometry);\n            this._updatedGeometry[geometry.__id] = true;\n            this.refresh();\n        }\n    }\n\n    public remove(geometry: Geometry) {\n\n        const index = geometry._handlerIndex;\n        if (index !== -1) {\n            this._geometries.splice(index, 1);\n\n            // polygon\n            // this._polyVerticesLonLat.splice(geometry._polyVerticesHandlerIndex, geometry._polyVerticesLength);\n\n            this._polyVerticesHighMerc.splice(geometry._polyVerticesHandlerIndex, geometry._polyVerticesLength);\n            this._polyVerticesLowMerc.splice(geometry._polyVerticesHandlerIndex, geometry._polyVerticesLength);\n\n            this._polyColors.splice(geometry._polyVerticesHandlerIndex * 2, geometry._polyVerticesLength * 2);\n            this._polyPickingColors.splice(geometry._polyVerticesHandlerIndex * 2, geometry._polyVerticesLength * 2);\n            this._polyIndexes.splice(geometry._polyIndexesHandlerIndex, geometry._polyIndexesLength);\n\n            let di = geometry._polyVerticesLength * 0.5;\n            for (let i = geometry._polyIndexesHandlerIndex; i < this._polyIndexes.length; i++) {\n                this._polyIndexes[i] -= di;\n            }\n\n            // line\n            // this._lineVerticesLonLat.splice(geometry._lineVerticesHandlerIndex, geometry._lineVerticesLength);\n\n            this._lineVerticesHighMerc.splice(geometry._lineVerticesHandlerIndex, geometry._lineVerticesLength);\n            this._lineVerticesLowMerc.splice(geometry._lineVerticesHandlerIndex, geometry._lineVerticesLength);\n\n            this._lineOrders.splice(geometry._lineOrdersHandlerIndex, geometry._lineOrdersLength);\n            this._lineColors.splice(geometry._lineColorsHandlerIndex, geometry._lineColorsLength);\n            this._linePickingColors.splice(geometry._lineColorsHandlerIndex, geometry._lineColorsLength);\n            this._lineStrokeColors.splice(geometry._lineColorsHandlerIndex, geometry._lineColorsLength);\n            this._lineThickness.splice(geometry._lineThicknessHandlerIndex, geometry._lineThicknessLength);\n            this._lineStrokes.splice(geometry._lineThicknessHandlerIndex, geometry._lineThicknessLength);\n            this._lineIndexes.splice(geometry._lineIndexesHandlerIndex, geometry._lineIndexesLength);\n\n            di = geometry._lineVerticesLength * 0.5;\n            for (let i = geometry._lineIndexesHandlerIndex; i < this._lineIndexes.length; i++) {\n                this._lineIndexes[i] -= di;\n            }\n\n            // reindex\n            let g = this._geometries;\n            for (let i = index; i < g.length; i++) {\n                let gi = g[i];\n\n                gi._handlerIndex = i;\n                gi._polyVerticesHandlerIndex -= geometry._polyVerticesLength;\n                gi._polyIndexesHandlerIndex -= geometry._polyIndexesLength;\n\n                gi._lineVerticesHandlerIndex -= geometry._lineVerticesLength;\n                gi._lineOrdersHandlerIndex -= geometry._lineOrdersLength;\n                gi._lineColorsHandlerIndex -= geometry._lineColorsLength;\n                gi._lineThicknessHandlerIndex -= geometry._lineThicknessLength;\n                gi._lineIndexesHandlerIndex -= geometry._lineIndexesLength;\n            }\n\n\n            geometry._pickingReady = false;\n\n            geometry._handler = null;\n            geometry._handlerIndex = -1;\n\n            geometry._polyVerticesHighMerc = [];\n            geometry._polyVerticesLowMerc = [];\n            geometry._polyVerticesLength = -1;\n            geometry._polyIndexesLength = -1;\n            geometry._polyVerticesHandlerIndex = -1;\n            geometry._polyIndexesHandlerIndex = -1;\n\n            geometry._lineVerticesHighMerc = [];\n            geometry._lineVerticesLowMerc = [];\n            geometry._lineVerticesLength = -1;\n            geometry._lineOrdersLength = -1;\n            geometry._lineIndexesLength = -1;\n            geometry._lineColorsLength = -1;\n            geometry._lineThicknessLength = -1;\n            geometry._lineVerticesHandlerIndex = -1;\n            geometry._lineOrdersHandlerIndex = -1;\n            geometry._lineIndexesHandlerIndex = -1;\n            geometry._lineThicknessHandlerIndex = -1;\n            geometry._lineColorsHandlerIndex = -1;\n\n            !this._removeGeometryExtents[geometry.__id] && this._removeGeometryExtentArr.push(geometry.getExtent());\n            this._removeGeometryExtents[geometry.__id] = true;\n\n            this.refresh();\n        }\n    }\n\n    protected _refreshRecursevely(geometry: Geometry, treeNode: Node) {\n        if (treeNode.ready) {\n            let lid = this._layer._id;\n            for (let i = 0; i < treeNode.nodes.length; i++) {\n                let ni = treeNode.nodes[i];\n                if (geometry.overlaps(ni.segment.getExtentLonLat())) {\n                    this._refreshRecursevely(geometry, ni);\n                    let m = ni.segment.materials[lid];\n                    if (m && m.isReady) {\n                        if (m.segment.node.getState() !== quadTree.RENDERING) {\n                            m.layer.clearMaterial(m);\n                        } else {\n                            m.pickingReady = m.pickingReady && geometry._pickingReady;\n                            m.isReady = false;\n                            m._updateTexture = m.texture;\n                            m._updatePickingMask = m.pickingMask;\n                        }\n\n                        geometry._pickingReady = true;\n                    }\n                }\n            }\n        }\n    }\n\n    protected _refreshRecursevelyExt(extent: Extent, treeNode: Node) {\n        if (treeNode.ready) {\n            let lid = this._layer.__id;\n            for (let i = 0; i < treeNode.nodes.length; i++) {\n                let ni = treeNode.nodes[i];\n                if (extent.overlaps(ni.segment.getExtentLonLat())) {\n                    this._refreshRecursevelyExt(extent, ni);\n                    let m = ni.segment.materials[lid];\n                    if (m && m.isReady) {\n                        m.layer.clearMaterial(m);\n                        // m.pickingReady = false;\n                        // m.isReady = false;\n                        // m._updateTexture = m.texture;\n                        // m._updatePickingMask = m.pickingMask;\n                    }\n                }\n            }\n        }\n    }\n\n    protected _refreshPlanetNode(treeNode: Node) {\n        let i;\n\n        let e = this._removeGeometryExtentArr;\n        for (i = 0; i < e.length; i++) {\n            this._refreshRecursevelyExt(e[i], treeNode);\n        }\n\n        let g = this._updatedGeometryArr;\n        for (i = 0; i < g.length; i++) {\n            this._refreshRecursevely(g[i], treeNode);\n        }\n    }\n\n    protected _updatePlanet() {\n        let p = this._layer._planet;\n        if (p) {\n            let ql = p.quadTreeStrategy.quadTreeList;\n            for (let i = 0; i < ql.length; i++) {\n                this._refreshPlanetNode(ql[i]);\n            }\n            // p.quadTreeStrategy.quadTreeList.forEach((quadTree: Node) => {\n            //     this._refreshPlanetNode(quadTree);\n            // });\n        }\n        this._updatedGeometryArr.length = 0;\n        this._updatedGeometryArr = [];\n        this._updatedGeometry = {};\n\n        this._removeGeometryExtentArr.length = 0;\n        this._removeGeometryExtentArr = [];\n        this._removeGeometryExtents = {};\n    }\n\n    protected refresh() {\n        let i = this._changedBuffers.length;\n        while (i--) {\n            this._changedBuffers[i] = true;\n        }\n    }\n\n    public update() {\n        if (this._handler) {\n            let needUpdate = false;\n            let i = this._changedBuffers.length;\n            while (i--) {\n                if (this._changedBuffers[i]) {\n                    needUpdate = true;\n                    this._buffersUpdateCallbacks[i].call(this);\n                    this._changedBuffers[i] = false;\n                }\n            }\n            needUpdate && this._updatePlanet();\n        }\n    }\n\n    public setGeometryVisibility(geometry: Geometry) {\n        let v = geometry.getVisibility() ? 1.0 : 0.0;\n\n        let a = this._polyVerticesHighMerc,\n            b = this._polyVerticesLowMerc;\n\n        let l = geometry._polyVerticesLength;\n        let ind = geometry._polyVerticesHandlerIndex;\n        for (let i = 0; i < l; i++) {\n            a[ind + i] = geometry._polyVerticesHighMerc[i] * v;\n            b[ind + i] = geometry._polyVerticesLowMerc[i] * v;\n        }\n\n        a = this._lineVerticesHighMerc;\n        b = this._lineVerticesLowMerc;\n\n        l = geometry._lineVerticesLength;\n        ind = geometry._lineVerticesHandlerIndex;\n        for (let i = 0; i < l; i++) {\n            a[ind + i] = geometry._lineVerticesHighMerc[i] * v;\n            b[ind + i] = geometry._lineVerticesLowMerc[i] * v;\n        }\n\n        this._changedBuffers[POLYVERTICES_BUFFER] = true;\n        this._changedBuffers[LINEVERTICES_BUFFER] = true;\n\n        !this._updatedGeometry[geometry.__id] && this._updatedGeometryArr.push(geometry);\n        this._updatedGeometry[geometry.__id] = true;\n    }\n\n    public setPolyColorArr(geometry: Geometry, color: Vec4) {\n        let index = geometry._polyVerticesHandlerIndex * 2, // ... / 2 * 4\n            size = index + geometry._polyVerticesLength * 2; // ... / 2 * 4\n        let a = this._polyColors;\n        for (let i = index; i < size; i += 4) {\n            a[i] = color.x;\n            a[i + 1] = color.y;\n            a[i + 2] = color.z;\n            a[i + 3] = color.w;\n        }\n        this._changedBuffers[POLYCOLORS_BUFFER] = true;\n        !this._updatedGeometry[geometry.__id] && this._updatedGeometryArr.push(geometry);\n        this._updatedGeometry[geometry.__id] = true;\n    }\n\n    public setLineStrokeColorArr(geometry: Geometry, color: Vec4) {\n        let index = geometry._lineColorsHandlerIndex,\n            size = index + geometry._lineColorsLength;\n        let a = this._lineStrokeColors;\n        for (let i = index; i < size; i += 4) {\n            a[i] = color.x;\n            a[i + 1] = color.y;\n            a[i + 2] = color.z;\n            a[i + 3] = color.w;\n        }\n        this._changedBuffers[LINESTROKECOLORS_BUFFER] = true;\n        !this._updatedGeometry[geometry.__id] && this._updatedGeometryArr.push(geometry);\n        this._updatedGeometry[geometry.__id] = true;\n    }\n\n    public setLineColorArr(geometry: Geometry, color: Vec4) {\n        let index = geometry._lineColorsHandlerIndex,\n            size = index + geometry._lineColorsLength;\n        let a = this._lineColors;\n        for (let i = index; i < size; i += 4) {\n            a[i] = color.x;\n            a[i + 1] = color.y;\n            a[i + 2] = color.z;\n            a[i + 3] = color.w;\n        }\n        this._changedBuffers[LINECOLORS_BUFFER] = true;\n        !this._updatedGeometry[geometry.__id] && this._updatedGeometryArr.push(geometry);\n        this._updatedGeometry[geometry.__id] = true;\n    }\n\n    public setLineStrokeArr(geometry: Geometry, width: number) {\n        // let index = geometry._lineStrokesHandlerIndex,\n        //     size = index + geometry._lineStrokesLength;\n        // let a = this._lineStrokes;\n        // for (let i = index; i < size; i++) {\n        //     a[i] = width;\n        // }\n        // this._changedBuffers[LINESTROKES_BUFFER] = true;\n        // !this._updatedGeometry[geometry.__id] && this._updatedGeometryArr.push(geometry);\n        // this._updatedGeometry[geometry.__id] = true;\n    }\n\n    public setLineThicknessArr(geometry: Geometry, width: number) {\n        let index = geometry._lineThicknessHandlerIndex,\n            size = index + geometry._lineThicknessLength;\n        let a = this._lineThickness;\n        for (let i = index; i < size; i++) {\n            a[i] = width;\n        }\n        this._changedBuffers[LINETHICKNESS_BUFFER] = true;\n        !this._updatedGeometry[geometry.__id] && this._updatedGeometryArr.push(geometry);\n        this._updatedGeometry[geometry.__id] = true;\n    }\n\n    public bringToFront(geometry: Geometry) {\n        let polyIndexes = this._polyIndexes.splice(geometry._polyIndexesHandlerIndex, geometry._polyIndexesLength);\n        let lineIndexes = this._lineIndexes.splice(geometry._lineIndexesHandlerIndex, geometry._lineIndexesLength);\n\n        this._geometries.splice(geometry._handlerIndex, 1);\n\n        let g = this._geometries;\n        for (let i = geometry._handlerIndex; i < g.length; i++) {\n            let gi = g[i];\n            gi._handlerIndex = i;\n            gi._polyIndexesHandlerIndex -= geometry._polyIndexesLength;\n            gi._lineIndexesHandlerIndex -= geometry._lineIndexesLength;\n        }\n\n        geometry._polyIndexesHandlerIndex = this._polyIndexes.length;\n        geometry._lineIndexesHandlerIndex = this._lineIndexes.length;\n\n        geometry._handlerIndex = this._geometries.length;\n        this._geometries.push(geometry);\n\n        this._polyIndexes.push.apply(this._polyIndexes, polyIndexes);\n        this._lineIndexes.push.apply(this._lineIndexes, lineIndexes);\n\n        this._changedBuffers[POLYINDEXES_BUFFER] = true;\n        this._changedBuffers[LINEINDEXES_BUFFER] = true;\n\n        !this._updatedGeometry[geometry.__id] && this._updatedGeometryArr.push(geometry);\n        this._updatedGeometry[geometry.__id] = true;\n    }\n\n    public createPolyVerticesBuffer() {\n        let h = this._handler!;\n        h.gl!.deleteBuffer(this._polyVerticesHighBufferMerc!);\n        this._polyVerticesHighBufferMerc = h.createArrayBuffer(\n            new Float32Array(this._polyVerticesHighMerc),\n            2,\n            this._polyVerticesHighMerc.length / 2\n        );\n\n        h.gl!.deleteBuffer(this._polyVerticesLowBufferMerc!);\n        this._polyVerticesLowBufferMerc = h.createArrayBuffer(\n            new Float32Array(this._polyVerticesLowMerc),\n            2,\n            this._polyVerticesLowMerc.length / 2\n        );\n    }\n\n    public createPolyIndexesBuffer() {\n        let h = this._handler!;\n        h.gl!.deleteBuffer(this._polyIndexesBuffer!);\n        this._polyIndexesBuffer = h.createElementArrayBuffer(\n            new Uint32Array(this._polyIndexes),\n            1,\n            this._polyIndexes.length\n        );\n    }\n\n    public createPolyColorsBuffer() {\n        let h = this._handler!;\n        h.gl!.deleteBuffer(this._polyColorsBuffer!);\n        this._polyColorsBuffer = h.createArrayBuffer(\n            new Float32Array(this._polyColors),\n            4,\n            this._polyColors.length / 4\n        );\n    }\n\n    public createPolyPickingColorsBuffer() {\n        let h = this._handler!;\n        h.gl!.deleteBuffer(this._polyPickingColorsBuffer!);\n        this._polyPickingColorsBuffer = h.createArrayBuffer(\n            new Float32Array(this._polyPickingColors),\n            4,\n            this._polyPickingColors.length / 4\n        );\n    }\n\n    public createLineVerticesBuffer() {\n        let h = this._handler!;\n        h.gl!.deleteBuffer(this._lineVerticesHighBufferMerc!);\n        this._lineVerticesHighBufferMerc = h.createArrayBuffer(\n            new Float32Array(this._lineVerticesHighMerc),\n            2,\n            this._lineVerticesHighMerc.length / 2\n        );\n\n        h.gl!.deleteBuffer(this._lineVerticesLowBufferMerc!);\n        this._lineVerticesLowBufferMerc = h.createArrayBuffer(\n            new Float32Array(this._lineVerticesLowMerc),\n            2,\n            this._lineVerticesLowMerc.length / 2\n        );\n    }\n\n    public createLineIndexesBuffer() {\n        let h = this._handler!;\n        h.gl!.deleteBuffer(this._lineIndexesBuffer!);\n        this._lineIndexesBuffer = h.createElementArrayBuffer(\n            new Uint32Array(this._lineIndexes),\n            1,\n            this._lineIndexes.length\n        );\n    }\n\n    public createLineOrdersBuffer() {\n        let h = this._handler!;\n        h.gl!.deleteBuffer(this._lineOrdersBuffer!);\n        this._lineOrdersBuffer = h.createArrayBuffer(\n            new Float32Array(this._lineOrders),\n            1,\n            this._lineOrders.length / 2\n        );\n    }\n\n    public createLineColorsBuffer() {\n        let h = this._handler!;\n        h.gl!.deleteBuffer(this._lineColorsBuffer!);\n        this._lineColorsBuffer = h.createArrayBuffer(\n            new Float32Array(this._lineColors),\n            4,\n            this._lineColors.length / 4\n        );\n    }\n\n    public createLinePickingColorsBuffer() {\n        let h = this._handler!;\n        h.gl!.deleteBuffer(this._linePickingColorsBuffer!);\n        this._linePickingColorsBuffer = h.createArrayBuffer(\n            new Float32Array(this._linePickingColors),\n            4,\n            this._linePickingColors.length / 4\n        );\n    }\n\n    public createLineThicknessBuffer() {\n        let h = this._handler!;\n        h.gl!.deleteBuffer(this._lineThicknessBuffer!);\n        this._lineThicknessBuffer = h.createArrayBuffer(\n            new Float32Array(this._lineThickness),\n            1,\n            this._lineThickness.length\n        );\n    }\n\n    public createLineStrokesBuffer() {\n        let h = this._handler!;\n        h.gl!.deleteBuffer(this._lineStrokesBuffer!);\n        this._lineStrokesBuffer = h.createArrayBuffer(\n            new Float32Array(this._lineStrokes),\n            1,\n            this._lineStrokes.length\n        );\n    }\n\n    public createLineStrokeColorsBuffer() {\n        let h = this._handler!;\n        h.gl!.deleteBuffer(this._lineStrokeColorsBuffer!);\n        this._lineStrokeColorsBuffer = h.createArrayBuffer(\n            new Float32Array(this._lineStrokeColors),\n            4,\n            this._lineStrokeColors.length / 4\n        );\n    }\n}\n\nexport {GeometryHandler};\n","class QueueArray<T> {\n    protected _size: number;\n    protected _array: T[];\n    protected _popIndex: number;\n    protected _shiftIndex: number;\n    public length: number;\n\n    constructor(size: number = 2048) {\n        this._size = size;\n        this._array = new Array(this._size);\n        this._popIndex = Math.floor(this._size * 0.5);\n        this._shiftIndex = this._popIndex;\n        this.length = 0;\n    }\n\n    public reset() {\n        this._popIndex = Math.floor(this._size * 0.5);\n        this._shiftIndex = this._popIndex;\n        this.length = 0;\n    }\n\n    public clear() {\n        this._array.length = 0;\n        this._array = new Array(this._size);\n        this._popIndex = Math.floor(this._size * 0.5);\n        this._shiftIndex = this._popIndex;\n        this.length = 0;\n    }\n\n    public push(data: T) {\n        this.length++;\n        this._array[this._popIndex++] = data;\n    }\n\n    public pop(): T | undefined {\n        if (this.length) {\n            this.length--;\n            let res = this._array[--this._popIndex]!;\n            // @ts-ignore\n            this._array[this._popIndex] = null;\n            if (!this._array[this._popIndex - 1]) {\n                this._popIndex = Math.floor(this._size * 0.5);\n                this._shiftIndex = this._popIndex;\n            }\n            return res;\n        }\n        return undefined;\n    }\n\n    public unshift(data: T) {\n        this.length++;\n        this._array[--this._shiftIndex] = data;\n    }\n\n    public shift(): T | undefined {\n        if (this.length) {\n            this.length--;\n            let res = this._array[this._shiftIndex]!;\n            // @ts-ignore\n            this._array[this._shiftIndex++] = null;\n            if (!this._array[this._shiftIndex]) {\n                this._popIndex = Math.floor(this._size * 0.5);\n                this._shiftIndex = this._popIndex;\n            }\n            return res;\n        }\n        return undefined;\n    }\n    public forEach(callback: (el: T) => void) {\n        for (let i = this._shiftIndex; i < this._popIndex; i++) {\n            callback(this._array[i]);\n        }\n    }\n}\n\nexport {QueueArray};\n","import * as math from \"../math\";\nimport * as mercator from \"../mercator\";\nimport * as quadTree from \"../quadTree/quadTree\";\nimport {Entity, IEntityParams} from \"../entity/Entity\";\nimport {EntityCollection} from \"../entity/EntityCollection\";\nimport {\n    EntityCollectionNode,\n    EntityCollectionNodeWGS84\n} from \"../quadTree/EntityCollectionNode\";\nimport {EventsHandler} from \"../Events\";\nimport {Extent} from \"../Extent\";\nimport {GeometryHandler} from \"../entity/GeometryHandler\";\nimport {IMouseState, ITouchState} from \"../renderer/RendererEvents\";\nimport {ILayerParams, Layer, LayerEventsList} from \"./Layer\";\nimport {NumberArray3, Vec3} from \"../math/Vec3\";\nimport {Planet} from \"../scene/Planet\";\nimport {QueueArray} from \"../QueueArray\";\nimport {Material} from \"./Material\";\nimport {NumberArray4} from \"../math/Vec4\";\n\nexport interface IVectorParams extends ILayerParams {\n    entities?: Entity[] | IEntityParams[];\n    polygonOffsetUnits?: number;\n    nodeCapacity?: number;\n    relativeToGround?: boolean;\n    clampToGround?: boolean;\n    async?: boolean;\n    pickingScale?: number;\n    scaleByDistance?: NumberArray3;\n    labelMaxLetters?: number;\n}\n\ntype VectorEventsList = [\n    //\"entitymove\",\n    \"draw\",\n    \"entityadd\",\n    \"entityremove\"\n]\n\nexport type VectorEventsType = EventsHandler<VectorEventsList> & EventsHandler<LayerEventsList>;\n\n/**\n * Creates entity instance array.\n * @param {Entity[] | IEntityParams[]} entities - Entity array.\n * @returns {Entity[]} - Entity array.\n */\nfunction _entitiesConstructor(entities: Entity[] | IEntityParams[]): Entity[] {\n    let res: Entity[] = [];\n    for (let i = 0; i < entities.length; i++) {\n        let ei = entities[i];\n        if ((ei as Entity).instanceName === \"Entity\") {\n            res.push(ei as Entity);\n        } else {\n            res.push(new Entity(ei as IEntityParams));\n        }\n    }\n    return res;\n}\n\n/**\n * Vector layer represents alternative entities store. Used for geospatial data rendering like\n * points, lines, polygons, geometry objects etc.\n * @class\n * @extends {Layer}\n * @param {string} [name=\"noname\"] - Layer name.\n * @param {IVectorParams} [options] - Layer options:\n * @param {number} [options.minZoom=0] - Minimal visible zoom. 0 is default\n * @param {number} [options.maxZoom=50] - Maximal visible zoom. 50 is default.\n * @param {string} [options.attribution] - Layer attribution.\n * @param {string} [options.zIndex=0] - Layer Z-order index. 0 is default.\n * @param {boolean} [options.visibility=true] - Layer visibility. True is default.\n * @param {boolean} [options.isBaseLayer=false] - Layer base layer. False is default.\n * @param {Array.<Entity>} [options.entities] - Entities array.\n * @param {Array.<number>} [options.scaleByDistance] - Scale by distance parameters. (exactly 3 entries)\n *      First index - near distance to the entity, after entity becomes full scale.\n *      Second index - far distance to the entity, when entity becomes zero scale.\n *      Third index - far distance to the entity, when entity becomes invisible.\n * @param {number} [options.nodeCapacity=30] - Maximum entities quantity in the tree node. Rendering optimization parameter. 30 is default.\n * @param {boolean} [options.async=true] - Asynchronous vector data handling before rendering. True for optimization huge data.\n * @param {boolean} [options.clampToGround = false] - Clamp vector data to the ground.\n * @param {boolean} [options.relativeToGround = false] - Place vector data relative to the ground relief.\n * @param {Number} [options.polygonOffsetUnits=0.0] - The multiplier by which an implementation-specific value is multiplied with to create a constant depth offset.\n *\n * //@fires EventsHandler<VectorEventsList>#entitymove\n * @fires EventsHandler<VectorEventsList>#draw\n * @fires EventsHandler<VectorEventsList>#add\n * @fires EventsHandler<VectorEventsList>#remove\n * @fires EventsHandler<VectorEventsList>#entityadd\n * @fires EventsHandler<VectorEventsList>#entityremove\n * @fires EventsHandler<VectorEventsList>#visibilitychange\n */\nclass Vector extends Layer {\n\n    public override events: VectorEventsType;\n\n    /**\n     * Entities collection.\n     * @protected\n     */\n    protected _entities: Entity[];\n\n    /**\n     * First index - near distance to the entity, after that entity becomes full scale.\n     * Second index - far distance to the entity, when entity becomes zero scale.\n     * Third index - far distance to the entity, when entity becomes invisible.\n     * @public\n     * @type {NumberArray3} - (exactly 3 entries)\n     */\n    public scaleByDistance: NumberArray3;\n\n    public pickingScale: number;\n\n    /**\n     * Asynchronous data handling before rendering.\n     * @public\n     * @type {boolean}\n     */\n    public async: boolean;\n\n    /**\n     * Clamp vector data to the ground.\n     * @public\n     * @type {boolean}\n     */\n    public clampToGround: boolean;\n\n    /**\n     * Sets vector data relative to the ground relief.\n     * @public\n     * @type {boolean}\n     */\n    public relativeToGround: boolean;\n\n\n    protected _stripEntityCollection: EntityCollection;\n    protected _polylineEntityCollection: EntityCollection;\n    protected _geoObjectEntityCollection: EntityCollection;\n    public _geometryHandler: GeometryHandler;\n\n    /**\n     * Maximum entities quantity in the tree node.\n     * @public\n     */\n    public _nodeCapacity: number;\n\n    protected _entityCollectionsTree: EntityCollectionNode | null;\n    protected _entityCollectionsTreeNorth: EntityCollectionNodeWGS84 | null;\n    protected _entityCollectionsTreeSouth: EntityCollectionNodeWGS84 | null;\n\n    public _renderingNodes: Record<number, boolean>;\n    public _renderingNodesNorth: Record<number, boolean>;\n    public _renderingNodesSouth: Record<number, boolean>;\n\n    protected _counter: number;\n    protected _deferredEntitiesPendingQueue: QueueArray<EntityCollectionNode>;\n\n    protected _pendingsQueue: Entity[];\n\n    /**\n     * Specifies the scale Units for gl.polygonOffset function to calculate depth values, 0.0 is default.\n     * @public\n     * @type {Number}\n     */\n    public polygonOffsetUnits: number;\n\n    public _secondPASS: EntityCollectionNode[];\n\n    protected _labelMaxLetters: number;\n\n\n    constructor(name?: string | null, options: IVectorParams = {}) {\n        super(name, options);\n\n        // @ts-ignore\n        this.events = this.events.registerNames(VECTOR_EVENTS);\n\n        this.isVector = true;\n\n        this._hasImageryTiles = false;\n\n        this.scaleByDistance = options.scaleByDistance || [math.MAX32, math.MAX32, math.MAX32];\n\n        this.pickingScale = options.pickingScale || 1;\n\n        this.async = options.async !== undefined ? options.async : true;\n\n        this.clampToGround = options.clampToGround || false;\n\n        this.relativeToGround = options.relativeToGround || false;\n\n        this._nodeCapacity = options.nodeCapacity || 30;\n\n        this._entities = _entitiesConstructor(options.entities || []);\n\n        this._labelMaxLetters = options.labelMaxLetters || 24;\n\n        this._stripEntityCollection = new EntityCollection({\n            pickingEnabled: this.pickingEnabled\n        });\n        this._bindEventsDefault(this._stripEntityCollection);\n\n        this._polylineEntityCollection = new EntityCollection({\n            pickingEnabled: this.pickingEnabled\n        });\n        this._bindEventsDefault(this._polylineEntityCollection);\n\n        this._geoObjectEntityCollection = new EntityCollection({\n            pickingEnabled: this.pickingEnabled\n        });\n        this._bindEventsDefault(this._geoObjectEntityCollection);\n\n        this._geometryHandler = new GeometryHandler(this);\n\n        this._entityCollectionsTree = null;\n        this._entityCollectionsTreeNorth = null;\n        this._entityCollectionsTreeSouth = null;\n\n        this._renderingNodes = {};\n        this._renderingNodesNorth = {};\n        this._renderingNodesSouth = {};\n\n        this._counter = 0;\n        this._deferredEntitiesPendingQueue = new QueueArray<EntityCollectionNode>();\n\n        this._pendingsQueue = [];\n\n        this.setEntities(this._entities);\n\n        this.polygonOffsetUnits = options.polygonOffsetUnits != undefined ? options.polygonOffsetUnits : 0.0;\n\n        this.pickingEnabled = this._pickingEnabled;\n\n        this._secondPASS = [];\n    }\n\n    public get labelMaxLetters(): number {\n        return this._labelMaxLetters;\n    }\n\n    public override get instanceName() {\n        return \"Vector\";\n    }\n\n    protected override _bindPicking() {\n        this._pickingColor.clear();\n    }\n\n    /**\n     * Adds layer to the planet.\n     * @public\n     * @param {Planet} planet - Planet scene object.\n     * @returns {Vector} -\n     */\n    public override addTo(planet: Planet) {\n        if (!this._planet) {\n            this._assignPlanet(planet);\n            this._geometryHandler.assignHandler(planet.renderer!.handler);\n            this._polylineEntityCollection.addTo(planet, true);\n            this._stripEntityCollection.addTo(planet, true);\n            this._geoObjectEntityCollection.addTo(planet, true);\n            this.setEntities(this._entities);\n        }\n    }\n\n    public override remove(): this {\n        super.remove();\n        this._polylineEntityCollection.remove();\n        this._stripEntityCollection.remove();\n        this._geoObjectEntityCollection.remove();\n        return this;\n    }\n\n    /**\n     * Returns stored entities.\n     * @public\n     * @returns {Array.<Entity>} -\n     */\n    public getEntities(): Entity[] {\n        return ([] as Entity[]).concat(this._entities);\n    }\n\n    //_fitExtent(entity) {\n    //    var ee = entity.getExtent(),\n    //        e = this._extent,\n    //        maxLon = -180, maxLat = -90,\n    //        minLon = 180, minLat = 90;\n\n    //    if (this._entities.length !== 0) {\n    //        maxLon = e.southWest.lon;\n    //        minLon = e.northEast.lon;\n    //        maxLat = e.northEast.lat;\n    //        minLat = e.southWest.lat;\n    //    }\n\n    //    if (ee.southWest.lon < minLon) {\n    //        e.southWest.lon = ee.southWest.lon;\n    //    }\n    //    if (ee.southWest.lat < minLat) {\n    //        e.southWest.lat = ee.southWest.lat;\n    //    }\n    //    if (ee.northEast.lon > maxLon) {\n    //        e.northEast.lon = ee.northEast.lon;\n    //    }\n    //    if (ee.northEast.lat > maxLat) {\n    //        e.northEast.lat = ee.northEast.lat;\n    //    }\n    //    this.setExtent(this._extent);\n    //}\n\n    /**\n     * Adds entity to the layer.\n     * @public\n     * @param {Entity} entity - Entity.\n     * @param {boolean} [rightNow=false] - Entity insertion option. False is default.\n     * @returns {Vector} - Returns this layer.\n     */\n    public add(entity: Entity, rightNow: boolean = false): this {\n        if (!(entity._layer || entity._entityCollection)) {\n            entity._layer = this;\n            entity._layerIndex = this._entities.length;\n            //this._fitExtent(entity);\n            this._entities.push(entity);\n            this._proceedEntity(entity, rightNow);\n        }\n        return this;\n    }\n\n    /**\n     * Adds entity to the layer in the index position.\n     * @public\n     * @param {Entity} entity - Entity.\n     * @param {Number} index - Index position.\n     * @param {boolean} [rightNow] - Entity insertion option. False is default.\n     * @returns {Vector} - Returns this layer.\n     */\n    public insert(entity: Entity, index: number, rightNow: boolean = false): this {\n        if (!(entity._layer || entity._entityCollection)) {\n            entity._layer = this;\n            entity._layerIndex = index;\n            //this._fitExtent(entity);\n            this._entities.splice(index, 0, entity);\n            for (let i = index + 1, len = this._entities.length; i < len; i++) {\n                this._entities[i]._layerIndex = i;\n            }\n\n            this._proceedEntity(entity, rightNow);\n        }\n\n        return this;\n    }\n\n    protected _proceedEntity(entity: Entity, rightNow: boolean = false) {\n        let temp = this._hasImageryTiles;\n\n        if (entity.strip) {\n            this._stripEntityCollection.add(entity);\n        }\n\n        if (entity.polyline || entity.ray) {\n            this._polylineEntityCollection.add(entity);\n        }\n\n        if (entity.geoObject) {\n            this._geoObjectEntityCollection.add(entity);\n        }\n\n        if (entity.geometry) {\n            this._hasImageryTiles = true;\n            if (this._planet) {\n                this._planet.renderer!.assignPickingColor<Entity>(entity);\n                this._geometryHandler.add(entity.geometry);\n            }\n        }\n\n        if (entity.billboard || entity.label || entity.geoObject) {\n            if (this._planet) {\n                if (entity._cartesian.isZero() && !entity._lonLat.isZero()) {\n                    entity._setCartesian3vSilent(\n                        this._planet.ellipsoid.lonLatToCartesian(entity._lonLat)\n                    );\n                } else {\n                    entity._lonLat = this._planet.ellipsoid.cartesianToLonLat(entity._cartesian);\n                }\n\n                // north tree\n                if (entity._lonLat.lat > mercator.MAX_LAT) {\n                    this._entityCollectionsTreeNorth!.__setLonLat__(entity);\n                    this._entityCollectionsTreeNorth!.insertEntity(entity, rightNow);\n                } else if (entity._lonLat.lat < mercator.MIN_LAT) {\n                    this._entityCollectionsTreeSouth!.__setLonLat__(entity);\n                    this._entityCollectionsTreeSouth!.insertEntity(entity, rightNow);\n                } else {\n                    this._entityCollectionsTree!.__setLonLat__(entity);\n                    this._entityCollectionsTree!.insertEntity(entity, rightNow);\n                }\n            }\n        }\n\n        if (this._planet && this._hasImageryTiles !== temp) {\n            this._planet.updateVisibleLayers();\n        }\n\n        this.events.dispatch(this.events.entityadd, entity);\n    }\n\n    /**\n     * Adds entity array to the layer.\n     * @public\n     * @param {Array.<Entity>} entities - Entities array.\n     * @param {boolean} [rightNow=false] - Entity insertion option. False is default.\n     * @returns {Vector} - Returns this layer.\n     */\n    public addEntities(entities: Entity[], rightNow: boolean = false) {\n        let i = entities.length;\n        while (i--) {\n            this.add(entities[i], rightNow);\n        }\n        return this;\n    }\n\n    /**\n     * Remove entity from layer.\n     * TODO: memory leaks.\n     * @public\n     * @param {Entity} entity - Entity to remove.\n     * @returns {Vector} - Returns this layer.\n     */\n    public removeEntity(entity: Entity): this {\n\n        if (entity._layer && this.isEqual(entity._layer)) {\n\n            this._entities.splice(entity._layerIndex, 1);\n\n            this._reindexEntitiesArray(entity._layerIndex);\n\n            entity._layer = null;\n\n            entity._layerIndex = -1;\n\n            if (entity._entityCollection) {\n\n                entity._entityCollection._removeEntitySilent(entity);\n\n                let node = entity._nodePtr;\n\n                while (node) {\n                    node.count--;\n                    node = node.parentNode!;\n                }\n\n                if (\n                    entity._nodePtr &&\n                    entity._nodePtr.count === 0 &&\n                    entity._nodePtr.deferredEntities.length === 0\n                ) {\n                    entity._nodePtr.entityCollection = null;\n                    //\n                    // ...\n                    //\n                }\n            } else if (entity._nodePtr && entity._nodePtr.deferredEntities.length) {\n                let defEntities = entity._nodePtr.deferredEntities;\n                let j = defEntities.length;\n                while (j--) {\n                    if (defEntities[j].id === entity.id) {\n                        defEntities.splice(j, 1);\n                        let node = entity._nodePtr;\n                        while (node) {\n                            node.count--;\n                            node = node.parentNode!;\n                        }\n                        break;\n                    }\n                }\n            }\n\n            if (entity.geometry) {\n                if (this._planet) {\n                    this._geometryHandler.remove(entity.geometry);\n                    this._planet.renderer!.clearPickingColor(entity);\n                }\n            }\n\n            entity._nodePtr = undefined;\n\n            this.events.dispatch(this.events.entityremove, entity);\n        }\n\n        return this;\n    }\n\n    /**\n     * Set layer picking events active.\n     * @public\n     * @param {boolean} picking - Picking enable flag.\n     */\n    public override set pickingEnabled(picking: boolean) {\n\n        this._pickingEnabled = picking;\n\n        this._stripEntityCollection.setPickingEnabled(picking);\n\n        this._polylineEntityCollection.setPickingEnabled(picking);\n\n        this._geoObjectEntityCollection.setPickingEnabled(picking);\n\n        this._entityCollectionsTree && this._entityCollectionsTree.traverseTree((node: EntityCollectionNode) => {\n            node.entityCollection!.setPickingEnabled(picking);\n        });\n\n        this._entityCollectionsTreeNorth && this._entityCollectionsTreeNorth.traverseTree((node: EntityCollectionNodeWGS84) => {\n            node.entityCollection!.setPickingEnabled(picking);\n        });\n\n        this._entityCollectionsTreeSouth && this._entityCollectionsTreeSouth.traverseTree((node: EntityCollectionNodeWGS84) => {\n            node.entityCollection!.setPickingEnabled(picking);\n        });\n    }\n\n    /**\n     * Refresh collected entities indexes from startIndex entities collection array position.\n     * @protected\n     * @param {number} startIndex - Entity array index.\n     */\n    protected _reindexEntitiesArray(startIndex: number) {\n        const e = this._entities;\n        for (let i = startIndex; i < e.length; i++) {\n            e[i]._layerIndex = i;\n        }\n    }\n\n    /**\n     * Removes entities from layer.\n     * @public\n     * @param {Array.<Entity>} entities - Entity array.\n     * @returns {Vector} - Returns this layer.\n     */\n    public removeEntities(entities: Entity[]): this {\n        let i = entities.length;\n        while (i--) {\n            this.removeEntity(entities[i]);\n        }\n        return this;\n    }\n\n    // public setScaleByDistance(near, far, farInvisible) {\n    //     this.scaleByDistance[0] = near;\n    //     this.scaleByDistance[1] = far;\n    //     this.scaleByDistance[2] = farInvisible || math.MAX32;\n    // }\n\n    /**\n     * TODO: Clear the layer.\n     * @public\n     */\n    public override clear() {\n        let temp: Entity[] = new Array(this._entities.length);\n\n        for (let i = 0; i < temp.length; i++) {\n            temp[i] = this._entities[i];\n        }\n\n        let i = this._entities.length;\n        while (i--) {\n            this._entities[i].remove();\n        }\n\n        this._entities.length = 0;\n        this._entities = [];\n        for (let i = 0; i < temp.length; i++) {\n            this._entities[i] = temp[i];\n        }\n\n        this._entityCollectionsTree = null;\n        this._entityCollectionsTreeNorth = null;\n        this._entityCollectionsTreeSouth = null;\n    }\n\n    /**\n     * Safety entities loop.\n     * @public\n     * @param {(entity: Entity, index?: number) => void} callback - Entity callback.\n     */\n    public each(callback: (entity: Entity, index?: number) => void) {\n        let e = this._entities;\n        let i = e.length;\n        while (i--) {\n            callback(e[i], i);\n        }\n    }\n\n    /**\n     * Removes current entities from layer and adds new entities.\n     * @public\n     * @param {Array.<Entity>} entities - New entity array.\n     * @returns {Vector} - Returns layer instance.\n     */\n    public setEntities(entities: Entity[]): this {\n\n        let temp: Entity[] = new Array(entities.length);\n\n        for (let i = 0, len = entities.length; i < len; i++) {\n            temp[i] = entities[i];\n        }\n\n        this.clear();\n\n        this._entities = new Array(temp.length);\n\n        let entitiesForTree = [];\n\n        for (let i = 0; i < temp.length; i++) {\n            let ei = temp[i];\n\n            ei._layer = this;\n            ei._layerIndex = i;\n\n            if (ei.strip) {\n                this._stripEntityCollection.add(ei);\n            } else if (ei.polyline || ei.ray) {\n                this._polylineEntityCollection.add(ei);\n            } else if (ei.geoObject) {\n                this._geoObjectEntityCollection.add(ei);\n            } else if (ei.billboard || ei.label) {\n                entitiesForTree.push(ei);\n            }\n\n            if (ei.geometry) {\n                this._hasImageryTiles = true;\n                if (this._planet) {\n                    this._planet.renderer!.assignPickingColor<Entity>(ei);\n                    this._geometryHandler.add(ei.geometry);\n                }\n            }\n\n            this._entities[i] = ei;\n        }\n\n        this._createEntityCollectionsTree(entitiesForTree);\n\n        return this;\n    }\n\n    /**\n     * @todo: replace to a strategy node collecting algorithm\n     */\n    protected _createEntityCollectionsTree(entitiesForTree: Entity[]) {\n\n        if (this._planet) {\n\n            this._entityCollectionsTree = new EntityCollectionNode(\n                this,\n                quadTree.NW,\n                null,\n                0,\n                Extent.createFromArray([-20037508.34, -20037508.34, 20037508.34, 20037508.34]),\n                this._planet,\n                0\n            );\n\n            this._entityCollectionsTreeNorth = new EntityCollectionNodeWGS84(\n                this,\n                quadTree.NW,\n                null,\n                0,\n                Extent.createFromArray([-180, mercator.MAX_LAT, 180, 90]),\n                this._planet,\n                0\n            );\n\n            this._entityCollectionsTreeSouth = new EntityCollectionNodeWGS84(\n                this,\n                quadTree.NW,\n                null,\n                0,\n                Extent.createFromArray([-180, -90, 180, mercator.MIN_LAT]),\n                this._planet,\n                0\n            );\n\n            for (let i = 0, len = entitiesForTree.length; i < len; i++) {\n                let entity = entitiesForTree[i];\n                // north tree\n                if (entity._lonLat.lat > mercator.MAX_LAT) {\n                    this._entityCollectionsTreeNorth.__setLonLat__(entity);\n                } else if (entity._lonLat.lat < mercator.MIN_LAT) {\n                    // south tree\n                    this._entityCollectionsTreeSouth.__setLonLat__(entity);\n                } else {\n                    this._entityCollectionsTree.__setLonLat__(entity);\n                }\n            }\n\n            this._entityCollectionsTree.buildTree(entitiesForTree);\n            this._entityCollectionsTreeNorth.buildTree(entitiesForTree);\n            this._entityCollectionsTreeSouth.buildTree(entitiesForTree);\n        }\n    }\n\n    /**\n     * @todo (refactoring) could be used in somethig like bindEntityCollectionQuad(...)\n     * @param entityCollection\n     */\n    public _bindEventsDefault(entityCollection: EntityCollection) {\n\n        let ve = this.events;\n\n        //\n        // @todo: replace with arrow functions and '...e'\n        //\n        // entityCollection.events.on(\"entitymove\", (e: any) => {\n        //     ve.dispatch(ve.entitymove, e);\n        // });\n        entityCollection.events.on(\"mousemove\", (e: IMouseState) => {\n            ve.dispatch(ve.mousemove, e);\n        });\n        entityCollection.events.on(\"mouseenter\", (e: IMouseState) => {\n            ve.dispatch(ve.mouseenter, e);\n        });\n        entityCollection.events.on(\"mouseleave\", (e: IMouseState) => {\n            ve.dispatch(ve.mouseleave, e);\n        });\n        entityCollection.events.on(\"lclick\", (e: IMouseState) => {\n            ve.dispatch(ve.lclick, e);\n        });\n        entityCollection.events.on(\"rclick\", (e: IMouseState) => {\n            ve.dispatch(ve.rclick, e);\n        });\n        entityCollection.events.on(\"mclick\", (e: IMouseState) => {\n            ve.dispatch(ve.mclick, e);\n        });\n        entityCollection.events.on(\"ldblclick\", (e: IMouseState) => {\n            ve.dispatch(ve.ldblclick, e);\n        });\n        entityCollection.events.on(\"rdblclick\", (e: IMouseState) => {\n            ve.dispatch(ve.rdblclick, e);\n        });\n        entityCollection.events.on(\"mdblclick\", (e: IMouseState) => {\n            ve.dispatch(ve.mdblclick, e);\n        });\n        entityCollection.events.on(\"lup\", (e: IMouseState) => {\n            ve.dispatch(ve.lup, e);\n        });\n        entityCollection.events.on(\"rup\", (e: IMouseState) => {\n            ve.dispatch(ve.rup, e);\n        });\n        entityCollection.events.on(\"mup\", (e: IMouseState) => {\n            ve.dispatch(ve.mup, e);\n        });\n        entityCollection.events.on(\"ldown\", (e: IMouseState) => {\n            ve.dispatch(ve.ldown, e);\n        });\n        entityCollection.events.on(\"rdown\", (e: IMouseState) => {\n            ve.dispatch(ve.rdown, e);\n        });\n        entityCollection.events.on(\"mdown\", (e: IMouseState) => {\n            ve.dispatch(ve.mdown, e);\n        });\n        entityCollection.events.on(\"lhold\", (e: IMouseState) => {\n            ve.dispatch(ve.lhold, e);\n        });\n        entityCollection.events.on(\"rhold\", (e: IMouseState) => {\n            ve.dispatch(ve.rhold, e);\n        });\n        entityCollection.events.on(\"mhold\", (e: IMouseState) => {\n            ve.dispatch(ve.mhold, e);\n        });\n        entityCollection.events.on(\"mousewheel\", (e: IMouseState) => {\n            ve.dispatch(ve.mousewheel, e);\n        });\n        entityCollection.events.on(\"touchmove\", (e: ITouchState) => {\n            ve.dispatch(ve.touchmove, e);\n        });\n        entityCollection.events.on(\"touchstart\", (e: ITouchState) => {\n            ve.dispatch(ve.touchstart, e);\n        });\n        entityCollection.events.on(\"touchend\", (e: ITouchState) => {\n            ve.dispatch(ve.touchend, e);\n        });\n        entityCollection.events.on(\"doubletouch\", (e: ITouchState) => {\n            ve.dispatch(ve.doubletouch, e);\n        });\n        entityCollection.events.on(\"touchleave\", (e: ITouchState) => {\n            ve.dispatch(ve.touchleave, e);\n        });\n        entityCollection.events.on(\"touchenter\", (e: ITouchState) => {\n            ve.dispatch(ve.touchenter, e);\n        });\n    }\n\n    protected _collectStripCollectionPASS(outArr: EntityCollection[]) {\n        let ec = this._stripEntityCollection;\n\n        ec._fadingOpacity = this._fadingOpacity;\n        ec.scaleByDistance = this.scaleByDistance;\n        ec.pickingScale = this.pickingScale;\n        ec.polygonOffsetUnits = this.polygonOffsetUnits;\n\n        outArr.push(ec);\n    }\n\n    protected _collectPolylineCollectionPASS(outArr: EntityCollection[]) {\n        let ec = this._polylineEntityCollection;\n\n        ec._fadingOpacity = this._fadingOpacity;\n        ec.scaleByDistance = this.scaleByDistance;\n        ec.pickingScale = this.pickingScale;\n        ec.polygonOffsetUnits = this.polygonOffsetUnits;\n\n        outArr.push(ec);\n\n        if (this.clampToGround || this.relativeToGround) {\n            let rtg = Number(this.relativeToGround);\n\n            const nodes = this._planet!._renderedNodes;\n            const visibleExtent = this._planet!.getViewExtent();\n            let e = ec._entities;\n            let e_i = e.length;\n            let res = new Vec3();\n\n            while (e_i--) {\n                let p = e[e_i].polyline!;\n                if (p && visibleExtent.overlaps(p._extent)) {\n                    // TODO:this works only for mercator area.\n                    // needs to be working on poles.\n                    let coords = p._pathLonLatMerc,\n                        c_j = coords.length;\n                    while (c_j--) {\n                        let c_j_h = coords[c_j].length;\n                        while (c_j_h--) {\n                            let ll = coords[c_j][c_j_h],\n                                n_k = nodes.length;\n                            while (n_k--) {\n                                let seg = nodes[n_k].segment;\n                                if (seg._extent.isInside(ll)) {\n                                    let cart = p._path3v[c_j][c_j_h] as Vec3;\n                                    seg.getTerrainPoint(cart, ll, res);\n                                    let alt = (rtg && p.altitude) || 0.0;\n                                    if (alt) {\n                                        let n = this._planet!.ellipsoid.getSurfaceNormal3v(res);\n                                        p.setPoint3v(res.addA(n.scale(alt)), c_j_h, c_j, true);\n                                    } else {\n                                        p.setPoint3v(res, c_j_h, c_j, true);\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    protected _collectGeoObjectCollectionPASS(outArr: EntityCollection[]) {\n        let ec = this._geoObjectEntityCollection;\n\n        ec._fadingOpacity = this._fadingOpacity;\n        ec.scaleByDistance = this.scaleByDistance;\n        ec.pickingScale = this.pickingScale;\n        ec.polygonOffsetUnits = this.polygonOffsetUnits;\n\n        outArr.push(ec);\n\n        // if (this.clampToGround || this.relativeToGround) {\n        //     let rtg = Number(this.relativeToGround);\n        //\n        //     var nodes = this._planet._renderedNodes;\n        //     var visibleExtent = this._planet.getViewExtent();\n        //     var e = ec._entities;\n        //     var e_i = e.length;\n        //     let res = new Vec3();\n        //\n        //     while (e_i--) {\n        //         var p = e[e_i].polyline;\n        //         if (visibleExtent.overlaps(p._extent)) {\n        //             // TODO:this works only for mercator area.\n        //             // needs to be working on poles.\n        //             let coords = p._pathLonLatMerc,\n        //                 c_j = coords.length;\n        //             while (c_j--) {\n        //                 var c_j_h = coords[c_j].length;\n        //                 while (c_j_h--) {\n        //                     let ll = coords[c_j][c_j_h],\n        //                         n_k = nodes.length;\n        //                     while (n_k--) {\n        //                         var seg = nodes[n_k].segment;\n        //                         if (seg._extent.isInside(ll)) {\n        //                             let cart = p._path3v[c_j][c_j_h];\n        //                             seg.getTerrainPoint(cart, ll, res);\n        //                             p.setPoint3v(\n        //                                 res.addA(res.normal().scale((rtg && p.altitude) || 0.0)),\n        //                                 c_j_h,\n        //                                 c_j,\n        //                                 true\n        //                             );\n        //                             break;\n        //                         }\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        // }\n    }\n\n    public collectVisibleCollections(outArr: EntityCollection[]) {\n        let p = this._planet!;\n\n        if (\n            (this._fading && this._fadingOpacity > 0.0) ||\n            (this.minZoom <= p.maxCurrZoom && this.maxZoom >= p.maxCurrZoom)\n        ) {\n            this._renderingNodes = {};\n            this._renderingNodesNorth = {};\n            this._renderingNodesSouth = {};\n\n            // Common collections first\n            this._collectStripCollectionPASS(outArr);\n            this._collectPolylineCollectionPASS(outArr);\n            this._collectGeoObjectCollectionPASS(outArr);\n\n            // Merc nodes\n            this._secondPASS = [];\n            this._entityCollectionsTree && this._entityCollectionsTree.collectRenderCollectionsPASS1(p._visibleNodes, outArr);\n            let i = this._secondPASS.length;\n            while (i--) {\n                this._secondPASS[i].collectRenderCollectionsPASS2(p._visibleNodes, outArr, this._secondPASS[i].nodeId);\n            }\n\n            // North nodes\n            this._secondPASS = [];\n            this._entityCollectionsTreeNorth && this._entityCollectionsTreeNorth.collectRenderCollectionsPASS1(p._visibleNodesNorth, outArr);\n            i = this._secondPASS.length;\n            while (i--) {\n                this._secondPASS[i].collectRenderCollectionsPASS2(p._visibleNodesNorth, outArr, this._secondPASS[i].nodeId);\n            }\n\n            // South nodes\n            this._secondPASS = [];\n            this._entityCollectionsTreeSouth && this._entityCollectionsTreeSouth.collectRenderCollectionsPASS1(p._visibleNodesSouth, outArr);\n            i = this._secondPASS.length;\n            while (i--) {\n                this._secondPASS[i].collectRenderCollectionsPASS2(p._visibleNodesSouth, outArr, this._secondPASS[i].nodeId);\n            }\n        }\n    }\n\n    public _queueDeferredNode(node: EntityCollectionNode) {\n        if (this._visibility) {\n            node._inTheQueue = true;\n            if (this._counter >= 1) {\n                this._deferredEntitiesPendingQueue.push(node);\n            } else {\n                this._execDeferredNode(node);\n            }\n        }\n    }\n\n    protected _execDeferredNode(node: EntityCollectionNode) {\n        this._counter++;\n        setTimeout(() => {\n            node.applyCollection();\n            this._counter--;\n            if (this._deferredEntitiesPendingQueue.length && this._counter < 1) {\n                while (this._deferredEntitiesPendingQueue.length) {\n                    let n = this._deferredEntitiesPendingQueue.pop()!;\n                    n._inTheQueue = false;\n                    if (n.isVisible()) {\n                        this._execDeferredNode(n);\n                        return;\n                    }\n                }\n            }\n        }, 0);\n    }\n\n    /**\n     * Start to load tile material.\n     * @public\n     * @virtual\n     * @param {Material} material - Current material.\n     */\n    public override loadMaterial(material: Material) {\n        const seg = material.segment;\n\n        if (this._isBaseLayer) {\n            material.texture = seg._isNorth ? seg.planet.solidTextureOne : seg.planet.solidTextureTwo;\n        } else {\n            material.texture = seg.planet.transparentTexture;\n        }\n\n        if (this._planet!.layerLock.isFree()) {\n            material.isReady = false;\n            material.isLoading = true;\n            this._planet!._vectorTileCreator.add(material);\n        }\n    }\n\n    /**\n     * Abort exact material loading.\n     * @public\n     * @override\n     * @param {Material} material - Segment material.\n     */\n    public override abortMaterialLoading(material: Material) {\n        material.isLoading = false;\n        material.isReady = false;\n    }\n\n    public override applyMaterial(material: Material, isForced: boolean = false): NumberArray4 {\n        if (material.isReady) {\n            return [0, 0, 1, 1];\n        } else {\n            !material.isLoading && this.loadMaterial(material);\n\n            const segment = material.segment;\n            let pn = segment.node,\n                notEmpty = false;\n\n            let mId = this.__id;\n            let psegm = material;\n\n            while (pn.parentNode) {\n                if (psegm && psegm.isReady) {\n                    notEmpty = true;\n                    break;\n                }\n                pn = pn.parentNode;\n                psegm = pn.segment.materials[mId];\n            }\n\n            if (notEmpty) {\n                material.appliedNodeId = pn.nodeId;\n                material.texture = psegm.texture;\n                material.pickingMask = psegm.pickingMask;\n                const dZ2 = 1.0 / (2 << (segment.tileZoom - pn.segment.tileZoom - 1));\n                return [\n                    segment.tileX * dZ2 - pn.segment.tileX,\n                    segment.tileY * dZ2 - pn.segment.tileY,\n                    dZ2,\n                    dZ2\n                ];\n            } else {\n                if (material.textureExists && material._updateTexture) {\n                    material.texture = material._updateTexture;\n                    material.pickingMask = material._updatePickingMask;\n                } else {\n                    material.texture = segment.planet.transparentTexture;\n                    material.pickingMask = segment.planet.transparentTexture;\n                }\n                material.pickingReady = true;\n                return [0, 0, 1, 1];\n            }\n        }\n    }\n\n    public override clearMaterial(material: Material) {\n        if (material.isReady) {\n            const gl = material.segment.handler.gl!;\n\n            material.isReady = false;\n            material.pickingReady = false;\n\n            let t = material.texture;\n            material.texture = null;\n            t && !t.default && gl.deleteTexture(t);\n\n            t = material.pickingMask;\n            material.pickingMask = null;\n            t && !t.default && gl.deleteTexture(t);\n\n            t = material._updateTexture;\n            material._updateTexture = null;\n            t && !t.default && gl.deleteTexture(t);\n\n            t = material._updatePickingMask;\n            material._updatePickingMask = null;\n            t && !t.default && gl.deleteTexture(t);\n        }\n\n        this.abortMaterialLoading(material);\n\n        material.isLoading = false;\n        material.textureExists = false;\n    }\n\n    public update() {\n        this._geometryHandler.update();\n        this.events.dispatch(this.events.draw, this);\n    }\n}\n\nconst VECTOR_EVENTS: VectorEventsList = [\n    // /**\n    //  * Triggered when entity has moved.\n    //  * @event EventsHandler<VectorEventsList>#draw\n    //  */\n    // \"entitymove\",\n\n    /**\n     * Triggered when layer begin draw.\n     * @event EventsHandler<VectorEventsList>#draw\n     */\n    \"draw\",\n\n    /**\n     * Triggered when new entity added to the layer.\n     * @event EventsHandler<VectorEventsList>#entityadd\n     */\n    \"entityadd\",\n\n    /**\n     * Triggered when entity removes from the collection.\n     * @event EventsHandler<VectorEventsList>#entityremove\n     */\n    \"entityremove\"\n];\n\nexport {Vector};\n","import * as math from \"../../math\";\nimport {createEvents, EventsHandler} from '../../Events';\nimport {CoordinatesType} from \"../../entity/Geometry\";\nimport {Entity} from '../../entity/Entity';\nimport {IMouseState} from \"../../renderer/RendererEvents\";\nimport {MouseNavigation} from \"../MouseNavigation\";\nimport {LonLat} from '../../LonLat';\nimport {Line3} from '../../math/Line3';\nimport {Object3d} from '../../Object3d';\nimport {Planet} from '../../scene/Planet';\nimport {RenderNode} from '../../scene/RenderNode';\nimport {Vec2} from '../../math/Vec2';\nimport {Vec3} from '../../math/Vec3';\nimport {Vector} from '../../layer/Vector';\n\ntype PolygonDrawingSceneEventsList = [\"change\", \"startpoint\"];\n\nconst POLYGONDRAWINGSCENE_EVENTS: PolygonDrawingSceneEventsList = [\"change\", \"startpoint\"];\n\nexport interface IPolygonDrawingSceneParams {\n    coordinates?: CoordinatesType[];\n    name: string;\n}\n\nconst POINTER_OBJ3D = Object3d.createCylinder(1, 1, 2.0, 20, 1, true, false, 0, -0.5, 0);\n\nexport const NUM_SEGMENTS = 200;\nexport const OUTLINE_ALT = 0.3;\nexport const COORDINATES_COLOR = \"rgb(350, 350, 0)\";\nexport const CENTER_COLOR = \"rgb(0, 350, 50)\";\nexport const OUTLINE_COLOR = \"rgb(0, 350, 50)\";\nexport const OUTLINE_THICKNESS = 3.5;\n\nexport const CORNER_OPTIONS = {\n    scale: 0.5,\n    instanced: true,\n    tag: \"corners\",\n    color: COORDINATES_COLOR,\n    object3d: POINTER_OBJ3D\n};\n\nexport const CENTER_OPTIONS = {\n    scale: 0.4,\n    instanced: true,\n    tag: \"centers\",\n    color: CENTER_COLOR,\n    object3d: POINTER_OBJ3D\n};\n\nexport const OUTLINE_OPTIONS = {\n    thickness: OUTLINE_THICKNESS,\n    color: OUTLINE_COLOR\n}\n\nclass PolygonDrawingScene extends RenderNode {\n    public events: EventsHandler<PolygonDrawingSceneEventsList>;\n    public _planet: Planet | null;\n    protected _initCoordinates: CoordinatesType[];\n    protected _pickedCorner: Entity | null;\n    protected _pickedCenter: Entity | null;\n    protected _startPos: Vec2 | null;\n    protected _startClick: Vec2;\n    protected _geometryLayer: Vector;\n    protected _cornerLayer: Vector;\n    protected _centerLayer: Vector;\n    protected _outlineLayer: Vector;\n    protected _ghostCorner: Entity;\n    protected _ghostOutlineLayer: Vector;\n    protected _showGhostPointer: boolean;\n    protected _isStartPoint: boolean;\n    protected _insertCornerIndex: number;\n    protected _cornerDblClick = false;\n\n    constructor(options: IPolygonDrawingSceneParams) {\n        super(options.name);\n\n        this.events = createEvents(POLYGONDRAWINGSCENE_EVENTS);\n\n        this._planet = null;\n\n        this._initCoordinates = options.coordinates || [];\n\n        this._pickedCorner = null;\n        this._pickedCenter = null;\n\n        this._startPos = null;\n        this._startClick = new Vec2();\n\n        this._geometryLayer = new Vector();\n\n        //\n        // outline vectors\n        //\n        this._cornerLayer = new Vector(\"corners\", {\n            pickingScale: 3,\n            pickingEnabled: true,\n            polygonOffsetUnits: -5,\n            relativeToGround: true,\n            scaleByDistance: [100, 4000000, 1.0]\n        });\n\n        this._centerLayer = new Vector(\"centers\", {\n            pickingScale: 3,\n            pickingEnabled: true,\n            polygonOffsetUnits: -5,\n            relativeToGround: true,\n            scaleByDistance: [100, 4000000, 1.0]\n        });\n\n        this._outlineLayer = new Vector(\"outline\", {\n            entities: [new Entity({\n                polyline: {\n                    path3v: [],\n                    isClosed: false,\n                    ...OUTLINE_OPTIONS\n                }\n            })],\n            pickingEnabled: false,\n            polygonOffsetUnits: -5,\n            relativeToGround: true\n        });\n\n        this._outlineLayer.getEntities()[0].polyline!.altitude = OUTLINE_ALT;\n\n        //\n        // Ghost cursor pointer\n        //\n        this._ghostCorner = new Entity({\n            geoObject: CORNER_OPTIONS\n        });\n\n        this._ghostOutlineLayer = new Vector(\"ghost-pointer\", {\n            pickingEnabled: false,\n            polygonOffsetUnits: -5,\n            relativeToGround: true,\n            scaleByDistance: [100, 4000000, 1.0],\n            opacity: 0.5\n        });\n\n        this._showGhostPointer = false;\n\n        this._isStartPoint = false;\n\n        this._insertCornerIndex = -1;\n    }\n\n    public get geometryType(): string {\n        return \"Polygon\";\n    }\n\n    public getCoordinates(): CoordinatesType[] {\n        let corners = this._cornerLayer.getEntities();\n        if (corners.length > 0) {\n            return corners.map((c: Entity) => {\n                let ll = c.getLonLat();\n                return [ll.lon, ll.lat, ll.height];\n            });\n        } else {\n            return this._initCoordinates;\n        }\n    }\n\n    public bindPlanet(planet: Planet) {\n        this._planet = planet;\n    }\n\n    public override init() {\n\n        this._initEvents();\n\n        this._initGhostLayerPointer();\n\n        if (this._initCoordinates.length) {\n            this.setCoordinates(this._initCoordinates);\n        }\n\n        this._planet!.addLayer(this._outlineLayer);\n        this._planet!.addLayer(this._cornerLayer);\n        this._planet!.addLayer(this._centerLayer);\n\n        this.showGhostPointer();\n        this.startNewPoint();\n\n        (this._planet!.renderer!.controls.mouseNavigation as MouseNavigation).deactivateDoubleClickZoom();\n\n        this._geometryLayer.addTo(this._planet!);\n\n        this.events.on(\"change\", this._onChange, this);\n    }\n\n    protected _onChange = (e: PolygonDrawingScene) => {\n        if (e.geometryType === \"Polygon\") {\n            let coords = this.getCoordinates();\n            let entity = new Entity({\n                'geometry': {\n                    'type': e.geometryType,\n                    'coordinates': [coords],\n                    'style': {\n                        'fillColor': \"rgba(0,146,247,0.2)\"\n                    }\n                }\n            });\n            this._geometryLayer.clear();\n            this._geometryLayer.add(entity);\n        }\n    }\n\n    override onremove() {\n        this._clearEvents();\n        this.hideGhostPointer();\n        this.stopNewPoint();\n        this.clear();\n        this._geometryLayer.remove();\n    }\n\n    public clear() {\n\n        this._geometryLayer.clear();\n\n        let corners = this._cornerLayer.getEntities();\n\n        let i = corners.length;\n        while (i--) {\n            corners[i].remove();\n        }\n\n        let centers = this._centerLayer.getEntities();\n        i = centers.length;\n        while (i--) {\n            centers[i].remove();\n        }\n\n        let entities = this._outlineLayer.getEntities();\n        i = entities.length;\n        while (i--) {\n            entities[i].polyline!.clear();\n            if (i > 0) {\n                entities[i].remove();\n            }\n        }\n\n        this._clearGhostPointer();\n    }\n\n    public setCoordinates(coords: CoordinatesType[]) {\n        this.clear();\n        for (let i = 0; i < coords.length; i++) {\n            let ci = coords[i];\n            let cart = this._planet!.ellipsoid.lonLatToCartesian(new LonLat(ci[0], ci[1], ci[2]));\n            this._appendCart(cart);\n        }\n        this.events.dispatch(this.events.change, this);\n    }\n\n    public stopNewPoint() {\n        if (this.renderer) {\n            this.renderer.events.off(\"ldblclick\", this._onMouseDblClick);\n        }\n    }\n\n    public startNewPoint() {\n        this.renderer!.events.on(\"ldblclick\", this._onMouseDblClick, this);\n    }\n\n    public showGhostPointer() {\n        this._showGhostPointer = true;\n        this._planet!.addLayer(this._ghostOutlineLayer);\n        this._insertCornerIndex = this._cornerLayer.getEntities().length;\n    }\n\n    public hideGhostPointer() {\n        this._showGhostPointer = false;\n        this._ghostOutlineLayer.remove();\n        this._insertCornerIndex = -1;\n    }\n\n    public setGhostPointerPosition(groundPos: Vec3) {\n        if (groundPos) {\n            this._ghostCorner.setCartesian3v(groundPos);\n            this._updateGhostOutlinePointer(groundPos);\n        }\n    }\n\n    protected _onCornerMouseEnter = (e: IMouseState) => {\n        e.renderer.handler.canvas!.style.cursor = \"pointer\";\n        this.hideGhostPointer();\n    }\n\n    _onCornerMouseLeave = (e: IMouseState) => {\n        e.renderer.handler.canvas!.style.cursor = \"default\";\n        this.showGhostPointer();\n    }\n\n    _onCenterMouseEnter = (e: IMouseState) => {\n        e.renderer.handler.canvas!.style.cursor = \"pointer\";\n        this.hideGhostPointer();\n    }\n\n    _onCenterMouseLeave = (e: IMouseState) => {\n        e.renderer.handler.canvas!.style.cursor = \"default\";\n        if (!(this._pickedCenter || this._pickedCorner)) {\n            this.showGhostPointer();\n        }\n    }\n\n    protected _onLup = (e: IMouseState) => {\n        (this._planet!.renderer!.controls.mouseNavigation as MouseNavigation).activate();\n        if (this._pickedCorner || this._pickedCenter) {\n            this.events.dispatch(this.events.change, this);\n            this.setGhostPointerPosition(this._planet!.getCartesianFromPixelTerrain(e)!);\n            this.showGhostPointer();\n            this._pickedCorner = null;\n            this._pickedCenter = null;\n        }\n    }\n\n    protected _getLdown(e: IMouseState): Entity | null {\n        (this._planet!.renderer!.controls.mouseNavigation as MouseNavigation).deactivate();\n        this._startClick.set(e.x, e.y);\n        let coords = e.pickingObject.getCartesian();\n        this._startPos = this._planet!.getPixelFromCartesian(coords);\n        return e.pickingObject;\n    }\n\n    protected _onCornerLdown = (e: IMouseState) => {\n        this._pickedCorner = this._getLdown(e);\n    }\n\n    protected _onCenterLdown = (e: IMouseState) => {\n        this._pickedCenter = this._getLdown(e);\n    }\n\n    protected _onMouseMove = (e: IMouseState) => {\n        if (this._pickedCenter) {\n            this._moveCenterPoint();\n        } else if (this._pickedCorner) {\n            this._moveCornerPoint(e.pos!);\n        } else {\n            this.setGhostPointerPosition(this._planet!.getCartesianFromPixelTerrain(e.pos)!);\n        }\n    }\n\n    protected _onCornerLdblclick = (e: IMouseState) => {\n        this._cornerDblClick = true;\n        let coords = this.getCoordinates();\n        coords.splice(e.pickingObject.layerIndex, 1);\n        this.setCoordinates(coords);\n    }\n\n    protected _onMouseDblClick = (e: IMouseState) => {\n\n        if (this._cornerDblClick) {\n            this._cornerDblClick = false;\n            return;\n        }\n\n        if (!this._showGhostPointer) {\n            return;\n        }\n\n        let cart = this._planet!.getCartesianFromPixelTerrain(e);\n        if (cart) {\n            this._addNew(cart);\n            if (!this._isStartPoint && this._cornerLayer.getEntities().length > 2) {\n                this._isStartPoint = true;\n                this.events.dispatch(this.events.startpoint, this);\n            }\n            this.events.dispatch(this.events.change, this);\n        }\n    }\n\n    protected _initEvents() {\n\n        this._cornerLayer.events.on(\"ldblclick\", this._onCornerLdblclick, this);\n        this._cornerLayer.events.on(\"ldown\", this._onCornerLdown, this);\n        this._centerLayer.events.on(\"ldown\", this._onCenterLdown, this);\n\n        this.renderer!.events.on(\"lup\", this._onLup, this);\n        this.renderer!.events.on(\"mousemove\", this._onMouseMove, this);\n\n        this._cornerLayer.events.on(\"mouseenter\", this._onCornerMouseEnter, this);\n        this._cornerLayer.events.on(\"mouseleave\", this._onCornerMouseLeave, this);\n        this._centerLayer.events.on(\"mouseenter\", this._onCenterMouseEnter, this);\n        this._centerLayer.events.on(\"mouseleave\", this._onCenterMouseLeave, this);\n    }\n\n    protected _clearEvents() {\n        this._cornerLayer.events.off(\"ldblclick\", this._onCornerLdblclick);\n        this._cornerLayer.events.off(\"ldown\", this._onCornerLdown);\n        this._centerLayer.events.off(\"ldown\", this._onCenterLdown);\n\n        this.renderer!.events.off(\"lup\", this._onLup);\n        this.renderer!.events.off(\"mousemove\", this._onMouseMove);\n\n        this._cornerLayer.events.off(\"mouseenter\", this._onCornerMouseEnter);\n        this._cornerLayer.events.off(\"mouseleave\", this._onCornerMouseLeave);\n        this._centerLayer.events.off(\"mouseenter\", this._onCenterMouseEnter);\n        this._centerLayer.events.off(\"mouseleave\", this._onCenterMouseLeave);\n    }\n\n    protected _drawCorners() {\n        let corners = this._cornerLayer.getEntities();\n        for (let i = 0; i < corners.length; i++) {\n            let ai = corners[i];\n            this._checkTerrainCollision(ai);\n        }\n    }\n\n    protected _drawCenters() {\n        let centers = this._centerLayer.getEntities();\n        for (let i = 0; i < centers.length; i++) {\n            let ai = centers[i];\n            this._checkTerrainCollision(ai);\n        }\n    }\n\n    protected _drawGhostCorner() {\n        if (this._showGhostPointer) {\n            this._checkTerrainCollision(this._ghostCorner);\n        }\n    }\n\n    public override frame() {\n        this._drawCorners();\n        this._drawCenters();\n        this._drawGhostCorner();\n    }\n\n    protected _checkTerrainCollision(entity: Entity) {\n        let _tempTerrPoint = new Vec3();\n        let nodes = this._planet!._renderedNodes;\n        for (let j = 0; j < nodes.length; j++) {\n            let seg = nodes[j].segment;\n            if (seg && seg._extentLonLat.isInside(entity.getLonLat())) {\n                seg.getEntityTerrainPoint(entity, _tempTerrPoint);\n                entity.setCartesian3v(_tempTerrPoint);\n                break;\n            }\n        }\n    }\n\n    protected _moveCenterPoint() {\n        let coords = this.getCoordinates(),\n            index = this._pickedCenter!.layerIndex + 1,\n            ll = this._pickedCenter!.getLonLat();\n        let newCorner: CoordinatesType = [ll.lon, ll.lat, ll.height];\n\n        coords.splice(index, 0, newCorner);\n\n        this.setCoordinates(coords);\n\n        this._pickedCenter = null;\n\n        this._pickedCorner = this._cornerLayer.getEntities()[index];\n    }\n\n    protected _addNew(cart: Vec3) {\n        if (this._insertCornerIndex === -1 || this._cornerLayer.getEntities().length < 2) {\n            this._appendCart(cart);\n        } else {\n            let area = this.getCoordinates(),\n                index = this._insertCornerIndex;\n            let ll = this._planet!.ellipsoid.cartesianToLonLat(cart);\n            let newCorner: CoordinatesType = [ll.lon, ll.lat, ll.height];\n            area.splice(index, 0, newCorner);\n            this.clear();\n            this.setCoordinates(area);\n        }\n    }\n\n    protected _appendCart(cart: Vec3) {\n        let corners = this._cornerLayer.getEntities();\n\n        let segNum = corners.length - 1;\n        let prevCorn = corners[segNum];\n\n        let corner = new Entity({\n            geoObject: CORNER_OPTIONS,\n        });\n\n        corner.setCartesian3v(cart);\n        corner.addTo(this._cornerLayer);\n        this._checkTerrainCollision(corner);\n\n        if (prevCorn) {\n\n            let firstCart = corners[0].getCartesian(),\n                prevCart = prevCorn.getCartesian();\n\n            let vecPrev = corner.getCartesian().sub(prevCart),\n                vecFirst = corner.getCartesian().sub(firstCart);\n\n            let distPrev = vecPrev.length(),\n                distFirst = vecFirst.length();\n\n            vecPrev.normalize();\n            vecFirst.normalize();\n\n            let prevPath = [],\n                firstPath = [];\n\n            for (let i = 0; i <= NUM_SEGMENTS; i++) {\n                let p = vecPrev.scaleTo(i * distPrev / NUM_SEGMENTS).addA(prevCart);\n                prevPath.push(p);\n\n                let f = vecFirst.scaleTo(i * distFirst / NUM_SEGMENTS).addA(firstCart);\n                firstPath.push(f);\n            }\n\n            this._outlineLayer.getEntities()[0].polyline!.setPath3v([firstPath]);\n\n            let entity = new Entity({\n                polyline: {\n                    path3v: [prevPath],\n                    isClosed: false,\n                    ...OUTLINE_OPTIONS\n                }\n            });\n            entity.polyline!.altitude = OUTLINE_ALT;\n            this._outlineLayer.add(entity);\n\n            let centers = this._centerLayer.getEntities();\n            let firstCenter = centers[centers.length - 1];\n\n            let prevCenterCart = vecPrev.scaleTo(distPrev * 0.5).addA(prevCart),\n                firstCenterCart = vecFirst.scaleTo(distFirst * 0.5).addA(firstCart);\n\n            let center = new Entity({\n                geoObject: CENTER_OPTIONS,\n            });\n            center.setCartesian3v(prevCenterCart);\n            center.addTo(this._centerLayer);\n            this._checkTerrainCollision(center);\n\n            //moveToEnd\n            firstCenter.remove();\n            firstCenter.addTo(this._centerLayer);\n\n            firstCenter.setCartesian3v(firstCenterCart);\n\n        } else {\n            let center = new Entity({\n                geoObject: CENTER_OPTIONS,\n            });\n            center.addTo(this._centerLayer);\n        }\n    }\n\n    protected _clearGhostPointer() {\n        const g = this._ghostOutlineLayer;\n        g.getEntities()[0].polyline!.clear();\n        g.getEntities()[1].polyline!.clear();\n    }\n\n    protected _moveCornerPoint(e: Vec2) {\n        let d = new Vec2(e.x, e.y).sub(this._startClick),\n            p = this._startPos!.add(d);\n\n        let groundCoords = this._planet!.getCartesianFromPixelTerrain(p);\n\n        if (groundCoords) {\n\n            this._pickedCorner!.setCartesian3v(groundCoords);\n\n            let corners = this._cornerLayer.getEntities();\n\n            if (corners.length) {\n                let ind = this._pickedCorner!.layerIndex;\n                let size = corners.length;\n\n                let cartPrev = corners[ind === 0 ? (size - 1) : (ind - 1)].getCartesian(),\n                    cartNext = corners[(ind + 1) % size].getCartesian();\n\n                let vecPrev = this._pickedCorner!.getCartesian().sub(cartPrev),\n                    vecNext = this._pickedCorner!.getCartesian().sub(cartNext);\n\n                let distPrev = vecPrev.length(),\n                    distNext = vecNext.length();\n\n                vecPrev.normalize();\n                vecNext.normalize();\n\n                let pathPrev = [],\n                    pathNext = [];\n\n                for (let i = 0; i <= NUM_SEGMENTS; i++) {\n                    let p = vecPrev.scaleTo(i * distPrev / NUM_SEGMENTS).addA(cartPrev);\n                    pathPrev.push(p);\n\n                    let f = vecNext.scaleTo(i * distNext / NUM_SEGMENTS).addA(cartNext);\n                    pathNext.push(f);\n                }\n\n                let entities = this._outlineLayer.getEntities();\n\n                let prevPolyline = entities[ind].polyline,\n                    nextPolyline = entities[(ind + 1) % size].polyline;\n\n                prevPolyline?.setPath3v([pathPrev]);\n                nextPolyline?.setPath3v([pathNext]);\n\n                //\n                // Move center points\n                let centers = this._centerLayer.getEntities();\n                let prevCenter = centers[ind === 0 ? (size - 1) : (ind - 1)],\n                    nextCenter = centers[ind];\n\n                let prevCenterCart = vecPrev.scaleTo(distPrev * 0.5).addA(cartPrev),\n                    nextCenterCart = vecNext.scaleTo(distNext * 0.5).addA(cartNext);\n\n                prevCenter.setCartesian3v(prevCenterCart);\n                this._checkTerrainCollision(prevCenter);\n\n                nextCenter.setCartesian3v(nextCenterCart);\n                this._checkTerrainCollision(nextCenter);\n            }\n        }\n    }\n\n    protected _updateGhostOutlinePointer(groundPos: Vec3) {\n\n        let corners = this._cornerLayer.getEntities();\n        let size = corners.length;\n\n        if (size > 0) {\n\n            let ind = 0;\n\n            let minDist = math.MAX;\n\n            for (let i = 0; i < size; i++) {\n                let ci = corners[i];\n                let dist = ci.getCartesian().distance(groundPos);\n                if (dist < minDist) {\n                    minDist = dist;\n                    ind = i;\n                }\n            }\n\n            let cCurr = corners[ind].getCartesian(),\n                cNext = corners[(ind + 1) % size].getCartesian(),\n                cPrev = corners[ind === 0 ? (size - 1) : (ind - 1)].getCartesian();\n\n            let nPrev = cPrev.sub(cCurr).normalize(),\n                nNext = cNext.sub(cCurr).normalize(),\n                nGround = groundPos.sub(cCurr).normalize();\n\n            let midVec = nPrev.add(nNext).normalize();\n\n            let toMid = nGround.cross(midVec),\n                up = nPrev.cross(nNext);\n\n            if (toMid.dot(up) > 0) {\n                ind--;\n                if (ind < 0) {\n                    ind = size - 1;\n                }\n            }\n\n            let temp = new Vec3();\n\n            for (let i = 0; i < size; i++) {\n                let side = new Line3(corners[i].getCartesian(), corners[(i + 1) % size].getCartesian());\n                let u = side.getNearestDistancePoint(groundPos, temp);\n                if (u) {\n                    let dist = temp.distance(groundPos);\n                    if (dist < minDist) {\n                        minDist = dist;\n                        ind = i;\n                    }\n                }\n            }\n\n            this._insertCornerIndex = (ind + 1) % size;\n\n            let cartPrev = corners[ind % size].getCartesian(),\n                cartNext = corners[(ind + 1) % size].getCartesian();\n\n            let vecPrev = this._ghostCorner.getCartesian().sub(cartPrev),\n                vecNext = this._ghostCorner.getCartesian().sub(cartNext);\n\n            let distPrev = vecPrev.length(),\n                distNext = vecNext.length();\n\n            vecPrev.normalize();\n            vecNext.normalize();\n\n            let pathPrev = [],\n                pathNext = [];\n\n            for (let i = 0; i <= NUM_SEGMENTS; i++) {\n                let p = vecPrev.scaleTo(i * distPrev / NUM_SEGMENTS).addA(cartPrev);\n                pathPrev.push(p);\n\n                let f = vecNext.scaleTo(i * distNext / NUM_SEGMENTS).addA(cartNext);\n                pathNext.push(f);\n            }\n\n            let entities = this._ghostOutlineLayer.getEntities();\n\n            let prevPolyline = entities[0].polyline,\n                nextPolyline = entities[1].polyline;\n\n            prevPolyline?.setPath3v([pathPrev]);\n            nextPolyline?.setPath3v([pathNext]);\n        }\n    }\n\n    protected _initGhostLayerPointer() {\n        this._ghostOutlineLayer.setEntities([\n            new Entity({\n                polyline: {\n                    path3v: [],\n                    isClosed: false,\n                    ...OUTLINE_OPTIONS\n                }\n            }), new Entity({\n                polyline: {\n                    path3v: [],\n                    isClosed: false,\n                    ...OUTLINE_OPTIONS\n                }\n            }),\n            this._ghostCorner\n        ]);\n\n        const g = this._ghostOutlineLayer;\n        g.getEntities()[0].polyline!.altitude = g.getEntities()[1].polyline!.altitude = OUTLINE_ALT;\n    }\n}\n\nexport {PolygonDrawingScene};\n","import {Entity} from \"../../entity/Entity\";\nimport {Vec2} from \"../../math/Vec2\";\nimport {Vec3} from \"../../math/Vec3\";\nimport {\n    CENTER_OPTIONS,\n    CORNER_OPTIONS,\n    NUM_SEGMENTS,\n    OUTLINE_ALT,\n    OUTLINE_OPTIONS,\n    PolygonDrawingScene,\n    IPolygonDrawingSceneParams\n} from \"./PolygonDrawingScene\";\n\nclass LineStringDrawingScene extends PolygonDrawingScene {\n    constructor(props: IPolygonDrawingSceneParams) {\n        super(props);\n    }\n\n    public override get geometryType(): string {\n        return \"LineString\";\n    }\n\n    protected override _addNew(cart: Vec3) {\n        this._appendCart(cart);\n    }\n\n    protected override _appendCart(cart: Vec3) {\n        let corners = this._cornerLayer.getEntities();\n\n        let segNum = corners.length - 1;\n        let prevCorn = corners[segNum];\n\n        let corner = new Entity({\n            geoObject: CORNER_OPTIONS,\n        });\n\n        corner.setCartesian3v(cart);\n        corner.addTo(this._cornerLayer);\n        this._checkTerrainCollision(corner);\n\n        if (prevCorn) {\n\n            let prevCart = prevCorn.getCartesian();\n\n            let vecPrev = corner.getCartesian().sub(prevCart);\n\n            let distPrev = vecPrev.length();\n\n            vecPrev.normalize();\n\n            let prevPath = [];\n\n            for (let i = 0; i <= NUM_SEGMENTS; i++) {\n                let p = vecPrev.scaleTo(i * distPrev / NUM_SEGMENTS).addA(prevCart);\n                prevPath.push(p);\n            }\n\n            let entity = new Entity({\n                polyline: {\n                    path3v: [prevPath],\n                    isClosed: false,\n                    ...OUTLINE_OPTIONS\n                }\n            });\n            entity.polyline!.altitude = OUTLINE_ALT;\n            this._outlineLayer.add(entity);\n\n            let prevCenterCart = vecPrev.scaleTo(distPrev * 0.5).addA(prevCart);\n\n            let center = new Entity({\n                geoObject: CENTER_OPTIONS,\n            });\n            center.setCartesian3v(prevCenterCart);\n            center.addTo(this._centerLayer);\n            this._checkTerrainCollision(center);\n\n        }\n    }\n\n    protected override _clearGhostPointer() {\n        this._ghostOutlineLayer.getEntities()[0].polyline!.clear();\n    }\n\n    protected _moveCorner(indexCurrent: number, indexPrev: number, indexCenter: number) {\n        let corners = this._cornerLayer.getEntities();\n        if (corners.length == 0) return;\n        if (corners.length == 1) {\n            indexCurrent = indexPrev = indexCenter = 0;\n        }\n        let cartCurr = corners[indexCurrent].getCartesian();\n        let vecCurr = this._pickedCorner!.getCartesian().sub(cartCurr);\n        let distCurr = vecCurr.length();\n        vecCurr.normalize();\n\n        let path = [];\n        for (let i = 0; i <= NUM_SEGMENTS; i++) {\n            let p = vecCurr.scaleTo(i * distCurr / NUM_SEGMENTS).addA(cartCurr);\n            path.push(p);\n        }\n\n        let entities = this._outlineLayer.getEntities();\n\n        let prevPolyline = entities[indexPrev].polyline;\n\n        prevPolyline?.setPath3v([path]);\n\n        //\n        // Move center points\n        let centers = this._centerLayer.getEntities();\n        let center = centers[indexCenter];\n\n        if (center) {\n            let centerCart = vecCurr.scaleTo(distCurr * 0.5).addA(cartCurr);\n            center.setCartesian3v(centerCart);\n            this._checkTerrainCollision(center);\n        }\n    }\n\n    protected override _moveCornerPoint(e: Vec2) {\n        let d = new Vec2(e.x, e.y).sub(this._startClick),\n            p = this._startPos!.add(d);\n\n        let groundCoords = this._planet!.getCartesianFromPixelTerrain(p);\n\n        if (groundCoords) {\n\n            this._pickedCorner!.setCartesian3v(groundCoords);\n\n            let corners = this._cornerLayer.getEntities();\n\n            if (corners.length) {\n                let ind = this._pickedCorner!.layerIndex;\n\n                if (ind === 0) {\n                    this._moveCorner(ind + 1, ind + 1, ind);\n                } else if (ind === corners.length - 1) {\n                    this._moveCorner(ind - 1, ind, ind - 1);\n                } else {\n                    this._moveCorner(ind + 1, ind + 1, ind);\n                    this._moveCorner(ind - 1, ind, ind - 1);\n                }\n            }\n        }\n    }\n\n    public override _updateGhostOutlinePointer(groundPos: Vec3) {\n\n        let corners = this._cornerLayer.getEntities();\n        let size = corners.length;\n\n        if (size > 0) {\n\n            let ind = size - 1;\n\n            this._insertCornerIndex = ind;\n\n            let cartPrev = corners[ind].getCartesian();\n\n            let vecPrev = this._ghostCorner.getCartesian().sub(cartPrev);\n\n            let distPrev = vecPrev.length();\n\n            vecPrev.normalize();\n\n            let pathPrev = [];\n\n            for (let i = 0; i <= NUM_SEGMENTS; i++) {\n                let p = vecPrev.scaleTo(i * distPrev / NUM_SEGMENTS).addA(cartPrev);\n                pathPrev.push(p);\n            }\n\n            let entities = this._ghostOutlineLayer.getEntities();\n\n            let prevPolyline = entities[0].polyline!;\n\n            prevPolyline.setPath3v([pathPrev]);\n        }\n    }\n\n    protected override _initGhostLayerPointer() {\n        this._ghostOutlineLayer.setEntities([\n            new Entity({\n                polyline: {\n                    path3v: [],\n                    isClosed: false,\n                    ...OUTLINE_OPTIONS\n                }\n            }),\n            this._ghostCorner\n        ]);\n\n        this._ghostOutlineLayer.getEntities()[0].polyline!.altitude = OUTLINE_ALT;\n    }\n}\n\nexport {LineStringDrawingScene};\n","import {Control, IControlParams} from \"../Control\";\nimport {LineStringDrawingScene} from \"./LineStringDrawingScene\";\nimport {PolygonDrawingScene} from \"./PolygonDrawingScene\";\n\nclass DrawingControl extends Control {\n    protected _drawingScene: PolygonDrawingScene;\n\n    constructor(options: IControlParams = {}) {\n        super(options);\n\n        this._drawingScene = new LineStringDrawingScene({\n            name: `drawingScene:${this.__id}`\n        });\n    }\n\n    public activatePolygonDrawing() {\n        this.deactivate();\n        this._drawingScene = new PolygonDrawingScene({\n            name: `polygonDrawingScene:${this.__id}`\n        });\n        this.activate();\n    }\n\n    public activateLineStringDrawing() {\n        this.deactivate();\n        this._drawingScene = new LineStringDrawingScene({\n            name: `linestringDrawingScene:${this.__id}`\n        });\n        this.activate();\n    }\n\n    public override oninit() {\n    }\n\n    public override onactivate() {\n        this.planet && this._drawingScene.bindPlanet(this.planet);\n        this.renderer && this.renderer.addNode(this._drawingScene);\n    }\n\n    public override ondeactivate() {\n        this.renderer && this.renderer.removeNode(this._drawingScene);\n    }\n}\n\nexport {DrawingControl};\n","export const ELL = 0;\nexport const MSL = 1;\nexport const GND = 2;\n\nexport const heightMode: Record<string, number> = {\n    \"ell\": ELL,\n    \"msl\": MSL,\n    \"gnd\": GND\n};\n\nconst KM_to_M = 1000.0;\nconst M_to_KM = 1.0 / KM_to_M;\nconst FT_to_M = 0.3048;\nconst M_to_FT = 1.0 / FT_to_M;\nconst MS_to_KMH = 3.6;\nconst KMH_to_MS = 1.0 / MS_to_KMH;\nconst MS_to_FTS = 3.28084;\nconst FT_to_KM = FT_to_M * M_to_KM;\nconst KM_to_FT = 1.0 / FT_to_KM;\n\nexport const m = 0;\nexport const km = 1;\nexport const ft = 2;\nexport const s = 3;\nexport const h = 4;\nexport const ms = 5;\nexport const kmh = 6;\nexport const fts = 7;\n\nconst DEFAULT_NAN = \"--\";\n\nconst _abbr: string[] = [\"m\", \"km\", \"ft\", \"s\", \"h\", \"m/s\", \"km/h\", \"ft/s\"];\n\nexport const _tenth = [0, 2, 0, 0, 0, 0, 0, 0];\n\n\nlet _convFn: ((v: number) => number)[][] = [];\n\n_convFn[m] = [];\n_convFn[m][m] = (v: number): number => v;\n_convFn[m][km] = (v: number): number => v * M_to_KM;\n_convFn[m][ft] = (v: number): number => v * M_to_FT;\n\n_convFn[ft] = [];\n_convFn[ft][m] = (v: number): number => v * FT_to_M;\n_convFn[ft][km] = (v: number): number => v * FT_to_KM;\n_convFn[ft][ft] = (v: number): number => v;\n\n_convFn[km] = [];\n_convFn[km][m] = (v: number): number => v * KM_to_M;\n_convFn[km][km] = (v: number): number => v;\n_convFn[km][ft] = (v: number): number => v * KM_to_FT;\n\n_convFn[ms] = [];\n_convFn[ms][ms] = (v: number): number => v;\n_convFn[ms][kmh] = (v: number): number => v * MS_to_KMH;\n_convFn[ms][fts] = (v: number): number => v * MS_to_FTS;\n\n_convFn[kmh] = [];\n_convFn[kmh][ms] = (v: number): number => v * KMH_to_MS;\n_convFn[kmh][kmh] = (v: number): number => v;\n\n//_convFn[kmh][fts] = (v) => v * KMH_to_FTS;\n\nexport function convert(from: number, to: number, val: number): number {\n    return _convFn[from][to](val);\n}\n\nexport function convertExt(isNotNaN: boolean, unitFrom: number, unitTo: number, val: number, fixed?: number): string {\n    if (isNotNaN) {\n        return convert(unitFrom, unitTo, val).toFixed(fixed || _tenth[unitTo]);\n    }\n    return DEFAULT_NAN;\n}\n\nexport function toString(u: number) {\n    return _abbr[u];\n}","import * as units from '../utils/units';\nimport {Control, IControlParams} from './Control';\nimport {heightMode} from '../utils/units';\nimport {LonLat} from '../LonLat';\nimport {throttle} from '../utils/shared';\nimport {IMouseState} from \"../renderer/RendererEvents\";\n\ninterface IEarthCoordinatesParams extends IControlParams {\n    heightMode?: string;\n    centerMode?: boolean;\n    altitudeUnit?: string;\n    type?: number\n}\n\nconst DECIMAL_TEMPLATE =\n    `<div class=\"og-lat-side\"></div><div class=\"og-lat-val\"></div>\n    <div class=\"og-lon-side\"></div><div class=\"og-lon-val\"></div>\n    <div class=\"og-height\"></div>\n    <div class=\"og-units-height\"></div>`;\n\nconst DEGREE_TEMPLATE =\n    `<div class=\"og-lat-side\"></div><div class=\"og-lat-val\"></div>\n    <div class=\"og-lon-side\"></div><div class=\"og-lon-val\"></div>\n    <div class=\"og-height\"></div>\n    <div class=\"og-units-height\"></div>`;\n\nconst CENTER_SVG = '<svg width=\"12\" height=\"12\"><g><path stroke-width=\"1\" stroke-opacity=\"1\" d=\"M6 0L6 12M0 6L12 6\" stroke=\"#337ab7\"></path></g></svg>';\n\nconst TYPE_HTML = [DECIMAL_TEMPLATE, DEGREE_TEMPLATE];\n\n/**\n * Control displays mouse or screen center Earth coordinates.\n * @param {Boolean} [options.center] - Earth coordinates by screen center otherwise mouse pointer. False is default.\n * @param {Boolean} [options.type] - Coordinates shown: 0 - is decimal degrees, 1 - degrees, 2 - mercator geodetic coordinates.\n */\nexport class EarthCoordinates extends Control {\n    protected _type: number;\n    protected _TYPE_FUNC: ((ll?: LonLat | null) => void)[];\n    protected _showFn: ((ll?: LonLat | null) => void) | null;\n    protected _lonLat: LonLat | null;\n    protected _latSideEl: HTMLElement | null;\n    protected _lonSideEl: HTMLElement | null;\n    protected _latValEl: HTMLElement | null;\n    protected _lonValEl: HTMLElement | null;\n    protected _heightEl: HTMLElement | null;\n    protected _altUnitVal: string;\n    protected _heightModeVal: string;\n    protected _altUnit: number;\n    protected _heightMode: number;\n    protected _centerMode: boolean;\n    protected _el: HTMLElement | null;\n\n    constructor(options: IEarthCoordinatesParams = {}) {\n        super(options);\n\n        this._type = options.type || 0;\n\n        this._TYPE_FUNC = [this._SHOW_DECIMAL, this._SHOW_DEGREE];\n\n        this._showFn = null;\n\n        this._el = null;\n        this._latSideEl = null;\n        this._lonSideEl = null;\n        this._latValEl = null;\n        this._lonValEl = null;\n        this._heightEl = null;\n\n        this._altUnitVal = options.altitudeUnit || \"m\";\n        this._heightModeVal = options.heightMode || \"ell\";\n\n        this._altUnit = (units as any)[this._altUnitVal];\n        this._heightMode = heightMode[this._heightModeVal];\n\n        this._lonLat = null;\n\n        this._centerMode = options.centerMode != undefined ? options.centerMode : true;\n    }\n\n    protected _SHOW_DECIMAL(ll?: LonLat | null) {\n        if (ll) {\n            let lat = ll.lat,\n                lon = ll.lon;\n\n            if (lat >= 0) {\n                this._latSideEl!.innerHTML = 'N';\n            } else {\n                this._latSideEl!.innerHTML = 'S';\n            }\n\n            if (lon >= 0) {\n                this._lonSideEl!.innerHTML = 'E';\n            } else {\n                this._lonSideEl!.innerHTML = 'W';\n            }\n\n            this._latValEl!.innerHTML = Math.abs(lat).toFixed(5) + '°';\n            this._lonValEl!.innerHTML = Math.abs(lon).toFixed(5) + '°';\n        }\n    }\n\n    protected _SHOW_DEGREE(ll?: LonLat | null) {\n        if (ll) {\n            let lat = ll.lat,\n                lon = ll.lon;\n\n            if (lat >= 0) {\n                this._latSideEl!.innerHTML = 'N';\n            } else {\n                this._latSideEl!.innerHTML = 'S';\n            }\n\n            if (lon >= 0) {\n                this._lonSideEl!.innerHTML = 'E';\n            } else {\n                this._lonSideEl!.innerHTML = 'W';\n            }\n\n            let t = 0;\n\n            let deg = lat < 0 ? Math.ceil(lat) : Math.floor(lat);\n            let min = Math.floor(t = Math.abs((lat - deg)) * 60);\n            let sec = Math.floor((t - min) * 6000) / 100.0;\n            this._latValEl!.innerHTML = Math.abs(deg) + '°' + min + \"'\" + sec.toFixed(0) + '\"';\n\n            deg = lon < 0 ? Math.ceil(lon) : Math.floor(lon);\n            min = Math.floor(t = Math.abs((lon - deg)) * 60);\n            sec = Math.floor((t - min) * 6000) / 100.0;\n            this._lonValEl!.innerHTML = Math.abs(deg) + '°' + min + \"'\" + sec.toFixed(0) + '\"';\n        }\n    }\n\n    protected _createCenterEl(): HTMLElement {\n        let el = document.createElement('div');\n        el.className = 'og-center-icon';\n        el.innerHTML = CENTER_SVG;\n        return el;\n    }\n\n    protected _updateUnits() {\n        this._heightMode = heightMode[this._heightModeVal];\n        this._altUnit = (units as any)[this._altUnitVal];\n        this._el!.querySelector(\".og-units-height\")!.innerHTML = units.toString(this._altUnit);\n        this._showHeight();\n    }\n\n    protected _refreshCoordinates() {\n\n        if (this._type >= this._TYPE_FUNC.length) {\n            this._type = 0;\n        }\n\n        let el = this._el!;\n\n        el.innerHTML = TYPE_HTML[this._type];\n\n        this._latSideEl = el.querySelector(\".og-lat-side\");\n        this._lonSideEl = el.querySelector(\".og-lon-side\");\n        this._latValEl = el.querySelector(\".og-lat-val\");\n        this._lonValEl = el.querySelector(\".og-lon-val\");\n        this._heightEl = el.querySelector(\".og-height\");\n\n        this._showFn = this._TYPE_FUNC[this._type];\n        this._showFn(this._lonLat);\n    }\n\n    public override oninit() {\n        this._el = document.createElement('div');\n        this._el.classList.add(\"og-coordinates\");\n\n        this.renderer!.div!.appendChild(this._el);\n\n        this._el.addEventListener(\"click\", () => {\n            this._type++;\n            this._refreshCoordinates();\n            this._updateUnits();\n            this._showHeight();\n        });\n\n        if (this._centerMode) {\n            this.renderer!.div!.appendChild(this._createCenterEl());\n            this.planet!.camera.events.on(\"moveend\", this._grabCoordinates, this);\n            this.planet!.camera.events.on(\"moveend\", throttle(() => this._showHeight(), 400, true), this);\n        } else {\n            this.renderer!.events.on(\"mousemove\", this._grabCoordinates, this);\n            this.renderer!.events.on(\"mousestop\", throttle(() => this._showHeight(), 400, true), this);\n        }\n\n        this._refreshCoordinates();\n\n        this._updateUnits();\n    }\n\n    protected _grabCoordinates(e: IMouseState) {\n        let px = e.pos;\n        let scrPx;\n        let r = this.renderer;\n        if (this._centerMode) {\n            scrPx = r!.handler.getCenter();\n        } else {\n            scrPx = px;\n        }\n        this._lonLat = this.planet!.getLonLatFromPixelTerrain(scrPx) || null;\n        this._showFn!(this._lonLat);\n    }\n\n    protected async _showHeight() {\n        if (this._lonLat && this.planet) {\n            let alt = 0;\n            this._heightEl!.style.opacity = \"0.7\";\n            if (this._heightMode === heightMode.ell) {\n                alt = await this.planet.getHeightAboveELL(this._lonLat);\n                alt = Number(units.convertExt(true, units.m, this._altUnit, alt));\n            } else if (this._heightMode === heightMode.msl) {\n                alt = await this.planet.getHeightDefault(this._lonLat);\n                alt = Number(units.convertExt(true, units.m, this._altUnit, alt));\n            }\n            this._heightEl!.style.opacity = \"1.0\";\n            this._heightEl!.innerHTML = alt.toString();\n        }\n    }\n}\n","import {Control, IControlParams} from \"./Control\";\nimport {LonLat} from \"../LonLat\";\nimport {ITouchState} from \"../renderer/RendererEvents\";\nimport {IMouseState} from \"../renderer/RendererEvents\";\nimport {Quat} from \"../math/Quat\";\nimport {Ray} from \"../math/Ray\";\nimport {Sphere} from \"../bv/Sphere\";\nimport {Vec2} from \"../math/Vec2\";\nimport {Vec3} from \"../math/Vec3\";\n\ninterface IEarthNavigationParams extends IControlParams {\n\n}\n\nclass TouchExt {\n    public x: number;\n    public y: number;\n    public prev_x: number;\n    public prev_y: number;\n    public grabbedPoint: Vec3 | null;\n    public grabbedSpheroid: Sphere;\n\n    constructor() {\n        this.x = 0;\n        this.y = 0;\n        this.prev_x = 0;\n        this.prev_y = 0;\n        this.grabbedPoint = new Vec3();\n        this.grabbedSpheroid = new Sphere();\n    }\n\n    public dX(): number {\n        return this.x - this.prev_x;\n    }\n\n    public dY(): number {\n        return this.y - this.prev_y;\n    }\n}\n\nexport class EarthNavigation extends Control {\n    protected grabbedPoint: Vec3 | null;\n    protected grabbedDir: Vec3;\n    public inertia: number;\n    protected grabbedSpheroid: Sphere;\n    protected _vRot: Quat;\n    protected _hRot: Quat;\n    protected _a: number;\n    protected scaleRot: number;\n    protected currState: number;\n    protected positionState: { h: number; max: number; min: number; }[];\n    protected touches: TouchExt[];\n\n    constructor(options: IEarthNavigationParams = {}) {\n        super(options);\n\n        this.grabbedPoint = new Vec3();\n        this.grabbedDir = new Vec3();\n        this.inertia = 0.007;\n        this.grabbedSpheroid = new Sphere();\n        this.planet = null;\n        this._vRot = new Quat();\n        this._hRot = new Quat();\n        this._a = 0.0;\n        this.scaleRot = 0;\n        this.currState = 0;\n\n        this.positionState = [\n            {h: 17119745.303455353, max: 0.98, min: -0.98},\n            {h: 6866011, max: 0.98, min: -0.98},\n            {h: 3000000, max: 0.98, min: -0.98},\n            {h: 1000000, max: 0.98, min: -0.98},\n            {h: 500000, max: 0.98, min: -0.98}\n        ];\n\n        this.touches = [new TouchExt(), new TouchExt()];\n    }\n\n    public switchZoomState(wheelDelta: number) {\n        this.stopRotation();\n\n        if (wheelDelta > 0) {\n            this.currState++;\n        } else {\n            this.currState--;\n        }\n\n        if (this.currState <= 0) this.currState = 0;\n\n        if (this.currState >= this.positionState.length) {\n            this.currState = this.positionState.length - 1;\n        }\n\n        this.planet!.stopFlying();\n\n        const ll = this.planet!.camera._lonLat;\n\n        this.planet!.flyLonLat(new LonLat(ll.lon, ll.lat, this.positionState[this.currState].h));\n    }\n\n    protected onMouseWheel(event: IMouseState) {\n        this.switchZoomState(event.wheelDelta);\n    }\n\n    public override oninit() {\n        this.activate();\n    }\n\n    public override onactivate() {\n\n        let r = this.renderer!;\n\n        r.events.on(\"mousewheel\", this.onMouseWheel, this);\n        r.events.on(\"lhold\", this.onMouseLeftButtonDown, this);\n        r.events.on(\"ldown\", this.onMouseLeftButtonClick, this);\n        r.events.on(\"lup\", this.onMouseLeftButtonUp, this);\n\n        r.events.on(\"touchstart\", this.onTouchStart, this);\n        r.events.on(\"touchend\", this.onTouchEnd, this);\n        r.events.on(\"touchmove\", this.onTouchMove, this);\n\n        r.events.on(\"draw\", this.onDraw, this);\n    }\n\n    protected onTouchStart(e: ITouchState) {\n        if (e.sys!.touches.length == 1) {\n            const t = this.touches[0];\n\n            t.x = e.sys!.touches.item(0)!.pageX - e.sys!.offsetLeft;\n            t.y = e.sys!.touches.item(0)!.pageY - e.sys!.offsetTop;\n            t.prev_x = e.sys!.touches.item(0)!.pageX - e.sys!.offsetLeft;\n            t.prev_y = e.sys!.touches.item(0)!.pageY - e.sys!.offsetTop;\n\n            // t.grabbedPoint = this.planet!.getCartesianFromPixelTerrain(t, true);\n            t.grabbedPoint = this.planet!.getCartesianFromPixelTerrain(new Vec2(t.x, t.y)) || null;\n\n            if (t.grabbedPoint) {\n                t.grabbedSpheroid.radius = t.grabbedPoint.length();\n                this.stopRotation();\n            }\n        }\n    }\n\n    protected onTouchEnd(e: ITouchState) {\n        if (e.sys!.touches.length == 0) {\n            this.scaleRot = 1;\n\n            if (\n                Math.abs(this.touches[0].x - this.touches[0].prev_x) < 3 &&\n                Math.abs(this.touches[0].y - this.touches[0].prev_y) < 3\n            )\n                this.stopRotation();\n        }\n    }\n\n    protected onTouchMove(e: ITouchState) {\n        if (e.sys!.touches.length == 1) {\n            let cam = this.planet!.camera;\n\n            let t = this.touches[0];\n\n            t.prev_x = t.x;\n            t.prev_y = t.y;\n\n            t.x = e.sys!.touches.item(0)!.pageX - e.sys!.offsetLeft;\n            t.y = e.sys!.touches.item(0)!.pageY - e.sys!.offsetTop;\n\n            if (!t.grabbedPoint) return;\n\n            let direction = cam.unproject(t.x, t.y);\n            let targetPoint = new Ray(cam.eye, direction).hitSphere(t.grabbedSpheroid);\n\n            if (targetPoint) {\n                this._a =\n                    Math.acos(t.grabbedPoint.y / t.grabbedSpheroid.radius) -\n                    Math.acos(targetPoint.y / t.grabbedSpheroid.radius);\n                this._vRot = Quat.axisAngleToQuat(cam._u, this._a);\n                this._hRot = Quat.getRotationBetweenVectors(\n                    new Vec3(targetPoint.x, 0.0, targetPoint.z).normal(),\n                    new Vec3(t.grabbedPoint.x, 0.0, t.grabbedPoint.z).normal()\n                );\n\n                let rot = this._hRot.mul(this._vRot);\n\n                let state = this.positionState[this.currState];\n\n                let lim = rot.mulVec3(cam.eye).normal().dot(Vec3.NORTH);\n\n                if (lim > state.max || lim < state.min) {\n                    rot = Quat.yRotation(rot.getYaw());\n                }\n\n                cam.set(rot.mulVec3(cam.eye), Vec3.ZERO, Vec3.NORTH);\n                cam.update();\n            }\n        }\n    }\n\n    protected onMouseLeftButtonClick(e: IMouseState) {\n        this.renderer!.handler.canvas!.classList.add(\"ogGrabbingPoiner\");\n        this.grabbedPoint = this.planet!.getCartesianFromMouseTerrain() || null;\n        this.grabbedDir.copy(e.direction);\n        if (this.grabbedPoint) {\n            this.grabbedSpheroid.radius = this.grabbedPoint.length();\n            this.stopRotation();\n        }\n    }\n\n    public stopRotation() {\n        this.scaleRot = 0.0;\n        this._a = 0.0;\n        this._vRot.clear();\n        this._hRot.clear();\n    }\n\n    protected onMouseLeftButtonUp(e: IMouseState) {\n        this.scaleRot = 1;\n        this.renderer!.handler.canvas!.classList.remove(\"ogGrabbingPoiner\");\n        if (Math.abs(e.x - e.prev_x) < 3 && Math.abs(e.y - e.prev_y) < 3) this.stopRotation();\n    }\n\n    protected onMouseLeftButtonDown(e: IMouseState) {\n        let cam = this.planet!.camera;\n\n        if (!this.grabbedPoint || cam.isFlying()) return;\n\n        if (this.renderer!.events.mouseState.moving) {\n            let targetPoint = new Ray(cam.eye, e.direction).hitSphere(this.grabbedSpheroid);\n\n            if (targetPoint) {\n\n                this._a = Math.acos(this.grabbedPoint.y / this.grabbedSpheroid.radius) -\n                    Math.acos(targetPoint.y / this.grabbedSpheroid.radius);\n\n                let rot = this._vRot = Quat.axisAngleToQuat(cam._u, this._a);\n\n                cam.set(rot.mulVec3(cam.eye), Vec3.ZERO, rot.mulVec3(cam.getUp()));\n\n                this._hRot = Quat.getRotationBetweenVectors(\n                    new Vec3(targetPoint.x, 0.0, targetPoint.z).normal(),\n                    new Vec3(this.grabbedPoint.x, 0.0, this.grabbedPoint.z).normal()\n                );\n\n                rot = this._hRot;\n\n                cam.set(rot.mulVec3(cam.eye), Vec3.ZERO, rot.mulVec3(cam.getUp()));\n                cam.update();\n            }\n        } else {\n            this.scaleRot = 0;\n        }\n    }\n\n    protected onDraw() {\n        let r = this.renderer!;\n        let cam = this.planet!.camera;\n\n        if (r.events.mouseState.leftButtonDown || !this.scaleRot || cam.isFlying()) return;\n\n        this.scaleRot -= this.inertia;\n        if (this.scaleRot <= 0) {\n            this.scaleRot = 0;\n        } else {\n            this._vRot = Quat.axisAngleToQuat(cam._u, this._a);\n\n            let rot = this._vRot.mul(this._hRot);\n\n            let lim = rot.mulVec3(cam.eye).normal().dot(Vec3.NORTH);\n\n            let state = this.positionState[this.currState];\n\n            if (lim > state.max || lim < state.min) {\n                rot = Quat.yRotation(rot.getYaw());\n            }\n\n            r.controlsBag.scaleRot = this.scaleRot;\n            rot = rot\n                .slerp(Quat.IDENTITY, 1 - this.scaleRot * this.scaleRot * this.scaleRot)\n                .normalize();\n            if (!(rot.x || rot.y || rot.z)) {\n                this.scaleRot = 0;\n            }\n\n            cam.set(rot.mulVec3(cam.eye), Vec3.ZERO, Vec3.NORTH);\n            cam.update();\n        }\n    }\n}\n","import * as mercator from \"../mercator\";\nimport {doubleToTwoFloats2} from \"../math/coder\";\nimport {Extent} from \"../Extent\";\nimport {EventCallback, EventsHandler} from \"../Events\";\nimport {Layer, LayerEventsList, ILayerParams} from \"./Layer\";\nimport {LonLat} from \"../LonLat\";\nimport {Material} from \"./Material\";\nimport {NumberArray2} from \"../math/Vec2\";\nimport {NumberArray4} from \"../math/Vec4\";\nimport {Planet} from \"../scene/Planet\";\nimport {WebGLBufferExt, WebGLTextureExt} from \"../webgl/Handler\";\n\nexport interface IBaseGeoImageParams extends ILayerParams {\n    fullExtent?: boolean;\n    corners?: NumberArray2[];\n}\n\ntype BaseGeoImageEventsList = [\n    \"loadend\"\n];\n\nconst BASEGEOIMAGE_EVENTS: BaseGeoImageEventsList = [\n    /**\n     * Triggered when image data is loaded\n     * @event EventsHandler<BaseGeoImageEventsList>#loadend\n     */\n    \"loadend\"\n];\n\nexport type BaseGeoImageEventsType = EventsHandler<BaseGeoImageEventsList> & EventsHandler<LayerEventsList>;\n\n/**\n * BaseGeoImage layer represents square imagery layer that\n * could be a static image, or animated video or webgl buffer\n * object displayed on the globe.\n * @class\n * @extends {Layer}\n */\nclass BaseGeoImage extends Layer {\n\n    public override events: BaseGeoImageEventsType;\n\n    protected _projType: number;\n\n    protected _frameWidth: number;\n    protected _frameHeight: number;\n\n    protected _sourceReady: boolean;\n    protected _sourceTexture: WebGLTextureExt | null;\n    protected _materialTexture: WebGLTextureExt | null;\n\n    protected _gridBufferLow: WebGLBufferExt | null;\n    protected _gridBufferHigh: WebGLBufferExt | null;\n\n    protected _extentWgs84ParamsHigh: Float32Array;\n    protected _extentWgs84ParamsLow: Float32Array;\n\n    protected _extentMercParamsHigh: Float32Array;\n    protected _extentMercParamsLow: Float32Array;\n\n    protected _refreshFrame: boolean;\n    protected _frameCreated: boolean;\n    protected _sourceCreated: boolean;\n\n    public _animate: boolean;\n    protected _ready: boolean;\n    public _creationProceeding: boolean;\n    public _isRendering: boolean;\n\n    protected _extentWgs84: Extent;\n    protected _cornersWgs84: LonLat[];\n    protected _cornersMerc: LonLat[];\n\n    protected _isFullExtent: number;\n\n    /**\n     * rendering function pointer\n     * @type {Function}\n     */\n    public rendering: Function;\n\n    protected _onLoadend_: EventCallback | null;\n\n    constructor(name: string | null, options: IBaseGeoImageParams = {}) {\n        super(name, options);\n\n        // @ts-ignore\n        this.events = this.events.registerNames(BASEGEOIMAGE_EVENTS);\n\n        this._projType = 0;\n\n        this._frameWidth = 256;\n        this._frameHeight = 256;\n\n        this._sourceReady = false;\n        this._sourceTexture = null;\n        this._materialTexture = null;\n\n        this._gridBufferLow = null;\n        this._gridBufferHigh = null;\n\n        this._extentWgs84ParamsHigh = new Float32Array(4);\n        this._extentWgs84ParamsLow = new Float32Array(4);\n\n        this._extentMercParamsHigh = new Float32Array(4);\n        this._extentMercParamsLow = new Float32Array(4);\n\n        this._refreshFrame = true;\n        this._frameCreated = false;\n        this._sourceCreated = false;\n\n        this._animate = false;\n        this._ready = false;\n        this._creationProceeding = false;\n        this._isRendering = false;\n\n        this._extentWgs84 = new Extent();\n        this._cornersWgs84 = [];\n        this._cornersMerc = [];\n\n        this._isFullExtent = options.fullExtent ? 1 : 0;\n\n        /**\n         * rendering function pointer\n         */\n        this.rendering = this._renderingProjType0.bind(this);\n\n        this._onLoadend_ = null;\n\n        options.corners && this.setCorners(options.corners);\n    }\n\n    public override get isIdle(): boolean {\n        return super.isIdle && this._ready;\n    }\n\n    public override addTo(planet: Planet) {\n        this._onLoadend_ = this._onLoadend.bind(this);\n        this.events.on(\"loadend\", this._onLoadend_, this);\n        return super.addTo(planet);\n    }\n\n    protected _onLoadend() {\n        if (this._planet) {\n            this._planet.events.dispatch(this._planet.events.layerloadend, this);\n        }\n    }\n\n    public override remove() {\n        this.events.off(\"loadend\", this._onLoadend_);\n        this._onLoadend_ = null;\n        return super.remove();\n    }\n\n    public override get instanceName(): string {\n        return \"BaseGeoImage\";\n    }\n\n    /**\n     * Gets corners coordinates.\n     * @public\n     * @return {Array.<LonLat>} - (exactly 4 entries)\n     */\n    public getCornersLonLat(): LonLat[] {\n        let c = this._cornersWgs84;\n        return [\n            new LonLat(c[0].lon, c[0].lat),\n            new LonLat(c[1].lon, c[1].lat),\n            new LonLat(c[2].lon, c[2].lat),\n            new LonLat(c[3].lon, c[3].lat)\n        ];\n    }\n\n    /**\n     * Gets corners coordinates.\n     * @public\n     * @return {Array.<Array<number>>} - (exactly 3 entries)\n     */\n    public getCorners(): NumberArray2[] {\n        let c = this._cornersWgs84;\n        return [\n            [c[0].lon, c[0].lat],\n            [c[1].lon, c[1].lat],\n            [c[2].lon, c[2].lat],\n            [c[3].lon, c[3].lat]\n        ];\n    }\n\n    /**\n     * Sets geoImage geographical corners coordinates.\n     * @public\n     * @param {Array.<Array.<number>>} corners - GeoImage corners coordinates. Where first coordinate (exactly 3 entries)\n     * coincedents to the left top image corner, secont to the right top image corner, third to the right bottom\n     * and fourth - left bottom image corner.\n     */\n    public setCorners(corners: NumberArray2[]) {\n        this.setCornersLonLat(LonLat.join(corners));\n    }\n\n    /**\n     * Sets geoImage geographical corners coordinates.\n     * @public\n     * @param {Array.<LonLat>} corners - GeoImage corners coordinates. Where first coordinate\n     * coincedents to the left top image corner, secont to the right top image corner, third to the right bottom\n     * and fourth - left bottom image corner. (exactly 4 entries)\n     */\n    public setCornersLonLat(corners: LonLat[]) {\n        this._refreshFrame = true;\n        this._cornersWgs84 = [\n            corners[0].clone(),\n            corners[1].clone(),\n            corners[2].clone(),\n            corners[3].clone()\n        ];\n\n        for (let i = 0; i < this._cornersWgs84.length; i++) {\n            if (this._cornersWgs84[i].lat >= 89.9) {\n                this._cornersWgs84[i].lat = 89.9;\n            }\n            if (this._cornersWgs84[i].lat <= -89.9) {\n                this._cornersWgs84[i].lat = -89.9;\n            }\n        }\n        this._extent.setByCoordinates(this._cornersWgs84);\n\n        let me = this._extent;\n        if (me.southWest.lat > mercator.MAX_LAT || me.northEast.lat < mercator.MIN_LAT) {\n            this._projType = 0;\n            this.rendering = this._renderingProjType0;\n        } else {\n            this._projType = 1;\n            this.rendering = this._renderingProjType1;\n        }\n\n        if (this._ready && !this._creationProceeding) {\n            this._planet!._geoImageCreator.add(this);\n        }\n    }\n\n    /**\n     * Creates geoImage frame.\n     * @protected\n     */\n    protected _createFrame() {\n        this._extentWgs84 = this._extent.clone();\n\n        this._cornersMerc = [\n            this._cornersWgs84[0].forwardMercatorEPS01(),\n            this._cornersWgs84[1].forwardMercatorEPS01(),\n            this._cornersWgs84[2].forwardMercatorEPS01(),\n            this._cornersWgs84[3].forwardMercatorEPS01()\n        ];\n\n        this._extentMerc = new Extent(\n            this._extentWgs84.southWest.forwardMercatorEPS01(),\n            this._extentWgs84.northEast.forwardMercatorEPS01()\n        );\n\n        let tempArr = new Float32Array(2);\n\n        if (this._projType === 0) {\n\n            doubleToTwoFloats2(this._extentWgs84.southWest.lon, tempArr);\n            this._extentWgs84ParamsHigh[0] = tempArr[0];\n            this._extentWgs84ParamsLow[0] = tempArr[1];\n\n            doubleToTwoFloats2(this._extentWgs84.southWest.lat, tempArr);\n            this._extentWgs84ParamsHigh[1] = tempArr[0];\n            this._extentWgs84ParamsLow[1] = tempArr[1];\n\n            this._extentWgs84ParamsHigh[2] = 2.0 / this._extentWgs84.getWidth();\n            this._extentWgs84ParamsHigh[3] = 2.0 / this._extentWgs84.getHeight();\n\n        } else {\n\n            doubleToTwoFloats2(this._extentMerc.southWest.lon, tempArr);\n            this._extentMercParamsHigh[0] = tempArr[0];\n            this._extentMercParamsLow[0] = tempArr[1];\n\n            doubleToTwoFloats2(this._extentMerc.southWest.lat, tempArr);\n            this._extentMercParamsHigh[1] = tempArr[0];\n            this._extentMercParamsLow[1] = tempArr[1];\n\n            this._extentMercParamsHigh[2] = 2.0 / this._extentMerc.getWidth();\n            this._extentMercParamsHigh[3] = 2.0 / this._extentMerc.getHeight();\n        }\n\n        // creates material frame textures\n        if (this._planet) {\n            let p = this._planet,\n                h = p.renderer!.handler,\n                gl = h.gl!;\n\n            gl.deleteTexture(this._materialTexture as WebGLTexture);\n            this._materialTexture = h.createEmptyTexture_l(this._frameWidth, this._frameHeight);\n\n            let gridBufferArr = this._planet._geoImageCreator.createGridBuffer(this._cornersWgs84, this._projType === 1);\n\n            this._gridBufferHigh = gridBufferArr[0];\n            this._gridBufferLow = gridBufferArr[1];\n\n            this._refreshFrame = false;\n        }\n    }\n\n    /**\n     * @public\n     * @override\n     * @param {Material} material - GeoImage material.\n     */\n    public override abortMaterialLoading(material: Material) {\n        this._creationProceeding = false;\n        material.isLoading = false;\n        material.isReady = false;\n    }\n\n    /**\n     * Clear layer material.\n     * @public\n     * @override\n     */\n    public override clear() {\n        let p = this._planet;\n\n        if (p) {\n            let gl = p.renderer!.handler.gl;\n            this._creationProceeding && p._geoImageCreator.remove(this);\n            p._clearLayerMaterial(this);\n\n            if (gl) {\n                gl.deleteBuffer(this._gridBufferHigh as WebGLBuffer);\n                gl.deleteBuffer(this._gridBufferLow as WebGLBuffer);\n                gl.deleteTexture(this._sourceTexture as WebGLTexture);\n                this._materialTexture && !this._materialTexture.default && gl.deleteTexture(this._materialTexture);\n            }\n        }\n\n        this._sourceTexture = null;\n        this._materialTexture = null;\n\n        this._gridBufferHigh = null;\n        this._gridBufferLow = null;\n\n        this._refreshFrame = true;\n        this._sourceCreated = false;\n\n        this._ready = false;\n        this._creationProceeding = false;\n    }\n\n    /**\n     * Sets layer visibility.\n     * @public\n     * @override\n     * @param {boolean} visibility - GeoImage visibility.\n     */\n    public override setVisibility(visibility: boolean) {\n        if (visibility !== this._visibility) {\n            super.setVisibility(visibility);\n\n            // remove from creator\n            if (this._planet && this._sourceReady) {\n                if (visibility) {\n                    this._planet._geoImageCreator.add(this);\n                } else {\n                    this._planet._geoImageCreator.remove(this);\n                }\n            }\n        }\n    }\n\n    /**\n     * @public\n     * @param {Material} material - GeoImage material.\n     */\n    public override clearMaterial(material: Material) {\n        material.texture = null;\n        material.isLoading = false;\n        material.isReady = false;\n    }\n\n    /**\n     * @public\n     * @override\n     * @returns {Array<number>} -\n     */\n    public override applyMaterial(material: Material): NumberArray4 {\n        let segment = material.segment;\n\n        if (this._ready) {\n            material.applyTexture(this._materialTexture);\n        } else {\n            material.texture = this._planet!.transparentTexture;\n            !this._creationProceeding && this.loadMaterial(material);\n        }\n\n        let v0s, v0t;\n        if (this._projType === 0) {\n            v0s = this._extentWgs84;\n            v0t = segment._extent;\n        } else {\n            v0s = this._extentMerc;\n            v0t = segment.getExtentMerc();\n        }\n\n        let sSize_x = v0s.northEast.lon - v0s.southWest.lon;\n        let sSize_y = v0s.northEast.lat - v0s.southWest.lat;\n        let dV0s_x = (v0t.southWest.lon - v0s.southWest.lon) / sSize_x;\n        let dV0s_y = (v0s.northEast.lat - v0t.northEast.lat) / sSize_y;\n        let dSize_x = (v0t.northEast.lon - v0t.southWest.lon) / sSize_x;\n        let dSize_y = (v0t.northEast.lat - v0t.southWest.lat) / sSize_y;\n\n        return [dV0s_x, dV0s_y, dSize_x, dSize_y];\n    }\n\n    /**\n     * Gets frame width size in pixels.\n     * @public\n     * @returns {Number} Frame width.\n     */\n    public get getFrameWidth(): number {\n        return this._frameWidth;\n    }\n\n    /**\n     * Gets frame height size in pixels.\n     * @public\n     * @returns {Number} Frame height.\n     */\n    public get getFrameHeight(): number {\n        return this._frameHeight;\n    }\n\n    /**\n     * Method depends on GeoImage instance\n     * @protected\n     */\n    protected _createSourceTexture() {\n        //empty\n    }\n\n    public _renderingProjType1() {\n        let p = this._planet!,\n            h = p.renderer!.handler,\n            gl = h.gl!,\n            creator = p._geoImageCreator;\n\n        this._refreshFrame && this._createFrame();\n        this._createSourceTexture();\n\n        let f = creator._framebuffer!;\n        f.setSize(this._frameWidth, this._frameHeight);\n        f.activate();\n\n        h.programs.geoImageTransform.activate();\n        let sh = h.programs.geoImageTransform._program;\n        let sha = sh.attributes,\n            shu = sh.uniforms;\n\n        gl.disable(gl.CULL_FACE);\n\n        f.bindOutputTexture(this._materialTexture as WebGLTexture);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        gl.uniform1i(shu.isFullExtent, this._isFullExtent);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, creator._texCoordsBuffer as WebGLBuffer);\n\n        gl.vertexAttribPointer(sha.texCoords, 2, gl.UNSIGNED_SHORT, true, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._gridBufferHigh as WebGLBuffer);\n        gl.vertexAttribPointer(sha.cornersHigh, this._gridBufferHigh!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._gridBufferLow as WebGLBuffer);\n        gl.vertexAttribPointer(sha.cornersLow, this._gridBufferLow!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.uniform4fv(shu.extentParamsHigh, this._extentMercParamsHigh);\n        gl.uniform4fv(shu.extentParamsLow, this._extentMercParamsLow);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._sourceTexture as WebGLTexture);\n        gl.uniform1i(shu.sourceTexture, 0);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, creator._indexBuffer as WebGLBuffer);\n        gl.drawElements(gl.TRIANGLE_STRIP, creator._indexBuffer!.numItems, gl.UNSIGNED_INT, 0);\n        f.deactivate();\n\n        gl.enable(gl.CULL_FACE);\n\n        this._ready = true;\n\n        this._creationProceeding = false;\n    }\n\n    protected _renderingProjType0() {\n        let p = this._planet!,\n            h = p.renderer!.handler,\n            gl = h.gl!,\n            creator = p._geoImageCreator;\n\n        this._refreshFrame && this._createFrame();\n        this._createSourceTexture();\n\n        let f = creator._framebuffer!;\n        f.setSize(this._frameWidth, this._frameHeight);\n        f.activate();\n\n        h.programs.geoImageTransform.activate();\n        let sh = h.programs.geoImageTransform._program;\n        let sha = sh.attributes,\n            shu = sh.uniforms;\n\n        gl.disable(gl.CULL_FACE);\n\n        f.bindOutputTexture(this._materialTexture as WebGLTexture);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.bindBuffer(gl.ARRAY_BUFFER, creator._texCoordsBuffer as WebGLBuffer);\n\n        gl.vertexAttribPointer(sha.texCoords, 2, gl.UNSIGNED_SHORT, true, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._gridBufferHigh as WebGLBuffer);\n        gl.vertexAttribPointer(sha.cornersHigh, this._gridBufferHigh!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._gridBufferLow as WebGLBuffer);\n        gl.vertexAttribPointer(sha.cornersLow, this._gridBufferLow!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.uniform4fv(shu.extentParamsHigh, this._extentWgs84ParamsHigh);\n        gl.uniform4fv(shu.extentParamsLow, this._extentWgs84ParamsLow);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._sourceTexture as WebGLTexture);\n        gl.uniform1i(shu.sourceTexture, 0);\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, creator._indexBuffer as WebGLBuffer);\n        gl.drawElements(gl.TRIANGLE_STRIP, creator._indexBuffer!.numItems, gl.UNSIGNED_INT, 0);\n        f.deactivate();\n\n        gl.enable(gl.CULL_FACE);\n\n        this._ready = true;\n\n        this._creationProceeding = false;\n    }\n}\n\nexport {BaseGeoImage};\n","export const input: { [id: string]: number } = {\n    MB_LEFT: 0,\n    MB_RIGHT: 2,\n    MB_MIDDLE: 1,\n    KEY_CTRL: 17,\n    KEY_ALT: 18,\n    KEY_SHIFT: 16,\n    KEY_SPACE: 32,\n    KEY_PGUP: 33,\n    KEY_PGDN: 34,\n    KEY_LEFT: 37,\n    KEY_UP: 38,\n    KEY_RIGHT: 39,\n    KEY_DOWN: 40,\n    KEY_PRINTSCREEN: 44,\n    KEY_EQUALS: 61,\n    KEY_A: 65,\n    KEY_C: 67,\n    KEY_D: 68,\n    KEY_E: 69,\n    KEY_F: 70,\n    KEY_H: 72,\n    KEY_I: 73,\n    KEY_K: 75,\n    KEY_L: 76,\n    KEY_N: 78,\n    KEY_O: 79,\n    KEY_P: 80,\n    KEY_Q: 81,\n    KEY_R: 82,\n    KEY_S: 83,\n    KEY_V: 86,\n    KEY_W: 87,\n    KEY_X: 88,\n    KEY_Z: 90,\n    KEY_PLUS: 107,\n    KEY_F1: 112,\n    KEY_MINUS: 173,\n    KEY_APOSTROPHE: 192,\n    KEY_BACK_SLASH: 220,\n    KEY_MORE: 190,\n    KEY_SLASH: 191,\n    KEY_LESS: 188,\n    KEY_LEFT_SQUARE_BRACKET: 219,\n    KEY_RIGHT_SQUARE_BRACKET: 221,\n    KEY_SINGLE_QUOTE: 222\n};\n","import {EventsHandler, createEvents} from '../Events';\nimport {Layer} from '../layer/Layer';\nimport {Control, IControlParams} from \"./Control\";\n\ntype LayerAnimationEventsList = [\"change\", \"idle\", \"play\", \"pause\", \"stop\"];\n\nconst LAYERANIMATION_EVENTS: LayerAnimationEventsList = [\"change\", \"idle\", \"play\", \"pause\", \"stop\"];\n\ninterface ILayerAnimationParams extends IControlParams {\n    layers?: Layer,\n    playInterval?: number,\n    frameSize?: number,\n    repeat?: boolean;\n    skipTimeout?: number;\n}\n\nexport class LayerAnimation extends Control {\n    public events: EventsHandler<LayerAnimationEventsList>;\n    protected _layersArr: Layer[];\n    protected _currentIndex: number;\n    protected _playInterval: number;\n    protected _playIntervalHandler: any;\n    protected _playIndex: number;\n    protected _frameSize: number;\n    public repeat: boolean;\n    public skipTimeout: number;\n    protected _timeoutStart: number;\n    protected _currVisibleIndex: number = 0;\n\n    constructor(options: ILayerAnimationParams = {}) {\n        super(options);\n        this.events = createEvents(LAYERANIMATION_EVENTS);\n        this._name = options.name || `layerAnimation-${this.__id}`;\n        this._layersArr = options.layers ? ([] as Layer[]).concat(options.layers) : [];\n        this._currentIndex = -1;\n        this._playInterval = options.playInterval || 120;\n        this._playIntervalHandler = -1;\n        this._playIndex = 0;\n        this._frameSize = options.frameSize || 50;\n        this.repeat = options.repeat != undefined ? options.repeat : true;\n        this.skipTimeout = options.skipTimeout || 5000;\n        this._timeoutStart = 0;\n    }\n\n    protected _onViewchange = () => {\n        this._timeoutStart = performance.now();\n    }\n\n    protected _getFramesNum(): number {\n        return Math.ceil(this._layersArr.length / this._frameSize);\n    }\n\n    protected _setFrame(frameIndex: number) {\n        for (let i = 0, len = this._getFramesNum(); i < len; i++) {\n            if (i !== frameIndex) {\n                this._removeFrameFromPlanet(i);\n            } else {\n                this._appendFrameToPlanet(i);\n            }\n        }\n    }\n\n    protected _getFrameIndex(layerIndex: number): number {\n        return Math.floor(layerIndex / this._frameSize);\n    }\n\n    protected _appendFrameToPlanet(frameIndex: number) {\n        if (this.planet) {\n            let minIndex = frameIndex * this._frameSize;\n            let maxIndex = minIndex + this._frameSize;\n            for (let i = minIndex, len = maxIndex > this._layersArr.length ? this._layersArr.length : maxIndex; i < len; i++) {\n                this.planet.addLayer(this._layersArr[i]);\n            }\n        }\n    }\n\n    protected _removeFrameFromPlanet(frameIndex: number) {\n        if (this.planet) {\n            let minIndex = frameIndex * this._frameSize;\n            let maxIndex = minIndex + this._frameSize;\n            for (let i = minIndex, len = maxIndex > this._layersArr.length ? this._layersArr.length : maxIndex; i < len; i++) {\n                this._layersArr[i].abortLoading();\n                this._layersArr[i].remove();\n                this._layersArr[i].setVisibility(false);\n            }\n        }\n    }\n\n    public override oninit() {\n        super.oninit();\n        this.onactivate();\n        this._initLayers();\n        this.planet!.events.on(\"layerloadend\", this._onLayerLoadend);\n        this._setCurrentIndexAsync(0, false, true);\n    }\n\n    public override onactivate() {\n        super.onactivate();\n        this.planet!.camera.events.on(\"viewchange\", this._onViewchange);\n        this.planet!.renderer!.handler.events.on(\"visibilitychange\", this._onVisibilityChange);\n    }\n\n    public override ondeactivate() {\n        super.ondeactivate();\n        this.planet!.camera.events.off(\"viewchange\", this._onViewchange);\n\n        for (let i = 0; i < this._layersArr.length; i++) {\n            this._layersArr[i].setVisibility(false);\n        }\n\n        this.planet!.events.off(\"layerloadend\", this._onLayerLoadend);\n        this.planet!.renderer!.handler.events.off(\"visibilitychange\", this._onVisibilityChange);\n    }\n\n    protected _onVisibilityChange = (isVisible: boolean) => {\n        if (!isVisible) {\n            this.pause();\n        }\n    }\n\n    public clear() {\n        this.stop();\n        this._currentIndex = -1;\n        this._currVisibleIndex = -1;\n        let layersToRemove = this._layersArr;\n        this._layersArr = [];\n        for (let i = 0; i < layersToRemove.length; i++) {\n            layersToRemove[i].remove();\n        }\n    }\n\n    protected _initLayers() {\n        if (this.planet) {\n            for (let i = 0, len = this._layersArr.length; i < len; i++) {\n                let li = this._layersArr[i];\n                li.setVisibility(false);\n                li.setBaseLayer(false);\n                li.opacity = 0.0;\n            }\n            this._appendFrameToPlanet(0);\n        }\n    }\n\n    public setLayers(layers: Layer[]) {\n        this.clear();\n        this._layersArr = [].concat(layers as any);\n        this._initLayers();\n    }\n\n    public appendLayer(layer: Layer) {\n        this._layersArr.push(layer);\n        layer.setVisibility(false);\n        layer.setBaseLayer(false);\n        layer.opacity = 0.0;\n        //check current frame\n        this.planet?.addLayer(layer);\n    }\n\n    /**\n     * warning: Use XYZ.isIdle in requestAnimationFrame(after setVisibility)\n     * @returns Returns true if current layer is idle\n     */\n    public get isIdle(): boolean {\n        let currLayer = this._layersArr[this._currentIndex];\n        return currLayer && currLayer.isIdle || !currLayer;\n    }\n\n    public get playInterval() {\n        return this._playInterval;\n    }\n\n    public set playInterval(val: number) {\n        if (val !== this._playInterval) {\n            this._playInterval = val;\n            if (this.isPlaying) {\n                this.pause();\n                this.play();\n            }\n        }\n    }\n\n    public get isPlaying(): boolean {\n        return this._playIntervalHandler !== -1;\n    }\n\n    public get layers(): Layer[] {\n        return this._layersArr;\n    }\n\n    protected _checkEnd() {\n        if (this._playIndex > this._layersArr.length) {\n            if (this.repeat) {\n                this._playIndex = 0;\n            } else {\n                this.pause();\n            }\n        }\n    }\n\n    public play() {\n        if (!this.isPlaying) {\n\n            if (this._currentIndex >= this._layersArr.length - 1) {\n                this.stop();\n            }\n\n            this._timeoutStart = performance.now();\n\n            this._playIntervalHandler = setInterval(() => {\n                this._checkEnd();\n                this._setCurrentIndexAsync(this._playIndex, false, false);\n\n                requestAnimationFrame(() => {\n                    if (this.isIdle || (performance.now() - this._timeoutStart > this.skipTimeout)) {\n                        this._playIndex++;\n                        this._timeoutStart = performance.now();\n                    }\n                });\n\n            }, this._playInterval);\n\n            this.events.dispatch(this.events.play);\n        }\n    }\n\n    public stop() {\n        if (this._playIndex > 0) {\n            this._clearInterval();\n            this._playIndex = 0;\n            this.setCurrentIndex(0);\n            this.events.dispatch(this.events.stop);\n        }\n    }\n\n    public pause() {\n        if (this.isPlaying) {\n            this._clearInterval();\n            this.events.dispatch(this.events.pause);\n        }\n    }\n\n    protected _clearInterval() {\n        clearInterval(this._playIntervalHandler);\n        this._playIntervalHandler = -1;\n    }\n\n    /**\n     * Waiting for the current index layer loadend and make it non-transparent,\n     * and make prev layer transparent, also check previous frame index to clean up.\n     */\n    private _onLayerLoadend = (layer: Layer) => {\n\n        let currLayer = this._layersArr[this._currentIndex];\n\n        if (currLayer && currLayer.isEqual(layer)) {\n\n            // BRUTE\n            let currFrame = this._getFrameIndex(this._currentIndex);\n            let from = currFrame * this._frameSize,\n                to = this._currentIndex;\n            for (let i = from; i < to; i++) {\n                let li = this._layersArr[i];\n                li.opacity = 0;\n                li.setVisibility(false);\n            }\n\n            // * Make CURRENT Layer VISIBLE *\n            currLayer.opacity = 1.0;\n\n            let currVisibleLayer = this._layersArr[this._currVisibleIndex];\n            if (currVisibleLayer) {\n                currVisibleLayer.opacity = 0.0;\n                currVisibleLayer.setVisibility(false);\n\n                // If frame is changed - remove it from the planet\n                let prevFrame = this._getFrameIndex(this._currVisibleIndex);\n                if (this._getFrameIndex(this._currentIndex) !== prevFrame) {\n                    this._removeFrameFromPlanet(prevFrame);\n                }\n            }\n\n            this.events.dispatch(this.events.idle, currLayer);\n        }\n    }\n\n\n    /**\n     * Function sets layer index visible.\n     * @param {number} index\n     * @param {boolean} [stopPropagation=false]\n     */\n    setCurrentIndex(index: number, stopPropagation = false) {\n        this._setCurrentIndexAsync(index, true, stopPropagation);\n    }\n\n    /**\n     * Function sets layer index visible. If the layer is idle (all visible tiles loaded), sets opacity to one,\n     * otherwise to ZERO it means that when all visible tiles will be loaded the opacity becomes ONE. So, previous\n     * layer remains not transparent (opacity = 1) till current layer is loading.\n     */\n    protected _setCurrentIndexAsync(index: number, forceVisibility: boolean = false, stopPropagation: boolean = false) {\n\n        if (index != this._currentIndex && index >= 0 && index < this._layersArr.length) {\n\n            let prevCurrIndex = this._currentIndex;\n            this._currentIndex = index;\n            this._playIndex = index;\n\n            let prevCurrFrame = this._getFrameIndex(prevCurrIndex);\n            let currFrame = this._getFrameIndex(this._currentIndex);\n\n            let prevCurrLayer = this._layersArr[prevCurrIndex],\n                currLayer = this._layersArr[index];\n\n            let frameChanged = currFrame != prevCurrFrame;\n            if (frameChanged) {\n                this._appendFrameToPlanet(currFrame);\n            }\n\n            if (prevCurrLayer) {\n                if (prevCurrLayer.isIdle) {\n                    this._currVisibleIndex = prevCurrIndex;\n                } else {\n                    prevCurrLayer.opacity = 0;\n                    prevCurrLayer.setVisibility(false);\n                }\n            }\n\n            if (currLayer) {\n\n                currLayer.opacity = 0.0;\n                currLayer.setVisibility(true);\n\n                requestAnimationFrame(() => {\n                    if (currLayer.isIdle || forceVisibility) {\n\n                        currLayer.opacity = 1.0;\n\n                        // If frame is changed - remove it from the planet\n                        if (frameChanged) {\n                            this._removeFrameFromPlanet(prevCurrFrame);\n                        }\n\n                        if (prevCurrLayer) {\n                            prevCurrLayer.opacity = 0.0;\n                            prevCurrLayer.setVisibility(false);\n                        }\n\n                        let currVisibleLayer = this._layersArr[this._currVisibleIndex];\n                        if (currVisibleLayer) {\n                            currVisibleLayer.opacity = 0.0;\n                            currVisibleLayer.setVisibility(false);\n                        }\n                    }\n                });\n\n                if (!stopPropagation) {\n                    this.events.dispatch(this.events.change, this._currentIndex, prevCurrIndex);\n                }\n            }\n        }\n    }\n}\n","import {clamp} from '../math';\nimport {EventsHandler} from \"../Events\";\nimport {IViewParams, View, ViewEventsList} from './View';\nimport {stringTemplate} from '../utils/shared';\n\ninterface ISliderParams extends IViewParams {\n    label?: string;\n    value?: number;\n    min?: number;\n    max?: number;\n}\n\ntype SliderEventsList = [\"change\"];\n\nconst SLIDER_EVENTS: SliderEventsList = [\"change\"];\n\nconst TEMPLATE = `<div class=\"og-slider\">\n      <div class=\"og-slider-label\">{label}</div>\n      <div class=\"og-slider-panel\">\n        <div class=\"og-slider-progress\"></div>      \n        <div class=\"og-slider-pointer\"></div>\n      </div>\n      <input type=\"number\"/>\n    </div>`;\n\nclass Slider extends View<null> {\n\n    public override events: EventsHandler<SliderEventsList> & EventsHandler<ViewEventsList>;\n\n    protected _value: number;\n    protected _min: number;\n    protected _max: number;\n\n    protected _startPosX: number;\n\n    protected _resizeObserver: ResizeObserver;\n\n    protected $label: HTMLElement | null;\n    protected $pointer: HTMLElement | null;\n    protected $progress: HTMLElement | null;\n    protected $input: HTMLInputElement | null;\n    protected $panel: HTMLElement | null;\n\n    constructor(options: ISliderParams = {}) {\n        super({\n            template: stringTemplate(TEMPLATE, {\n                label: options.label || \"\"\n            })\n        });\n\n        //@ts-ignore\n        this.events = this.events.registerNames(SLIDER_EVENTS);\n\n        this._value = options.value || 0.0;\n        this._min = options.min || 0.0;\n        this._max = options.max || 1.0;\n        //this._step = options.step || ((this._max - this._min) / 10.0);\n\n        this._resizeObserver = new ResizeObserver(this._onResize);\n\n        this._startPosX = 0;\n\n        this.$label = null;\n        this.$pointer = null;\n        this.$progress = null;\n        this.$input = null;\n        this.$panel = null;\n    }\n\n    public override render(params: any): this {\n\n        super.render(params);\n\n        this.$label = this.select(\".og-slider-label\")!;\n        if (this.$label.innerHTML === \"\") {\n            this.$label.style.display = \"none\";\n        }\n        this.$pointer = this.select(\".og-slider-pointer\");\n        this.$progress = this.select(\".og-slider-progress\");\n        this.$panel = this.select(\".og-slider-panel\");\n        this.$input = this.select<HTMLInputElement>(\"input\");\n\n        this._resizeObserver.observe(this.el!);\n\n        this._initEvents();\n\n        return this;\n    }\n\n    protected _onResize = () => {\n        this._setOffset(this._value * this.$panel!.clientWidth / (this._max - this._min));\n    }\n\n    public set value(val: number) {\n        if (val !== this._value) {\n            this._value = clamp(val, this._min, this._max);\n            this.$input!.value = this._value.toString();\n            this._setOffset(this._value * this.$panel!.clientWidth / (this._max - this._min));\n            this.events.dispatch(this.events.change, this._value, this);\n        }\n    }\n\n    public get value(): number {\n        return this._value;\n    }\n\n    protected _initEvents() {\n        this.$panel!.addEventListener(\"mousedown\", this._onMouseDown);\n        //@ts-ignore\n        this.$panel!.addEventListener(\"mousewheel\", this._onMouseWheel);\n        this.$panel!.addEventListener(\"wheel\", this._onMouseWheelFF);\n        this.$input!.addEventListener(\"input\", this._onInput);\n    }\n\n    protected _clearEvents() {\n        this.$panel!.removeEventListener(\"mousedown\", this._onMouseDown);\n        //@ts-ignore\n        this.$panel!.removeEventListener(\"mousewheel\", this._onMouseWheel);\n        this.$panel!.removeEventListener(\"wheel\", this._onMouseWheelFF);\n        this.$input!.removeEventListener(\"input\", this._onInput);\n    }\n\n    protected _onMouseWheel = (e: WheelEvent) => {\n        //@ts-ignore\n        e = e || window.event;\n        e.preventDefault();\n        e.stopPropagation();\n        //@ts-ignore\n        this.value = this._value + Math.sign(e.wheelDelta) * (this._max - this._min) / 100.0;\n    }\n\n    protected _onMouseWheelFF = (e: WheelEvent) => {\n        this._onMouseWheel(e);\n    }\n\n    protected _onInput = (e: Event) => {\n        //@ts-ignore\n        e = e || window.event;\n        e.preventDefault();\n        e.stopPropagation();\n        //@ts-ignore\n        this.value = parseFloat(e.target.value);\n    }\n\n    protected _onMouseDown = (e: MouseEvent) => {\n        //@ts-ignore\n        e = e || window.event;\n        e.preventDefault();\n\n        this._startPosX = e.clientX;\n\n        this.value = this._min + (this._max - this._min) * (e.offsetX / this.$panel!.clientWidth);\n\n        document.addEventListener(\"mousemove\", this._onMouseMove);\n        document.addEventListener(\"mouseup\", this._onMouseUp);\n    }\n\n    protected _setOffset(x: number) {\n        if (x >= 0 && x <= this.$panel!.clientWidth) {\n            this.$pointer!.style.left = this.$progress!.style.width = `${x * 100 / this.$panel!.clientWidth}%`;\n        }\n    }\n\n    protected _onMouseMove = (e: MouseEvent) => {\n        //@ts-ignore\n        e = e || window.event;\n        e.preventDefault();\n        e.stopPropagation();\n\n        let rect = this.$panel!.getBoundingClientRect();\n        let clientX = clamp(e.clientX, rect.left, rect.right);\n        let dx = this._startPosX - clientX;\n        this._startPosX = clientX;\n        this.value = (this.$pointer!.offsetLeft - dx) * (this._max - this._min) / this.$panel!.clientWidth;\n    }\n\n    protected _onMouseUp = () => {\n        document.removeEventListener(\"mouseup\", this._onMouseUp);\n        document.removeEventListener(\"mousemove\", this._onMouseMove);\n    }\n\n    public override remove() {\n        this._clearEvents();\n        super.remove();\n    }\n}\n\nexport {Slider}\n","class Lock {\n\n    protected _lock: number;\n\n    constructor() {\n        this._lock = 0;\n    }\n\n    public lock(key: Key) {\n        this._lock |= (1 << key.id);\n    }\n\n    public free(key: Key) {\n        this._lock &= ~(1 << key.id);\n    }\n\n    public isFree(): boolean {\n        return this._lock === 0;\n    }\n\n    public isLocked(): boolean {\n        return this._lock !== 0;\n    }\n}\n\nclass Key {\n\n    static __counter__: number = 0;\n\n    protected __id: number;\n\n    constructor() {\n        this.__id = Key.__counter__++;\n    }\n\n    public get id(): number {\n        return this.__id;\n    }\n}\n\nexport {Lock, Key};\n","import * as math from \"../math\";\nimport {Control, IControlParams} from \"./Control\";\nimport {input} from \"../input/input\";\nimport {Key} from \"../Lock\";\nimport {LonLat} from \"../LonLat\";\nimport {Mat4} from \"../math/Mat4\";\nimport {Quat} from \"../math/Quat\";\nimport {Ray} from \"../math/Ray\";\nimport {Sphere} from \"../bv/Sphere\";\nimport {Vec3} from \"../math/Vec3\";\nimport {Vec2} from \"../math/Vec2\";\nimport {Planet} from \"../scene/Planet\";\nimport {PlanetCamera} from \"../camera/PlanetCamera\";\nimport {IMouseState} from \"../renderer/RendererEvents\";\n\nexport interface IStepForward {\n    eye: Vec3;\n    v: Vec3;\n    u: Vec3;\n    n: Vec3;\n}\n\ninterface IMouseNavigationParams extends IControlParams {\n    minSlope?: number;\n}\n\n/**\n * Mouse planet camera dragging control.\n */\nexport class MouseNavigation extends Control {\n    protected grabbedPoint: Vec3;\n    protected _eye0: Vec3;\n    protected pointOnEarth: Vec3;\n    protected earthUp: Vec3;\n    public inertia: number;\n    protected grabbedSpheroid: Sphere;\n    protected qRot: Quat;\n    protected scaleRot: number;\n    protected distDiff: number;\n    protected stepsCount: number;\n    protected stepsForward: IStepForward[] | null;\n    protected stepIndex: number;\n    protected _lmbDoubleClickActive: boolean;\n    public minSlope: number;\n    protected _wheelDirection: number;\n    protected _keyLock: Key;\n    protected _deactivate = false;\n    protected _shiftBusy = false;\n\n    constructor(options: IMouseNavigationParams = {}) {\n        super(options);\n\n        this._name = \"mouseNavigation\";\n\n        this.grabbedPoint = new Vec3();\n        this._eye0 = new Vec3();\n        this.pointOnEarth = new Vec3();\n        this.earthUp = new Vec3();\n        this.inertia = 0.007;\n        this.grabbedSpheroid = new Sphere();\n        this.qRot = new Quat();\n        this.scaleRot = 0.0;\n\n        this.distDiff = 0.3;\n        this.stepsCount = 8;\n        this.stepsForward = null;\n        this.stepIndex = 0;\n\n        this._lmbDoubleClickActive = true;\n\n        this.minSlope = options.minSlope || 0.1;\n\n        this._wheelDirection = +1;\n\n        this._keyLock = new Key();\n    }\n\n    static getMovePointsFromPixelTerrain(cam: PlanetCamera, planet: Planet, stepsCount: number, delta: number, point: Vec2, forward: boolean, dir?: Vec3 | null): IStepForward[] | undefined {\n        const steps: IStepForward[] = [];\n\n        let eye = cam.eye.clone(),\n            n = cam._b.clone(),\n            u = cam._r.clone(),\n            v = cam._u.clone();\n\n        let a = planet.getCartesianFromPixelTerrain(point);\n\n        if (!a) {\n            a = planet.getCartesianFromPixelTerrain(planet.renderer!.handler.getCenter());\n        }\n\n        if (a) {\n            if (!dir) {\n                dir = Vec3.sub(a, cam.eye).normalize();\n            }\n\n            let d = (delta * cam.eye.distance(a)) / stepsCount;\n\n            if (forward) {\n                d = -1.25 * d;\n            } else {\n                d *= 2;\n            }\n\n            const scaled_n = n.scaleTo(d);\n\n            const slope = dir.dot(cam.eye.normal().negate());\n\n            if (slope >= 0.1) {\n                const grabbedSpheroid = new Sphere();\n                grabbedSpheroid.radius = a.length();\n\n                let rotArr = [],\n                    eyeArr = [];\n\n                let breaked = false;\n                for (let i = 0; i < stepsCount; i++) {\n                    eye.addA(scaled_n);\n                    const b = new Ray(eye, dir).hitSphere(grabbedSpheroid);\n                    eyeArr[i] = eye.clone();\n                    if (b) {\n                        rotArr[i] = new Mat4().rotateBetweenVectors(a.normal(), b.normal());\n                    } else {\n                        breaked = true;\n                        break;\n                    }\n                }\n\n                if (!breaked) {\n                    for (let i = 0; i < stepsCount; i++) {\n                        let rot = rotArr[i];\n                        steps[i] = {\n                            eye: rot.mulVec3(eyeArr[i]),\n                            v: rot.mulVec3(v),\n                            u: rot.mulVec3(u),\n                            n: rot.mulVec3(n)\n                        };\n                    }\n                } else {\n                    eye = cam.eye.clone();\n                    for (let i = 0; i < stepsCount; i++) {\n                        steps[i] = {\n                            eye: eye.addA(scaled_n).clone(),\n                            v: v,\n                            u: u,\n                            n: n,\n                        };\n                    }\n                }\n            } else {\n                for (let i = 0; i < stepsCount; i++) {\n                    steps[i] = {\n                        eye: eye.addA(dir.scaleTo(-d)).clone(),\n                        v: v,\n                        u: u,\n                        n: n,\n                    };\n                }\n            }\n\n            return steps;\n        }\n    }\n\n    public override onactivate() {\n        if (this.renderer) {\n            this.renderer.events.on(\"mousewheel\", this.onMouseWheel, this);\n            this.renderer.events.on(\"lhold\", this.onMouseLeftButtonDown, this);\n            this.renderer.events.on(\"rhold\", this.onMouseRightButtonDown, this);\n            this.renderer.events.on(\"ldown\", this.onMouseLeftButtonClick, this);\n            this.renderer.events.on(\"lup\", this.onMouseLeftButtonUp, this);\n            this.renderer.events.on(\"rdown\", this.onMouseRightButtonClick, this);\n            this.renderer.events.on(\"draw\", this.onDraw, this, -1000);\n            this.renderer.events.on(\"mousemove\", this.onMouseMove, this);\n            this.renderer.events.on(\"mouseleave\", this.onMouseLeave, this);\n            this.renderer.events.on(\"mouseenter\", this.onMouseEnter, this);\n\n            if (this._lmbDoubleClickActive) {\n                this.renderer.events.on(\"ldblclick\", this.onMouseLeftButtonDoubleClick, this);\n            }\n        }\n    }\n\n    public override ondeactivate() {\n        if (this.renderer) {\n            this.renderer.events.off(\"mousewheel\", this.onMouseWheel);\n            this.renderer.events.off(\"lhold\", this.onMouseLeftButtonDown);\n            this.renderer.events.off(\"rhold\", this.onMouseRightButtonDown);\n            this.renderer.events.off(\"ldown\", this.onMouseLeftButtonClick);\n            this.renderer.events.off(\"lup\", this.onMouseLeftButtonUp);\n            this.renderer.events.off(\"rdown\", this.onMouseRightButtonClick);\n            this.renderer.events.off(\"draw\", this.onDraw);\n            this.renderer.events.off(\"ldblclick\", this.onMouseLeftButtonDoubleClick);\n            this.renderer.events.off(\"mouseleave\", this.onMouseLeave);\n            this.renderer.events.off(\"mouseenter\", this.onMouseEnter);\n        }\n    }\n\n    public activateDoubleClickZoom() {\n        if (!this._lmbDoubleClickActive) {\n            this._lmbDoubleClickActive = true;\n            this.renderer && this.renderer.events.on(\"ldblclick\", this.onMouseLeftButtonDoubleClick, this);\n        }\n    }\n\n    public deactivateDoubleClickZoom() {\n        if (this._lmbDoubleClickActive) {\n            this._lmbDoubleClickActive = false;\n            this.renderer && this.renderer.events.off(\"ldblclick\", this.onMouseLeftButtonDoubleClick);\n        }\n    }\n\n    protected onMouseEnter(e: IMouseState) {\n        const renderEvents = this.renderer!.events;\n        if (renderEvents.isKeyPressed(input.KEY_ALT)) {\n            renderEvents.releaseKeys();\n        }\n\n        renderEvents.updateButtonsStates(e.sys!.buttons);\n        if (renderEvents.mouseState.leftButtonDown) {\n            this.renderer!.handler.canvas!.classList.add(\"ogGrabbingPoiner\");\n        } else {\n            this.renderer!.handler.canvas!.classList.remove(\"ogGrabbingPoiner\");\n        }\n    }\n\n    protected onMouseLeave() {\n        if (this.renderer!.events.mouseState.leftButtonDown) {\n            this.scaleRot = 0;\n        }\n        this.renderer!.handler.canvas!.classList.remove(\"ogGrabbingPoiner\");\n    }\n\n    protected onMouseWheel(e: IMouseState) {\n        if (this.stepIndex) {\n            return;\n        }\n\n        this.planet!.stopFlying();\n\n        this.stopRotation();\n\n        this._deactivate = true;\n\n        this.planet!.layerLock.lock(this._keyLock);\n        //this.planet!.terrainLock.lock(this._keyLock);\n        this.planet!._normalMapCreator.lock(this._keyLock);\n\n        this.stepsForward = MouseNavigation.getMovePointsFromPixelTerrain(\n            this.planet!.camera,\n            this.planet!,\n            this.stepsCount,\n            this.distDiff,\n            e.pos,\n            e.wheelDelta > 0,\n            e.direction\n        ) || null;\n\n        this._wheelDirection = e.wheelDelta;\n\n        if (this.stepsForward) {\n            this.stepIndex = this.stepsCount;\n        }\n    }\n\n    public override oninit() {\n        this.activate();\n        if (this.renderer) {\n            this.renderer.events.on(\"keyfree\", input.KEY_ALT, this.onShiftFree, this);\n            this.renderer.events.on(\"keyfree\", input.KEY_PRINTSCREEN, this.onShiftFree, this);\n        }\n    }\n\n    protected onMouseLeftButtonDoubleClick(e: IMouseState) {\n        this.planet!.stopFlying();\n        this.stopRotation();\n        const p = this.planet!.getCartesianFromPixelTerrain(e.pos);\n        if (p) {\n            const cam = this.planet!.camera;\n            let maxAlt = cam.maxAltitude + this.planet!.ellipsoid.polarSize;\n            let minAlt = cam.minAltitude + this.planet!.ellipsoid.polarSize;\n            const camAlt = cam.eye.length();\n            const g = this.planet!.ellipsoid.cartesianToLonLat(p);\n            if (camAlt > maxAlt || camAlt < minAlt) {\n                this.planet!.flyLonLat(new LonLat(g.lon, g.lat))\n                return;\n            }\n\n            if (this.renderer!.events.isKeyPressed(input.KEY_ALT)) {\n                this.planet!.flyLonLat(\n                    new LonLat(g.lon, g.lat, cam.eye.distance(p) * 2.0)\n                );\n            } else {\n                this.planet!.flyLonLat(\n                    new LonLat(g.lon, g.lat, cam.eye.distance(p) * 0.57)\n                );\n            }\n        }\n    }\n\n    protected onMouseLeftButtonClick() {\n        if (this._active) {\n            this.renderer!.handler.canvas!.classList.add(\"ogGrabbingPoiner\");\n            this.grabbedPoint = this.planet!.getCartesianFromMouseTerrain()!;\n            if (this.grabbedPoint) {\n                this._eye0.copy(this.planet!.camera.eye);\n                this.grabbedSpheroid.radius = this.grabbedPoint.length();\n                this.stopRotation();\n            }\n        }\n    }\n\n    public stopRotation() {\n        this.qRot.clear();\n        this.planet!.layerLock.free(this._keyLock);\n        this.planet!.terrainLock.free(this._keyLock);\n        this.planet!._normalMapCreator.free(this._keyLock);\n    }\n\n    protected onMouseLeftButtonUp(e: IMouseState) {\n        this.renderer!.handler.canvas!.classList.remove(\"ogGrabbingPoiner\");\n        if (e.x === e.prev_x && e.y === e.prev_y) {\n            this.scaleRot = 0.0;\n        }\n    }\n\n    protected onMouseLeftButtonDown(e: IMouseState) {\n        if (this._active) {\n            if (!this.grabbedPoint) {\n                return;\n            }\n\n            this.planet!.stopFlying();\n\n            if (e.moving) {\n                let cam = this.planet!.camera;\n\n                if (cam.slope > 0.2) {\n                    const targetPoint = new Ray(cam.eye, e.direction).hitSphere(this.grabbedSpheroid);\n                    if (targetPoint) {\n                        this.scaleRot = 1.0;\n                        this.qRot = Quat.getRotationBetweenVectors(\n                            targetPoint.normal(),\n                            this.grabbedPoint.normal()\n                        );\n                        let rot = this.qRot;\n                        cam.eye = rot.mulVec3(cam.eye);\n                        cam._u = rot.mulVec3(cam._u);\n                        cam._r = rot.mulVec3(cam._r);\n                        cam._b = rot.mulVec3(cam._b);\n                    }\n                } else {\n                    let p0 = this.grabbedPoint,\n                        p1 = Vec3.add(p0, cam._r),\n                        p2 = Vec3.add(p0, p0.normal());\n\n                    let px = new Vec3();\n                    if (new Ray(cam.eye, e.direction).hitPlane(p0, p1, p2, px) === Ray.INSIDE) {\n                        cam.eye = this._eye0.addA(px.subA(p0).negate());\n                    }\n                }\n            }\n        }\n    }\n\n    protected onMouseRightButtonClick(e: IMouseState) {\n        this.stopRotation();\n        this.planet!.stopFlying();\n        this.pointOnEarth = this.planet!.getCartesianFromPixelTerrain(e.pos)!;\n        if (this.pointOnEarth) {\n            this.earthUp = this.pointOnEarth.normal();\n        }\n    }\n\n    protected onMouseRightButtonDown(e: IMouseState) {\n        const cam = this.planet!.camera;\n\n        if (this.pointOnEarth && e.moving) {\n            this.renderer!.controlsBag.scaleRot = 1.0;\n            let l = (0.5 / cam.eye.distance(this.pointOnEarth)) * (cam._lonLat.height < 5.0 ? 5.0 : cam._lonLat.height) * math.RADIANS;\n            if (l > 0.007) {\n                l = 0.007;\n            }\n            cam.rotateHorizontal(l * (e.x - e.prev_x), false, this.pointOnEarth, this.earthUp);\n            cam.rotateVertical(l * (e.y - e.prev_y), this.pointOnEarth, this.minSlope);\n        }\n    }\n\n    public onShiftFree() {\n        this._shiftBusy = false;\n    }\n\n    protected onMouseMove(e: IMouseState) {\n        if (this._active && this.renderer!.events.isKeyPressed(input.KEY_ALT)) {\n            if (!this._shiftBusy) {\n                this._shiftBusy = true;\n                this.onMouseRightButtonClick(e);\n            }\n\n            this.onMouseRightButtonDown(e);\n        }\n    }\n\n    protected onDraw() {\n        if (this._active) {\n            const r = this.renderer!;\n            const cam = this.planet!.camera;\n            let prevEye = cam.eye.clone();\n\n            if (this.stepIndex) {\n                r.controlsBag.scaleRot = 1.0;\n                const sf = this.stepsForward![this.stepsCount - this.stepIndex--];\n\n                let maxAlt = cam.maxAltitude + this.planet!.ellipsoid.polarSize;\n                let minAlt = cam.minAltitude + this.planet!.ellipsoid.polarSize;\n                const camAlt = sf.eye.length();\n                if (camAlt > maxAlt || camAlt < minAlt && this._wheelDirection > 0) {\n                    this._wheelDirection = +1;\n                    return;\n                }\n\n                cam.eye = sf.eye;\n                cam._u = sf.v;\n                cam._r = sf.u;\n                cam._b = sf.n;\n            } else {\n                if (this._deactivate) {\n                    this._deactivate = false;\n\n                    this.planet!.layerLock.free(this._keyLock);\n                    this.planet!.terrainLock.free(this._keyLock);\n                    this.planet!._normalMapCreator.free(this._keyLock);\n                }\n            }\n\n            if (r.events.mouseState.leftButtonDown || !this.scaleRot) {\n                return;\n            }\n\n            this.scaleRot -= this.inertia;\n            if (this.scaleRot <= 0.0) {\n                this.scaleRot = 0.0;\n            } else {\n                r.controlsBag.scaleRot = this.scaleRot;\n                let rot = this.qRot\n                    .slerp(Quat.IDENTITY, 1.0 - this.scaleRot * this.scaleRot * this.scaleRot)\n                    .normalize();\n                if (!(rot.x || rot.y || rot.z)) {\n                    this.scaleRot = 0.0;\n                }\n                cam.eye = rot.mulVec3(cam.eye);\n                cam._u = rot.mulVec3(cam._u);\n                cam._r = rot.mulVec3(cam._r);\n                cam._b = rot.mulVec3(cam._b);\n            }\n\n            if (cam.eye.distance(prevEye) / cam.getAltitude() > 0.01) {\n                this.planet!.layerLock.lock(this._keyLock);\n                this.planet!.terrainLock.lock(this._keyLock);\n                this.planet!._normalMapCreator.lock(this._keyLock);\n            } else {\n                this.planet!.layerLock.free(this._keyLock);\n                this.planet!.terrainLock.free(this._keyLock);\n                this.planet!._normalMapCreator.free(this._keyLock);\n            }\n        }\n    }\n}\n","import {Entity} from '../../entity/Entity';\nimport {createEvents, EventsHandler} from '../../Events';\nimport {LonLat} from \"../../LonLat\";\nimport {Object3d} from '../../Object3d';\nimport {Planet} from \"../../scene/Planet\";\nimport {RenderNode} from '../../scene/RenderNode';\nimport {Vector} from '../../layer/Vector';\nimport {Vec2} from '../../math/Vec2';\nimport {Vec3} from '../../math/Vec3';\nimport {IMouseState} from \"../../renderer/RendererEvents\";\nimport {Ellipsoid} from \"../../ellipsoid/Ellipsoid\";\nimport {ILabelParams} from \"../../entity/Label\";\n\nconst OUTLINE_COUNT = 120;\n\nexport interface IRulerSceneParams {\n    name?: string;\n    ignoreTerrain?: boolean;\n    planet?: Planet;\n}\n\nexport const distanceFormat = (v: number): string => {\n    if (v > 1000) {\n        return `${(v / 1000).toFixed(1)} km`;\n    } else if (v > 9) {\n        return `${Math.round(v)} m`;\n    } else {\n        return `${v.toFixed(1)} m`;\n    }\n}\n\nlet obj3d = Object3d.createCylinder(1.1, 0, 2.7, 20, 1, true, false, 0, 0, 0);\n\nconst LABEL_OPTIONS: ILabelParams = {\n    text: \"\",\n    size: 11,\n    color: \"rgba(455,455,455,1.0)\",\n    outlineColor: \"rgba(0,0,0,0.34)\",\n    outline: 0.23,\n    align: \"center\",\n    offset: [0, 20, 0]\n};\nconst RULER_CORNER_OPTIONS = {\n    scale: 1,\n    instanced: true,\n    tag: \"ruler\",\n    color: \"rgb(0,305,0)\",\n    object3d: obj3d\n};\n\ntype RulerSceneEventsList = [\n    \"add\",\n    \"remove\",\n    \"mousemove\",\n    \"mouseenter\",\n    \"mouseleave\",\n    \"lclick\",\n    \"rclick\",\n    \"mclick\",\n    \"ldblclick\",\n    \"rdblclick\",\n    \"mdblclick\",\n    \"lup\",\n    \"rup\",\n    \"mup\",\n    \"ldown\",\n    \"rdown\",\n    \"mdown\",\n    \"lhold\",\n    \"rhold\",\n    \"mhold\",\n    \"mousewheel\",\n    \"touchmove\",\n    \"touchstart\",\n    \"touchend\",\n    \"doubletouch\",\n    \"touchleave\",\n    \"touchenter\"\n];\n\nclass RulerScene extends RenderNode {\n    public events: EventsHandler<RulerSceneEventsList>;\n    protected _ignoreTerrain: boolean;\n    protected _planet: Planet | null;\n    protected _startLonLat: LonLat | null;\n    protected _preventClick: boolean;\n    protected _stopDrawing: boolean;\n    protected _pickedCorner: Entity | null;\n    protected _startPos: Vec2 | null;\n    protected _startClick: Vec2;\n    protected _heading: number;\n    protected _trackLayer: Vector;\n    protected _labelLayer: Vector;\n    protected _cornersLayer: Vector;\n    protected _cornerEntity: Entity[];\n    protected _propsLabel: Entity;\n    protected _trackEntity: Entity;\n    protected _anchorLonLat: LonLat | null;\n    protected _timeout: any;\n\n    constructor(options: IRulerSceneParams = {}) {\n        super(options.name);\n\n        this.events = createEvents(RULERSCENE_EVENTS);\n\n        this._ignoreTerrain = options.ignoreTerrain != undefined ? options.ignoreTerrain : true;\n\n        this._planet = options.planet || null;\n\n        this._startLonLat = null;\n        this._preventClick = false;\n        this._stopDrawing = false;\n\n        this._pickedCorner = null;\n        this._startPos = null;\n        this._startClick = new Vec2();\n\n        this._anchorLonLat = null;\n\n        this._heading = 0;\n\n        this._trackLayer = new Vector(\"track\", {\n            entities: [],\n            pickingEnabled: false,\n            polygonOffsetUnits: -1.0,\n            relativeToGround: true,\n            displayInLayerSwitcher: false\n        });\n\n        this._labelLayer = new Vector(\"ruler-label\", {\n            entities: [],\n            pickingEnabled: false,\n            polygonOffsetUnits: -100.0,\n            relativeToGround: true,\n            displayInLayerSwitcher: false\n        });\n\n        this._cornersLayer = new Vector(\"corners\", {\n            entities: [],\n            pickingEnabled: true,\n            displayInLayerSwitcher: false,\n            scaleByDistance: [100, 4000000, 1.0],\n            pickingScale: 2\n        });\n\n        this._propsLabel = new Entity({\n            name: 'propsLabel',\n            label: LABEL_OPTIONS\n        });\n\n        this._trackEntity = new Entity({\n            polyline: {\n                path3v: [],\n                thickness: 4.8,\n                color: \"rgb(255,131,0)\",\n                isClosed: false\n            }\n        });\n\n        this._trackEntity.polyline!.altitude = 0.01;\n\n        this._cornerEntity = [\n            new Entity({\n                geoObject: RULER_CORNER_OPTIONS,\n                properties: {\n                    name: \"start\"\n                }\n            }),\n            new Entity({\n                geoObject: RULER_CORNER_OPTIONS,\n                properties: {\n                    name: \"end\"\n                }\n            })\n        ];\n    }\n\n    public set ignoreTerrain(v: boolean) {\n        this._ignoreTerrain = v;\n        if (v) {\n            //...redraw line\n        }\n    }\n\n    public bindPlanet(planet: Planet) {\n        this._planet = planet;\n    }\n\n    protected _createCorners() {\n        this._cornersLayer.addEntities(this._cornerEntity)\n    }\n\n    public override init() {\n        this._createCorners();\n        this._trackLayer.addEntities([this._trackEntity]);\n        this._labelLayer.addEntities([this._propsLabel]);\n        this._planet!.addLayer(this._labelLayer);\n        this._planet!.addLayer(this._trackLayer);\n        this._planet!.addLayer(this._cornersLayer);\n        this._activate();\n    }\n\n    public override onremove() {\n        this._deactivate();\n    }\n\n    public _activate() {\n\n        this._propsLabel.label!.setVisibility(false);\n        this.setVisibility(false);\n\n        this.renderer!.events.on(\"lclick\", this._onLclick, this);\n        this.renderer!.events.on(\"mousemove\", this._onMouseMove, this);\n        this.renderer!.events.on(\"ldblclick\", this._onLdblclick, this);\n        this.renderer!.events.on(\"lup\", this._onLUp, this);\n\n        this._cornersLayer.events.on(\"mouseenter\", this._onCornerEnter, this);\n        this._cornersLayer.events.on(\"mouseleave\", this._onCornerLeave, this);\n        this._cornersLayer.events.on(\"ldown\", this._onCornerLdown, this);\n        this._cornersLayer.events.on(\"lup\", this._onCornerLup, this);\n\n    }\n\n    protected _deactivate() {\n        this._startLonLat = null;\n        this._preventClick = false;\n        this._stopDrawing = false;\n        this._pickedCorner = null;\n        // this._trackLayer.remove();\n        // this._cornersLayer.remove();\n\n        this.renderer!.events.off(\"lclick\", this._onLclick);\n        this.renderer!.events.off(\"mousemove\", this._onMouseMove);\n        this.renderer!.events.off(\"lup\", this._onLUp);\n\n        this._cornersLayer.events.off(\"mouseenter\", this._onCornerEnter);\n        this._cornersLayer.events.off(\"mouseleave\", this._onCornerLeave);\n        this._cornersLayer.events.off(\"ldown\", this._onCornerLdown);\n        this._cornersLayer.events.off(\"lup\", this._onCornerLup);\n\n        this.clear();\n    }\n\n    protected _onCornerLdown = (e: IMouseState) => {\n        if (!this._startLonLat) {\n            this.renderer?.controls.mouseNavigation?.deactivate();\n            this._startClick.set(e.x, e.y);\n            let coords = e.pickingObject.getCartesian();\n            this._startPos = this._planet!.getPixelFromCartesian(coords);\n            this._pickedCorner = e.pickingObject;\n            if (e.pickingObject.properties.name == \"start\") {\n                this._anchorLonLat = this._cornerEntity[1].getLonLat().clone();\n            } else {\n                this._anchorLonLat = this._cornerEntity[0].getLonLat().clone();\n            }\n        }\n    }\n\n    protected _onLUp = () => {\n        if (this._pickedCorner) {\n            this.renderer!.controls.mouseNavigation?.activate();\n            this._pickedCorner = null;\n            this._anchorLonLat = null;\n        }\n    }\n\n    protected _onCornerLup = () => {\n        this._onLUp();\n    }\n\n    protected _onCornerEnter = (e: IMouseState) => {\n        e.renderer.handler.canvas!.style.cursor = \"pointer\";\n    }\n\n    protected _onCornerLeave = (e: IMouseState) => {\n        e.renderer.handler.canvas!.style.cursor = \"default\";\n    }\n\n    protected _onLdblclick = () => {\n        this._preventClick = true;\n    }\n\n    public setVisibility(visibility: boolean) {\n        this._cornersLayer.setVisibility(visibility);\n        this._trackLayer.setVisibility(visibility);\n        this._labelLayer.setVisibility(visibility);\n    }\n\n    protected _onLclick = (e: IMouseState) => {\n        let startLonLat = this._planet!.getLonLatFromPixelTerrain(e.pos);\n        if (!startLonLat) return;\n        this._timeout = setTimeout(() => {\n            if (!this._preventClick) {\n                if (!this._startLonLat) {\n                    this.setVisibility(true);\n                    this._stopDrawing = false;\n                    this._startLonLat = startLonLat!;\n                } else {\n                    this._startLonLat = null;\n                }\n            }\n            this._preventClick = false;\n            this._stopDrawing = false;\n            clearTimeout(this._timeout);\n        }, 200);\n\n        if (this._startLonLat) {\n            this._stopDrawing = true;\n        }\n    }\n\n    protected _drawLine(startLonLat: LonLat, endLonLat: LonLat, startPos?: Vec3) {\n\n        if (!startPos) {\n            startPos = this._planet!.ellipsoid.lonLatToCartesian(startLonLat);\n        }\n\n        let endPos = this._planet!.ellipsoid.lonLatToCartesian(endLonLat);\n\n        let res = this._planet!.ellipsoid.inverse(startLonLat, endLonLat);\n        let length = res.distance;\n        this._heading = res.initialAzimuth;\n\n        let path = [];\n        let dir = endPos.sub(startPos);\n        let dist = dir.length();\n        dir.normalize();\n\n        for (let i = 0; i < OUTLINE_COUNT; i++) {\n            let f = dir.scaleTo(i * dist / OUTLINE_COUNT).addA(startPos);\n            path.push(f);\n        }\n        path.push(endPos);\n\n        this._trackEntity.polyline!.setPath3v([path]);\n\n        if (this._ignoreTerrain) {\n            this._propsLabel.setCartesian3v(path[Math.floor(path.length / 2)]);\n            this._propsLabel.label!.setText(`${distanceFormat(length)}, ${Math.round(this._heading)} deg`);\n        }\n    }\n\n    protected _onMouseMove = (e: IMouseState) => {\n        if (this._startLonLat && !this._stopDrawing) {\n            this._propsLabel.label!.setVisibility(true);\n            let endLonLat = this._planet!.getLonLatFromPixelTerrain(e.pos);\n            if (!endLonLat) return;\n            this._drawLine(this._startLonLat, endLonLat);\n        } else if (this._pickedCorner) {\n            let newLonLat = this._planet!.getLonLatFromPixelTerrain(e.pos);\n            if (newLonLat) {\n                if (this._pickedCorner.properties.name === \"start\") {\n                    this._drawLine(newLonLat, this._anchorLonLat!);\n                } else {\n                    this._drawLine(this._anchorLonLat!, newLonLat);\n                }\n            }\n        }\n    }\n\n    public clear() {\n        this._trackEntity.remove();\n        this._cornerEntity[0].remove();\n        this._cornerEntity[1].remove();\n        this._propsLabel.remove();\n        this._planet!.removeLayer(this._trackLayer);\n        this._planet!.removeLayer(this._cornersLayer);\n    }\n\n    public isCornersPositionChanged(): boolean {\n        let t = this._trackEntity.polyline!.getPath3v()[0] as Vec3[];\n        if (t) {\n            const startPos = t[0].clone(),\n                endPos = t[t.length - 1].clone();\n            return this._cornerEntity[0].getCartesian().equal(startPos) &&\n                this._cornerEntity[1].getCartesian().equal(endPos)\n        }\n        return false\n    }\n\n    public override frame() {\n        let t = this._trackEntity.polyline!.getPath3v()[0] as Vec3[];\n        if (t) {\n            const startPos = t[0].clone(),\n                endPos = t[t.length - 1].clone();\n\n            if (!this.isCornersPositionChanged()) {\n                this._cornerEntity[0].setCartesian3v(startPos);\n                this._cornerEntity[1].setCartesian3v(endPos);\n                if (!this._ignoreTerrain) {\n                    let res = 0;\n                    for (let i = 0, len = t.length - 1; i < len; i++) {\n                        res += t[i + 1].distance(t[i]);\n                    }\n                    this._propsLabel.setCartesian3v(t[Math.floor(t.length / 2)]);\n                    this._propsLabel.label!.setText(`${distanceFormat(res)}, ${Math.round(this._heading)} deg`);\n                }\n            }\n        }\n    }\n\n    public get ellipsoid(): Ellipsoid | null {\n        return this._planet ? this._planet.ellipsoid : null;\n    }\n}\n\nconst RULERSCENE_EVENTS: RulerSceneEventsList = [\n    \"add\",\n    \"remove\",\n    \"mousemove\",\n    \"mouseenter\",\n    \"mouseleave\",\n    \"lclick\",\n    \"rclick\",\n    \"mclick\",\n    \"ldblclick\",\n    \"rdblclick\",\n    \"mdblclick\",\n    \"lup\",\n    \"rup\",\n    \"mup\",\n    \"ldown\",\n    \"rdown\",\n    \"mdown\",\n    \"lhold\",\n    \"rhold\",\n    \"mhold\",\n    \"mousewheel\",\n    \"touchmove\",\n    \"touchstart\",\n    \"touchend\",\n    \"doubletouch\",\n    \"touchleave\",\n    \"touchenter\"\n];\n\nexport {RulerScene};\n","import {Control, IControlParams} from \"../Control\";\nimport {RulerScene} from \"./RulerScene\";\n\nexport interface IRulerParams extends IControlParams {\n    ignoreTerrain?: boolean\n}\n\nexport class Ruler extends Control {\n    protected _rulerScene: RulerScene;\n\n    constructor(options: IRulerParams = {}) {\n        super(options);\n\n        this._rulerScene = new RulerScene({\n            name: `rulerScene:${this.__id}`,\n            ignoreTerrain: options.ignoreTerrain\n        });\n    }\n\n    public set ignoreTerrain(v: boolean) {\n        this._rulerScene.ignoreTerrain = v;\n    }\n\n    public override oninit() {\n        this._rulerScene.bindPlanet(this.planet!);\n    }\n\n    public override onactivate() {\n        this.renderer && this.renderer.addNode(this._rulerScene);\n    }\n\n    public override ondeactivate() {\n        this.renderer && this.renderer.removeNode(this._rulerScene);\n    }\n}\n","import {Entity} from '../../entity/Entity';\nimport {LonLat} from \"../../LonLat\";\nimport {Object3d} from \"../../Object3d\";\nimport {RulerScene, IRulerSceneParams} from \"../ruler/RulerScene\";\nimport {Vector} from \"../../layer/Vector\";\nimport {Vec3} from \"../../math/Vec3\";\nimport {ILabelParams} from \"../../entity/Label\";\nimport {IRayParams} from \"../../entity/Ray\";\n\nlet obj3d = Object3d.createCylinder(1.1, 0, 2, 6, 1, true, true, 0, 0, 0);\n\nconst RAYS_OPTIONS: IRayParams = {\n    startColor: \"rgb(255,131,0)\",\n    endColor: \"rgb(255,131,0)\",\n    thickness: 5\n}\nconst LABEL_OPTIONS: ILabelParams = {\n    text: \"\",\n    size: 11,\n    color: \"rgba(455,455,455,1.0)\",\n    outlineColor: \"rgba(0,0,0,0.34)\",\n    outline: 0.23,\n    align: \"center\",\n    offset: [0, 18, 0]\n};\n\nconst RULER_CORNER_OPTIONS = {\n    scale: 1,\n    instanced: true,\n    tag: \"height-ruler\",\n    color: \"rgb(255,131,0)\",\n    object3d: obj3d\n};\n\ninterface IHeightRulerSceneParams extends IRulerSceneParams {\n\n}\n\nclass HeightRulerScene extends RulerScene {\n    protected _geoRulerLayer: Vector;\n    protected _heightLabels: Entity[];\n    protected _rayH: Entity;\n    protected _rayV: Entity;\n\n    constructor(options: IHeightRulerSceneParams = {}) {\n        super(options);\n\n        this._geoRulerLayer = new Vector(\"rayHeightRuler\", {\n            entities: [],\n            pickingEnabled: false,\n            polygonOffsetUnits: -2.0,\n            relativeToGround: false,\n            displayInLayerSwitcher: false\n        });\n\n        this._rayV = new Entity({\n            name: 'verticalRay',\n            ray: RAYS_OPTIONS\n        });\n\n        this._rayH = new Entity({\n            name: 'heightRay',\n            ray: RAYS_OPTIONS\n        });\n\n        this._heightLabels = [\n            new Entity({\n                name: 'startCornerLabel',\n                label: {\n                    ...LABEL_OPTIONS\n                }\n            }),\n            new Entity({\n                name: 'endCornerLabel',\n                label: {\n                    ...LABEL_OPTIONS\n                }\n            }),\n            new Entity({\n                name: 'deltaLabel',\n                label: {\n                    ...LABEL_OPTIONS\n                }\n            })\n        ];\n    }\n\n    public override setVisibility(visibility: boolean) {\n        super.setVisibility(visibility);\n        this._geoRulerLayer.setVisibility(visibility);\n    }\n\n    public get deltaLabel(): Entity {\n        return this._heightLabels[2];\n    }\n\n    public get startLabel(): Entity {\n        return this._heightLabels[0]\n    }\n\n    public get endLabel(): Entity {\n        return this._heightLabels[1]\n    }\n\n    public get corners(): Entity[] {\n        return this._cornerEntity;\n    }\n\n    public get startCorner(): Entity {\n        return this.corners[0];\n    }\n\n    public get endCorner(): Entity {\n        return this.corners[1];\n    }\n\n    public get startCornerLonLat(): LonLat {\n        return this.startCorner.getLonLat();\n    }\n\n    public get startCornerHeight(): number {\n        return this.startCornerLonLat.height;\n    }\n\n    public get endCornerLonLat(): LonLat {\n        return this.endCorner.getLonLat();\n    }\n\n    public get endCornerHeight(): number {\n        return this.endCornerLonLat.height;\n    }\n\n    public get maxHeightCornerLonLat(): LonLat {\n        if (this.startCornerHeight <= this.endCornerHeight) {\n            return this.endCornerLonLat;\n        } else {\n            return this.startCornerLonLat;\n        }\n    }\n\n    public get minHeightCornerLonLat(): LonLat {\n        if (this.startCornerHeight > this.endCornerHeight) {\n            return this.endCornerLonLat;\n        } else {\n            return this.startCornerLonLat;\n        }\n    }\n\n    public get deltaHeight(): number {\n        return Math.abs(this.startCornerHeight - this.endCornerHeight);\n    }\n\n    public override _drawLine(startLonLat: LonLat, endLonLat: LonLat, startPos?: Vec3) {\n        super._drawLine(startLonLat, endLonLat, startPos);\n        this._updateHeightRaysAndLabels();\n    }\n\n    protected async _updateHeightRaysAndLabels() {\n        const middleLonLat = this.minHeightCornerLonLat.clone();\n        middleLonLat.height = this.maxHeightCornerLonLat.height;\n\n        this._rayH.ray!.setStartPosition3v(this._planet!.ellipsoid.lonLatToCartesian(this.maxHeightCornerLonLat))\n        this._rayH.ray!.setEndPosition3v(this._planet!.ellipsoid.lonLatToCartesian(middleLonLat))\n        this._rayV.ray!.setStartPosition3v(this._planet!.ellipsoid.lonLatToCartesian(this.minHeightCornerLonLat));\n        this._rayV.ray!.setEndPosition3v(this._planet!.ellipsoid.lonLatToCartesian(middleLonLat));\n\n        middleLonLat.height = this.minHeightCornerLonLat.height + this.deltaHeight / 2;\n\n        this.deltaLabel.setLonLat(middleLonLat);\n        this.startLabel.setLonLat(this.startCornerLonLat);\n        this.endLabel.setLonLat(this.endCornerLonLat);\n\n        const startHeight = await this._planet!.getHeightDefault(this.startCornerLonLat),\n            endHeight = await this._planet!.getHeightDefault(this.endCornerLonLat)\n\n        this.deltaLabel.label!.setText(`\\u0394 ${Math.abs(startHeight - endHeight).toFixed(1)} m`);\n        this.startLabel.label!.setText(`P1 ${startHeight.toFixed(1)} m`)\n        this.endLabel.label!.setText(`P2 ${endHeight.toFixed(1)} m`)\n    }\n\n    public override clear() {\n        this._rayH.remove();\n        this._rayV.remove();\n        this.startCorner.remove();\n        this.endCorner.remove();\n        this.startLabel.remove();\n        this.endLabel.remove();\n        this.deltaLabel.remove();\n        super.clear();\n\n        // this._rayH = null;\n        // this._rayV = null;\n\n        this._planet!.removeLayer(this._geoRulerLayer);\n    }\n\n    public override _createCorners() {\n        this._cornerEntity = [\n            new Entity({\n                geoObject: RULER_CORNER_OPTIONS,\n                properties: {\n                    name: \"start\"\n                }\n            }),\n            new Entity({\n                geoObject: RULER_CORNER_OPTIONS,\n                properties: {\n                    name: \"end\"\n                }\n            })\n        ];\n\n        this._cornersLayer.setEntities(this._cornerEntity);\n    }\n\n    public override init() {\n        super.init();\n        this._createCorners();\n\n        this._labelLayer.addEntities(this._heightLabels);\n        this._geoRulerLayer.addEntities([this._rayH, this._rayV]);\n\n        this._planet!.addLayer(this._geoRulerLayer);\n    }\n\n    public override frame() {\n        super.frame()\n        this._updateHeightRaysAndLabels();\n    }\n}\n\n\nexport {HeightRulerScene};\n","import {Ruler, IRulerParams} from \"../ruler/Ruler\";\nimport {HeightRulerScene} from \"./HeightRulerScene\";\n\ninterface IHeightRulerParams extends IRulerParams {\n\n}\n\nexport class HeightRuler extends Ruler {\n    constructor(options: IHeightRulerParams = {}) {\n        super(options);\n        this._rulerScene = new HeightRulerScene({\n            name: `heightRulerScene:${this.__id}`,\n            ignoreTerrain: false\n        });\n    }\n}","import {binarySearch, parseHTML} from \"../utils/shared\";\nimport {Control, IControlParams} from \"./Control\";\nimport {RADIANS} from \"../math\";\nimport {Vec2} from \"../math/Vec2\";\nimport {Vec3} from \"../math/Vec3\";\nimport {GlobusTerrain} from \"../terrain/GlobusTerrain\";\nimport {IMouseState} from \"../renderer/RendererEvents\";\n\ninterface IScaleControlParams extends IControlParams {\n    isCenter?: boolean\n}\n\nconst scale: number[] = [\n    1, 2, 3, 5, 10, 20, 30, 50, 100, 200, 300, 500, 1e3, 2e3, 3e3, 5e3, 10e3, 20e3, 30e3, 50e3,\n    100e3, 200e3, 300e3, 500e3, 1000e3, 2000e3, 3000e3, 5000e3, 10000e3\n];\n\nconst TEMPLATE = `<div class=\"og-scale-container\">\n      <div class=\"og-scale-label\"></div>\n      <div class=\"og-scale-ruler\"></div>\n    </div>`;\n\n/**\n * Planet zoom buttons control.\n */\nexport class ScaleControl extends Control {\n\n    public el: HTMLElement | null;\n    protected _template: string;\n    protected _minWidth: number;\n    protected _maxWidth: number;\n    protected _isCenter: boolean;\n    protected _scaleLabelEl: HTMLElement | null;\n    protected _mPx: number;\n    protected currWidth: number;\n    protected _metersInMinSize: number;\n\n    constructor(options: IScaleControlParams = {}) {\n        if (!options.name || options.name === \"\") {\n            options.name = \"scaleControl\";\n        }\n        super(options);\n\n        this._template = TEMPLATE;\n\n        this._minWidth = 100;\n        this._maxWidth = 150;\n\n        this._isCenter = options.isCenter != undefined ? options.isCenter : true;\n\n        this._mPx = 0\n        this.currWidth = 0;\n        this._metersInMinSize = 0;\n\n        this.el = null;\n\n        this._scaleLabelEl = null;\n    }\n\n    protected _renderTemplate() {\n        return parseHTML(this._template)[0];\n    }\n\n    public override oninit() {\n        this.el = this._renderTemplate()!;\n\n        this._scaleLabelEl = this.el.querySelector<HTMLElement>(\".og-scale-label\")!;\n\n        this.renderer!.div!.appendChild(this.el);\n\n        if (this._isCenter) {\n            this.planet!.camera.events.on(\"moveend\", () => {\n                this._drawScreen(this.planet!.renderer!.handler.getCenter());\n            });\n\n            !this.planet!.terrain!.isEmpty && (this.planet!.terrain as GlobusTerrain).events.on(\"loadend\", () => {\n                this._drawScreen(this.planet!.renderer!.handler.getCenter());\n            });\n        } else {\n            this.renderer!.events.on(\"mousemove\", (e: IMouseState) => {\n                if (!e.leftButtonHold && !e.rightButtonHold) {\n                    this._drawScreen(e.pos);\n                }\n            });\n\n            this.planet!.camera.events.on(\"moveend\", () => {\n                let ms = this.renderer!.events.mouseState;\n                if (!ms.leftButtonHold && !ms.rightButtonHold) {\n                    this._drawScreen(ms.pos);\n                }\n            });\n        }\n    }\n\n    protected _drawScreen(px: Vec2) {\n        let cam = this.planet!.camera;\n        let s0 = px;\n        let dist = this.planet!.getDistanceFromPixel(s0) || 0;\n        if (dist === 0) {\n            s0 = cam.project(Vec3.ZERO);\n            dist = this.planet!.getDistanceFromPixel(s0) || 0;\n        }\n        let p0 = cam.getForward().scaleTo(dist).addA(cam.eye);\n        let tempSize = dist * Math.tan(cam.viewAngle * RADIANS);\n        let p1 = p0.add(cam.getRight().scaleTo(tempSize));\n        let s1 = cam.project(p1);\n        this._mPx = tempSize / s1.distance(s0);\n\n        let metersInMinSize = this._mPx * this._minWidth;\n\n        let index = binarySearch(scale, metersInMinSize, (a: number, b: number) => a - b);\n        if (index < 0) {\n            index = ~index;\n        }\n        let minMeters = scale[index],\n            maxMeters = scale[index + 1];\n\n        let t = (minMeters - metersInMinSize) / (maxMeters - minMeters);\n        this.currWidth = this._minWidth + t * (this._maxWidth - this._minWidth);\n\n        if (minMeters > 1000) {\n            this._scaleLabelEl!.innerText = `${minMeters / 1000} km`;\n        } else {\n            this._scaleLabelEl!.innerText = `${minMeters} m`;\n        }\n\n        this._metersInMinSize = metersInMinSize;\n\n        this.el!.style.width = this.currWidth + \"px\";\n    }\n}\n","import {Control, IControlParams} from \"./Control\";\nimport {htmlColorToRgb} from \"../utils/shared\";\nimport {Program} from '../webgl/Program';\n\ninterface ISimpleSkyBackgroundParams extends IControlParams {\n\n}\n\nexport class SimpleSkyBackground extends Control {\n    protected _colorOne: Float32Array;\n    protected _colorTwo: Float32Array;\n\n    constructor(options: ISimpleSkyBackgroundParams = {}) {\n        super({\n            name: \"SimpleSkyBackground\",\n            ...options\n        });\n\n        this._colorOne = new Float32Array([1.0, 1.0, 1.0]);\n        this._colorTwo = new Float32Array([0.0, 153.0 / 255.0, 221.0 / 255.0]);\n    }\n\n    public set colorOne(htmlColor: string) {\n        let rgb = htmlColorToRgb(htmlColor);\n        this._colorOne[0] = rgb.x;\n        this._colorOne[1] = rgb.y;\n        this._colorOne[2] = rgb.z;\n    }\n\n    public set colorTwo(htmlColor: string) {\n        let rgb = htmlColorToRgb(htmlColor);\n        this._colorTwo[0] = rgb.x;\n        this._colorTwo[1] = rgb.y;\n        this._colorTwo[2] = rgb.z;\n    }\n\n    public override oninit() {\n        this.renderer!.handler.addProgram(simpleSkyBackgroundShader());\n        this.activate();\n    }\n\n    public override onactivate() {\n        super.onactivate();\n        this.planet!.events.on(\"draw\", this._drawBackground, this);\n    }\n\n    public override ondeactivate() {\n        super.ondeactivate();\n        this.planet!.events.off(\"draw\", this._drawBackground);\n    }\n\n    protected _drawBackground() {\n        let h = this.renderer!.handler;\n        let sh = h.programs.simpleSkyBackground,\n            p = sh._program,\n            shu = p.uniforms,\n            gl = h.gl!;\n        let cam = this.planet!.camera;\n\n        gl.disable(gl.DEPTH_TEST);\n\n        sh.activate();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderer!.screenFramePositionBuffer!);\n        gl.vertexAttribPointer(p.attributes.corners, 2, gl.FLOAT, false, 0, 0);\n\n        gl.uniform3fv(shu.camPos, [cam.eye.x, cam.eye.y, cam.eye.z]);\n        gl.uniform2fv(shu.iResolution, [h.getWidth(), h.getHeight()]);\n        gl.uniform1f(shu.fov, cam.getViewAngle());\n        gl.uniform1f(shu.earthRadius, this.planet!.ellipsoid.getPolarSize() + 1);\n        gl.uniform3fv(shu.colorOne, this._colorOne);\n        gl.uniform3fv(shu.colorTwo, this._colorTwo);\n\n        gl.uniformMatrix4fv(shu.viewMatrix, false, cam.getViewMatrix());\n\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n        gl.enable(gl.DEPTH_TEST);\n    }\n}\n\nfunction simpleSkyBackgroundShader(): Program {\n    return new Program(\"simpleSkyBackground\", {\n        uniforms: {\n            iResolution: \"vec2\", fov: \"float\",\n            camPos: \"vec3\",\n            earthRadius: \"float\",\n            viewMatrix: \"mat4\",\n            colorOne: \"vec3\",\n            colorTwo: \"vec3\"\n        }, attributes: {\n            corners: \"vec3\"\n        },\n        vertexShader:\n            `attribute vec2 corners;\n                        \n            varying vec2 tc;\n            \n            void main(void) {\n                gl_Position = vec4(corners, 0.0, 1.0);\n                tc = corners * 0.5 + 0.5;\n            }`,\n        fragmentShader:\n            `precision highp float;\n            \n            #define MAX 10e10\n            #define PI 3.14159265359\n            #define rad(x) x * PI / 180.\n            #define ZERO vec3(0.0)          \n           \n            #define RED vec4(1.0, 0.0, 0.0, 1.0)\n            #define GREEN vec4(0.0, 1.0, 0.0, 1.0)         \n            \n            uniform vec3 camPos;            \n            uniform vec2 iResolution;\n            uniform float fov;\n            uniform float earthRadius;\n            uniform mat4 viewMatrix;\n            \n            uniform vec3 colorOne;\n            uniform vec3 colorTwo;\n                         \n            varying vec2 tc;\n                        \n            // compute the view ray in the camera coordinate\n            vec3 computeView(vec2 uv){\n                float w_h_ratio = iResolution.x / iResolution.y;   \n                float h = tan(rad(fov/2.));\n                return normalize(vec3(-w_h_ratio * h, -h, -1.) + vec3(uv.x * 2. * h * w_h_ratio, uv.y*2.*h, 0.));\n            }\n\n            // sphere of size ra centered at point ce\n            vec2 sphIntersect( in vec3 ro, in vec3 rd, in vec3 ce, float ra )\n            {\n                vec3 oc = ro - ce;\n                float b = dot( oc, rd );\n                float c = dot( oc, oc ) - ra * ra;\n                float h = b * b - c;\n                if( h < 0.0 ) return vec2(MAX); // no intersection\n                h = sqrt( h );\n                return vec2( -b-h, -b+h );\n            }\n            \n            mat3 transpose(mat3 matrix) {\n                vec3 row0 = matrix[0];\n                vec3 row1 = matrix[1];\n                vec3 row2 = matrix[2];\n                mat3 result = mat3(\n                    vec3(row0.x, row1.x, row2.x),\n                    vec3(row0.y, row1.y, row2.y),\n                    vec3(row0.z, row1.z, row2.z)\n                );\n                return result;\n            }\n            \n            float det(mat2 matrix) {\n                return matrix[0].x * matrix[1].y - matrix[0].y * matrix[1].x;\n            }\n            \n            mat3 inverse(mat3 matrix) {\n                vec3 row0 = matrix[0];\n                vec3 row1 = matrix[1];\n                vec3 row2 = matrix[2];\n            \n                vec3 minors0 = vec3(\n                    det(mat2(row1.y, row1.z, row2.y, row2.z)),\n                    det(mat2(row1.z, row1.x, row2.z, row2.x)),\n                    det(mat2(row1.x, row1.y, row2.x, row2.y))\n                );\n                vec3 minors1 = vec3(\n                    det(mat2(row2.y, row2.z, row0.y, row0.z)),\n                    det(mat2(row2.z, row2.x, row0.z, row0.x)),\n                    det(mat2(row2.x, row2.y, row0.x, row0.y))\n                );\n                vec3 minors2 = vec3(\n                    det(mat2(row0.y, row0.z, row1.y, row1.z)),\n                    det(mat2(row0.z, row0.x, row1.z, row1.x)),\n                    det(mat2(row0.x, row0.y, row1.x, row1.y))\n                );\n            \n                mat3 adj = transpose(mat3(minors0, minors1, minors2));\n            \n                return (1.0 / dot(row0, minors0)) * adj;\n            }\n            \n            void main(void) {\n            \n                vec3 dir = computeView(tc);\n                dir = inverse(mat3(viewMatrix)) * dir;\n                \n                vec2 ER = sphIntersect(camPos, dir, vec3(0.0), earthRadius);\n                \n                float bigRadius = earthRadius * 2.5;\n                vec3 bigCenter = normalize(camPos) * bigRadius * 1.3;                \n                               \n                vec2 BIG = sphIntersect(camPos, dir, bigCenter, bigRadius);\n                \n                float Ix = distance(camPos + dir * BIG.y, ZERO);               \n                \n                float maxI = sqrt(bigRadius * bigRadius + bigRadius * bigRadius);\n                                   \n                gl_FragColor = vec4(mix(colorOne, colorTwo, Ix / maxI), 1.0);\n            }`\n    });\n}\n","import {JulianDate, ONE_BY_SECONDS_PER_DAY, J2000} from \"./jd\";\n\n/**\n * Angle between J2000 mean equator and the ecliptic plane.\n * 23 deg 26' 21\".448 (Seidelmann, _Explanatory Supplement to the\n * Astronomical Almanac_ (1992), eqn 3.222-1.\n * @const\n * @type{number}\n */\nexport const J2000_OBLIQUITY = 23.4392911;\n\n/**\n * IAU 1976 value\n * @const\n * @type{number}\n */\nexport const AU_TO_METERS = 1.4959787e11;\n\n/**\n * Terrestrial and atomic time difference.\n * @const\n * @type{number}\n */\nexport const TDT_TAI = 32.184;\n\n/**\n * Earth gravitational parameter product of gravitational constant G and the mass M of the Earth.\n * @const\n * @type{number}\n */\nexport const EARTH_GRAVITATIONAL_PARAMETER = 3.98600435e14;\n\n/**\n * Sun gravitational parameter product of gravitational constant G and the mass M of the Sun.\n * @const\n * @type{number}\n */\nexport const SUN_GRAVITATIONAL_PARAMETER = 1.32712440018e20;\n\n/**\n * Converts atomic time to barycentric dynamical time.\n * @param {JulianDate} tai - Atomic time.\n * @returns {JulianDate} - returns barycentric dynamical time.\n */\nexport function TAItoTDB(tai: JulianDate): JulianDate {\n    tai += TDT_TAI * ONE_BY_SECONDS_PER_DAY;\n    const g = 6.239996 + 0.0172019696544 * (tai - J2000);\n    return tai + 0.001658 * Math.sin(g + 1.671e-2 * Math.sin(g)) * ONE_BY_SECONDS_PER_DAY;\n}\n","import * as math from \"../math\";\nimport { Quat } from \"../math/Quat\";\nimport { Vec3 } from \"../math/Vec3\";\nimport * as astro from \"./astro\";\nimport * as jd from \"./jd\";\nimport {JulianDate} from \"./jd\";\n\n/**\n * Returns Sun position in the geocentric coordinate system by the time.\n * @param {JulianDate} jDate - Julian date time.\n * @returns {Vec3} - Sun geocentric coordinates.\n */\nexport function getSunPosition(jDate: JulianDate): Vec3 {\n    // http://stjarnhimlen.se/comp/tutorial.html\n    // a  Mean distance, or semi-major axis\n    // e  Eccentricity\n    // T  Time at perihelion\n\n    // q  Perihelion distance  = a * (1 - e)\n    // Q  Aphelion distance    = a * (1 + e)\n\n    // i  Inclination, i.e. the \"tilt\" of the orbit relative to the\n    //    ecliptic.  The inclination varies from 0 to 180 degrees. If\n    //    the inclination is larger than 90 degrees, the planet is in\n    //    a retrogade orbit, i.e. it moves \"backwards\".  The most\n    //    well-known celestial body with retrogade motion is Comet Halley.\n\n    // N  (usually written as \"Capital Omega\") Longitude of Ascending\n    //    Node. This is the angle, along the ecliptic, from the Vernal\n    //    Point to the Ascending Node, which is the intersection between\n    //    the orbit and the ecliptic, where the planet moves from south\n    //    of to north of the ecliptic, i.e. from negative to positive\n    //    latitudes.\n\n    // w  (usually written as \"small Omega\") The angle from the Ascending\n    //    node to the Perihelion, along the orbit.\n\n    // P  Orbital period       = 365.256898326 * a**1.5/sqrt(1+m) days,\n    //    where m = the mass of the planet in solar masses (0 for\n    //    comets and asteroids). sqrt() is the square root function.\n\n    // n  Daily motion         = 360_deg / P    degrees/day\n\n    // t  Some epoch as a day count, e.g. Julian Day Number. The Time\n    //    at Perihelion, T, should then be expressed as the same day count.\n\n    // t - T   Time since Perihelion, usually in days\n\n    // M  Mean Anomaly         = n * (t - T)  =  (t - T) * 360_deg / P\n    //    Mean Anomaly is 0 at perihelion and 180 degrees at aphelion\n\n    // L  Mean Longitude       = M + w + N\n\n    // E  Eccentric anomaly, defined by Kepler's equation:   M = E - e * sin(E)\n    //    An auxiliary angle to compute the position in an elliptic orbit\n\n    // v  True anomaly: the angle from perihelion to the planet, as seen\n    //    from the Sun\n\n    // r  Heliocentric distance: the planet's distance from the Sun.\n\n    // x,y,z  Rectangular coordinates. Used e.g. when a heliocentric\n    //        position (seen from the Sun) should be converted to a\n    //        corresponding geocentric position (seen from the Earth).\n\n    var d = jDate - jd.J2000;\n\n    var w = 282.9404 + 4.70935e-5 * d; // longitude of perihelion\n    // var a = 1.000000; // mean distance, a.u.\n    var e = 0.016709 - 1.151e-9 * d; // eccentricity\n    var M = math.rev(356.047 + 0.9856002585 * d); // mean anomaly\n\n    var oblecl = astro.J2000_OBLIQUITY - 3.563e-7 * d; // obliquity of the ecliptic\n\n    // var L = math.rev(w + M); // Sun's mean longitude\n\n    var E =\n        M + math.DEGREES * e * Math.sin(M * math.RADIANS) * (1 + e * Math.cos(M * math.RADIANS)); // eccentric anomaly\n\n    // Sun rectangular coordinates, where the X axis points towards the perihelion\n    var x = Math.cos(E * math.RADIANS) - e;\n    var y = Math.sin(E * math.RADIANS) * Math.sqrt(1 - e * e);\n\n    var r = Math.sqrt(x * x + y * y); // distance\n    var v = Math.atan2(y, x) * math.DEGREES; // true anomaly\n\n    var lon = math.rev(v + w); // longitude of the Sun\n\n    // the Sun's ecliptic rectangular coordinates\n    x = r * Math.cos(lon * math.RADIANS);\n    y = r * Math.sin(lon * math.RADIANS);\n\n    // We use oblecl, and rotate these coordinates\n    var xequat = x;\n    var yequat = y * Math.cos(oblecl * math.RADIANS);\n    var zequat = y * Math.sin(oblecl * math.RADIANS);\n\n    var theta = math.TWO_PI * ((d * 24.0) / 23.9344694 - 259.853 / 360.0); // Siderial spin time\n\n    return Quat.zRotation(-theta).mulVec3(\n        new Vec3(\n            -xequat * astro.AU_TO_METERS,\n            -yequat * astro.AU_TO_METERS,\n            zequat * astro.AU_TO_METERS\n        )\n    );\n\n    // Convert to RA and Decl\n    // var RA = Math.atan2(yequat, xequat) * math.DEGREES;\n    // var Decl = Math.atan2(zequat, Math.sqrt(xequat * xequat + yequat * yequat)) * math.DEGREES;\n}\n","import {Vec3} from \"../math/Vec3\";\nimport {RenderNode} from \"../scene/RenderNode\";\n\nexport interface ILightSourceParams {\n    position?: Vec3;\n    directional?: boolean;\n    ambient?: Vec3;\n    diffuse?: Vec3;\n    specular?: Vec3;\n    shininess?: number;\n}\n\n/**\n * Represents basic light source.\n * @class\n * @param {string} [name] - Light source name.\n * @param {ILightSourceParams} [params] - Light parameters:\n * @param {Vec3} [params.position] - Light source position if it is a point light, otherwise it is a light direction vector.\n * @param {Vec3} [params.ambient]  - Ambient RGB color.\n * @param {Vec3} [params.diffuse]  - Diffuse RGB color.\n * @param {Vec3} [params.specular]  - Specular RGB color.\n * @param {number} [params.shininess]  - Specular shininess.\n */\nclass LightSource {\n\n    static __counter__: number = 0;\n\n    /**\n     * Light name.\n     * @protected\n     * @type {string}\n     */\n    protected _name: string;\n\n    /**\n     * Render node where light is shines.\n     * @protected\n     * @type {RenderNode}\n     */\n    protected _renderNode: RenderNode | null;\n\n    /**\n     * Light position.\n     * @public\n     * @type {Vec3}\n     */\n    public _position: Vec3;\n\n    /**\n     * True if the light is directional.\n     * @public\n     * @type {boolean}\n     */\n    public directional: boolean;\n\n    /**\n     * Ambient color.\n     * @protected\n     * @type {Vec3}\n     */\n    protected _ambient: Vec3;\n\n    /**\n     * Diffuse color.\n     * @protected\n     * @type {Vec3}\n     */\n    protected _diffuse: Vec3;\n\n    /**\n     * Specular color.\n     * @protected\n     * @type {Vec3}\n     */\n    protected _specular: Vec3;\n\n    /**\n     * Shininess.\n     * @protected\n     * @type {number}\n     */\n    protected _shininess: number;\n\n    /**\n     * Light activity.\n     * @protected\n     * @type {boolean}\n     */\n    protected _active: boolean;\n\n    protected _tempAmbient: Vec3;\n    protected _tempDiffuse: Vec3;\n    protected _tempSpecular: Vec3;\n    protected _tempShininess: number;\n\n    constructor(name: string, params: ILightSourceParams) {\n\n        /**\n         * Light name.\n         * @protected\n         * @type {string}\n         */\n        this._name = name || \"light_\" + LightSource.__counter__++;\n\n        /**\n         * Render node where light is shines.\n         * @protected\n         * @type {RenderNode}\n         */\n        this._renderNode = null;\n\n        /**\n         * Light position.\n         * @public\n         * @type {Vec3}\n         */\n        this._position = params.position || new Vec3();\n\n        /**\n         * True if the light is directional.\n         * @public\n         * @type {boolean}\n         */\n        this.directional = params.directional != undefined ? params.directional : true;\n\n        /**\n         * Ambient color.\n         * @protected\n         * @type {Vec3}\n         */\n        this._ambient = params.ambient || new Vec3();\n\n        /**\n         * Diffuse color.\n         * @protected\n         * @type {Vec3}\n         */\n        this._diffuse = params.diffuse || new Vec3(0.8, 0.8, 0.8);\n\n        /**\n         * Specular color.\n         * @protected\n         * @type {Vec3}\n         */\n        this._specular = params.specular || new Vec3(0.18, 0.18, 0.18);\n\n        /**\n         * Shininess.\n         * @protected\n         * @type {number}\n         */\n        this._shininess = params.shininess != undefined ? params.shininess : 3.3;\n\n        /**\n         * Light activity.\n         * @protected\n         * @type {boolean}\n         */\n        this._active = true;\n\n        this._tempAmbient = this._ambient.clone();\n        this._tempDiffuse = this._diffuse.clone();\n        this._tempSpecular = this._specular.clone();\n        this._tempShininess = this._shininess;\n    }\n\n    /**\n     * Creates clone of the current light object.\n     * @todo: TODO\n     * @public\n     * @returns {LightSource}\n     */\n    public clone() {\n        // TODO\n    }\n\n    /**\n     * Set light activity. If activity is false the light doesn't shine.\n     * @public\n     * @param {boolean} active - Light activity.\n     */\n    public setActive(active: boolean) {\n        if (active && !this._active) {\n            const rn = this._renderNode;\n            if (rn) {\n                let index = rn._lightsNames.indexOf(this._name);\n                this._shininess = rn._lightsParamsf[index] = this._tempShininess;\n                if (index != -1) {\n                    index *= 9;\n                    this._ambient.x = rn._lightsParamsv[index] = this._tempAmbient.x;\n                    this._ambient.y = rn._lightsParamsv[index + 1] = this._tempAmbient.y;\n                    this._ambient.z = rn._lightsParamsv[index + 2] = this._tempAmbient.z;\n\n                    this._diffuse.x = rn._lightsParamsv[index + 3] = this._tempDiffuse.x;\n                    this._diffuse.y = rn._lightsParamsv[index + 4] = this._tempDiffuse.y;\n                    this._diffuse.z = rn._lightsParamsv[index + 5] = this._tempDiffuse.z;\n\n                    this._specular.x = rn._lightsParamsv[index + 6] = this._tempSpecular.x;\n                    this._specular.y = rn._lightsParamsv[index + 7] = this._tempSpecular.y;\n                    this._specular.z = rn._lightsParamsv[index + 8] = this._tempSpecular.z;\n                }\n            }\n            this._active = true;\n        } else if (!active && this._active) {\n            this._tempAmbient = this._ambient.clone();\n            this._tempDiffuse = this._diffuse.clone();\n            this._tempSpecular = this._specular.clone();\n            this._tempShininess = this._shininess;\n            this.setBlack();\n            this._active = false;\n        }\n    }\n\n    /**\n     * Gets light activity.\n     * @public\n     * @returns {boolean}\n     */\n    public isActive(): boolean {\n        return this._active;\n    }\n\n    /**\n     * Set light source position, or if it is a directional type sets light direction vector.\n     * @public\n     * @param {Vec3} position - Light position or direction vector.\n     */\n    public setPosition3v(position: Vec3) {\n        this._position.x = position.x;\n        this._position.y = position.y;\n        this._position.z = position.z;\n    }\n\n    /**\n     * Set light source position, or if it is a directional type sets light direction vector.\n     * @public\n     */\n    public setPosition(x: number, y: number, z: number) {\n        this._position.x = x;\n        this._position.y = y;\n        this._position.z = z;\n    }\n\n    /**\n     * Returns light source position, or if it is a directional type sets light direction vector.\n     * @public\n     * @returns {Vec3} - Light source position/direction.\n     */\n    public getPosition(): Vec3 {\n        return this._position.clone();\n    }\n\n    /**\n     * Set ambient color.\n     * @public\n     * @param {Vec3} rgb - Ambient color.\n     */\n    public setAmbient3v(rgb: Vec3) {\n        this.setAmbient(rgb.x, rgb.y, rgb.z);\n    }\n\n    /**\n     * Set diffuse color.\n     * @public\n     * @param {Vec3} rgb - Diffuse color.\n     */\n    public setDiffuse3v(rgb: Vec3) {\n        this.setDiffuse(rgb.x, rgb.y, rgb.z);\n    }\n\n    /**\n     * Set specular color.\n     * @public\n     * @param {Vec3} rgb - Specular color.\n     */\n    public setSpecular3v(rgb: Vec3) {\n        this.setSpecular(rgb.x, rgb.y, rgb.z);\n    }\n\n    /**\n     * Set ambient color.\n     * @public\n     */\n    public setAmbient(r: number, g: number, b: number) {\n        this._ambient.set(r, g, b);\n        const rn = this._renderNode;\n        if (rn) {\n            let index = 9 * rn._lightsNames.indexOf(this._name);\n            if (index != -1) {\n                rn._lightsParamsv[index] = r;\n                rn._lightsParamsv[index + 1] = g;\n                rn._lightsParamsv[index + 2] = b;\n            }\n        }\n    }\n\n    /**\n     * Set diffuse color.\n     * @public\n     */\n    public setDiffuse(r: number, g: number, b: number) {\n        this._diffuse.set(r, g, b);\n        const rn = this._renderNode;\n        if (rn) {\n            let index = 9 * rn._lightsNames.indexOf(this._name);\n            if (index != -1) {\n                rn._lightsParamsv[index + 3] = r;\n                rn._lightsParamsv[index + 4] = g;\n                rn._lightsParamsv[index + 5] = b;\n            }\n        }\n    }\n\n    /**\n     * Set specular color.\n     * @public\n     */\n    public setSpecular(r: number, g: number, b: number) {\n        this._specular.set(r, g, b);\n        const rn = this._renderNode;\n        if (rn) {\n            let index = 9 * rn._lightsNames.indexOf(this._name);\n            if (index != -1) {\n                rn._lightsParamsv[index + 6] = r;\n                rn._lightsParamsv[index + 7] = g;\n                rn._lightsParamsv[index + 8] = b;\n            }\n        }\n    }\n\n    /**\n     * Set material shininess.\n     * @public\n     */\n    public setShininess(shininess: number) {\n        this._shininess = shininess;\n        const rn = this._renderNode;\n        if (rn) {\n            let index = rn._lightsNames.indexOf(this._name);\n            if (index != -1) {\n                rn._lightsParamsf[index] = shininess;\n            }\n        }\n    }\n\n    /**\n     * Sets light to black.\n     * @public\n     */\n    public setBlack() {\n        this._ambient.clear();\n        this._diffuse.clear();\n        this._specular.clear();\n        this._shininess = 0;\n        const rn = this._renderNode;\n        if (rn) {\n            let index = 9 * rn._lightsNames.indexOf(this._name);\n            if (index !== -1) {\n                rn._lightsParamsv[index] = rn._lightsParamsv[index + 1] = rn._lightsParamsv[index + 2] =\n                    rn._lightsParamsv[index + 3] = rn._lightsParamsv[index + 4] = rn._lightsParamsv[index + 5] =\n                        rn._lightsParamsv[index + 6] = rn._lightsParamsv[index + 7] = rn._lightsParamsv[index + 8] = 0;\n            }\n        }\n    }\n\n    /**\n     * Adds current light to the render node scene.\n     * @public\n     * @param {RenderNode} renderNode - Render node scene.\n     */\n    public addTo(renderNode: RenderNode) {\n        this._renderNode = renderNode;\n        renderNode._lights.push(this);\n        renderNode._lightsNames.push(this._name);\n        renderNode._lightsParamsf.push(this._shininess);\n        renderNode._lightsParamsv.push.apply(renderNode._lightsParamsv, this._ambient.toArray());\n        renderNode._lightsParamsv.push.apply(renderNode._lightsParamsv, this._diffuse.toArray());\n        renderNode._lightsParamsv.push.apply(renderNode._lightsParamsv, this._specular.toArray());\n        renderNode.transformLights();\n    }\n\n    /**\n     * Removes from render node scene.\n     * @public\n     */\n    public remove() {\n        const rn = this._renderNode;\n        if (rn) {\n            // let li = rn.getLightById(this._name);\n            // if (li != -1) {\n            //     rn._lights.splice(li, 1);\n            //     rn._lightsNames.splice(li, 1);\n            //     rn._lightsParamsf.splice(li, 1);\n            //     rn._lightsParamsv.splice(li, 9);\n            // }\n        }\n        this._renderNode = null;\n    }\n}\n\nexport {LightSource};\n","import {Control, IControlParams} from \"./Control\";\nimport {Clock} from \"../Clock\";\nimport {getSunPosition} from \"../astro/earth\";\nimport {LightSource} from \"../light/LightSource\";\nimport {Quat} from \"../math/Quat\";\nimport {Vec3} from \"../math/Vec3\";\n\ninterface ISunParams extends IControlParams {\n    activationHeight?: number;\n    offsetVertical?: number;\n    offsetHorizontal?: number;\n    stopped?: boolean;\n}\n\n/**\n * Real Sun geocentric position control that place the Sun on the right place by the Earth.\n */\nexport class Sun extends Control {\n    public activationHeight: number;\n    public offsetVertical: number;\n    public offsetHorizontal: number;\n    public sunlight: LightSource;\n\n    protected _currDate: number;\n    protected _prevDate: number;\n    protected _clockPtr: Clock | null;\n    protected _lightOn: boolean;\n    protected _stopped: boolean;\n    protected _f: number;\n    protected _k: number;\n\n    constructor(options: ISunParams = {}) {\n        super({autoActivate: true, ...options});\n\n        this._name = \"sun\";\n\n        this.activationHeight = options.activationHeight || 12079000.0;\n\n        this.offsetVertical = options.offsetVertical || -5000000;\n\n        this.offsetHorizontal = options.offsetHorizontal || 5000000;\n\n        this.sunlight = new LightSource(\"Sun\", {\n            ambient: new Vec3(0.15, 0.15, 0.25),\n            diffuse: new Vec3(0.9, 0.9, 0.8),\n            specular: new Vec3(0.1, 0.1, 0.06),\n            shininess: 110\n        });\n\n        /**\n         * Current frame handler clock date and time.\n         * @private\n         * @type {Number}\n         */\n        this._currDate = 0;\n\n        /**\n         * Previous frame handler clock date and time.\n         * @private\n         * @type {Number}\n         */\n        this._prevDate = 0;\n\n        this._clockPtr = null;\n\n        this._lightOn = false;\n\n        this._f = 0;\n        this._k = 0;\n\n        this._stopped = options.stopped || false;\n    }\n\n    public override oninit() {\n        this.planet!.lightEnabled = true;\n\n        // sunlight initialization\n        this.sunlight.addTo(this.planet!);\n\n        this.renderer!.events.on(\"draw\", this._draw, this);\n\n        if (!this._clockPtr) {\n            this._clockPtr = this.renderer!.handler.defaultClock;\n        }\n    }\n\n    public stop() {\n        this._stopped = true;\n        this.deactivate();\n    }\n\n    public start() {\n        this._stopped = false;\n        this.activate();\n    }\n\n    public override onactivate() {\n        super.onactivate();\n        this._stopped = false;\n    }\n\n    public bindClock(clock: Clock) {\n        this._clockPtr = clock;\n    }\n\n    protected _draw() {\n        if (!this._clockPtr) return;\n        this._currDate = this._clockPtr.currentDate;\n        if (!this._stopped) {\n            let cam = this.planet!.camera;\n            if (cam.getHeight() < this.activationHeight || !this._active) {\n                this._lightOn = true;\n                this._f = 1;\n                let n = cam.eye.normal(),\n                    u = cam.getForward();\n\n                u.scale(Math.sign(cam._u.dot(n))); // up\n\n                if (cam.slope > 0.99) {\n                    u = cam._u;\n                }\n\n                let tu = Vec3.proj_b_to_plane(u, n, u).normalize().scale(this.offsetVertical);\n                let tr = Vec3.proj_b_to_plane(cam._r, n, cam._r)\n                    .normalize()\n                    .scale(this.offsetHorizontal); // right\n\n                let d = tu.add(tr);\n                let pos = cam.eye.add(d);\n\n                if (this._k > 0) {\n                    this._k -= 0.01;\n                    let rot = Quat.getRotationBetweenVectors(\n                        this.sunlight._position.normal(),\n                        pos.normal()\n                    );\n                    let r = rot.slerp(Quat.IDENTITY, this._k).normalize();\n                    this.sunlight.setPosition3v(r.mulVec3(this.sunlight._position));\n                } else {\n                    this.sunlight.setPosition3v(pos);\n                }\n            } else {\n                this._k = 1;\n                if (this._f > 0) {\n                    this._f -= 0.01;\n                    let rot = Quat.getRotationBetweenVectors(\n                        this.sunlight._position.normal(),\n                        getSunPosition(this._currDate).normal()\n                    );\n                    let r = rot.slerp(Quat.IDENTITY, this._f).normalize();\n                    this.sunlight.setPosition3v(r.mulVec3(this.sunlight._position));\n                } else {\n                    if (\n                        (Math.abs(this._currDate - this._prevDate) > 0.00034 && this._active) ||\n                        this._lightOn\n                    ) {\n                        this._lightOn = false;\n                        this._prevDate = this._currDate;\n                        this.sunlight.setPosition3v(getSunPosition(this._currDate));\n                        this._f = 0;\n                    }\n                }\n            }\n        } else {\n            this.sunlight.setPosition3v(getSunPosition(this._currDate));\n        }\n    }\n}","import {Control, IControlParams} from \"./Control\";\nimport {Key} from \"../Lock\";\nimport {LonLat} from \"../LonLat\";\nimport {math} from \"../index\";\nimport {Quat} from \"../math/Quat\";\nimport {Ray} from \"../math/Ray\";\nimport {Sphere} from \"../bv/Sphere\";\nimport {Vec2} from \"../math/Vec2\";\nimport {Vec3} from \"../math/Vec3\";\nimport {ITouchState} from \"../renderer/RendererEvents\";\n\ninterface ITouchNavigationParams extends IControlParams {\n\n}\n\nclass TouchExt {\n    public x: number;\n    public y: number;\n    public prev_x: number;\n    public prev_y: number;\n    public grabbedPoint: Vec3 | null;\n    public grabbedSpheroid: Sphere;\n\n    protected _vec: Vec2;\n    protected _vecPrev: Vec2;\n\n\n    constructor() {\n        this.x = 0;\n        this.y = 0;\n        this.prev_x = 0;\n        this.prev_y = 0;\n        this.grabbedPoint = null;\n        this.grabbedSpheroid = new Sphere();\n        this._vec = new Vec2();\n        this._vecPrev = new Vec2();\n    }\n\n    public get dY(): number {\n        return this.y - this.prev_y;\n    }\n\n    public get dX(): number {\n        return this.x - this.prev_x;\n    }\n\n    public get vec(): Vec2 {\n        return this._vec.set(this.x, this.y);\n    }\n\n    public get vecPrev(): Vec2 {\n        return this._vecPrev.set(this.prev_x, this.prev_y);\n    }\n}\n\n/**\n * Touch pad planet camera dragging control.\n */\nexport class TouchNavigation extends Control {\n\n    public grabbedPoint: Vec3;\n    public inertia: number;\n\n    protected grabbedSpheroid: Sphere;\n    protected qRot: Quat;\n    protected scaleRot: number;\n    protected rot: number;\n    protected _eye0: Vec3;\n    protected pointOnEarth: Vec3 | null;\n    protected earthUp: Vec3 | null;\n    protected touches: TouchExt[];\n    protected _keyLock: Key;\n    protected _touching: boolean;\n\n\n    constructor(options: ITouchNavigationParams = {}) {\n        super(options);\n\n        this._name = \"touchNavigation\";\n\n        this.grabbedPoint = new Vec3();\n        this.inertia = 0.007;\n        this.grabbedSpheroid = new Sphere();\n        this.planet = null;\n        this.qRot = new Quat();\n        this.scaleRot = 0;\n        this.rot = 1;\n        this._eye0 = new Vec3();\n\n        this.pointOnEarth = null;\n        this.earthUp = null;\n\n        this.touches = [new TouchExt(), new TouchExt()];\n\n        this._keyLock = new Key();\n\n        this._touching = false;\n    }\n\n    override oninit() {\n        if (this.renderer) {\n            this.renderer.events.on(\"touchstart\", this.onTouchStart, this);\n            this.renderer.events.on(\"touchend\", this.onTouchEnd, this);\n            this.renderer.events.on(\"doubletouch\", this.onDoubleTouch, this);\n            this.renderer.events.on(\"touchcancel\", this.onTouchCancel, this);\n            this.renderer.events.on(\"touchmove\", this.onTouchMove, this);\n            this.renderer.events.on(\"draw\", this.onDraw, this);\n        }\n    }\n\n    protected onTouchStart(e: ITouchState) {\n        const handler = this.renderer!.handler;\n        this._touching = true;\n\n        if (e.sys!.touches.length === 2) {\n            const t0 = this.touches[0];\n            const t1 = this.touches[1];\n\n            t0.x = (e.sys!.touches.item(0)!.clientX - e.sys!.offsetLeft) * handler.pixelRatio;\n            t0.y = (e.sys!.touches.item(0)!.clientY - e.sys!.offsetTop) * handler.pixelRatio;\n            t0.prev_x = t0.x;\n            t0.prev_y = t0.y;\n\n            t0.grabbedPoint = this.planet!.getCartesianFromPixelTerrain(new Vec2(t0.x, t0.y)) || null;\n\n            t1.x = (e.sys!.touches.item(1)!.clientX - e.sys!.offsetLeft) * handler.pixelRatio;\n            t1.y = (e.sys!.touches.item(1)!.clientY - e.sys!.offsetTop) * handler.pixelRatio;\n            t1.prev_x = t1.x;\n            t1.prev_y = t1.y;\n\n            t1.grabbedPoint = this.planet!.getCartesianFromPixelTerrain(new Vec2(t1.x, t1.y)) || null;\n\n            this.pointOnEarth = this.planet!.getCartesianFromPixelTerrain(\n                this.renderer!.handler.getCenter()\n            ) || null;\n\n            if (this.pointOnEarth) {\n                this.earthUp = this.pointOnEarth.normal();\n            }\n\n            if (t0.grabbedPoint && t1.grabbedPoint) {\n                t0.grabbedSpheroid.radius = t0.grabbedPoint.length();\n                t1.grabbedSpheroid.radius = t1.grabbedPoint.length();\n                this.stopRotation();\n            }\n        } else if (e.sys!.touches.length === 1) {\n            this._startTouchOne(e);\n        }\n    }\n\n    protected _startTouchOne(e: ITouchState) {\n        const t = this.touches[0];\n        const handler = this.renderer!.handler;\n\n        t.x = (e.sys!.touches.item(0)!.clientX - e.sys!.offsetLeft) * handler.pixelRatio;\n        t.y = (e.sys!.touches.item(0)!.clientY - e.sys!.offsetTop) * handler.pixelRatio;\n        t.prev_x = t.x;\n        t.prev_y = t.y;\n\n        // t.grabbedPoint = this.planet!.getCartesianFromPixelTerrain(e, true);\n        t.grabbedPoint = this.planet!.getCartesianFromPixelTerrain(e) || null;\n        this._eye0.copy(this.planet!.camera.eye);\n\n        if (t.grabbedPoint) {\n            t.grabbedSpheroid.radius = t.grabbedPoint.length();\n            this.stopRotation();\n        }\n    }\n\n    public stopRotation() {\n        this.qRot.clear();\n        this.planet!.layerLock.free(this._keyLock);\n        this.planet!.terrainLock.free(this._keyLock);\n        this.planet!._normalMapCreator.free(this._keyLock);\n    }\n\n    protected onDoubleTouch(e: ITouchState) {\n\n        this.planet!.stopFlying();\n        this.stopRotation();\n\n        const p = this.planet!.getCartesianFromPixelTerrain(e);\n        if (p) {\n            const g = this.planet!.ellipsoid.cartesianToLonLat(p);\n            this.planet!.flyLonLat(\n                new LonLat(g.lon, g.lat, this.planet!.camera.eye.distance(p) * 0.57)\n            );\n        }\n    }\n\n    protected onTouchEnd(e: ITouchState) {\n        if (e.sys!.touches.length === 0) {\n            this._touching = false;\n        }\n\n        if (e.sys!.touches.length === 1) {\n            this._startTouchOne(e);\n        }\n\n        if (\n            Math.abs(this.touches[0].x - this.touches[0].prev_x) < 3 &&\n            Math.abs(this.touches[0].y - this.touches[0].prev_y) < 3\n        ) {\n            this.scaleRot = 0;\n        }\n    }\n\n    protected onTouchCancel(e: ITouchState) {\n    }\n\n    protected onTouchMove(e: ITouchState) {\n        let cam = this.planet!.camera;\n        const handler = this.renderer!.handler;\n        if (e.sys!.touches.length === 2) {\n            this.renderer!.controlsBag.scaleRot = 1;\n\n            let t0 = this.touches[0],\n                t1 = this.touches[1];\n\n            if (!t0.grabbedPoint || !t1.grabbedPoint) {\n                return;\n            }\n\n            this.planet!.stopFlying();\n\n            t0.prev_x = t0.x;\n            t0.prev_y = t0.y;\n            t0.x = (e.sys!.touches.item(0)!.clientX - e.sys!.offsetLeft) * handler.pixelRatio;\n            t0.y = (e.sys!.touches.item(0)!.clientY - e.sys!.offsetTop) * handler.pixelRatio;\n\n            t1.prev_x = t1.x;\n            t1.prev_y = t1.y;\n            t1.x = (e.sys!.touches.item(1)!.clientX - e.sys!.offsetLeft) * handler.pixelRatio;\n            t1.y = (e.sys!.touches.item(1)!.clientY - e.sys!.offsetTop) * handler.pixelRatio;\n\n            const middle = t0.vec.add(t1.vec).scale(0.5);\n            const earthMiddlePoint = this.planet!.getCartesianFromPixelTerrain(\n                middle\n            );\n            if (earthMiddlePoint) {\n                this.pointOnEarth = earthMiddlePoint\n\n                const prevAngle = Math.atan2(t0.prev_y - t1.prev_y, t0.prev_x - t1.prev_x)\n                const curAngle = Math.atan2(t0.y - t1.y, t0.x - t1.x)\n\n                const deltaAngle = curAngle - prevAngle;\n                const distanceToPointOnEarth = cam.eye.distance(this.pointOnEarth);\n\n                const zoomCur = t0.vec.sub(t1.vec);\n                const zoomPrev = t0.vecPrev.sub(t1.vecPrev);\n                const scale = zoomCur.length() / zoomPrev.length();\n\n                let d = distanceToPointOnEarth * -(1 - scale);\n                cam.eye.addA(cam.getForward().scale(d));\n                cam.rotateAround(-deltaAngle, false, this.pointOnEarth, this.earthUp);\n\n                const panCur = t0.vec.add(t1.vec).scale(0.5);\n                const panPrev = t0.vecPrev.add(t1.vecPrev).scale(0.5);\n                const panOffset = panCur.sub(panPrev).scale(-1);\n                var l = 0.5 / distanceToPointOnEarth * cam._lonLat.height * math.RADIANS;\n                if (l > 0.003) l = 0.003;\n                cam.rotateHorizontal(l * -panOffset.x, false, this.pointOnEarth, this.earthUp);\n                cam.rotateVertical(l * -panOffset.y, this.pointOnEarth);\n\n                cam.checkTerrainCollision();\n                cam.update();\n            }\n            this.scaleRot = 0;\n        } else if (e.sys!.touches.length === 1) {\n            let t = this.touches[0];\n\n            t.prev_x = t.x;\n            t.prev_y = t.y;\n            t.x = (e.sys!.touches.item(0)!.clientX - e.sys!.offsetLeft) * handler.pixelRatio;\n            t.y = (e.sys!.touches.item(0)!.clientY - e.sys!.offsetTop) * handler.pixelRatio;\n\n            if (!t.grabbedPoint) {\n                return;\n            }\n\n            this.planet!.stopFlying();\n\n            let direction = e.direction\n            let targetPoint = new Ray(cam.eye, direction).hitSphere(t.grabbedSpheroid);\n\n            if (targetPoint) {\n                if (cam.slope > 0.2) {\n                    this.qRot = Quat.getRotationBetweenVectors(\n                        targetPoint.normal(),\n                        t.grabbedPoint.normal()\n                    );\n                    let rot = this.qRot;\n                    cam.eye = rot.mulVec3(cam.eye);\n                    cam._r = rot.mulVec3(cam._r);\n                    cam._u = rot.mulVec3(cam._u);\n                    cam._b = rot.mulVec3(cam._b);\n                    cam.checkTerrainCollision();\n                    cam.update();\n                    this.scaleRot = 1;\n                } else {\n                    let p0 = t.grabbedPoint,\n                        p1 = Vec3.add(p0, cam._u),\n                        p2 = Vec3.add(p0, p0.normal());\n                    let dir = cam.unproject(t.x, t.y);\n                    let px = new Vec3();\n                    if (new Ray(cam.eye, dir).hitPlane(p0, p1, p2, px) === Ray.INSIDE) {\n                        cam.eye = this._eye0.addA(px.subA(p0).negate());\n                        cam.checkTerrainCollision();\n                        cam.update();\n                        this.scaleRot = 0;\n                    }\n                }\n            }\n        }\n    }\n\n    protected onDraw() {\n\n        const r = this.renderer!;\n\n        r.controlsBag.scaleRot = this.scaleRot;\n\n        if (this._touching) {\n            return;\n        }\n\n        let cam = this.planet!.camera;\n        let prevEye = cam.eye.clone();\n\n        if (r.events.mouseState.leftButtonDown || !this.scaleRot) {\n            return;\n        }\n\n        this.scaleRot -= this.inertia;\n        if (this.scaleRot <= 0) {\n            this.scaleRot = 0;\n        } else {\n            r.controlsBag.scaleRot = this.scaleRot;\n            let rot = this.qRot\n                .slerp(Quat.IDENTITY, 1 - this.scaleRot * this.scaleRot * this.scaleRot)\n                .normalize();\n            if (!(rot.x || rot.y || rot.z)) {\n                this.scaleRot = 0;\n            }\n            cam.eye = rot.mulVec3(cam.eye);\n            cam._r = rot.mulVec3(cam._r);\n            cam._u = rot.mulVec3(cam._u);\n            cam._b = rot.mulVec3(cam._b);\n            cam.checkTerrainCollision();\n            cam.update();\n        }\n\n        if (cam.eye.distance(prevEye) / cam.getAltitude() > 0.01) {\n            this.planet!.layerLock.lock(this._keyLock);\n            this.planet!.terrainLock.lock(this._keyLock);\n            this.planet!._normalMapCreator.lock(this._keyLock);\n        } else {\n            this.planet!.layerLock.free(this._keyLock);\n            this.planet!.terrainLock.free(this._keyLock);\n            this.planet!._normalMapCreator.free(this._keyLock);\n        }\n    }\n}\n","import {Key} from \"../Lock\";\nimport {Button} from \"../ui/Button\";\nimport {Control, IControlParams} from \"./Control\";\nimport {Renderer} from \"../renderer/Renderer\";\nimport {Vec2} from \"../math/Vec2\";\n\nconst ICON_PLUS_SVG = '<?xml version=\"1.0\"?>' +\n    '<svg width=24 height=24 xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">' +\n    '    <path d=\"M 11 5 L 11 11 L 5 11 L 5 13 L 11 13 L 11 19 L 13 19 L 13 13 L 19 13 L 19 11 L 13 11 L 13 5 L 11 5 z\"/>' +\n    '</svg>';\n\nconst ICON_MINUS_SVG = '<?xml version=\"1.0\"?>' +\n    '<svg width=24 height=24 xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">' +\n    '    <path d=\"M 5 11 L 5 13 L 19 13 L 19 11 L 5 11 z\"/>' +\n    '</svg>';\n\n/**\n * Planet zoom buttons control.\n */\nclass ZoomControl extends Control {\n    protected _keyLock: Key;\n    protected _move: number;\n    protected _targetPoint: Vec2 | null;\n\n    constructor(options: IControlParams = {}) {\n        super(options);\n        this._keyLock = new Key();\n        this._move = 0;\n        this._targetPoint = null;\n    }\n\n    public override oninit() {\n\n        let zoomInBtn = new Button({\n            classList: [\"og-map-button\", \"og-zoomin-button\"],\n            icon: ICON_PLUS_SVG\n        });\n        zoomInBtn.appendTo(this.renderer!.div!);\n\n\n        let zoomOutBtn = new Button({\n            classList: [\"og-map-button\", \"og-zoomout-button\"],\n            icon: ICON_MINUS_SVG\n        });\n        zoomOutBtn.appendTo(this.renderer!.div!);\n\n        zoomInBtn.events.on(\"mousedown\", () => this.zoomIn());\n        zoomInBtn.events.on(\"mouseup\", () => this.stopZoom());\n        zoomOutBtn.events.on(\"mousedown\", () => this.zoomOut());\n        zoomOutBtn.events.on(\"mouseup\", () => this.stopZoom());\n        zoomInBtn.events.on(\"touchstart\", () => this.zoomIn());\n        zoomInBtn.events.on(\"touchend\", () => this.stopZoom());\n        zoomInBtn.events.on(\"touchcancel\", () => this.stopZoom());\n        zoomOutBtn.events.on(\"touchstart\", () => this.zoomOut());\n        zoomOutBtn.events.on(\"touchend\", () => this.stopZoom());\n        zoomOutBtn.events.on(\"touchcancel\", () => this.stopZoom());\n\n        this.renderer!.events.on(\"draw\", this._draw, this);\n    }\n\n    /**\n     * Planet zoom in.\n     * @public\n     */\n    public zoomIn() {\n        this.planet!.layerLock.lock(this._keyLock);\n        this.planet!.terrainLock.lock(this._keyLock);\n        this.planet!._normalMapCreator.lock(this._keyLock);\n\n        this._targetPoint = this.renderer!.getCenter();\n\n        this._move = 1;\n    }\n\n    /**\n     * Planet zoom out.\n     * @public\n     */\n    zoomOut() {\n        this.planet!.layerLock.lock(this._keyLock);\n        this.planet!.terrainLock.lock(this._keyLock);\n        this.planet!._normalMapCreator.lock(this._keyLock);\n\n        this._targetPoint = this.renderer!.getCenter();\n        this._move = -1;\n    }\n\n    public stopZoom() {\n        this._move = 0;\n\n        this.planet!.layerLock.free(this._keyLock);\n        this.planet!.terrainLock.free(this._keyLock);\n        this.planet!._normalMapCreator.free(this._keyLock);\n    }\n\n    protected _draw(e: Renderer) {\n        const cam = this.planet!.camera;\n\n        if (this._move !== 0) {\n            const pos = this.planet!.getCartesianFromPixelTerrain(e.getCenter());\n            if (pos) {\n                let d = cam.eye.distance(pos) * 0.035;\n                cam.eye.addA(cam.getForward().scale(this._move * d));\n                cam.checkTerrainCollision();\n                cam.update();\n            }\n        }\n    }\n}\n\nexport {ZoomControl};\n","import { Entity } from '../../entity/Entity';\nimport { Events } from '../../Events';\nimport { Vector } from '../../layer/Vector';\nimport { LonLat } from '../../LonLat';\nimport { Object3d } from '../../Object3d';\nimport { RenderNode } from '../../scene/RenderNode';\n\nconst OUTLINE_COUNT = 120;\n\nconst MAX_SCALE = 0.005;\nconst MIN_SCALE = 0.001;\nconst MAX_SCALE_HEIGHT = 3000.0;\nconst MIN_SCALE_HEIGHT = 19000000.0;\n\nfunction distanceFormat(v: number) {\n    if (v > 1000) {\n        return `${(v / 1000).toFixed(1)} km`;\n    } else if (v > 9) {\n        return `${Math.round(v)} m`;\n    } else {\n        return `${v.toFixed(1)} m`;\n    }\n}\n\nclass SelectionScene extends RenderNode {\n    events: Events<string[]>;\n    _ignoreTerrain = false;\n    _onSelect: any;\n    _autoSelectionHide: any;\n    _planet: any;\n    _startLonLat: any;\n    _heading: number;\n    _propsLabel: Entity;\n    _trackEntity: Entity;\n    _cornerEntity: Entity[];\n    _trackLayer: Vector;\n    _cornersLayer: Vector;\n    _onMouseMove_: any;\n    _onMouseLdown_: any;\n    _onMouseLup_: any;\n    _pickedCorner: any;\n    _anchorLonLat: any;\n    constructor(options: { name?: string, ignoreTerrain?: boolean, onSelect?: any, autoSelectionHide?: boolean, planet?: any } = {}) {\n        super(options.name);\n\n        this.events = new Events(EVENT_NAMES);\n\n        this._ignoreTerrain = options.ignoreTerrain != undefined ? options.ignoreTerrain : true;\n\n        this._onSelect = options.onSelect || null;\n\n        this._autoSelectionHide = options.autoSelectionHide || false;\n\n        this._planet = options.planet || null;\n\n        this._startLonLat = null;\n\n        this._heading = 0;\n\n        this._propsLabel = new Entity({\n            'name': 'propsLabel',\n            'label': {\n                text: \"\",\n                size: 11,\n                color: \"rgba(455,455,455,1.0)\",\n                outlineColor: \"rgba(0,0,0,0.34)\",\n                outline: 0.23,\n                align: \"center\",\n                offset: [0, 18]\n            }\n        } as any);\n\n        this._propsLabel?.label?.setVisibility(false);\n\n        this._trackEntity = new Entity({\n            polyline: {\n                path3v: [],\n                thickness: 3.8,\n                color: \"rgb(455,455,455)\",\n                isClosed: false\n            }\n        } as any);\n\n        (this._trackEntity as any).polyline.altitude = 0.01;\n\n        let obj3d = Object3d.createCylinder(1.1, 0, 2.7, 20, 1, true, false, 0, 0, 0)\n\n        this._cornerEntity = [\n            new Entity({\n                geoObject: {\n                    scale: 1,\n                    instanced: true,\n                    tag: \"selection\",\n                    color: \"rgb(0,305,0)\",\n                    object3d: obj3d\n                },\n                properties: {\n                    name: \"start\"\n                }\n            } as any),\n            new Entity({\n                geoObject: {\n                    scale: 1,\n                    instanced: true,\n                    tag: \"selection\",\n                    color: \"rgb(455,0,0)\",\n                    object3d: obj3d\n                },\n                properties: {\n                    name: \"end\"\n                }\n            } as any)\n        ];\n\n        this._trackLayer = new Vector(\"track\", {\n            entities: [this._trackEntity, this._propsLabel],\n            pickingEnabled: false,\n            polygonOffsetUnits: -1.0,\n            relativeToGround: true,\n            displayInLayerSwitcher: false\n        });\n\n        this._cornersLayer = new Vector(\"corners\", {\n            entities: [this._cornerEntity[0], this._cornerEntity[1]],\n            pickingEnabled: true,\n            displayInLayerSwitcher: false,\n            scaleByDistance: [1.0, 4000000, 0.01],\n            pickingScale: 2\n        });\n    }\n\n    set ignoreTerrain(v: boolean) {\n        this._ignoreTerrain = v;\n        if (v) {\n            //...redraw line\n        }\n    }\n\n    bindPlanet(planet: any) {\n        this._planet = planet;\n    }\n\n    override init() {\n        this._activate();\n    }\n\n    override onremove() {\n        this._deactivate();\n    }\n\n    _activate() {\n        this._propsLabel?.label?.setVisibility(false);\n\n        this._onMouseMove_ = this._onMouseMove.bind(this);\n        this.renderer?.events.on(\"mousemove\", this._onMouseMove_, this);\n\n        this._onMouseLdown_ = this._onMouseLdown.bind(this);\n        this.renderer?.events.on(\"ldown\", this._onMouseLdown_, this);\n\n        this._onMouseLup_ = this._onMouseLup.bind(this);\n        this.renderer?.events.on(\"lup\", this._onMouseLup_, this);\n\n        this._planet.addLayer(this._trackLayer);\n\n        this._planet.addLayer(this._cornersLayer);\n\n    }\n\n    _deactivate() {\n        this._startLonLat = null;\n        this._trackLayer.remove();\n        this._cornersLayer.remove();\n        this.renderer?.events.off(\"mousemove\", this._onMouseMove_);\n        this.renderer?.events.off(\"ldown\", this._onMouseLdown_);\n        this.renderer?.events.off(\"lup\", this._onMouseLup_);\n\n        this.clear();\n\n        this._onMouseMove_ = null;\n        this._onMouseLdown_ = null;\n        this._onMouseLup_ = null;\n    }\n\n    _onMouseLdown(e: any) {\n\n        //workaround to show pointer, because ogGrabbingPoiner keep !importanti which override pointer style\n        e.renderer.handler.canvas.classList.remove('ogGrabbingPoiner');\n\n        e.renderer.handler.canvas.style.cursor = 'pointer';\n\n        if (!this._startLonLat) {\n\n\n            this._propsLabel.label?.setVisibility(false);\n\n            this._trackEntity.polyline?.setPath3v([]);\n\n\n            this._cornerEntity[0].geoObject?.setVisibility(true);\n            this._cornerEntity[1].geoObject?.setVisibility(true);\n\n            this.renderer?.controls.mouseNavigation?.deactivate();\n            this._startLonLat = this._planet.getLonLatFromPixelTerrain(e);\n\n            let startPos = this._planet.ellipsoid.lonLatToCartesian(this._startLonLat);\n            this._cornerEntity[0].setCartesian3v(startPos);\n            this._cornerEntity[1].setCartesian3v(startPos);\n        }\n    }\n\n    _onMouseLup(e: any) {\n        if (this._startLonLat) {\n\n            this._pickedCorner = null;\n            this._anchorLonLat = null;\n\n            this._propsLabel.label?.setVisibility(true);\n\n            if (this._onSelect && typeof this._onSelect === 'function') {\n                let startLonLat = this._cornerEntity[0].getLonLat();\n                let endLonLat = this._cornerEntity[1].getLonLat();\n\n                let extent = [\n                    Math.min(startLonLat.lon, endLonLat.lon),\n                    Math.min(startLonLat.lat, endLonLat.lat),\n                    Math.max(startLonLat.lon, endLonLat.lon),\n                    Math.max(startLonLat.lat, endLonLat.lat)\n                ];\n                this._onSelect(extent);\n            }\n\n            if (this._autoSelectionHide) {\n                this.clear();\n            }\n\n            this._startLonLat = null;\n        }\n        e.renderer.handler.canvas.style.cursor = 'default';\n        this.renderer?.controls.mouseNavigation?.activate();\n    }\n\n    _drawLine(startLonLat: any, endLonLat: any, startPos?: any) {\n\n        if (!startPos) {\n            startPos = this._planet.ellipsoid.lonLatToCartesian(startLonLat);\n        }\n\n        let endPos = this._planet.ellipsoid.lonLatToCartesian(endLonLat);\n\n        let res = this._planet.ellipsoid.direct(startLonLat, endLonLat);\n\n        this._heading = res.initialAzimuth;\n\n        let path = [];\n\n        this._cornerEntity[0].setCartesian3v(startPos);\n        this._cornerEntity[1].setCartesian3v(endPos);\n\n        let corners = [\n            startPos,\n            this._planet.ellipsoid.lonLatToCartesian(new LonLat(endLonLat.lon, startLonLat.lat, startLonLat.height)),\n            endPos,\n            this._planet.ellipsoid.lonLatToCartesian(new LonLat(startLonLat.lon, endLonLat.lat, startLonLat.height)),\n            startPos\n        ];\n\n\n        path.push(startPos);\n\n        let createPath = (sideA: any, sideB: any) => {\n            let dir = sideB.sub(sideA);\n            let dist = dir.length();\n            dir.normalize();\n\n            for (let i = 0; i < OUTLINE_COUNT; i++) {\n                let f = dir.scaleTo(i * dist / OUTLINE_COUNT).addA(sideA);\n                path.push(f);\n            }\n        };\n\n        for (let i = 0; i < corners.length - 1; i++) {\n            createPath(corners[i], corners[i + 1]);\n        }\n\n        this._trackEntity.polyline?.setPath3v([path]);\n\n        if (this._ignoreTerrain) {\n            // this._propsLabel.setCartesian3v(path[Math.floor(path.length / 2)]);\n            // this._propsLabel.label.setText(`${distanceFormat(length)}, ${Math.round(this._heading)} deg`);\n        }\n    }\n\n    _onMouseMove(e: any) {\n        if (this._startLonLat) {\n            this._propsLabel.label?.setVisibility(true);\n            let endLonLat = this._planet.getLonLatFromPixelTerrain(e);\n            if (!endLonLat)\n                return;\n            this._drawLine(this._startLonLat, endLonLat);\n        }\n    }\n\n    clear() {\n        this._trackEntity.polyline?.clear();\n        this._cornerEntity[0].geoObject?.setVisibility(false);\n        this._cornerEntity[1].geoObject?.setVisibility(false);\n    }\n\n    override frame() {\n        let t = this._trackEntity.polyline?.getPath3v()[0];\n        if (t) {\n            if (!this._ignoreTerrain) {\n                let res = 0;\n                for (let i = 0, len = t.length - 1; i < len; i++) {\n                    res += (t[i + 1] as any).distance(t[i]);\n                }\n\n                this._propsLabel.setCartesian3v(t[Math.floor(t.length / 2)] as any);\n                this._propsLabel.label?.setText(`${distanceFormat(res)}, ${Math.round(this._heading)} deg`);\n            }\n        }\n    }\n\n    get ellipsoid() {\n        return this._planet ? this._planet.ellipsoid : null;\n    }\n}\n\nconst EVENT_NAMES = [\n    \"add\",\n    \"remove\",\n    \"mousemove\",\n    \"mouseenter\",\n    \"mouseleave\",\n    \"lclick\",\n    \"rclick\",\n    \"mclick\",\n    \"ldblclick\",\n    \"rdblclick\",\n    \"mdblclick\",\n    \"lup\",\n    \"rup\",\n    \"mup\",\n    \"ldown\",\n    \"rdown\",\n    \"mdown\",\n    \"lhold\",\n    \"rhold\",\n    \"mhold\",\n    \"mousewheel\",\n    \"touchmove\",\n    \"touchstart\",\n    \"touchend\",\n    \"doubletouch\",\n    \"touchleave\",\n    \"touchenter\"\n];\n\nexport { SelectionScene };\n","import * as math from '../../math';\n\ntype BaselineType = \"alphabetic\" | \"bottom\" | \"hanging\" | \"ideographic\" | \"middle\" | \"top\";\ntype AlignType = \"center\" | \"end\" | \"left\" | \"right\" | \"start\";\n\nexport function addSeconds(date: Date, seconds: number): Date {\n    return new Date(+date + seconds * 1000);\n}\n\nexport function dateToStr(date: Date, showTime: boolean = true, showMilliseconds: boolean = false): string {\n\n    let month = MONTHS[date.getMonth()],\n        day = date.getUTCDate(),\n        year = date.getUTCFullYear();\n\n    if (showTime) {\n        let h = date.getUTCHours().toString().padStart(2, '0'),\n            m = date.getUTCMinutes().toString().padStart(2, '0'),\n            s = date.getUTCSeconds().toString().padStart(2, '0');\n\n        if (showMilliseconds) {\n            let ms = date.getUTCMilliseconds().toString().padStart(3, '0');\n            return `${month} ${day} ${year} ${h}:${m}:${s}.${ms}`;\n        }\n\n        return `${month} ${day} ${year} ${h}:${m}:${s}`;\n    }\n\n    return `${month} ${day} ${year}`;\n}\n\nexport function createCanvasHTML(): HTMLCanvasElement {\n    return document.createElement(\"canvas\");\n}\n\nexport function getNearestTimeLeft(t: number, div: number): number {\n    return t - (t % div);\n}\n\nexport function drawNotch(ctx: CanvasRenderingContext2D, xOffset: number = 0, size: number = 10, thickness: number = 2, color: string = \"white\") {\n    ctx.lineWidth = thickness;\n    ctx.strokeStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(xOffset, 0);\n    ctx.lineTo(xOffset, size);\n    ctx.stroke();\n}\n\nexport function drawText(ctx: CanvasRenderingContext2D, text: string, x: number, y: number, font: string = \"12px Arial\", fillStyle: string = \"black\", align: AlignType = \"left\", baseLine: BaselineType = \"bottom\", rotDeg: number = 0) {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotDeg * math.RADIANS);\n    ctx.fillStyle = fillStyle;\n    ctx.textBaseline = baseLine;\n    ctx.font = font;\n    ctx.textAlign = align;\n    ctx.fillText(text, 0, 0);\n    ctx.restore();\n}\n\nexport const SCALES: [number, number][] = [\n    [0.001, 10],\n    [0.002, 10],\n    [0.005, 10],\n    [0.01, 10],\n    [0.02, 10],\n    [0.05, 10],\n    [0.1, 10],\n    [0.25, 10],\n    [0.5, 5],\n    [1.0, 10],\n    [2.0, 10],\n    [5.0, 5],\n    [10.0, 10],\n    [15.0, 15],\n    [30.0, 6],\n    [60.0, 12], // 1min\n    [120.0, 12], // 2min\n    [300.0, 5], // 5min\n    [600.0, 10], // 10min\n    [900.0, 15], // 15min\n    [1800.0, 6], // 30min\n    [3600.0, 12], // 1hr\n    [7200.0, 10], // 2hr\n    [14400.0, 4], // 4hr\n    [21600.0, 6], // 6hr\n    [43200.0, 12], // 12hr\n    [86400.0, 24], // 24hr\n    [172800.0, 2], // 2days\n    [345600.0, 4], // 4days\n    [604800.0, 7], // 7days\n    [1296000.0, 15], // 15days\n    [2592000.0, 5], // 30days\n    [5184000.0, 6], // 60days\n    [7776000.0, 9], // 90days\n    [15552000.0, 18], // 180days\n    [31536000.0, 12], // 365days\n    [63072000.0, 2], // 2years\n    [126144000.0, 4], // 4years\n    [157680000.0, 5], // 5years\n    [315360000.0, 10], // 10years\n    [630720000.0, 2], // 20years\n    [1261440000.0, 4], // 40years\n    [1576800000.0, 5], // 50years\n    [3153600000.0, 10], // 100years\n    [6307200000.0, 2], // 200years\n    [12614400000.0, 4], // 400years\n    [15768000000.0, 5], // 500years\n    [31536000000.0, 10], // 1000years\n];\n\nexport function getScale(seconds: number) {\n    for (let i = 0, len = SCALES.length; i < len; i++) {\n        if (SCALES[i][0] > seconds) {\n            return SCALES[i - 1];\n        }\n    }\n}\n\nexport const MONTHS = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n];\n","import {EventsHandler, createEvents} from '../../Events';\nimport {addSeconds} from \"./timelineUtils\";\n\ntype TimelineEventsList = [\"change\", \"current\"];\n\nconst TIMELINE_EVENTS: TimelineEventsList = [\"change\", \"current\"/*, \"tick\"*/];\n\ninterface ITimelineParams {\n    current?: Date;\n    rangeStart?: Date;\n    rangeEnd?: Date;\n    minDate?: Date | null;\n    maxDate?: Date | null;\n    multiplier?: number\n}\n\nclass TimelineModel {\n    public events: EventsHandler<TimelineEventsList>;\n    protected _current: Date;\n    protected _rangeStart: Date;\n    protected _rangeEnd: Date;\n    protected _range: number;\n    protected _minDate: Date | null;\n    protected _maxDate: Date | null;\n    protected _requestAnimationFrameId: number;\n    protected _prevNow: number;\n\n    public multiplier: number;\n    public dt: number;\n\n    constructor(options: ITimelineParams = {}) {\n\n        this.events = createEvents(TIMELINE_EVENTS);\n\n        this._current = options.current || new Date();\n        this._rangeStart = options.rangeStart || new Date();\n        this._rangeEnd = options.rangeEnd || addSeconds(this._rangeStart, 3600);\n        this._range = this._rangeEnd.getTime() - this._rangeStart.getTime();\n        this._minDate = options.minDate || null;\n        this._maxDate = options.maxDate || null;\n\n        this.multiplier = options.multiplier != undefined ? options.multiplier : 1.0;\n\n        this._requestAnimationFrameId = 0;\n        this._prevNow = 0;\n\n        this.dt = 0;\n    }\n\n    public play() {\n        if (!this._requestAnimationFrameId) {\n            this._prevNow = window.performance.now();\n            this._animationFrameCallback();\n        }\n    }\n\n    public stop() {\n        if (this._requestAnimationFrameId) {\n            window.cancelAnimationFrame(this._requestAnimationFrameId);\n            this._requestAnimationFrameId = 0;\n        }\n    }\n\n    public stopped() {\n        return this._requestAnimationFrameId == 0;\n    }\n\n    protected _animationFrameCallback() {\n        this._requestAnimationFrameId = window.requestAnimationFrame(() => {\n            this._frame();\n            this._animationFrameCallback();\n        });\n    }\n\n    protected _frame() {\n        let now = window.performance.now();\n        this.dt = now - this._prevNow;\n        this._prevNow = now;\n\n        this.current = new Date(this.currentTime + this.dt * this.multiplier);\n\n        // this._events.dispatch(this._events.tick, this._current);\n    }\n\n    public get range(): number {\n        return this._range\n    }\n\n    public set(rangeStart: Date, rangeEnd: Date) {\n        if (rangeStart !== this._rangeStart || rangeEnd !== this._rangeEnd) {\n            this._rangeStart = rangeStart;\n            this._rangeEnd = rangeEnd;\n            this._range = this._rangeEnd.getTime() - this._rangeStart.getTime();\n            this.events.dispatch(this.events.change, rangeStart, rangeEnd);\n        }\n    }\n\n    public get current(): Date {\n        return this._current;\n    }\n\n    public get rangeStart(): Date {\n        return this._rangeStart;\n    }\n\n    public get rangeEnd(): Date {\n        return this._rangeEnd;\n    }\n\n    public get rangeStartTime(): number {\n        return this._rangeStart.getTime();\n    }\n\n    public get rangeEndTime(): number {\n        return this._rangeEnd.getTime();\n    }\n\n    public get currentTime(): number {\n        return this._current.getTime();\n    }\n\n    public set current(current: Date) {\n        if (current !== this._current) {\n            if (this._maxDate && current > this._maxDate) {\n                this._current = this._maxDate;\n            } else if (this._minDate && current < this._minDate) {\n                this._current = this._minDate;\n            } else {\n                this._current = current;\n            }\n            this.events.dispatch(this.events.current, this._current);\n        }\n    }\n\n    public set rangeStart(date: Date) {\n        if (date !== this._rangeStart) {\n            this._rangeStart = date;\n            this._range = this._rangeEnd.getTime() - this._rangeStart.getTime();\n            this.events.dispatch(this.events.change, date);\n        }\n    }\n\n    public set rangeEnd(date: Date) {\n        if (date !== this._rangeEnd) {\n            this._rangeEnd = date;\n            this._range = this._rangeEnd.getTime() - this._rangeStart.getTime();\n            this.events.dispatch(this.events.change, date);\n        }\n    }\n}\n\nexport {TimelineModel};\n","import {EventsHandler} from \"../../Events\";\nimport {ButtonGroup} from \"../../ui/ButtonGroup\";\nimport {IViewParams, View, ViewEventsList} from '../../ui/View';\nimport {ToggleButton} from \"../../ui/ToggleButton\";\nimport {TimelineModel} from './TimelineModel';\nimport {\n    addSeconds,\n    createCanvasHTML,\n    dateToStr,\n    drawNotch,\n    drawText,\n    getNearestTimeLeft,\n    getScale\n} from './timelineUtils';\nimport {MouseEventExt} from \"../../input/MouseHandler\";\n\ninterface ITimelineViewParams extends IViewParams {\n    currentDate?: Date;\n    rangeStart?: Date;\n    rangeEnd?: Date;\n    minDate?: Date;\n    maxDate?: Date;\n    fillStyle?: string\n}\n\nconst SECONDS_TO_MILLISECONDS = 1000.0;\nconst MILLISECONDS_TO_SECONDS = 1.0 / SECONDS_TO_MILLISECONDS;\n\ntype TimelineViewEventsList = [\n    'startdrag',\n    'stopdrag',\n    'startdragcurrent',\n    'stopdragcurrent',\n    'setcurrent',\n    'reset',\n    'play',\n    'playback',\n    'pause',\n    'visibility'\n];\n\nconst TIMELINEVIEW_EVENTS: TimelineViewEventsList = [\n    'startdrag',\n    'stopdrag',\n    'startdragcurrent',\n    'stopdragcurrent',\n    'setcurrent',\n    'reset',\n    'play',\n    'playback',\n    'pause',\n    'visibility'\n];\n\nconst ICON_PLAY_SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M8 5v14l11-7z\" style=\"fill: black;\"/></svg>';\nconst ICON_PAUSE_SVG = '<?xml version=\"1.0\" ?><!DOCTYPE svg  PUBLIC \\'-//W3C//DTD SVG 1.1//EN\\'  \\'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\'><svg enable-background=\"new 0 0 512 512\" height=\"512px\" version=\"1.1\" viewBox=\"0 0 512 512\" width=\"512px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"Layer_6\"><rect fill=\"#252525\" height=\"320\" width=\"60\" x=\"153\" y=\"96\"/><rect fill=\"#252525\" height=\"320\" width=\"60\" x=\"299\" y=\"96\"/></g></svg>';\n\nconst SCALE_FILL_COLOR = \"rgba(64, 59, 59, 1.0)\";\nconst SCALE_NOTCH_COLOR = \"#bfbfbf\";\nconst SCALE_TIME_COLOR = \"#bfbfbf\";\n\nconst TEMPLATE =\n    `<div class=\"og-timeline\">\n\n  <div class=\"og-timeline-top\">\n  </div>\n\n  <div class=\"og-timeline-frame\">\n    <div class=\"og-timeline-current\">\n      <div class=\"og-timeline-current-spin\">\n        <div class=\"og-timeline-current-arrow\"></div>\n      </div>\n    </div>\n    <div class=\"og-timeline-scale\"></div>\n  </div>\n\n  <div class=\"og-timeline-bottom\">\n    <div class=\"og-timeline-controls\">\n    </div>\n  </div>\n\n</div>`;\n\n\nclass TimelineView extends View<TimelineModel> {\n\n    public override events: EventsHandler<TimelineViewEventsList> & EventsHandler<ViewEventsList>;\n    public fillStyle: string;\n    public $controls: HTMLElement | null;\n    protected _frameEl: HTMLElement | null;\n    protected _currentEl: HTMLElement | null;\n    protected _canvasEl: HTMLCanvasElement;\n    protected _ctx: CanvasRenderingContext2D;\n    protected _isMouseOver: boolean;\n    protected _isDragging: boolean;\n    protected _isCurrentDragging: boolean;\n    protected _isCurrentMouseOver: boolean;\n    protected _minWidth: number;\n    protected _canvasScale: number;\n    protected _millisecondsInPixel: number;\n    protected _clickPosX: number;\n    protected _clickRangeStart: Date;\n    protected _clickRangeEnd: Date;\n    protected _clickCurrentDate: Date;\n    protected _clickTime: number;\n    protected _clickDelay: number;\n    protected _onResizeObserver_: () => void;\n    protected _resizeObserver: ResizeObserver;\n    protected _pauseBtn: ToggleButton;\n    protected _playBtn: ToggleButton;\n    protected _buttons: ButtonGroup;\n    protected _visibility: boolean;\n\n    constructor(options: ITimelineViewParams = {}) {\n        super({\n            template: TEMPLATE,\n            model: new TimelineModel({\n                rangeStart: options.rangeStart,\n                rangeEnd: options.rangeEnd,\n                current: options.currentDate,\n                minDate: options.minDate,\n                maxDate: options.maxDate\n            })\n        });\n\n        //@ts-ignore\n        this.events = this.events.registerNames(TIMELINEVIEW_EVENTS);\n\n        this.fillStyle = options.fillStyle || SCALE_FILL_COLOR;\n\n        this.$controls = null;\n\n        this._frameEl = null;\n        this._currentEl = null;\n        this._canvasEl = createCanvasHTML();\n        this._ctx = this._canvasEl.getContext('2d')!;\n\n        this._isMouseOver = false;\n        this._isDragging = false;\n        this._isCurrentDragging = false;\n        this._isCurrentMouseOver = false;\n\n        this._minWidth = 330;\n        this._canvasScale = 2;\n\n        this._millisecondsInPixel = 0;\n\n        this._clickPosX = 0;\n        this._clickRangeStart = new Date();\n        this._clickRangeEnd = new Date();\n        this._clickCurrentDate = new Date();\n\n        this._clickTime = 0;\n        this._clickDelay = 450;\n\n        this._onResizeObserver_ = this._onResizeObserver.bind(this);\n        this._resizeObserver = new ResizeObserver(this._onResizeObserver_);\n\n        this._pauseBtn = new ToggleButton({\n            classList: [\"og-timeline-control_button\"],\n            icon: ICON_PAUSE_SVG,\n            name: \"pause\"\n        });\n\n        this._playBtn = new ToggleButton({\n            classList: [\"og-timeline-control_button\"],\n            icon: ICON_PLAY_SVG,\n            name: \"play\"\n        });\n\n        this._buttons = new ButtonGroup({\n            buttons: [this._pauseBtn, this._playBtn]\n        })\n\n        this._visibility = false;\n    }\n\n    protected _onResizeObserver() {\n        this.resize();\n    }\n\n    public get canvasScale(): number {\n        return this._canvasScale;\n    }\n\n    public set canvasScale(scale: number) {\n        if (scale !== this._canvasScale) {\n            this._canvasScale = scale;\n            this.resize();\n        }\n    }\n\n    public resize() {\n        this._resize();\n        this.draw();\n    }\n\n    public override afterRender(parentNode: HTMLElement) {\n        this.resize();\n    }\n\n    public override render(): this {\n        super.render();\n\n        this.$controls = this.select(\".og-timeline-controls\");\n\n        this._frameEl = this.select(\".og-timeline-frame\");\n        this._currentEl = this.select(\".og-timeline-current\");\n        this.select(\".og-timeline-frame .og-timeline-scale\")!.appendChild(this._canvasEl);\n\n        this._resizeObserver.observe(this.el!);\n\n        this.model.events.on(\"change\", () => {\n            this.draw()\n        });\n\n        this.model.events.on(\"current\", (d: Date) => {\n            this._drawCurrent();\n            this.events.dispatch(this.events.setcurrent, d);\n        });\n\n        this._canvasEl.addEventListener(\"mouseenter\", this._onMouseEnter);\n        this._canvasEl.addEventListener(\"mouseout\", this._onMouseOut);\n\n        this._currentEl!.addEventListener(\"mouseenter\", this._onCurrentMouseEnter);\n        this._currentEl!.addEventListener(\"mouseout\", this._onCurrentMouseOut);\n\n        document.body.addEventListener(\"mousemove\", this._onMouseMove);\n        document.body.addEventListener(\"mousedown\", this._onMouseDown);\n        document.body.addEventListener(\"mouseup\", this._onMouseUp);\n        document.body.addEventListener(\"wheel\", this._onMouseWheelFF);\n\n        this._playBtn.appendTo(this.$controls!);\n        this._pauseBtn.appendTo(this.$controls!);\n\n        if (this.model.stopped()) {\n            this._pauseBtn.setActive(true, true);\n            this._pauseBtn.preventClick = true;\n        } else {\n            this._playBtn.setActive(true, true);\n            this._playBtn.preventClick = true;\n        }\n\n        this._buttons.events.on(\"change\", (btn: ToggleButton) => {\n            switch (btn.name) {\n                case \"play\":\n                    this.play();\n                    break;\n                case \"pause\":\n                    this.pause();\n                    break;\n            }\n        });\n\n        // let mltView = new View({\n        //     template: `<div class=\"og-timeline-multiplier\">\n        //                 <select>\n        //                     <option value=\"0.25\">0.25</option>\n        //                     <option value=\"0.5\">0.5</option>\n        //                     <option value=\"1\" selected>1.0</option>\n        //                     <option value=\"2\">2.0</option>\n        //                     <option value=\"3\">3.0</option>\n        //                     <option value=\"5\">5.0</option>\n        //                 </select>\n        //                 </div>`\n        // });\n\n        //mltView.appendTo($ctl)\n\n        // let multiplierEl = this.select(\".og-timeline-multiplier select\");\n        //\n        // multiplierEl.value = this.model.multiplier.toString();\n        // multiplierEl.addEventListener(\"change\", (e) => {\n        //     this.model.multiplier = Math.sign(this.model.multiplier) * Number(e.target.value);\n        // });\n\n        this.setVisibility(true);\n\n        return this;\n    }\n\n    public setVisibility(visibility: boolean) {\n        if (visibility !== this._visibility) {\n            this._visibility = visibility;\n            if (this.el) {\n                if (visibility) {\n                    this.el.style.display = \"block\";\n                } else {\n                    this.el.style.display = \"none\";\n                }\n            }\n            this.events.dispatch(this.events.visibility, visibility);\n        }\n    }\n\n    public reset() {\n        this.model.stop();\n        this.events.dispatch(this.events.reset, this.model);\n    }\n\n    public play() {\n        this.model.multiplier = Math.abs(this.model.multiplier);\n        this.model.play();\n        this.events.dispatch(this.events.play, this.model);\n    }\n\n    public pause() {\n        this.model.stop();\n        this.events.dispatch(this.events.pause, this.model);\n    }\n\n    public playBack() {\n        this.model.multiplier = -1 * Math.abs(this.model.multiplier);\n        this.model.play();\n        this.events.dispatch(this.events.playback, this.model);\n    }\n\n    protected _onMouseWheel = (e: MouseEventExt) => {\n        if (this._isMouseOver) {\n            let rect = this._canvasEl.getBoundingClientRect();\n            let pointerPosX = e.clientX - rect.left,\n                pointerCenterOffsetX = -(pointerPosX - this.clientWidth * 0.5);\n            let pointerTime = this.model.rangeStartTime + this._millisecondsInPixel * pointerPosX;\n            this._zoom(pointerTime, pointerCenterOffsetX, Math.sign(e.wheelDelta!));\n        } else if (this._isCurrentMouseOver) {\n            let pointerCenterOffsetX = -((this.model.currentTime - this.model.rangeStartTime) / this._millisecondsInPixel - this.clientWidth * 0.5);\n            this._zoom(this.model.currentTime, pointerCenterOffsetX, Math.sign(e.wheelDelta!));\n        }\n    }\n\n    protected _onMouseWheelFF = (e: MouseEventExt) => {\n        this._onMouseWheel(e);\n    }\n\n    protected _zoom(pointerTime: number, pointerCenterOffsetX: number, dir: number) {\n        let centerTime = this.model.rangeStartTime + 0.5 * this.model.range;\n\n        let centerTimeOffset = (pointerTime - centerTime) * MILLISECONDS_TO_SECONDS;\n\n        let rangeStart = addSeconds(this.model.rangeStart, centerTimeOffset),\n            rangeEnd = addSeconds(this.model.rangeEnd, centerTimeOffset);\n\n        let delta = ((rangeEnd.getTime() - rangeStart.getTime()) / 20) * MILLISECONDS_TO_SECONDS;\n\n        let newRangeStart = addSeconds(rangeStart, delta * dir);\n        let newRangeEnd = addSeconds(rangeEnd, -delta * dir);\n        let msPx = (newRangeEnd.getTime() - newRangeStart.getTime()) / this.clientWidth;\n\n        if (msPx < 31536000000 && msPx > 0.1) {\n            let timeOffset = msPx * pointerCenterOffsetX * MILLISECONDS_TO_SECONDS;\n\n            this.model.set(\n                addSeconds(newRangeStart, timeOffset),\n                addSeconds(newRangeEnd, timeOffset)\n            );\n        }\n    }\n\n    protected _onMouseDown = (e: MouseEvent) => {\n        if (this._isMouseOver) {\n            this._isDragging = true;\n            document.body.classList.add(\"og-timeline-unselectable\");\n\n            this._clickPosX = e.clientX;\n            this._clickTime = Date.now();\n\n            this._clickRangeStart = this.model.rangeStart;\n            this._clickRangeEnd = this.model.rangeEnd;\n\n            this.events.dispatch(this.events.startdrag, e);\n        } else if (this._isCurrentMouseOver) {\n            this._isCurrentDragging = true;\n            document.body.classList.add(\"og-timeline-unselectable\");\n\n            this._clickPosX = e.clientX;\n\n            this._clickCurrentDate = this.model.current;\n\n            this.events.dispatch(this.events.startdragcurrent, e);\n        }\n    }\n\n    protected _onMouseUp = (e: MouseEvent) => {\n        if (this._isDragging) {\n            this._isDragging = false;\n            document.body.classList.remove(\"og-timeline-unselectable\");\n            if (this._clickPosX === e.clientX && (Date.now() - this._clickTime) < this._clickDelay) {\n                let rect = this._canvasEl.getBoundingClientRect();\n                let current = new Date(this.model.rangeStartTime + (e.clientX - rect.left) * this._millisecondsInPixel);\n                this.model.current = current;\n                this.events.dispatch(this.events.stopdrag, current);\n                this.events.dispatch(this.events.setcurrent, current);\n            } else {\n                this.events.dispatch(this.events.stopdrag, this.model.current);\n            }\n        } else if (this._isCurrentDragging) {\n            this._isCurrentDragging = false;\n            document.body.classList.remove(\"og-timeline-unselectable\");\n            this.events.dispatch(this.events.stopdragcurrent, this.model.current);\n        }\n    }\n\n    protected _onMouseEnter = () => {\n        this._isMouseOver = true;\n    }\n\n    protected _onMouseOut = () => {\n        this._isMouseOver = false;\n    }\n\n    protected _onCurrentMouseEnter = () => {\n        this._isCurrentMouseOver = true;\n    }\n\n    protected _onCurrentMouseOut = () => {\n        this._isCurrentMouseOver = false;\n    }\n\n    protected _onMouseMove = (e: MouseEvent) => {\n        if (this._isDragging) {\n            let offsetSec = (this._clickPosX - e.clientX) * this._millisecondsInPixel * MILLISECONDS_TO_SECONDS;\n            this.model.set(addSeconds(this._clickRangeStart, offsetSec), addSeconds(this._clickRangeEnd, offsetSec))\n        } else if (this._isCurrentDragging) {\n            let offsetSec = (this._clickPosX - e.clientX) * this._millisecondsInPixel * MILLISECONDS_TO_SECONDS;\n            let newCurrent = addSeconds(this._clickCurrentDate, -offsetSec);\n            if (newCurrent >= this.model.rangeStart && newCurrent <= this.model.rangeEnd) {\n                this.model.current = addSeconds(this._clickCurrentDate, -offsetSec);\n            }\n        }\n    }\n\n    public get clientWidth(): number {\n        return this._canvasEl ? this._canvasEl.width / this._canvasScale : 0;\n    }\n\n    public get clientHeight(): number {\n        return this._canvasEl ? this._canvasEl.height / this._canvasScale : 0;\n    }\n\n    protected _resize() {\n        if (this._frameEl) {\n            this._canvasEl.width = this._frameEl.clientWidth * this._canvasScale;\n            this._canvasEl.height = this._frameEl.clientHeight * this._canvasScale;\n            this._canvasEl.style.width = `${this._frameEl.clientWidth}px`;\n            this._canvasEl.style.height = `${this._frameEl.clientHeight}px`;\n\n        }\n    }\n\n    public getOffsetByTime(milliseconds: number): number {\n        return (milliseconds - this.model.rangeStartTime) / this._millisecondsInPixel;\n    }\n\n    public override remove() {\n        super.remove();\n        this.model.stop();\n    }\n\n    protected _clearCanvas() {\n        this._ctx.fillStyle = this.fillStyle;\n        this._ctx.fillRect(0, 0, this.clientWidth * this._canvasScale, this.clientHeight * this._canvasScale);\n    }\n\n    protected _drawCurrent() {\n        let curPosX = (this.model.currentTime - this.model.rangeStartTime) / this._millisecondsInPixel;\n        if (this.model.current < this.model.rangeStart || this.model.current > this.model.rangeEnd) {\n            this._currentEl!.style.display = \"none\";\n        } else {\n            this._currentEl!.style.display = \"block\";\n            this._currentEl!.style.transform = `translateX(${curPosX}px)`;\n        }\n    }\n\n    public draw() {\n        this._millisecondsInPixel = (this.model.range / this.clientWidth);\n        let minWidthMs = this._minWidth * this._millisecondsInPixel;\n        let scaleData = getScale(minWidthMs * MILLISECONDS_TO_SECONDS);\n        if (scaleData) {\n\n            this._clearCanvas();\n\n            let scaleMs = scaleData[0] * SECONDS_TO_MILLISECONDS,\n                scalePx = scaleMs / this._millisecondsInPixel,\n                segCount = scaleData[1];\n\n            let originTime = getNearestTimeLeft(this.model.rangeStartTime, scaleMs);\n\n            let showMilliseconds = scaleData[0] < 1.0,\n                showTime = scaleData[0] < 86400.0;\n\n            for (let i = originTime, rangeEnd = this.model.rangeEndTime + scaleMs; i < rangeEnd; i += scaleMs) {\n                let x = this.getOffsetByTime(i);\n                if (x >= 0 && x <= this.clientWidth * this._canvasScale) {\n                    drawNotch(this._ctx, x * this._canvasScale, 10 * this._canvasScale, 2 * this._canvasScale, SCALE_NOTCH_COLOR);\n                }\n                for (let j = 1; j < segCount; j++) {\n                    let xx = x + j * (scalePx / segCount);\n                    if (xx >= 0 && xx <= this.clientWidth * this._canvasScale) {\n                        drawNotch(this._ctx, xx * this._canvasScale, 5 * this._canvasScale, 1 * this._canvasScale, SCALE_NOTCH_COLOR);\n                    }\n                }\n                drawText(this._ctx, dateToStr(new Date(i), showTime, showMilliseconds), x * this._canvasScale, 26 * this._canvasScale, \"24px monospace\", SCALE_TIME_COLOR, \"center\");\n            }\n\n            this._drawCurrent();\n        }\n    }\n}\n\nexport {TimelineView};\n\n","import {Dialog} from \"../../ui/Dialog\";\nimport {ToggleButton} from \"../../ui/ToggleButton\";\nimport {Control, IControlParams} from '../Control';\nimport {TimelineView} from './TimelineView';\n\ninterface ITimelineControlParams extends IControlParams {\n    name?: string;\n    current?: Date;\n    rangeStart?: Date;\n    rangeEnd?: Date;\n}\n\nfunction addHours(date: Date, hours: number): Date {\n    const temp = new Date(date);\n    temp.setHours(temp.getHours() + hours);\n    return temp;\n}\n\nconst ICON_BUTTON_SVG = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Svg Vector Icons : http://www.onlinewebfonts.com/icon -->\n    <!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 1000 1000\" enable-background=\"new 0 0 1000 1000\" xml:space=\"preserve\">\n    <metadata> Svg Vector Icons : http://www.onlinewebfonts.com/icon </metadata>\n    <g><path d=\"M500,10C229.4,10,10,229.4,10,500s219.4,490,490,490s490-219.4,490-490S770.6,10,500,10z M800.3,800.3c-39,39-84.5,69.7-135,91C613,913.5,557.4,924.7,500,924.7s-112.9-11.2-165.3-33.3c-50.5-21.3-95.9-52-135-91c-39-39-69.7-84.5-91-135C86.5,612.9,75.3,557.4,75.3,500s11.2-112.9,33.3-165.3c21.3-50.5,52-95.9,91-135c39-39,84.5-69.7,135-91C387.1,86.5,442.6,75.3,500,75.3s112.9,11.2,165.3,33.3c50.5,21.3,95.9,52,135,91c39,39,69.7,84.5,91,135c22.1,52.3,33.3,107.9,33.3,165.3s-11.2,112.9-33.3,165.3C869.9,715.8,839.3,761.2,800.3,800.3z\"/><path d=\"M761.3,532.7H532.7V304c0-18.1-14.6-32.7-32.7-32.7s-32.7,14.6-32.7,32.7v261.3l0,0c0,18.1,14.6,32.7,32.7,32.7h261.3c18.1,0,32.7-14.6,32.7-32.7l0,0C794,547.3,779.4,532.7,761.3,532.7z\"/></g>\n</svg>`;\n\nclass TimelineControl extends Control {\n    protected _timelineView: TimelineView;\n    protected _toggleBtn: ToggleButton;\n    protected _dialog: Dialog<null>;\n\n    constructor(options: ITimelineControlParams = {}) {\n        super({\n            name: \"timeline\",\n            ...options\n        });\n\n        let currentDate = options.current || new Date();\n        let startDate = options.rangeStart || addHours(currentDate, -12);\n        let endDate = options.rangeEnd || addHours(currentDate, 12);\n\n        this._timelineView = new TimelineView({\n            rangeStart: startDate,\n            rangeEnd: endDate,\n            currentDate: currentDate\n        });\n\n        this._toggleBtn = new ToggleButton({\n            classList: [\"og-map-button\", \"og-timeline_button\"],\n            icon: ICON_BUTTON_SVG\n        });\n\n        this._dialog = new Dialog({\n            title: \"Timeline\",\n            visible: false,\n            resizable: true,\n            useHide: true,\n            top: 10,\n            left: 60,\n            width: 600,\n            height: 115,\n            minHeight: 115,\n            maxHeight: 110\n        });\n\n        this._dialog.events.on(\"visibility\", (v: boolean) => {\n            this._toggleBtn.setActive(v);\n        });\n    }\n\n    public override oninit() {\n\n        let $container = this.renderer!.div!;\n\n        this._toggleBtn.appendTo($container);\n        this._dialog.appendTo($container);\n\n        this._toggleBtn.events.on(\"change\", (isActive: boolean) => {\n            this._dialog.setVisibility(isActive);\n            if (isActive) {\n                this._timelineView.resize();\n            }\n        });\n\n        this._timelineView.appendTo(this._dialog.container!);\n\n        this._timelineView.events.on(\"setcurrent\", (d: Date) => {\n            this.renderer && this.renderer.handler.defaultClock.setDate(d);\n        });\n\n        this._timelineView.events.on(\"startdrag\", () => {\n            this.renderer && this.renderer.controls.mouseNavigation.deactivate();\n        });\n\n        this._timelineView.events.on(\"stopdrag\", () => {\n            this.renderer && this.renderer.controls.mouseNavigation.activate();\n        });\n\n        this._timelineView.events.on(\"startdragcurrent\", () => {\n            this.renderer && this.renderer.controls.mouseNavigation.deactivate();\n        });\n\n        this._timelineView.events.on(\"stopdragcurrent\", () => {\n            this.renderer && this.renderer.controls.mouseNavigation.activate();\n        });\n    }\n}\n\nexport {TimelineControl};\n","import {Control, IControlParams} from \"./Control\";\nimport {Dialog} from \"../ui/Dialog\";\nimport {ToggleButton} from \"../ui/ToggleButton\";\nimport {GlobusTerrain} from \"../terrain/GlobusTerrain\";\nimport {CanvasTiles} from \"../layer/CanvasTiles\";\n\nconst ICON_LOCK_BUTTON_SVG = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\n<svg fill=\"#000000\" width=\"800px\" height=\"800px\" viewBox=\"-7.5 0 32 32\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n<title>lock</title>\n<path d=\"M14.625 15.156h2.094c0.281 0 0.5 0.25 0.5 0.531v11c0 0.281-0.219 0.5-0.5 0.5h-16.219c-0.281 0-0.5-0.219-0.5-0.5v-11c0-0.281 0.219-0.531 0.5-0.531h2.031v-5.125c0-2.875 1.844-5.25 4.688-5.25h2.688c2.875 0 4.719 2.375 4.719 5.25v5.125zM5.188 15.156h6.813v-4.875c0-1.594-1.313-2.938-2.938-2.938h-0.969c-1.594 0-2.906 1.344-2.906 2.938v4.875zM7.156 24h2.906l-0.719-3.156c0.5-0.25 0.844-0.781 0.844-1.375 0-0.906-0.719-1.594-1.594-1.594s-1.563 0.688-1.563 1.594c0 0.594 0.344 1.125 0.844 1.375z\"></path>\n</svg>`;\n\nconst ICON_BUTTON_SVG = `<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg fill=\"#000000\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n\\t width=\"800px\" height=\"800px\" viewBox=\"0 0 932.179 932.179\"\n\\t xml:space=\"preserve\">\n<g>\n\\t<path d=\"M61.2,341.538c4.9,16.8,11.7,33,20.3,48.2l-24.5,30.9c-8,10.1-7.1,24.5,1.9,33.6l42.2,42.2c9.1,9.1,23.5,9.899,33.6,1.899\n\\t\\tl30.7-24.3c15.8,9.101,32.6,16.2,50.1,21.2l4.6,39.5c1.5,12.8,12.3,22.4,25.1,22.4h59.7c12.8,0,23.6-9.601,25.1-22.4l4.4-38.1\n\\t\\tc18.8-4.9,36.8-12.2,53.7-21.7l29.7,23.5c10.1,8,24.5,7.1,33.6-1.9l42.2-42.2c9.1-9.1,9.9-23.5,1.9-33.6l-23.1-29.3\n\\t\\tc9.6-16.601,17.1-34.3,22.1-52.8l35.6-4.1c12.801-1.5,22.4-12.3,22.4-25.1v-59.7c0-12.8-9.6-23.6-22.4-25.1l-35.1-4.1\n\\t\\tc-4.801-18.3-12-35.8-21.199-52.2l21.6-27.3c8-10.1,7.1-24.5-1.9-33.6l-42.1-42.1c-9.1-9.1-23.5-9.9-33.6-1.9l-26.5,21\n\\t\\tc-17.2-10.1-35.601-17.8-54.9-23l-4-34.3c-1.5-12.8-12.3-22.4-25.1-22.4h-59.7c-12.8,0-23.6,9.6-25.1,22.4l-4,34.3\n\\t\\tc-19.8,5.3-38.7,13.3-56.3,23.8l-27.5-21.8c-10.1-8-24.5-7.1-33.6,1.9l-42.2,42.2c-9.1,9.1-9.9,23.5-1.9,33.6l23,29.1\n\\t\\tc-9.2,16.6-16.2,34.3-20.8,52.7l-36.8,4.2c-12.8,1.5-22.4,12.3-22.4,25.1v59.7c0,12.8,9.6,23.6,22.4,25.1L61.2,341.538z\n\\t\\t M277.5,180.038c54.4,0,98.7,44.3,98.7,98.7s-44.3,98.7-98.7,98.7c-54.399,0-98.7-44.3-98.7-98.7S223.1,180.038,277.5,180.038z\"/>\n\\t<path d=\"M867.699,356.238l-31.5-26.6c-9.699-8.2-24-7.8-33.199,0.9l-17.4,16.3c-14.699-7.1-30.299-12.1-46.4-15l-4.898-24\n\\t\\tc-2.5-12.4-14-21-26.602-20l-41.1,3.5c-12.6,1.1-22.5,11.4-22.9,24.1l-0.799,24.4c-15.801,5.7-30.701,13.5-44.301,23.3\n\\t\\tl-20.799-13.8c-10.602-7-24.701-5-32.9,4.7l-26.6,31.7c-8.201,9.7-7.801,24,0.898,33.2l18.201,19.399\n\\t\\tc-6.301,14.2-10.801,29.101-13.4,44.4l-26,5.3c-12.4,2.5-21,14-20,26.601l3.5,41.1c1.1,12.6,11.4,22.5,24.1,22.9l28.1,0.899\n\\t\\tc5.102,13.4,11.801,26.101,19.9,38l-15.699,23.7c-7,10.6-5,24.7,4.699,32.9l31.5,26.6c9.701,8.2,24,7.8,33.201-0.9l20.6-19.3\n\\t\\tc13.5,6.3,27.699,11,42.299,13.8l5.701,28.2c2.5,12.4,14,21,26.6,20l41.1-3.5c12.6-1.1,22.5-11.399,22.9-24.1l0.9-27.601\n\\t\\tc15-5.3,29.199-12.5,42.299-21.399l22.701,15c10.6,7,24.699,5,32.9-4.7l26.6-31.5c8.199-9.7,7.799-24-0.9-33.2l-18.301-19.399\n\\t\\tc6.701-14.2,11.602-29.2,14.4-44.601l25-5.1c12.4-2.5,21-14,20-26.601l-3.5-41.1c-1.1-12.6-11.4-22.5-24.1-22.9l-25.1-0.8\n\\t\\tc-5.201-14.6-12.201-28.399-20.9-41.2l13.699-20.6C879.4,378.638,877.4,364.438,867.699,356.238z M712.801,593.837\n\\t\\tc-44.4,3.801-83.602-29.3-87.301-73.699c-3.801-44.4,29.301-83.601,73.699-87.301c44.4-3.8,83.602,29.301,87.301,73.7\n\\t\\tC790.301,550.938,757.199,590.138,712.801,593.837z\"/>\n\\t<path d=\"M205,704.438c-12.6,1.3-22.3,11.899-22.4,24.6l-0.3,25.3c-0.2,12.7,9.2,23.5,21.8,25.101l18.6,2.399\n\\t\\tc3.1,11.301,7.5,22.101,13.2,32.301l-12,14.8c-8,9.899-7.4,24.1,1.5,33.2l17.7,18.1c8.9,9.1,23.1,10.1,33.2,2.3l14.899-11.5\n\\t\\tc10.5,6.2,21.601,11.101,33.2,14.5l2,19.2c1.3,12.6,11.9,22.3,24.6,22.4l25.301,0.3c12.699,0.2,23.5-9.2,25.1-21.8l2.3-18.2\n\\t\\tc12.601-3.101,24.601-7.8,36-14l14,11.3c9.9,8,24.101,7.4,33.201-1.5l18.1-17.7c9.1-8.899,10.1-23.1,2.301-33.2L496.6,818.438\n\\t\\tc6.6-11,11.701-22.7,15.201-35l16.6-1.7c12.6-1.3,22.299-11.9,22.4-24.6l0.299-25.301c0.201-12.699-9.199-23.5-21.799-25.1\n\\t\\tl-16.201-2.1c-3.1-12.2-7.699-24-13.699-35l10.1-12.4c8-9.9,7.4-24.1-1.5-33.2l-17.699-18.1c-8.9-9.101-23.102-10.101-33.201-2.3\n\\t\\tl-12.101,9.3c-11.399-6.9-23.6-12.2-36.399-15.8l-1.601-15.7c-1.3-12.601-11.899-22.3-24.6-22.4l-25.3-0.3\n\\t\\tc-12.7-0.2-23.5,9.2-25.101,21.8l-2,15.601c-13.199,3.399-25.899,8.6-37.699,15.399l-12.5-10.2c-9.9-8-24.101-7.399-33.201,1.5\n\\t\\tl-18.2,17.801c-9.1,8.899-10.1,23.1-2.3,33.199l10.7,13.801c-6.2,11-11.1,22.699-14.3,35L205,704.438z M368.3,675.837\n\\t\\tc36.3,0.4,65.399,30.301,65,66.601c-0.4,36.3-30.301,65.399-66.601,65c-36.3-0.4-65.399-30.3-65-66.601\n\\t\\tC302.1,704.538,332,675.438,368.3,675.837z\"/>\n</g>\n</svg>`;\n\nconst ICON_CANVASTILES_SVG = `<?xml version=\"1.0\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M 4 4 L 4 8 L 8 8 L 8 4 L 4 4 z M 10 4 L 10 8 L 14 8 L 14 4 L 10 4 z M 16 4 L 16 8 L 20 8 L 20 4 L 16 4 z M 4 10 L 4 14 L 8 14 L 8 10 L 4 10 z M 10 10 L 10 14 L 14 14 L 14 10 L 10 10 z M 16 10 L 16 14 L 20 14 L 20 10 L 16 10 z M 4 16 L 4 20 L 8 20 L 8 16 L 4 16 z M 10 16 L 10 20 L 14 20 L 14 16 L 10 16 z M 16 16 L 16 20 L 20 20 L 20 16 L 16 16 z\"/>\n</svg>`;\n\nexport interface IDebugInfoWatch {\n    label: string;\n    valEl?: HTMLElement;\n    frame?: () => string | number;\n}\n\ninterface IDebugInfoParams extends IControlParams {\n    watch?: IDebugInfoWatch[];\n}\n\nexport class DebugInfo extends Control {\n    public el: HTMLElement | null;\n    protected _watch: IDebugInfoWatch[];\n    protected _toggleBtn: ToggleButton;\n    protected _dialog: Dialog<null>;\n\n    protected _canvasTiles: CanvasTiles;\n\n    constructor(options: IDebugInfoParams = {}) {\n        if (!options.name || options.name === \"\") {\n            options.name = \"DebugInfo\";\n        }\n        super(options);\n        this.el = null;\n        this._watch = options.watch || [];\n\n        this._toggleBtn = new ToggleButton({\n            classList: [\"og-map-button\", \"og-debuginfo_button\"],\n            icon: ICON_BUTTON_SVG\n        });\n\n        this._dialog = new Dialog({\n            title: \"Debug Info\",\n            visible: false,\n            useHide: true,\n            top: 120,\n            left: 60,\n            width: 480\n        });\n\n        this._dialog.events.on(\"visibility\", (v: boolean) => {\n            this._toggleBtn.setActive(v);\n        });\n\n        this._canvasTiles = new CanvasTiles(\"Tile grid\", {\n            visibility: true,\n            isBaseLayer: false,\n            drawTile: function (material: any, applyCanvas: any) {\n\n                //\n                // This is important create canvas here!\n                //\n                let cnv = document.createElement(\"canvas\");\n                let ctx = cnv.getContext(\"2d\")!;\n                cnv.width = 256;\n                cnv.height = 256;\n\n                //Clear canvas\n                ctx.clearRect(0, 0, cnv.width, cnv.height);\n\n                //Draw border\n                ctx.beginPath();\n                ctx.rect(0, 0, cnv.width, cnv.height);\n                ctx.lineWidth = 2;\n                ctx.strokeStyle = 'black';\n                ctx.stroke();\n\n                let size;\n\n                if (material.segment.isPole) {\n                    let ext = material.segment.getExtentLonLat();\n\n                    ctx.fillStyle = 'black';\n                    ctx.font = 'normal ' + 29 + 'px Verdana';\n\n                    ctx.textAlign = 'center';\n                    ctx.fillText(`${ext.northEast.lon.toFixed(3)} ${ext.northEast.lat.toFixed(3)}`, cnv.width / 2, cnv.height / 2 + 20);\n                    ctx.fillText(`${ext.southWest.lon.toFixed(3)} ${ext.southWest.lat.toFixed(3)}`, cnv.width / 2, cnv.height / 2 - 20);\n                } else {\n                    //Draw text\n                    if (material.segment.tileZoom > 14) {\n                        size = \"26\";\n                    } else {\n                        size = \"32\";\n                    }\n                    ctx.fillStyle = 'black';\n                    ctx.font = 'normal ' + size + 'px Verdana';\n                    ctx.textAlign = 'center';\n                    ctx.fillText(material.segment.tileX + \",\" + material.segment.tileY + \",\" + material.segment.tileZoom, cnv.width / 2, cnv.height / 2);\n                }\n\n                //Draw canvas tile\n                applyCanvas(cnv);\n            }\n        });\n    }\n\n    public addWatches(watches: IDebugInfoWatch[]) {\n        for (let i = 0; i < watches.length; i++) {\n            this.addWatch(watches[i]);\n        }\n    }\n\n    public addWatch(watch: IDebugInfoWatch) {\n        this._watch.push(watch);\n        let watchEl = document.createElement(\"div\");\n        watchEl.classList.add(\"og-watch-line\");\n        watchEl.innerHTML = `<div class=\"og-watch-label\">${watch.label}</div><div class=\"og-watch-value\"></div>`;\n        watch.valEl = watchEl.querySelector<HTMLElement>(\".og-watch-value\")!;\n        this.el!.appendChild(watchEl);\n    }\n\n    public override oninit() {\n\n        this._toggleBtn.appendTo(this.renderer!.div!);\n        this._dialog.appendTo(this.renderer!.div!);\n        this._toggleBtn.events.on(\"change\", (isActive: boolean) => {\n            this._dialog.setVisibility(isActive);\n        });\n\n        this.el = document.createElement(\"div\");\n        this.el.className = \"og-debug-info\";\n\n        let $controls = document.createElement(\"div\");\n        $controls.classList.add(\"og-debuginfo_controls\");\n        this.el.appendChild($controls);\n\n        let temp = this._watch;\n        this._watch = [];\n        for (let i = 0; i < temp.length; i++) {\n            this.addWatch(temp[i]);\n        }\n        this._dialog.container?.appendChild(this.el);\n        this.renderer!.events.on(\"draw\", this._frame, this);\n\n        let p = this.planet!;\n\n        if (p) {\n            this.addWatches([\n                {\n                    label: \"Nodes count\",\n                    frame: () => p!._renderedNodes.length\n                },\n                {\n                    label: \"createdNodes\",\n                    frame: () => p._createdNodesCount\n                },\n                {\n                    label: \"indexesCache\",\n                    frame: () => p._indexesCacheToRemoveCounter\n                },\n                {\n                    label: \"distBeforeMemClear\",\n                    frame: () => Math.round(p._distBeforeMemClear)\n                },\n                {\n                    label: \"maxZoom/minZoom\",\n                    frame: () => p.maxCurrZoom + \" / \" + p?.minCurrZoom\n                },\n                {\n                    label: \"viewExtent\",\n                    frame: () => p.getViewExtent().toString()\n                },\n                {\n                    label: \"height/alt (km)\",\n                    frame: () =>\n                        `<div style=\"width:190px\">${(p.camera._lonLat.height / 1000.0).toFixed(2) +\n                        \" / \" +\n                        (p.camera.getAltitude() / 1000.0).toFixed(2)}</div>`\n                },\n                {\n                    label: \"cam.slope\",\n                    frame: () => p.camera.slope.toFixed(3)\n                },\n                {\n                    label: \"lodSize\",\n                    frame: () => Math.round(p.lodSize)\n                },\n                {\n                    label: \"deltaTime/FPS\",\n                    frame: () =>\n                        `<div style=\"width:70px\"><div style=\"width:20px; float: left;\">\n                        ${Math.round(p.renderer!.handler.deltaTime)}\n                        </div> <div style=\"float: left\">\n                        ${Math.round(1000.0 / p.renderer!.handler.deltaTime)}\n                        </div></div>`\n                },\n                {\n                    label: \"-------------------------\"\n                },\n                {\n                    label: \"_renderCompleted / renderCompletedActivated\",\n                    frame: () => `${p._renderCompleted} / ${p._renderCompletedActivated}`\n                },\n                {\n                    label: \"_terrainCompleted / terrainCompletedActivated\",\n                    frame: () => `${p._terrainCompleted} / ${p._terrainCompletedActivated}`\n                },\n                {\n                    label: \"PlainWorker\",\n                    frame: () => p._plainSegmentWorker.pendingQueue.length\n                },\n                {\n                    label: \"TileLoader\",\n                    frame: () => `${p._tileLoader.loading} ${p._tileLoader.queue.length}`\n                },\n                {\n                    label: \"TerrainLoader\",\n                    frame: () => {\n                        if (p.terrain && !p.terrain.isEmpty) {\n                            return `${(p.terrain as GlobusTerrain).loader.loading}  ${(p.terrain as GlobusTerrain).loader.queue.length}`\n                        }\n                        return \"\";\n                    }\n                },\n                {\n                    label: \"TerrainWorker\",\n                    frame: () => p._terrainWorker.pendingQueue.length\n                },\n                {\n                    label: \"NormalMapCreator\",\n                    frame: () => p._normalMapCreator.queueSize\n                },\n                {\n                    label: \"VectorTileCreator\",\n                    frame: () => p._vectorTileCreator.queueSize\n                }\n            ]);\n        }\n\n        let lockTreeBtn = new ToggleButton({\n            classList: [\"og-debuginfo_controls-button\"],\n            icon: ICON_LOCK_BUTTON_SVG,\n            title: \"Lock/Unlock quad tree\"\n        });\n        lockTreeBtn.appendTo($controls);\n\n        lockTreeBtn.events.on(\"change\", (isActive: boolean) => {\n            if (isActive) {\n                p.lockQuadTree();\n            } else {\n                p.unlockQuadTree();\n            }\n        });\n\n        let canvasTilesBtn = new ToggleButton({\n            classList: [\"og-debuginfo_controls-button\"],\n            icon: ICON_CANVASTILES_SVG,\n            title: \"Show/Hide grid\"\n        });\n        canvasTilesBtn.appendTo($controls);\n\n        canvasTilesBtn.events.on(\"change\", (isActive: boolean) => {\n            if (isActive) {\n                this.planet!.addLayer(this._canvasTiles);\n            } else {\n                this._canvasTiles.remove();\n            }\n        });\n    }\n\n    protected _frame() {\n        for (let i = 0; i < this._watch.length; i++) {\n            let w = this._watch[i];\n            w.valEl!.innerHTML = w.frame ? String(w.frame()) : \"\";\n        }\n    }\n}","import {ButtonGroup} from \"../ui/ButtonGroup\";\nimport {Control} from \"./Control\";\nimport {DrawingControl} from \"./drawing/DrawingControl\";\nimport {ToggleButton} from \"../ui/ToggleButton\";\n\nconst ICON_POLYGON_SVG = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 24.1.3, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Layer_2\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\\t viewBox=\"0 0 1024 1024\" style=\"enable-background:new 0 0 1024 1024;\" xml:space=\"preserve\">\n<g>\n\\t<path d=\"M926.03,321.16c-16.02,0-31.11,3.94-44.48,10.79l-263.43-191.4c2.69-8.94,4.18-18.4,4.18-28.2\n\\t\\tc0-54.02-43.95-97.97-97.97-97.97c-54.03,0-97.98,43.95-97.98,97.97c0,9.81,1.49,19.27,4.18,28.21L155.75,340.18\n\\t\\tc-16.22-11.91-36.16-19.03-57.78-19.03C43.95,321.16,0,365.11,0,419.13c0,52.58,41.67,95.5,93.71,97.75l102.63,315.86\n\\t\\tc-24.28,17.85-40.13,46.52-40.13,78.9c0,54.02,43.95,97.98,97.98,97.98c37.54,0,70.18-21.25,86.62-52.34h367.26\n\\t\\tc16.44,31.08,49.08,52.34,86.63,52.34c54.03,0,97.98-43.95,97.98-97.98c0-32.46-15.94-61.21-40.33-79.05l104.11-320.4\n\\t\\tc39.15-12.84,67.54-49.68,67.54-93.07C1024,365.11,980.05,321.16,926.03,321.16z M828.05,911.65c0,8.5-3.3,16.19-8.55,22.09\n\\t\\tc-6.11,6.85-14.9,11.26-24.79,11.26c-13.65,0-25.37-8.26-30.52-20.02c-1.79-4.09-2.82-8.58-2.82-13.33\n\\t\\tc0-18.39,14.95-33.35,33.34-33.35c2.93,0,5.72,0.5,8.43,1.21c13.27,3.49,23.21,14.91,24.59,28.9\n\\t\\tC827.83,909.5,828.05,910.54,828.05,911.65z M790.48,813.89c-45.63,1.96-83.27,35.16-91.87,78.77H350.28\n\\t\\tc-8.62-43.69-46.38-76.93-92.11-78.79L155.59,498.19c24.41-17.84,40.36-46.59,40.36-79.06c0-8.9-1.3-17.49-3.53-25.7L468.57,192.8\n\\t\\tc15.84,11.01,35.05,17.52,55.76,17.52c20.71,0,39.92-6.5,55.76-17.52l256.56,186.4c-5.48,12.21-8.59,25.7-8.59,39.93\n\\t\\tc0,41.02,25.36,76.17,61.21,90.75L790.48,813.89z M254.19,945c-10.11,0-19.07-4.62-25.19-11.75c-5.01-5.84-8.15-13.32-8.15-21.6\n\\t\\tc0-0.91,0.2-1.76,0.27-2.66c1.14-14.18,11.08-25.8,24.43-29.41c2.78-0.75,5.64-1.28,8.65-1.28c18.38,0,33.33,14.96,33.33,33.35\n\\t\\tc0,4.74-1.03,9.24-2.82,13.33C279.55,936.74,267.83,945,254.19,945z M64.88,421.49c-0.06-0.79-0.24-1.55-0.24-2.35\n\\t\\tc0-16.41,11.93-30.01,27.55-32.76c1.89-0.33,3.8-0.58,5.78-0.58c11.94,0,22.35,6.36,28.24,15.81c3.18,5.11,5.11,11.09,5.11,17.53\n\\t\\tc0,15.47-10.63,28.39-24.94,32.14c-2.7,0.71-5.48,1.2-8.4,1.2C80.4,452.47,66.11,438.76,64.88,421.49z M549.41,90.62\n\\t\\tc5.07,5.85,8.25,13.39,8.25,21.72c0,7.32-2.44,14.03-6.45,19.54c-6.07,8.33-15.82,13.81-26.88,13.81\n\\t\\tc-11.07,0-20.83-5.48-26.89-13.81c-4.01-5.51-6.45-12.22-6.45-19.54c0-8.33,3.17-15.86,8.24-21.71\n\\t\\tc6.12-7.07,15.04-11.64,25.1-11.64C534.38,79,543.29,83.57,549.41,90.62z M959.36,419.13c0,11.94-6.36,22.35-15.82,28.24\n\\t\\tc-5.1,3.18-11.07,5.1-17.52,5.1c-6.08,0-11.71-1.76-16.62-4.61c-9.71-5.64-16.33-15.94-16.64-27.89c-0.01-0.29-0.09-0.56-0.09-0.85\n\\t\\tc0-11.75,6.14-22.05,15.36-28c5.2-3.35,11.35-5.35,17.99-5.35C944.41,385.78,959.36,400.75,959.36,419.13z\"/>\n</g>\n</svg>`;\n\nconst ICON_LINESTRING_SVG = `<?xml version=\"1.0\" encoding=\"utf-8\"?><!-- License: MIT. Made by Esri: https://github.com/Esri/calcite-ui-icons -->\n    <svg width=\"800px\" height=\"800px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M21 6h.046l-5.25 9h-.944L10 9.455V7H7v2.926L1.862 18H0v3h3v-2.926L8.138 10h1.01L14 15.545V18h3v-3h-.046l5.25-9H24V3h-3zM8 8h1v1H8zM2 20H1v-1h1zm14-3h-1v-1h1zm7-13v1h-1V4z\"/></svg>`;\n\nconst ICON_DEFAULT_SVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M4 0l16 12.279-6.951 1.17 4.325 8.817-3.596 1.734-4.35-8.879-5.428 4.702z\"/></svg>`;\n\n/**\n * Activate drawing control\n */\nexport class DrawingSwitcher extends Control {\n    public drawingControl: DrawingControl;\n\n    constructor(options = {}) {\n        super({\n            name: \"DrawingSwitcher\",\n            ...options\n        });\n\n        this.drawingControl = new DrawingControl();\n    }\n\n    public override oninit() {\n        this.planet!.addControl(this.drawingControl);\n        this._createMenu();\n    }\n\n    public override onactivate() {\n        this.drawingControl.activate();\n    }\n\n    public override ondeactivate() {\n        this.drawingControl.deactivate();\n    }\n\n    protected _createMenu() {\n\n        let defaultBtn = new ToggleButton({\n            classList: [\"og-map-button\", \"og-drawing-default_button\"],\n            icon: ICON_DEFAULT_SVG,\n            name: \"default\",\n            isActive: true\n        });\n\n        let polyBtn = new ToggleButton({\n            classList: [\"og-map-button\", \"og-drawing-polygon_button\"],\n            icon: ICON_POLYGON_SVG,\n            name: \"polygon\"\n        });\n\n        let lineBtn = new ToggleButton({\n            classList: [\"og-map-button\", \"og-drawing-linestring_button\"],\n            icon: ICON_LINESTRING_SVG,\n            name: \"linestring\"\n        });\n\n        let buttons = new ButtonGroup({\n            buttons: [\n                defaultBtn, polyBtn, lineBtn\n            ]\n        });\n\n        buttons.events.on(\"change\", (btn: ToggleButton) => {\n            this.drawingControl.deactivate();\n            switch (btn.name) {\n                case \"polygon\":\n                    this.drawingControl.activatePolygonDrawing();\n                    break;\n                case \"linestring\":\n                    this.drawingControl.activateLineStringDrawing();\n                    break;\n            }\n        });\n\n        defaultBtn.appendTo(this.renderer!.div!)\n        polyBtn.appendTo(this.renderer!.div!);\n        lineBtn.appendTo(this.renderer!.div!);\n    }\n}\n","import {BaseGeoImage} from '../layer/BaseGeoImage';\nimport {Control, IControlParams} from './Control';\nimport {Layer} from \"../layer/Layer\";\nimport {ToggleButton} from \"../ui/ToggleButton\";\nimport {IMouseState} from \"../renderer/RendererEvents\";\n\nconst ICON_BUTTON_SVG = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?> <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M16 13l6.964 4.062-2.973.85 2.125 3.681-1.732 1-2.125-3.68-2.223 2.15L16 13zm-2-7h2v2h5a1 1 0 0 1 1 1v4h-2v-3H10v10h4v2H9a1 1 0 0 1-1-1v-5H6v-2h2V9a1 1 0 0 1 1-1h5V6zM4 14v2H2v-2h2zm0-4v2H2v-2h2zm0-4v2H2V6h2zm0-4v2H2V2h2zm4 0v2H6V2h2zm4 0v2h-2V2h2zm4 0v2h-2V2h2z\" fill=\"#000\"/></svg>`;\n\ninterface IGeoImageDragControlParams extends IControlParams {\n\n}\n\nexport class GeoImageDragControl extends Control {\n    protected _cornerIndex: number;\n    protected _catchCorner: boolean;\n    protected _toggleBtn: ToggleButton;\n\n    constructor(options: IGeoImageDragControlParams = {}) {\n        super(options);\n\n        this._cornerIndex = -1;\n        this._catchCorner = false;\n\n        this._toggleBtn = new ToggleButton({\n            classList: [\"og-map-button\", \"og-geoimagegrag_button\"],\n            icon: ICON_BUTTON_SVG\n        });\n    }\n\n    override oninit() {\n        this._toggleBtn.appendTo(this.renderer!.div!);\n\n        this.planet!.events.on('layeradd', (e: Layer) => {\n            if (this.isActive()) {\n                this._bindLayer(e);\n            }\n        }, this);\n\n        this._toggleBtn.events.on(\"change\", (isActive: boolean) => {\n            if (isActive) {\n                this.activate();\n            } else {\n                this.deactivate();\n            }\n        });\n    }\n\n    override onactivate() {\n        super.onactivate();\n\n        const p = this.planet!;\n        for (let i = 0; i < p.layers.length; i++) {\n            this._bindLayer(p.layers[i]);\n        }\n    }\n\n    override ondeactivate() {\n        super.ondeactivate();\n        const p = this.planet!;\n        for (let i = 0; i < p.layers.length; i++) {\n            this._unbindLayer(p.layers[i]);\n        }\n    }\n\n    _bindLayer(layer: Layer) {\n        if (layer instanceof BaseGeoImage) {\n            layer.events.on('mousemove', this._onMouseMove, this);\n            layer.events.on(\"mouseleave\", this._onMouseLeave, this);\n            layer.events.on('ldown', this._onLDown, this);\n            layer.events.on('lup', this._onLUp, this);\n        }\n    }\n\n    protected _unbindLayer(layer: Layer) {\n        if (layer instanceof BaseGeoImage) {\n            layer.events.off('mousemove', this._onMouseMove);\n            layer.events.off(\"mouseleave\", this._onMouseLeave);\n            layer.events.off('ldown', this._onLDown);\n            layer.events.off('lup', this._onLUp);\n        }\n    }\n\n    protected _onLUp(ms: IMouseState) {\n        this._catchCorner = false;\n        ms.renderer.controls.mouseNavigation.activate();\n    }\n\n    protected _onLDown(ms: IMouseState) {\n        if (this._cornerIndex !== -1) {\n            this._catchCorner = true;\n            ms.renderer.controls.mouseNavigation.deactivate();\n        }\n    }\n\n    protected _onMouseLeave() {\n        document.body.style.cursor = 'auto';\n    }\n\n    protected _onMouseMove(ms: IMouseState) {\n        let layer = ms.pickingObject;\n        const p = this.planet!;\n        if (this._catchCorner) {// mouse is catching a corner\n            let corners = layer.getCornersLonLat();\n            // corners[this._cornerIndex] = p.getLonLatFromPixelTerrain(ms, true);\n            corners[this._cornerIndex] = p.getLonLatFromPixelTerrain(ms);\n            layer.setCornersLonLat(corners);\n        } else { // mouse isn't catching\n            this._cornerIndex = -1;\n            for (let i = 0; i < layer._cornersWgs84.length; i++) {\n                // let ground = p.getLonLatFromPixelTerrain(ms, true);\n                let ground = p.getLonLatFromPixelTerrain(ms);\n                // mouse is near\n                //if (ground && p.ellipsoid.getGreatCircleDistance(layer._cornersWgs84[i], ground) / p.getDistanceFromPixel(ms, true) <= 0.05) {\n                if (ground && p.ellipsoid.getGreatCircleDistance(layer._cornersWgs84[i], ground) / p.getDistanceFromPixel(ms) <= 0.05) {\n                    this._cornerIndex = i;\n                    document.body.style.cursor = 'move';\n                    break;\n                    // mouse is far\n                } else {\n                    document.body.style.cursor = 'auto';\n                }\n            }\n        }\n    }\n}\n","import * as math from \"../math\";\nimport {Control, IControlParams} from \"./Control\";\nimport {input} from \"../input/input\";\nimport {Vec3} from \"../math/Vec3\";\n\ninterface IKeyboardNavigationParams extends IControlParams {\n    step?: number;\n}\n\n/**\n * Planet camera keyboard navigation. Use W,S,A,D and left shift key for fly around a planet.\n */\n\nexport class KeyboardNavigation extends Control {\n    public step: number;\n\n    constructor(options: IKeyboardNavigationParams = {}) {\n        options = options || {};\n        super({name: \"KeyboardNavigation\", ...options});\n        this.step = options.step || 250;\n    }\n\n    public override onactivate() {\n        let r = this.renderer!;\n        r.events.on(\"keypress\", input.KEY_PGUP, this.onCameraMoveForward, this);\n        r.events.on(\"keypress\", input.KEY_PGDN, this.onCameraMoveBackward, this);\n        r.events.on(\"keypress\", input.KEY_PLUS, this.onCameraMoveForward, this);\n        r.events.on(\"keypress\", input.KEY_EQUALS, this.onCameraMoveForward, this);\n        r.events.on(\"keypress\", input.KEY_MINUS, this.onCameraMoveBackward, this);\n        r.events.on(\"keypress\", input.KEY_W, this.onCameraMoveForward, this);\n        r.events.on(\"keypress\", input.KEY_S, this.onCameraMoveBackward, this);\n        r.events.on(\"keypress\", input.KEY_A, this.onCameraStrifeLeft, this);\n        r.events.on(\"keypress\", input.KEY_D, this.onCameraStrifeRight, this);\n        r.events.on(\"keypress\", input.KEY_UP, this.onCameraLookUp, this);\n        r.events.on(\"keypress\", input.KEY_DOWN, this.onCameraLookDown, this);\n        r.events.on(\"keypress\", input.KEY_LEFT, this.onCameraLookLeft, this);\n        r.events.on(\"keypress\", input.KEY_RIGHT, this.onCameraLookRight, this);\n        r.events.on(\"keypress\", input.KEY_Q, this.onCameraRollLeft, this);\n        r.events.on(\"keypress\", input.KEY_E, this.onCameraRollRight, this);\n        r.events.on(\"keypress\", input.KEY_N, this.onCameraRollNorth, this);\n    }\n\n    public override ondeactivate() {\n        let r = this.renderer!;\n        r.events.off(\"keypress\", input.KEY_PGUP, this.onCameraMoveForward);\n        r.events.off(\"keypress\", input.KEY_PGDN, this.onCameraMoveBackward);\n        r.events.off(\"keypress\", input.KEY_PLUS, this.onCameraMoveForward);\n        r.events.off(\"keypress\", input.KEY_EQUALS, this.onCameraMoveForward);\n        r.events.off(\"keypress\", input.KEY_MINUS, this.onCameraMoveBackward);\n        r.events.off(\"keypress\", input.KEY_W, this.onCameraMoveForward);\n        r.events.off(\"keypress\", input.KEY_S, this.onCameraMoveBackward);\n        r.events.off(\"keypress\", input.KEY_A, this.onCameraStrifeLeft);\n        r.events.off(\"keypress\", input.KEY_D, this.onCameraStrifeRight);\n        r.events.off(\"keypress\", input.KEY_UP, this.onCameraLookUp);\n        r.events.off(\"keypress\", input.KEY_DOWN, this.onCameraLookDown);\n        r.events.off(\"keypress\", input.KEY_LEFT, this.onCameraLookLeft);\n        r.events.off(\"keypress\", input.KEY_RIGHT, this.onCameraLookRight);\n        r.events.off(\"keypress\", input.KEY_Q, this.onCameraRollLeft);\n        r.events.off(\"keypress\", input.KEY_E, this.onCameraRollRight);\n        r.events.off(\"keypress\", input.KEY_N, this.onCameraRollNorth);\n    }\n\n    public override oninit() {\n        this.activate();\n    }\n\n    protected onCameraMoveForward() {\n        let cam = this.planet!.camera;\n        cam.slide(0, 0, -cam._lonLat.height / this.step);\n    }\n\n    protected onCameraMoveBackward() {\n        let cam = this.planet!.camera!;\n        cam.slide(0, 0, cam._lonLat.height / this.step);\n    }\n\n    protected onCameraStrifeLeft() {\n        let cam = this.planet!.camera;\n        cam.slide(-cam._lonLat.height / this.step, 0, 0);\n    }\n\n    protected onCameraStrifeRight() {\n        let cam = this.planet!.camera;\n        cam.slide(cam._lonLat.height / this.step, 0, 0);\n    }\n\n    protected onCameraLookUp() {\n        let cam = this.planet!.camera;\n        if (this.renderer!.events.isKeyPressed(input.KEY_SHIFT)) {\n            cam.pitch(15 / this.renderer!.handler.deltaTime);\n        } else {\n            cam.rotateVertical((cam._lonLat.height / 3000000) * math.RADIANS, Vec3.ZERO);\n        }\n    }\n\n    protected onCameraLookDown() {\n        let cam = this.planet!.camera;\n        if (this.renderer!.events.isKeyPressed(input.KEY_SHIFT)) {\n            cam.pitch(-15 / this.renderer!.handler.deltaTime);\n        } else {\n            cam.rotateVertical((-cam._lonLat.height / 3000000) * math.RADIANS, Vec3.ZERO);\n        }\n    }\n\n    protected onCameraLookLeft() {\n        let cam = this.planet!.camera;\n        if (this.renderer!.events.isKeyPressed(input.KEY_SHIFT)) {\n            cam.roll(15 / this.renderer!.handler.deltaTime);\n        } else {\n            cam.rotateHorizontal((cam._lonLat.height / 3000000) * math.RADIANS);\n        }\n    }\n\n    protected onCameraLookRight() {\n        let cam = this.planet!.camera;\n        if (this.renderer!.events.isKeyPressed(input.KEY_SHIFT)) {\n            cam.roll(-15 / this.renderer!.handler.deltaTime);\n        } else {\n            cam.rotateHorizontal((-cam._lonLat.height / 3000000) * math.RADIANS);\n        }\n    }\n\n    protected onCameraTurnLeft() {\n        let cam = this.planet!.camera;\n        if (this.renderer!.events.isKeyPressed(input.KEY_SHIFT)) {\n            cam.yaw(15 / this.renderer!.handler.deltaTime);\n        } else {\n            cam.rotateHorizontal((cam._lonLat.height / 3000000) * math.RADIANS);\n        }\n    }\n\n    protected onCameraTurnRight() {\n        let cam = this.planet!.camera;\n        if (this.renderer!.events.isKeyPressed(input.KEY_SHIFT)) {\n            cam.yaw(-15 / this.renderer!.handler.deltaTime);\n        } else {\n            cam.rotateHorizontal((-cam._lonLat.height / 3000000) * math.RADIANS, false, Vec3.ZERO);\n        }\n    }\n\n    // from CompassButton._onClick()\n    protected onCameraRollNorth() {\n        let c = this.planet!.getCartesianFromPixelTerrain(this.renderer!.handler.getCenter());\n        if (c) {\n            this.planet!.flyCartesian(\n                c.normal().scaleTo(c.length() + c.distance(this.planet!.camera.eye)),\n                null,\n                null,\n                0,\n                null,\n                null,\n                () => {\n                    this.planet!.camera.look;\n                }\n            );\n        } else {\n            this.planet!.flyCartesian(this.planet!.camera.eye);\n        }\n    }\n\n    protected onCameraRollLeft() {\n        this.planet!.camera.roll(-15 / this.renderer!.handler.deltaTime);\n    }\n\n    protected onCameraRollRight() {\n        this.planet!.camera.roll(15 / this.renderer!.handler.deltaTime);\n    }\n}","import {Control, IControlParams} from \"./Control\";\nimport {Dialog} from \"../ui/Dialog\";\nimport {Layer} from \"../layer/Layer\";\nimport {ToggleButton} from \"../ui/ToggleButton\";\n\ninterface ILayerSwitcherParams extends IControlParams {\n\n}\n\nconst ICON_BUTTON_SVG = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Svg Vector Icons : http://www.onlinewebfonts.com/icon -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 1000 1000\" enable-background=\"new 0 0 1000 1000\" xml:space=\"preserve\">\n<metadata> Svg Vector Icons : http://www.onlinewebfonts.com/icon </metadata>\n<g><path d=\"M500,573.5c-3.2,0-6.5-0.6-9.5-1.9L25,375.6c-9.1-3.8-15-12.7-15-22.6s5.9-18.8,15-22.6l465.5-196c6.1-2.5,12.9-2.5,19,0l465.5,196c9.1,3.8,15,12.7,15,22.6s-5.9,18.8-15,22.6l-465.5,196C506.5,572.9,503.2,573.5,500,573.5L500,573.5z M97.6,353L500,522.4L902.4,353L500,183.6L97.6,353L97.6,353z\"/><path d=\"M500,720.5c-3.2,0-6.5-0.6-9.5-1.9L25,522.6c-12.4-5.2-18.3-19.6-13.1-32.1c5.2-12.5,19.6-18.3,32.1-13.1l456,192l456-192c12.4-5.2,26.9,0.6,32.1,13.1s-0.6,26.9-13.1,32.1l-465.5,196C506.5,719.9,503.2,720.5,500,720.5L500,720.5z\"/><path d=\"M500,867.5c-3.2,0-6.5-0.6-9.5-1.9L25,669.6c-12.4-5.2-18.3-19.6-13.1-32.1c5.2-12.5,19.6-18.3,32.1-13.1l456,192l456-192c12.4-5.2,26.9,0.6,32.1,13.1c5.2,12.5-0.6,26.8-13.1,32.1l-465.5,196C506.5,866.9,503.2,867.5,500,867.5L500,867.5z\"/></g>\n</svg>`;\n\n/**\n * Advanced :) layer switcher, includes base layers, overlays, geo images etc. groups.\n * Double click for zoom, drag-and-drop to change zIndex\n */\nexport class LayerSwitcher extends Control {\n    public dialog: Dialog<null>;\n    protected _menuBtn: ToggleButton;\n\n    constructor(options: ILayerSwitcherParams = {}) {\n        super({\n            name: \"LayerSwitcher\",\n            ...options\n        });\n\n        this.dialog = new Dialog({\n            title: \"Layer Switcher\",\n            top: 15,\n            useHide: true,\n            visible: false,\n            width: 200\n        });\n\n        this._menuBtn = new ToggleButton({\n            classList: [\"og-map-button\", \"og-layerswitcher_button\"],\n            icon: ICON_BUTTON_SVG\n        });\n    }\n\n    override oninit() {\n\n        this.dialog.appendTo(this.planet!.renderer!.div as HTMLElement);\n\n        this.dialog.setPosition((this.planet!.renderer!.div!.clientWidth as number) - this.dialog.width - 67)\n\n        this.dialog.events.on(\"visibility\", (v: boolean) => {\n            this._menuBtn.setActive(v);\n        });\n\n        this.planet!.events.on(\"layeradd\", this.addNewLayer, this)\n        this.planet!.events.on(\"layerremove\", this.removeLayer, this)\n    }\n\n    public addNewLayer = (layer: Layer) => {\n\n    }\n\n    public removeLayer = (layer: Layer) => {\n\n    }\n\n    override onactivate() {\n\n    }\n\n    override ondeactivate() {\n        this.dialog.hide();\n    }\n\n}\n","import {Control, IControlParams} from \"./Control\";\nimport {Dialog} from '../ui/Dialog';\nimport {Layer} from \"../layer/Layer\";\nimport {Slider} from \"../ui/Slider\";\nimport {Sun} from \"./Sun\";\nimport {ToggleButton} from \"../ui/ToggleButton\";\nimport {View} from '../ui/View';\nimport {Atmosphere} from \"./Atmosphere\";\n\ninterface ILightingParams extends IControlParams {\n\n}\n\nconst SUN_STOP_SVG_ICON = `<?xml version=\"1.0\" encoding=\"utf-8\"?><svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 122.88 70.41\" style=\"enable-background:new 0 0 122.88 70.41\" xml:space=\"preserve\"><g><path d=\"M60.91,19.12c6.95,0,13.24,2.95,17.8,7.72c4.55,4.77,7.37,11.37,7.37,18.64c0,1.94-0.2,3.83-0.58,5.65h31.61 c2.1,0,2.62,1.16,2.62,2.59c0,1.43-0.52,2.59-2.62,2.59H7.09c-2.1,0-2.62-1.16-2.62-2.59c0-1.43,0.52-2.59,2.62-2.59h29.23 c-0.38-1.82-0.58-3.71-0.58-5.65c0-7.28,2.82-13.87,7.37-18.64C47.67,22.08,53.96,19.12,60.91,19.12L60.91,19.12L60.91,19.12z M63.4,70.41c-2.1,0-2.62-1.16-2.62-2.59s0.52-2.59,2.62-2.59h56.86c2.1,0,2.62,1.16,2.62,2.59s-0.52,2.59-2.62,2.59H63.4 L63.4,70.41z M2.62,70.41c-2.1,0-2.62-1.16-2.62-2.59s0.52-2.59,2.62-2.59h29.51c2.1,0,2.62,1.16,2.62,2.59s-0.52,2.59-2.62,2.59 H2.62L2.62,70.41z M38.39,9.46c-0.78-1.35-0.32-3.07,1.03-3.85c1.35-0.78,3.07-0.32,3.85,1.03l3.62,6.27 c0.78,1.35,0.32,3.07-1.03,3.85c-1.35,0.78-3.07,0.32-3.85-1.03L38.39,9.46L38.39,9.46L38.39,9.46z M58.67,2.83 c0-1.56,1.27-2.83,2.83-2.83c1.56,0,2.83,1.27,2.83,2.83v7.24c0,1.56-1.27,2.83-2.83,2.83c-1.56,0-2.83-1.26-2.83-2.83V2.83 L58.67,2.83L58.67,2.83z M79.56,7.23c0.77-1.35,2.49-1.81,3.84-1.04c1.35,0.77,1.81,2.49,1.04,3.84l-3.62,6.27 c-0.77,1.35-2.49,1.81-3.84,1.04c-1.35-0.77-1.81-2.49-1.04-3.84L79.56,7.23L79.56,7.23L79.56,7.23z M95.45,21.48 c1.35-0.78,3.07-0.32,3.85,1.03c0.78,1.35,0.32,3.07-1.03,3.85L92,29.98c-1.35,0.78-3.07,0.32-3.85-1.03 c-0.78-1.35-0.32-3.07,1.03-3.85L95.45,21.48L95.45,21.48L95.45,21.48z M102.08,41.76c1.56,0,2.83,1.27,2.83,2.83 c0,1.56-1.27,2.83-2.83,2.83h-7.24c-1.56,0-2.83-1.26-2.83-2.83s1.26-2.83,2.83-2.83H102.08L102.08,41.76L102.08,41.76z M19.74,46.25c-1.56,0-2.83-1.27-2.83-2.83c0-1.56,1.27-2.83,2.83-2.83h7.24c1.56,0,2.83,1.26,2.83,2.83s-1.27,2.83-2.83,2.83 H19.74L19.74,46.25L19.74,46.25z M24.14,25.35c-1.35-0.77-1.81-2.49-1.04-3.84c0.77-1.35,2.49-1.81,3.84-1.04l6.27,3.62 c1.35,0.77,1.81,2.49,1.04,3.84c-0.77,1.35-2.49,1.81-3.84,1.04L24.14,25.35L24.14,25.35L24.14,25.35z\"/></g></svg>`;\nconst SUN_ACTIVE_SVG_ICON = `<?xml version=\"1.0\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n    <path style=\"text-indent:0;text-align:start;line-height:normal;text-transform:none;block-progression:tb;-inkscape-font-specification:Sans\" d=\"M 16 4 C 9.3844277 4 4 9.3844277 4 16 C 4 22.615572 9.3844277 28 16 28 C 22.615572 28 28 22.615572 28 16 C 28 9.3844277 22.615572 4 16 4 z M 16 6 C 16.389823 6 16.778223 6.0506339 17.15625 6.09375 C 18.631659 7.6568432 21 10.9245 21 16 C 21 21.0755 18.631659 24.343157 17.15625 25.90625 C 16.778223 25.949366 16.389823 26 16 26 C 10.465308 26 6 21.534692 6 16 C 6 10.465308 10.465308 6 16 6 z\" overflow=\"visible\" font-family=\"Sans\"/>\n</svg>\n`;\nconst LIGHTING_ENABLED_SVG_ICON = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generated by IcoMoon.io -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"512\" height=\"512\" viewBox=\"0 0 512 512\">\n<g>\n</g>\n\\t<path d=\"M257.894 156.948c-53.258 0-96.42 43.561-96.42 97.26 0 53.719 43.161 97.249 96.42 97.249 53.197 0 96.379-43.53 96.379-97.25 0-53.698-43.182-97.26-96.379-97.26zM257.894 309.873c-30.464 0-55.163-24.945-55.163-55.665s24.699-55.624 55.163-55.624c30.423 0 55.101 24.904 55.101 55.624s-24.688 55.665-55.101 55.665z\" fill=\"#000000\" />\n\\t<path d=\"M241.808 43.499h32.144v79.575h-32.144v-79.575z\" fill=\"#000000\" />\n\\t<path d=\"M417.209 115.897l-22.723-22.917-55.757 56.279 22.723 22.907z\" fill=\"#000000\" />\n\\t<path d=\"M389.468 238.407h78.899v32.389h-78.899v-32.389z\" fill=\"#000000\" />\n\\t<path d=\"M396.012 416.86l22.723-22.917-55.767-56.259-22.712 22.897z\" fill=\"#000000\" />\n\\t<path d=\"M242.473 388.915h32.144v79.575h-32.144v-79.575z\" fill=\"#000000\" />\n\\t<path d=\"M96.266 396.073l22.722 22.938 55.778-56.289-22.692-22.928z\" fill=\"#000000\" />\n\\t<path d=\"M43.633 240.537h78.879v32.43h-78.879v-32.43z\" fill=\"#000000\" />\n\\t<path d=\"M115.394 93.051l-22.681 22.907 55.757 56.258 22.702-22.917z\" fill=\"#000000\" />\n</svg>`;\nconst ATMOSPHERE_SVG_ICON = `<?xml version=\"1.0\" encoding=\"utf-8\"?><!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\n<svg width=\"800px\" height=\"800px\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#000000\" d=\"M135.688 18.5c-6.798 74.842-23.842 85.39-107.907 59.656 84.85 52.022 73.57 64.954-6.843 96.938 87.743-10.27 103.29 4.89 70.75 87.594 17.805-27.56 32.5-44.498 46.282-54.47-11.813 28.26-18.345 59.274-18.345 91.813 0 84.184 43.71 157.96 109.656 200.376-41.624-43.834-67.686-102.7-67.686-167.875 0-134.923 109.45-244.405 244.375-244.405 30.92 0 60.76 5.762 88 16.25-38.584-26.87-85.517-42.625-136.064-42.625-55.257 0-106.14 18.802-146.562 50.375 4.627-18.783 17.39-38.073 41.03-60.906C190.18 90.942 153.53 95.634 135.69 18.5zm10.03 77.188c5.67.002 11.428 1.247 16.876 3.874 14.506 6.998 22.72 21.81 22 36.938-10.26 10.87-19.507 22.696-27.594 35.344-9.035 2.753-19.075 2.27-28.25-2.156-19.37-9.343-27.5-32.6-18.156-51.97 6.715-13.92 20.638-22.036 35.125-22.03z\"/></svg>`;\n\n\nconst TEMPLATE =\n    `<div class=\"og-lighing\">\n\n         <div class=\"og-option\">\n           <div class=\"og-suncontrol\"></div>\n         </div>        \n         \n         <div class=\"og-option og-atmosphere-opacity\">\n         </div>\n         \n        <div class=\"og-lighting-emptyline\"></div>\n\n         <div class=\"og-option og-gamma\"></div>         \n         <div class=\"og-option og-exposure\"></div>\n       \n        <div class=\"og-lighting-emptyline\"></div>\n\n         <div class=\"og-option\">\n         <div class=\"og-layers\">\n           <div class=\"og-caption\">Select layer:</div>\n           <select id=\"layers\"></select>\n         </div>\n         </div>\n\n         <div class=\"og-option og-opacity\">\n         </div>\n         \n         <div class=\"og-option og-night\">\n         </div>\n         \n         <div class=\"og-lighting-emptyline\"></div>\n\n         <div class=\"og-option og-diffuse\">\n         </div>\n      \n         <div class=\"og-option og-ambient\">\n         </div>\n\n         <div class=\"og-option og-specular\">\n         </div>        \n\n    </div>`;\n\nconst ICON_BUTTON_SVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"256\" height=\"256\" viewBox=\"0 0 256 256\" xml:space=\"preserve\">\n\n<defs>\n</defs>\n<g style=\"stroke: none; stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; opacity: 1;\" transform=\"translate(1.4065934065934016 1.4065934065934016) scale(2.81 2.81)\" >\n\\t<path d=\"M 45 68 c -12.682 0 -23 -10.317 -23 -23 c 0 -12.682 10.318 -23 23 -23 c 12.683 0 23 10.318 23 23 C 68 57.683 57.683 68 45 68 z\" style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\" transform=\" matrix(1 0 0 1 0 0) \" stroke-linecap=\"round\" />\n\\t<path d=\"M 45 17.556 c -1.657 0 -3 -1.343 -3 -3 V 3 c 0 -1.657 1.343 -3 3 -3 c 1.657 0 3 1.343 3 3 v 11.556 C 48 16.212 46.657 17.556 45 17.556 z\" style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\" transform=\" matrix(1 0 0 1 0 0) \" stroke-linecap=\"round\" />\n\\t<path d=\"M 45 90 c -1.657 0 -3 -1.343 -3 -3 V 75.444 c 0 -1.657 1.343 -3 3 -3 c 1.657 0 3 1.343 3 3 V 87 C 48 88.657 46.657 90 45 90 z\" style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\" transform=\" matrix(1 0 0 1 0 0) \" stroke-linecap=\"round\" />\n\\t<path d=\"M 14.556 48 H 3 c -1.657 0 -3 -1.343 -3 -3 c 0 -1.657 1.343 -3 3 -3 h 11.556 c 1.657 0 3 1.343 3 3 C 17.556 46.657 16.212 48 14.556 48 z\" style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\" transform=\" matrix(1 0 0 1 0 0) \" stroke-linecap=\"round\" />\n\\t<path d=\"M 87 48 H 75.444 c -1.657 0 -3 -1.343 -3 -3 c 0 -1.657 1.343 -3 3 -3 H 87 c 1.657 0 3 1.343 3 3 C 90 46.657 88.657 48 87 48 z\" style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\" transform=\" matrix(1 0 0 1 0 0) \" stroke-linecap=\"round\" />\n\\t<path d=\"M 66.527 26.473 c -0.768 0 -1.535 -0.293 -2.121 -0.878 c -1.172 -1.172 -1.172 -3.071 0 -4.243 l 8.171 -8.171 c 1.172 -1.172 3.07 -1.171 4.242 0 c 1.172 1.172 1.172 3.071 0 4.243 l -8.171 8.171 C 68.063 26.18 67.295 26.473 66.527 26.473 z\" style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\" transform=\" matrix(1 0 0 1 0 0) \" stroke-linecap=\"round\" />\n\\t<path d=\"M 15.302 77.698 c -0.768 0 -1.536 -0.293 -2.121 -0.879 c -1.172 -1.171 -1.172 -3.071 0 -4.242 l 8.171 -8.171 c 1.171 -1.172 3.071 -1.172 4.242 0 c 1.172 1.171 1.172 3.071 0 4.242 l -8.171 8.171 C 16.837 77.405 16.069 77.698 15.302 77.698 z\" style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\" transform=\" matrix(1 0 0 1 0 0) \" stroke-linecap=\"round\" />\n\\t<path d=\"M 23.473 26.473 c -0.768 0 -1.536 -0.293 -2.121 -0.878 l -8.171 -8.171 c -1.172 -1.172 -1.172 -3.071 0 -4.243 c 1.172 -1.172 3.072 -1.171 4.243 0 l 8.171 8.171 c 1.172 1.172 1.172 3.071 0 4.243 C 25.008 26.18 24.24 26.473 23.473 26.473 z\" style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\" transform=\" matrix(1 0 0 1 0 0) \" stroke-linecap=\"round\" />\n\\t<path d=\"M 74.698 77.698 c -0.768 0 -1.535 -0.293 -2.121 -0.879 l -8.171 -8.171 c -1.172 -1.171 -1.172 -3.071 0 -4.242 c 1.172 -1.172 3.07 -1.172 4.242 0 l 8.171 8.171 c 1.172 1.171 1.172 3.071 0 4.242 C 76.233 77.405 75.466 77.698 74.698 77.698 z\" style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\" transform=\" matrix(1 0 0 1 0 0) \" stroke-linecap=\"round\" />\n</g>\n</svg>`;\n\nconst MAX_COLOR = 5;\n\n/**\n * Helps to set up lighting.\n */\nexport class Lighting extends Control {\n    protected _selectedLayer: Layer | null;\n    protected _toggleBtn: ToggleButton;\n    protected _dialog: Dialog<null>;\n    protected _panel: View<null>;\n\n    protected _atmosphereMaxOpacity: Slider;\n    protected _atmosphereMinOpacity: Slider;\n    protected _gamma: Slider;\n    protected _exposure: Slider;\n    protected _night: Slider;\n    protected _opacity: Slider;\n    protected _diffuse_r: Slider;\n    protected _diffuse_g: Slider;\n    protected _diffuse_b: Slider;\n    protected _ambient_r: Slider;\n    protected _ambient_g: Slider;\n    protected _ambient_b: Slider;\n    protected _specular_r: Slider;\n    protected _specular_g: Slider;\n    protected _specular_b: Slider;\n    protected _shininess: Slider;\n\n    public $gamma: HTMLElement | null;\n    public $exposure: HTMLElement | null;\n    public $night: HTMLElement | null;\n    public $opacity: HTMLElement | null;\n    public $diffuse: HTMLElement | null;\n    public $ambient: HTMLElement | null;\n    public $specular: HTMLElement | null;\n    public $atmosphereOpacity: HTMLElement | null;\n\n\n    constructor(options: ILightingParams = {}) {\n        super(options);\n\n        this._selectedLayer = null;\n\n        this._toggleBtn = new ToggleButton({\n            classList: [\"og-map-button\", \"og-lighting_button\"],\n            icon: ICON_BUTTON_SVG\n        });\n\n        this._dialog = new Dialog({\n            title: \"Lighting Parameters\",\n            visible: false,\n            useHide: true,\n            top: 60,\n            left: 60,\n            width: 600\n        });\n\n        this._dialog.events.on(\"visibility\", (v: boolean) => {\n            this._toggleBtn.setActive(v);\n        });\n\n        this._panel = new View({\n            template: TEMPLATE\n        });\n\n        this.$gamma = null;\n        this.$exposure = null;\n        this.$night = null;\n        this.$opacity = null;\n        this.$diffuse = null;\n        this.$ambient = null;\n        this.$specular = null;\n        this.$atmosphereOpacity = null;\n\n        this._atmosphereMaxOpacity = new Slider({\n            label: \"Max.opacity\",\n            max: 5\n        });\n\n        this._atmosphereMinOpacity = new Slider({\n            label: \"Min.opacity\",\n            max: 5\n        });\n\n        this._gamma = new Slider({\n            label: \"Gamma\",\n            max: 5\n        });\n\n        this._exposure = new Slider({\n            label: \"Exposure\",\n            max: 5\n        });\n\n        this._night = new Slider({\n            label: \"Nightlight\",\n            max: 5\n        });\n\n        this._opacity = new Slider({\n            label: \"Opacity\",\n            max: 1\n        });\n\n        //\n        // Diffuse sliders\n        //\n        this._diffuse_r = new Slider({\n            label: \"Diffuse R\",\n            max: MAX_COLOR\n        });\n\n        this._diffuse_g = new Slider({\n            label: \"Diffuse G\",\n            max: MAX_COLOR\n        });\n\n        this._diffuse_b = new Slider({\n            label: \"Diffuse B\",\n            max: MAX_COLOR\n        });\n\n        //\n        // Ambient sliders\n        //\n        this._ambient_r = new Slider({\n            label: \"Ambient R\",\n            max: MAX_COLOR\n        });\n\n        this._ambient_g = new Slider({\n            label: \"Ambient G\",\n            max: MAX_COLOR\n        });\n\n        this._ambient_b = new Slider({\n            label: \"Ambient B\",\n            max: MAX_COLOR\n        });\n\n        //\n        // Specular sliders\n        //\n        this._specular_r = new Slider({\n            label: \"Specular R\",\n            max: 0.2\n        });\n\n        this._specular_g = new Slider({\n            label: \"Specular G\",\n            max: 0.2\n        });\n\n        this._specular_b = new Slider({\n            label: \"Specular B\",\n            max: 0.2\n        });\n\n        this._shininess = new Slider({\n            label: \"Shininess\",\n            max: 100\n        });\n    }\n\n    public bindLayer(layer: Layer) {\n        this._selectedLayer = layer;\n        this._opacity.value = layer.opacity;\n        this._update();\n    }\n\n    public override oninit() {\n\n        this._toggleBtn.appendTo(this.renderer!.div!);\n        this._dialog.appendTo(this.renderer!.div!);\n        this._panel.appendTo(this._dialog.container!);\n\n        if (this._panel.el) {\n            this.$atmosphereOpacity = this._panel.el.querySelector(\".og-atmosphere-opacity\");\n            this.$gamma = this._panel.el.querySelector(\".og-option.og-gamma\");\n            this.$exposure = this._panel.el.querySelector(\".og-option.og-exposure\");\n            this.$opacity = this._panel.el.querySelector(\".og-option.og-opacity\");\n            this.$diffuse = this._panel.el.querySelector(\".og-option.og-diffuse\");\n            this.$ambient = this._panel.el.querySelector(\".og-option.og-ambient\");\n            this.$specular = this._panel.el.querySelector(\".og-option.og-specular\");\n            this.$night = this._panel.el.querySelector(\".og-option.og-night\");\n        }\n\n        this._toggleBtn.events.on(\"change\", (isActive: boolean) => {\n            this._dialog.setVisibility(isActive);\n        });\n\n        let $suncontrol = this._dialog.select(\".og-suncontrol\")!;\n\n        let sunStopBtn = new ToggleButton({\n            classList: [\"og-suncontrol-button\"],\n            isActive: true,\n            icon: SUN_STOP_SVG_ICON,\n            title: \"Star/stop the Sun from following the camera\"\n        });\n        sunStopBtn.appendTo($suncontrol);\n\n        let sunActiveBtn = new ToggleButton({\n            classList: [\"og-suncontrol-button\"],\n            isActive: true,\n            icon: SUN_ACTIVE_SVG_ICON,\n            title: \"Activate/deactivate the Sun current time positioning\"\n        });\n        sunActiveBtn.appendTo($suncontrol);\n\n        sunStopBtn.events.on(\"change\", (isActive: boolean) => {\n            const sun = this.planet!.renderer!.controls.sun as Sun;\n            if (isActive) {\n                sun.start();\n            } else {\n                sun.stop();\n            }\n        });\n\n        sunActiveBtn.events.on(\"change\", (isActive: boolean) => {\n            const sun = this.planet!.renderer!.controls.sun;\n            if (isActive) {\n                sun.activate();\n            } else {\n                sun.deactivate();\n            }\n        });\n\n        let lightingEnabledBtn = new ToggleButton({\n            classList: [\"og-suncontrol-button\"],\n            isActive: this.planet!.lightEnabled,\n            icon: LIGHTING_ENABLED_SVG_ICON,\n            title: \"Enable/disable planet lighting\"\n        });\n        lightingEnabledBtn.appendTo($suncontrol);\n\n        lightingEnabledBtn.events.on(\"change\", (isActive: boolean) => {\n            this.planet!.lightEnabled = isActive;\n        });\n\n        let atmosphereEnabledBtn = new ToggleButton({\n            classList: [\"og-suncontrol-button\"],\n            isActive: this.planet!.atmosphereEnabled,\n            icon: ATMOSPHERE_SVG_ICON,\n            title: \"Enable/disable atmosphere scattering\"\n        });\n        atmosphereEnabledBtn.appendTo($suncontrol);\n\n        if (this.planet!.atmosphereEnabled) {\n            this.$atmosphereOpacity!.style.display = \"block\";\n        } else {\n            this.$atmosphereOpacity!.style.display = \"none\";\n        }\n        atmosphereEnabledBtn.events.on(\"change\", (isActive: boolean) => {\n            this.planet!.atmosphereEnabled = isActive;\n            if (this.planet!.atmosphereEnabled) {\n                this.$atmosphereOpacity!.style.display = \"block\";\n            } else {\n                this.$atmosphereOpacity!.style.display = \"none\";\n            }\n        });\n\n        this._atmosphereMaxOpacity.appendTo(this.$atmosphereOpacity!);\n        this._atmosphereMinOpacity.appendTo(this.$atmosphereOpacity!);\n\n        this._gamma.appendTo(this.$gamma!);\n        this._exposure.appendTo(this.$exposure!);\n\n        this._night.appendTo(this.$night!);\n        this._opacity.appendTo(this.$opacity!);\n\n        this._diffuse_r.appendTo(this.$diffuse!);\n        this._diffuse_g.appendTo(this.$diffuse!);\n        this._diffuse_b.appendTo(this.$diffuse!);\n\n        this._ambient_r.appendTo(this.$ambient!);\n        this._ambient_g.appendTo(this.$ambient!);\n        this._ambient_b.appendTo(this.$ambient!);\n\n        this._specular_r.appendTo(this.$specular!);\n        this._specular_g.appendTo(this.$specular!);\n        this._specular_b.appendTo(this.$specular!);\n        this._shininess.appendTo(this.$specular!);\n\n        this._atmosphereMinOpacity.value = this.planet!.atmosphereMinOpacity;\n        this._atmosphereMinOpacity.events.on(\"change\", (val: number) => {\n            this.planet!.atmosphereMinOpacity = val;\n        });\n\n        this._gamma.value = this.planet!.renderer!.gamma;\n        this._gamma.events.on(\"change\", (val: number) => {\n            this.planet!.renderer!.gamma = val;\n        });\n\n        this._panel.el!.querySelector<HTMLSelectElement>(\"#layers\")!.addEventListener(\"change\", (e: Event) => {\n            const l = this.planet!.getLayerByName((e.target as HTMLSelectElement).value);\n            if (l) {\n                this.bindLayer(l);\n            }\n        });\n\n        this._atmosphereMaxOpacity.value = this.planet!.atmosphereMaxOpacity;\n        this._atmosphereMaxOpacity.events.on(\"change\", (val: number) => {\n            this.planet!.atmosphereMaxOpacity = val;\n            let atmos = this.planet!.renderer!.controls.Atmosphere as Atmosphere;\n            atmos.opacity = val;\n        });\n\n        this._exposure.value = this.planet!.renderer!.exposure;\n        this._exposure.events.on(\"change\", (val: number) => {\n            this.planet!.renderer!.exposure = val;\n        });\n\n        this._night.events.on(\"change\", (val: number) => {\n            if (this._selectedLayer) {\n                this._selectedLayer.nightTextureCoefficient = val;\n            }\n        });\n\n        this._opacity.events.on(\"change\", (val: number) => {\n            if (this._selectedLayer)\n                this._selectedLayer.opacity = val;\n        });\n\n        this._ambient_r.events.on(\"change\", (val: number) => {\n            if (this._selectedLayer && this._selectedLayer._ambient)\n                this._selectedLayer._ambient[0] = val\n        });\n\n        this._ambient_g.events.on(\"change\", (val: number) => {\n            if (this._selectedLayer && this._selectedLayer._ambient)\n                this._selectedLayer._ambient[1] = val\n        });\n\n        this._ambient_b.events.on(\"change\", (val: number) => {\n            if (this._selectedLayer && this._selectedLayer._ambient)\n                this._selectedLayer._ambient[2] = val\n        });\n\n        this._diffuse_r.events.on(\"change\", (val: number) => {\n            if (this._selectedLayer && this._selectedLayer._diffuse)\n                this._selectedLayer._diffuse[0] = val\n        });\n\n        this._diffuse_g.events.on(\"change\", (val: number) => {\n            if (this._selectedLayer && this._selectedLayer._diffuse)\n                this._selectedLayer._diffuse[1] = val\n        });\n\n        this._diffuse_b.events.on(\"change\", (val: number) => {\n            if (this._selectedLayer && this._selectedLayer._diffuse)\n                this._selectedLayer._diffuse[2] = val\n        });\n\n        this._specular_r.events.on(\"change\", (val: number) => {\n            if (this._selectedLayer && this._selectedLayer._specular)\n                this._selectedLayer._specular[0] = val\n        });\n\n        this._specular_g.events.on(\"change\", (val: number) => {\n            if (this._selectedLayer && this._selectedLayer._specular)\n                this._selectedLayer._specular[1] = val\n        });\n\n        this._specular_b.events.on(\"change\", (val: number) => {\n            if (this._selectedLayer && this._selectedLayer._specular)\n                this._selectedLayer._specular[2] = val\n        });\n\n        this._shininess.events.on(\"change\", (val: number) => {\n            if (this._selectedLayer && this._selectedLayer._specular)\n                this._selectedLayer._specular[3] = val\n        });\n\n\n        if (this.planet) {\n            this.planet!.events.on(\"layeradd\", this._onLayerAdd, this);\n            this.planet!.events.on(\"layerremove\", this._onLayerRemove, this);\n        }\n\n        this._fetchLayers();\n    }\n\n    protected _update() {\n        let l = this._selectedLayer;\n\n        this._opacity.value = l && l.opacity ? l.opacity : 0.0;\n\n        this._night.value = l && l.nightTextureCoefficient ? l.nightTextureCoefficient : this.planet!.nightTextureCoefficient;\n\n        let a = l && l._ambient ? l._ambient : this.planet!._ambient;\n        this._ambient_r.value = a[0];\n        this._ambient_g.value = a[1];\n        this._ambient_b.value = a[2];\n\n        let d = l && l._diffuse ? l._diffuse : this.planet!._diffuse;\n        this._diffuse_r.value = d[0];\n        this._diffuse_g.value = d[1];\n        this._diffuse_b.value = d[2];\n\n        let s = l && l._specular ? l._specular : this.planet!._specular;\n        this._specular_r.value = s[0];\n        this._specular_g.value = s[1];\n        this._specular_b.value = s[2];\n        this._shininess.value = s[3];\n    }\n\n    protected _fetchLayers() {\n        if (this.planet) {\n            for (let i = 0; i < this.planet.layers.length; i++) {\n                this._onLayerAdd(this.planet.layers[i]);\n            }\n        }\n    }\n\n    protected _onLayerAdd(e: Layer) {\n        this.bindLayer(e);\n        let opt = document.createElement(\"option\");\n        opt.value = e.name;\n        opt.innerText = e.name;\n        this._panel.el!.querySelector(\"#layers\")!.appendChild(opt);\n        this._panel.el!.querySelector<HTMLSelectElement>(\"#layers\")!.value = e.name;\n    }\n\n    protected _onLayerRemove(e: Layer) {\n    }\n}\n","import {Sphere} from \"../bv/Sphere\";\nimport {Key} from \"../Lock\";\nimport {Quat} from \"../math/Quat\";\nimport {Vec3} from \"../math/Vec3\";\nimport {Control, IControlParams} from \"./Control\";\nimport {IStepForward, MouseNavigation} from \"./MouseNavigation\";\n\ninterface IMouseWheelZoomControl extends IControlParams {\n    minSlope?: number;\n}\n\nexport class MouseWheelZoomControl extends Control {\n    protected grabbedPoint: Vec3;\n    protected _eye0: Vec3;\n    protected pointOnEarth: Vec3;\n    protected earthUp: Vec3;\n    public inertia: number;\n    protected grabbedSpheroid: Sphere;\n    protected qRot: Quat;\n    protected scaleRot: number;\n    protected distDiff: number;\n    protected stepsCount: number;\n    protected stepsForward: IStepForward[] | null;\n    protected stepIndex: number;\n    protected _lmbDoubleClickActive: boolean;\n    protected minSlope: number;\n    protected _keyLock: Key;\n    protected _deactivate: boolean;\n    protected _move: number;\n\n    constructor(options: IMouseWheelZoomControl = {}) {\n        super(options);\n\n        this._name = \"MouseWheelZoomControl\";\n\n        this.grabbedPoint = new Vec3();\n        this._eye0 = new Vec3();\n        this.pointOnEarth = new Vec3();\n        this.earthUp = new Vec3();\n        this.inertia = 0.007;\n        this.grabbedSpheroid = new Sphere();\n        this.planet = null;\n        this.qRot = new Quat();\n        this.scaleRot = 0.0;\n\n        this.distDiff = 0.3;\n        this.stepsCount = 8;\n        this.stepsForward = null;\n        this.stepIndex = 0;\n\n        this._lmbDoubleClickActive = true;\n\n        this.minSlope = options.minSlope || 0.1;\n\n        this._keyLock = new Key();\n\n        this._deactivate = false;\n\n        this._move = 0;\n    }\n\n    public override oninit() {\n        let zoomDiv = document.createElement(\"div\"),\n            btnZoomIn = document.createElement(\"button\"),\n            btnZoomOut = document.createElement(\"button\");\n\n        zoomDiv.className = \"ogZoomControl\";\n        btnZoomIn.className = \"ogZoomButton ogZoomIn\";\n        btnZoomOut.className = \"ogZoomButton ogZoomOut\";\n\n        zoomDiv.appendChild(btnZoomIn);\n        zoomDiv.appendChild(btnZoomOut);\n\n        this.renderer!.div!.appendChild(zoomDiv);\n\n        btnZoomIn.addEventListener(\"mousedown\", () => this.zoomIn());\n        btnZoomIn.addEventListener(\"mouseup\", () => this.stopZoom());\n\n        btnZoomOut.addEventListener(\"mousedown\", () => this.zoomOut());\n        btnZoomOut.addEventListener(\"mouseup\", () => this.stopZoom());\n\n        btnZoomIn.addEventListener(\"touchstart\", (e: TouchEvent) => {\n            e.preventDefault();\n            this.zoomIn();\n        });\n        btnZoomIn.addEventListener(\"touchend\", (e: TouchEvent) => {\n            e.preventDefault();\n            this.stopZoom();\n        });\n        btnZoomIn.addEventListener(\"touchcancel\", (e: TouchEvent) => {\n            e.preventDefault();\n            this.stopZoom();\n        });\n\n        btnZoomOut.addEventListener(\"touchstart\", (e: TouchEvent) => {\n            e.preventDefault();\n            this.zoomOut();\n        });\n        btnZoomOut.addEventListener(\"touchend\", (e: TouchEvent) => {\n            e.preventDefault();\n            this.stopZoom();\n        });\n        btnZoomOut.addEventListener(\"touchcancel\", (e: TouchEvent) => {\n            e.preventDefault();\n            this.stopZoom();\n        });\n\n        this.renderer!.events.on(\"draw\", this._draw, this);\n    }\n\n    /**\n     * Planet zoom in.\n     * @public\n     */\n    public zoomIn() {\n        if (this.stepIndex) {\n            return;\n        }\n\n        this.planet!.stopFlying();\n\n        this.stopRotation();\n\n        this._deactivate = true;\n\n        this.planet!.layerLock.lock(this._keyLock);\n        this.planet!.terrainLock.lock(this._keyLock);\n        this.planet!._normalMapCreator.lock(this._keyLock);\n\n        this.stepsForward = MouseNavigation.getMovePointsFromPixelTerrain(\n            this.planet!.camera,\n            this.planet!,\n            this.stepsCount,\n            this.distDiff,\n            this.renderer!.handler.getCenter(),\n            true,\n            null\n        ) || null;\n\n        if (this.stepsForward) {\n            this.stepIndex = this.stepsCount;\n        }\n    }\n\n    /**\n     * Planet zoom out.\n     * @public\n     */\n    public zoomOut() {\n        if (this.stepIndex) {\n            return;\n        }\n\n        this.planet!.stopFlying();\n\n        this.stopRotation();\n\n        this._deactivate = true;\n\n        this.planet!.layerLock.lock(this._keyLock);\n        this.planet!.terrainLock.lock(this._keyLock);\n        this.planet!._normalMapCreator.lock(this._keyLock);\n\n        this.stepsForward = MouseNavigation.getMovePointsFromPixelTerrain(\n            this.planet!.camera,\n            this.planet!,\n            this.stepsCount,\n            this.distDiff,\n            this.renderer!.handler.getCenter(),\n            false,\n            null\n        ) || null;\n\n        if (this.stepsForward) {\n            this.stepIndex = this.stepsCount;\n        }\n    }\n\n    public stopRotation() {\n        this.qRot.clear();\n        this.planet!.layerLock.free(this._keyLock);\n        this.planet!.terrainLock.free(this._keyLock);\n        this.planet!._normalMapCreator.free(this._keyLock);\n    }\n\n    public stopZoom() {\n        this._move = 0;\n\n        this.planet!.layerLock.free(this._keyLock);\n        this.planet!.terrainLock.free(this._keyLock);\n        this.planet!._normalMapCreator.free(this._keyLock);\n    }\n\n    protected _draw() {\n        if (this._active) {\n            let r = this.renderer!;\n            let cam = this.planet!.camera;\n            let prevEye = cam.eye.clone();\n\n            if (this.stepIndex) {\n                r.controlsBag.scaleRot = 1.0;\n                let sf = this.stepsForward![this.stepsCount - this.stepIndex--];\n\n                let maxAlt = cam.maxAltitude + this.planet!.ellipsoid.equatorialSize;\n                let minAlt = cam.minAltitude + this.planet!.ellipsoid.equatorialSize;\n                const camAlt = sf.eye.length();\n                if (camAlt > maxAlt || camAlt < minAlt) {\n                    return;\n                }\n\n                cam.eye = sf.eye;\n                cam._u = sf.v;\n                cam._r = sf.u;\n                cam._b = sf.n;\n\n                cam.checkTerrainCollision();\n\n                cam.update();\n            } else {\n                if (this._deactivate) {\n                    this._deactivate = false;\n\n                    this.planet!.layerLock.free(this._keyLock);\n                    this.planet!.terrainLock.free(this._keyLock);\n                    this.planet!._normalMapCreator.free(this._keyLock);\n                }\n            }\n\n            if (r.events.mouseState.leftButtonDown || !this.scaleRot) {\n                return;\n            }\n\n            this.scaleRot -= this.inertia;\n            if (this.scaleRot <= 0.0) {\n                this.scaleRot = 0.0;\n            } else {\n\n                r.controlsBag.scaleRot = this.scaleRot;\n\n                let rot = this.qRot\n                    .slerp(Quat.IDENTITY, 1.0 - this.scaleRot * this.scaleRot * this.scaleRot)\n                    .normalize();\n\n                if (!(rot.x || rot.y || rot.z)) {\n                    this.scaleRot = 0.0;\n                }\n\n                cam.eye = rot.mulVec3(cam.eye);\n                cam._u = rot.mulVec3(cam._u);\n                cam._r = rot.mulVec3(cam._r);\n                cam._b = rot.mulVec3(cam._b);\n\n                cam.checkTerrainCollision();\n\n                cam.update();\n            }\n\n            if (cam.eye.distance(prevEye) / cam.getAltitude() > 0.01) {\n                this.planet!.layerLock.lock(this._keyLock);\n                this.planet!.terrainLock.lock(this._keyLock);\n                this.planet!._normalMapCreator.lock(this._keyLock);\n            } else {\n                this.planet!.layerLock.free(this._keyLock);\n                this.planet!.terrainLock.free(this._keyLock);\n                this.planet!._normalMapCreator.free(this._keyLock);\n            }\n        }\n    }\n}","import {Control, IControlParams} from \"./Control\";\nimport {ToggleButton} from \"../ui/ToggleButton\";\nimport {HeightRuler} from \"./heightRuler/HeightRuler\";\n\nconst ICON_BUTTON_SVG = `<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\n<svg fill=\"#000000\" height=\"800px\" width=\"800px\" version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \n\\t viewBox=\"0 0 512 512\" xml:space=\"preserve\">\n<g>\n\\t<g>\n\\t\\t<path d=\"M369.151,0L0.001,369.15L142.85,512l369.149-369.15L369.151,0z M47.286,369.15l10.908-10.908l47.782,47.782l23.642-23.642\n\\t\\t\\tL81.837,334.6l10.909-10.909l23.711,23.711L140.1,323.76l-23.711-23.711l10.909-10.909l23.711,23.711l23.642-23.642\n\\t\\t\\tl-23.711-23.711l10.909-10.909l47.782,47.782l23.642-23.642l-47.782-47.782l10.908-10.908l23.71,23.71l23.642-23.642l-23.71-23.71\n\\t\\t\\tl10.908-10.908l23.711,23.711l23.642-23.642l-23.711-23.711l10.909-10.909l47.782,47.782l23.642-23.642l-47.782-47.782\n\\t\\t\\tl10.908-10.908l23.71,23.711l23.642-23.642l-23.711-23.71L334.6,81.837l23.711,23.71l23.642-23.642l-23.711-23.712l10.908-10.908\n\\t\\t\\tl95.564,95.564L142.85,464.714L47.286,369.15z\"/>\n\\t</g>\n</g>\n</svg>`;\n\ninterface IRulerSwitcherParams extends IControlParams {\n    ignoreTerrain?: boolean;\n}\n\n/**\n * Activate ruler\n */\nexport class RulerSwitcher extends Control {\n    ruler: HeightRuler;\n\n    constructor(options: IRulerSwitcherParams = {}) {\n        super({\n            name: \"RulerSwitcher\",\n            ...options\n        });\n\n        this.ruler = new HeightRuler({\n            ignoreTerrain: options.ignoreTerrain\n        });\n    }\n\n    public override oninit() {\n        this.planet!.addControl(this.ruler);\n        this._createMenuBtn();\n    }\n\n    public override onactivate() {\n        this.ruler.activate();\n    }\n\n    public override ondeactivate() {\n        this.ruler.deactivate();\n    }\n\n    protected _createMenuBtn() {\n\n        let btn = new ToggleButton({\n            classList: [\"og-map-button\", \"og-ruler_button\"],\n            icon: ICON_BUTTON_SVG\n        });\n\n        btn.appendTo(this.renderer!.div!);\n\n        btn.events.on(\"change\", (isActive: boolean) => {\n            if (isActive) {\n                this.onactivate();\n            } else {\n                this.ondeactivate();\n            }\n        });\n    }\n}\n","import {Control, IControlParams} from \"../Control\";\nimport {SelectionScene} from \"./SelectionScene\";\nimport {ToggleButton} from \"../../ui/ToggleButton\";\n\nconst ICON_BUTTON_SVG = `<?xml version=\"1.0\" encoding=\"utf-8\"?><!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\n<svg width=\"800px\" height=\"800px\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" role=\"img\" class=\"iconify iconify--gis\" preserveAspectRatio=\"xMidYMid meet\"><path d=\"M2.1 0v1.914H0v6h3V3h5.1V0h-6zm9 0v3h6V0h-6zm9 0v3h6V0h-6zm9 0v3h6V0h-6zm9 0v3h6V0h-6zm9 0v3h6V0h-6zm9 0v3h6V0h-6zm9 0v3h1.8v1.2h3V0h-4.8zm1.8 7.2v6h3v-6h-3zM0 10.913v6h3v-6H0zM66.9 16.2v6h3v-6h-3zM0 19.914v6h3v-6H0zM66.9 25.2v6h3v-6h-3zM0 28.914v6h3v-6H0zM66.9 34.2v6h3v-6h-3zM0 37.914v6h3v-6H0zM66.9 43.2v6h3v-6h-3zM0 46.914v6h3v-6H0zM66.9 52.2v6h3v-6h-3zM0 55.914v5.191h3.809v-3H3v-2.19H0zm6.809 2.191v3h6v-3h-6zm9 0v3h6v-3h-6zm9 0v3h6v-3h-6zm9 0v3h6v-3h-6zm9 0v3h6v-3h-6zm9 0v3h6v-3h-6zm9 0v3h6v-3h-6zm9.648 1.899a2.076 2.076 0 0 0-2.19 2.324l3.137 33.676c.2 1.635 2.135 2.399 3.397 1.34l6.623-5.371l2.969 5.142c1.707 2.958 4.417 3.684 7.375 1.977c2.957-1.708 3.684-4.417 1.976-7.375l-2.959-5.125l7.848-3.008c1.548-.564 1.855-2.62.539-3.611L71.576 60.416a2.073 2.073 0 0 0-1.119-.412z\" fill=\"#000000\"></path></svg>`;\n\ninterface ISelectionParams extends IControlParams {\n    ignoreTerrain?: boolean;\n    onSelect?: boolean;\n    autoSelectionHide?: boolean\n}\n\n/**\n * Activate Selection\n * @param {boolean} [options.ignoreTerrain=false].\n * @param {function} options.onSelect - callback (extent) => {} where extent is selected extent array [minLon,minLat,maxLon,maxLat]\n * @param {boolean} [options.autoSelectionHide=false] - clear selection rectangle  after passing extent to callback\n * @example:\n * to use bootstrap icons, include\n *  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.2/font/bootstrap-icons.css\">\n *\n * new Selection({\n *       ignoreTerrain: false,\n *       autoSelectionHide:true,\n *       onSelect: (extent) => {\n *\n *           var vectorSource = new ol.source.Vector({\n *               format: new GeoJSON(),\n *               url: function (extent) {\n *                   return 'https://snap.ogs.trieste.it/geoserver/snap/ows?service=WFS&' +\n *                           'version=1.1.0&request=GetFeature&typename=snap:all_dataset_segy_view&' +\n *                           'outputFormat=application/json&srsname=EPSG:4326&' +\n *                           'bbox=' + extent.join(',') + ',EPSG:4326';\n *               },\n *               strategy: function (extent, resolution) {\n *                   if (this.resolution && this.resolution != resolution) {\n *                       this.loadedExtentsRtree_.clear();\n *                   }\n *                   return [extent];\n *               }\n *           });\n *\n *           vectorSource.loadFeatures(extent);\n *           \n *           console.log(extent);\n *\n *       }\n *   });\n */\nexport class Selection extends Control {\n    protected _selectorScene: SelectionScene;\n    protected _toggleBtn: ToggleButton;\n\n    constructor(options: ISelectionParams = {}) {\n        super(options);\n\n        this._selectorScene = new SelectionScene({\n            name: `selectionScene:${this.__id}`,\n            ignoreTerrain: options.ignoreTerrain,\n            onSelect: options.onSelect,\n            autoSelectionHide: options.autoSelectionHide\n        });\n\n\n        this._toggleBtn = new ToggleButton({\n            classList: [\"og-map-button\", \"og-selection_button\"],\n            icon: ICON_BUTTON_SVG\n        });\n    }\n\n    public set ignoreTerrain(v: boolean) {\n        this._selectorScene.ignoreTerrain = v;\n    }\n\n    public override oninit() {\n        this._toggleBtn.appendTo(this.renderer!.div!);\n\n        this._toggleBtn.events.on(\"change\", (isActive: boolean) => {\n            if (isActive) {\n                this.activate();\n            } else {\n                this.deactivate();\n            }\n        });\n\n        this._selectorScene.bindPlanet(this.planet);\n    }\n\n    public override onactivate() {\n        this.renderer!.addNode(this._selectorScene);\n    }\n\n    override ondeactivate() {\n        this.renderer!.removeNode(this._selectorScene);\n    }\n}\n","import { print2d } from \"../utils/shared\";\nimport {Control, IControlParams} from \"./Control\";\n\n/**\n * Frame per second(FPS) display control.\n */\nexport class ShowFps extends Control {\n    constructor(options: IControlParams) {\n        super(options);\n    }\n\n    public override oninit() {\n        let d = document.createElement(\"div\");\n        d.className = \"defaultText \";\n        d.id = \"ogShowFpsControl\";\n        document.body.appendChild(d);\n        this.renderer!.events.on(\"draw\", this._draw, this);\n    }\n\n    protected _draw() {\n        print2d(\n            \"ogShowFpsControl\",\n            (1000.0 / this.renderer!.handler.deltaTime).toFixed(1),\n            this.renderer!.handler.canvas!.clientWidth - 60,\n            0\n        );\n    }\n}","import {Camera} from \"../camera/Camera\";\nimport {Control, IControlParams} from \"./Control\";\nimport {input} from \"../input/input\";\n\ninterface ISimpleNavigationParams extends IControlParams {\n    speed?: number;\n}\n\n/**\n * Simple keyboard camera navigation with W,S,A,D and shift keys to fly around the scene.\n */\nexport class SimpleNavigation extends Control {\n    public speed: number;\n\n    constructor(options: ISimpleNavigationParams = {}) {\n        super({\n            name: \"SimpleNavigation\",\n            autoActivate: true, ...options\n        });\n        this.speed = options.speed || 1.0;\n    }\n\n    override oninit() {\n\n    }\n\n    public override onactivate() {\n        super.onactivate();\n        let r = this.renderer!;\n        r.events.on(\"keypress\", input.KEY_W, this.onCameraMoveForward, this);\n        r.events.on(\"keypress\", input.KEY_S, this.onCameraMoveBackward, this);\n        r.events.on(\"keypress\", input.KEY_A, this.onCameraStrifeLeft, this);\n        r.events.on(\"keypress\", input.KEY_D, this.onCameraStrifeRight, this);\n        r.events.on(\"keypress\", input.KEY_UP, this.onCameraLookUp, this);\n        r.events.on(\"keypress\", input.KEY_DOWN, this.onCameraLookDown, this);\n        r.events.on(\"keypress\", input.KEY_LEFT, this.onCameraTurnLeft, this);\n        r.events.on(\"keypress\", input.KEY_RIGHT, this.onCameraTurnRight, this);\n        r.events.on(\"keypress\", input.KEY_Q, this.onCameraRollLeft, this);\n        r.events.on(\"keypress\", input.KEY_E, this.onCameraRollRight, this);\n    }\n\n    public override ondeactivate() {\n        super.ondeactivate();\n        let r = this.renderer!;\n        r.events.off(\"keypress\", input.KEY_W, this.onCameraMoveForward);\n        r.events.off(\"keypress\", input.KEY_S, this.onCameraMoveBackward);\n        r.events.off(\"keypress\", input.KEY_A, this.onCameraStrifeLeft);\n        r.events.off(\"keypress\", input.KEY_D, this.onCameraStrifeRight);\n        r.events.off(\"keypress\", input.KEY_UP, this.onCameraLookUp);\n        r.events.off(\"keypress\", input.KEY_DOWN, this.onCameraLookDown);\n        r.events.off(\"keypress\", input.KEY_LEFT, this.onCameraTurnLeft);\n        r.events.off(\"keypress\", input.KEY_RIGHT, this.onCameraTurnRight);\n        r.events.off(\"keypress\", input.KEY_Q, this.onCameraRollLeft);\n        r.events.off(\"keypress\", input.KEY_E, this.onCameraRollRight);\n    }\n\n    protected onCameraMoveForward() {\n        if (this._active) {\n            let cam = this.renderer!.activeCamera!;\n            cam.slide(0, 0, -this.speed);\n            cam.update();\n        }\n    }\n\n    protected onCameraMoveBackward() {\n        let cam = this.renderer!.activeCamera!;\n        cam.slide(0, 0, this.speed);\n        cam.update();\n    }\n\n    protected onCameraStrifeLeft() {\n        let cam = this.renderer!.activeCamera!;\n        cam.slide(-this.speed, 0, 0);\n        cam.update();\n    }\n\n    protected onCameraStrifeRight() {\n        let cam = this.renderer!.activeCamera!;\n        cam.slide(this.speed, 0, 0);\n        cam.update();\n    }\n\n    protected onCameraLookUp() {\n        let cam = this.renderer!.activeCamera!;\n        cam.pitch(0.5);\n        cam.update();\n    }\n\n    protected onCameraLookDown() {\n        let cam = this.renderer!.activeCamera!;\n        cam.pitch(-0.5);\n        cam.update();\n    }\n\n    protected onCameraTurnLeft() {\n        let cam = this.renderer!.activeCamera!;\n        cam.yaw(0.5);\n        cam.update();\n    }\n\n    protected onCameraTurnRight() {\n        let cam = this.renderer!.activeCamera!;\n        cam.yaw(-0.5);\n        cam.update();\n    }\n\n    protected onCameraRollLeft() {\n        let cam = this.renderer!.activeCamera!;\n        cam.roll(-0.5);\n        cam.update();\n    }\n\n    protected onCameraRollRight() {\n        let cam = this.renderer!.activeCamera!;\n        cam.roll(0.5);\n        cam.update();\n    }\n}","import {input} from \"../input/input\";\nimport {Control, IControlParams} from \"./Control\";\n\ninterface IToggleWireframe extends IControlParams {\n    isActive?: boolean;\n}\n\n/**\n * Planet GL draw mode(TRIANGLE_STRIP/LINE_STRING) changer.\n */\nexport class ToggleWireframe extends Control {\n    protected _isActive = false;\n\n    constructor(options: IToggleWireframe = {}) {\n        super(options);\n        this._isActive = options.isActive || false;\n    }\n\n    public override oninit() {\n        this.renderer!.events.on(\"charkeypress\", input.KEY_X, this.toogleWireframe, this);\n        if (this._isActive) {\n            this.planet!.setDrawMode(this.renderer!.handler.gl!.LINE_STRIP);\n        }\n    }\n\n    public toogleWireframe = () => {\n        if (this.renderer && this.renderer.handler.gl) {\n            if (this.planet!.drawMode === this.renderer.handler.gl.LINE_STRIP) {\n                this.planet!.setDrawMode(this.renderer.handler.gl.TRIANGLE_STRIP);\n            } else {\n                this.planet!.setDrawMode(this.renderer.handler.gl.LINE_STRIP);\n            }\n        }\n    }\n}\n","/**\n * @module og/segment/SegmentHelper\n */\n\nimport {N, W, S, E} from '../quadTree/quadTree';\n\ntype IndexTypeArray = Uint32Array;\ntype IndexesTable = [IndexTypeArray[][], IndexTypeArray[][], IndexTypeArray[][], IndexTypeArray[][]];\n\n\nfunction NewIndexesTypedArray(arr: number[]): IndexTypeArray {\n    return new Uint32Array(arr);\n}\n\nfunction NewIndexesTypedArrayEmpty(size: number): IndexTypeArray {\n    return new Uint32Array(size);\n}\n\nfunction createCenterBodyIndexes(size: number): IndexTypeArray {\n\n    let indexes = [];\n\n    let i0 = 1,\n        j0 = 1;\n\n    let i1 = 1,\n        j1 = 1;\n\n    let ind1 = 0, ind2 = 0, nr = 0;\n    for (let i = i0; i < size - 1 - i1; i++) {\n        for (let j = j0; j < size - j1; j++) {\n            ind1 = i * size + j;\n            nr = (i + 1) * size;\n            ind2 = nr + j;\n            indexes.push(ind1, ind2);\n        }\n        indexes.push(ind2, nr + j0);\n    }\n    indexes.push(indexes[indexes.length - 1], size * size - size);\n\n    return NewIndexesTypedArray(indexes);\n}\n\nfunction createWestNeighborSkirt(size: number, deltaGr: number): IndexTypeArray {\n    let indexes = [];\n    const grCount = (size - 1) / deltaGr;\n    const b = size * size - size;\n    let k = 0;\n    for (let i = 0; i < size - 2; i++) {\n        if (i % grCount === 0) {\n            k = i;\n        }\n        let rind = b - size * i - size + 1,\n            lind = b - size * k;\n        indexes.push(lind, rind);\n    }\n\n    if (deltaGr === (size - 1)) {\n        indexes.push(size);\n        indexes.push(0);\n    }\n\n    return NewIndexesTypedArray(indexes);\n}\n\nfunction createNorthNeighborSkirt(size: number, deltaGr: number): IndexTypeArray {\n    let indexes = [];\n    const grCount = (size - 1) / deltaGr;\n    let k = 0;\n    for (let i = 0; i < size - 2; i++) {\n        if (i % grCount === 0) {\n            k = i;\n        }\n        let rind = size + i + 1,\n            lind = k;\n        indexes.push(lind, rind);\n    }\n\n    if (deltaGr === (size - 1)) {\n        indexes.push(size - 2);\n        indexes.push(size - 1);\n    }\n\n    return NewIndexesTypedArray(indexes);\n}\n\nfunction createEastNeighborSkirt(size: number, deltaGr: number): IndexTypeArray {\n    let indexes = [];\n    const grCount = (size - 1) / deltaGr;\n    let k = 0;\n    for (let i = 0; i < size - 2; i++) {\n        if (i % grCount === 0) {\n            k = i;\n        }\n        let rind = size * (i + 1) + size - 2,\n            lind = size + size * k - 1;\n        indexes.push(lind, rind);\n    }\n\n    if (deltaGr === (size - 1)) {\n        indexes.push(size * (size - 1) - 1);\n        indexes.push(size * size - 1);\n    }\n\n    return NewIndexesTypedArray(indexes);\n}\n\nfunction createSouthNeighborSkirt(size: number, deltaGr: number): IndexTypeArray {\n    let indexes = [];\n    const grCount = (size - 1) / deltaGr;\n    let k = 0;\n    const rb = size * (size - 1) - 2;\n    const lb = size * size - 1;\n    for (let i = 0; i < size - 2; i++) {\n        if (i % grCount === 0) {\n            k = i;\n        }\n        let rind = rb - i,\n            lind = lb - k;\n        indexes.push(lind, rind);\n    }\n\n    if (deltaGr === (size - 1)) {\n        indexes.push(size * size - size + 1);\n    }\n    indexes.push(size * size - size);\n\n    return NewIndexesTypedArray(indexes);\n}\n\nfunction initIndexesBodySkirts(pow: number): IndexesTable {\n    let table: IndexesTable = [[], [], [], []];\n\n    for (let i = 0; i <= pow; i++) {\n        let d = Math.pow(2, i),\n            d1 = d + 1;\n\n        table[N][i] = [];\n        table[W][i] = [];\n        table[S][i] = [];\n        table[E][i] = [];\n\n        for (let j = 0; j <= pow; j++) {\n            let dd = Math.pow(2, j);\n            table[W][i][j] = createWestNeighborSkirt(d1, dd);\n            table[N][i][j] = createNorthNeighborSkirt(d1, dd);\n            table[E][i][j] = createEastNeighborSkirt(d1, dd);\n            table[S][i][j] = createSouthNeighborSkirt(d1, dd);\n\n        }\n    }\n    return table;\n}\n\nfunction initIndexBodiesTable(pow: number): IndexTypeArray[] {\n    let table = [];\n    for (let i = 0; i <= pow; i++) {\n        const d = Math.pow(2, i);\n        table[i] = createCenterBodyIndexes(d + 1);\n    }\n    return table;\n}\n\nfunction createTextureCoords(size: number): Uint16Array {\n    let texCoords = new Uint16Array((size + 1) * (size + 1) * 2);\n    let k = 0;\n    for (let i = 0; i <= size; i++) {\n        for (let j = 0; j <= size; j++) {\n            texCoords[k++] = j / size * 0xFFFF;\n            texCoords[k++] = i / size * 0xFFFF;\n        }\n    }\n    return texCoords;\n}\n\nclass SegmentHelper {\n\n    protected _maxGridSize: number;\n    public centerIndexesTable: IndexTypeArray[];\n    public skirtsIndexesTable: IndexesTable;\n\n    constructor(maxGridSize: number = 0) {\n        this._maxGridSize = maxGridSize;\n        this.centerIndexesTable = initIndexBodiesTable(this._maxGridSize)\n        this.skirtsIndexesTable = initIndexesBodySkirts(this._maxGridSize);\n    }\n\n    public get maxGridSize(): number {\n        return this._maxGridSize;\n    }\n\n    public init() {\n        this.centerIndexesTable = initIndexBodiesTable(this._maxGridSize);\n        this.skirtsIndexesTable = initIndexesBodySkirts(this._maxGridSize);\n    }\n\n    public setMaxGridSize(gridSize: number) {\n        this._maxGridSize = gridSize;\n        this.init();\n    }\n\n    public createSegmentIndexes(size: number, sidesSizes: [number, number, number, number]) {\n        if (size) {\n            let c = this.centerIndexesTable[size],\n                w = this.skirtsIndexesTable[W][size][sidesSizes[W]],\n                n = this.skirtsIndexesTable[N][size][sidesSizes[N]],\n                e = this.skirtsIndexesTable[E][size][sidesSizes[E]],\n                s = this.skirtsIndexesTable[S][size][sidesSizes[S]];\n\n            let indexes = NewIndexesTypedArrayEmpty(c.length + w.length + n.length + e.length + s.length);\n\n            indexes.set(c, 0);\n            indexes.set(w, c.length);\n            indexes.set(n, c.length + w.length);\n            indexes.set(e, c.length + w.length + n.length);\n            indexes.set(s, c.length + w.length + n.length + e.length);\n\n            return indexes;\n        } else {\n            return NewIndexesTypedArray([0, 2, 1, 3]);\n        }\n    }\n\n    public initTextureCoordsTable(pow: number): Uint16Array[] {\n        let table = [];\n        for (let i = 0; i <= pow; i++) {\n            const d = Math.pow(2, i);\n            table[i] = createTextureCoords(d);\n        }\n        return table;\n    }\n}\n\nlet instance = new SegmentHelper();\n\nexport function getInstance() {\n    return instance;\n}","export const UTILS = `\n    float getLerpValue(in float min, in float max, in float between)\n    {\n        return (clamp(between, min, max) - min) / (max - min);\n    }\n    \n    vec3 aces(vec3 color) \n    {\n        float a = 2.51;\n        float b = 0.03;\n        float c = 2.43;\n        float d = 0.59;\n        float e = 0.14;\n        return clamp((color * (a * color + b)) / (color * (c * color + d ) + e), 0.0, 1.0);\n    }\n     \n    bool intersectSphere(vec3 rayOrigin, vec3 rayDirection, float radius, inout float t1, inout float t2) \n    {\n        float b = dot(rayDirection, rayOrigin);\n        float c = dot(rayOrigin, rayOrigin) - radius * radius;\n        float d = b * b - c;\n        if (d < 0.0) {\n            return false;\n        }\n        t1 = -b - sqrt(d);\n        t2 = -b + sqrt(d);\n        return true;\n    }\n    \n    bool intersectSphere(vec3 rayOrigin, vec3 rayDirection, float radius, inout float t) \n    {\n        float b = dot(rayDirection, rayOrigin);\n        float c = dot(rayOrigin, rayOrigin) - radius * radius;\n        float d = b * b - c;\n        if (d < 0.0) {\n            return false;\n        }\n        t = -b - sqrt(d);\n        return true;\n    }\n    \n    bool intersectEllipsoid( in vec3 ro, in vec3 rd, in vec3 ra, inout float t )\n    {\n        vec3 ocn = ro/ra;\n        vec3 rdn = rd/ra;\n        float a = dot( rdn, rdn );\n        float b = dot( ocn, rdn );\n        float c = dot( ocn, ocn );\n        float h = b*b - a*(c-1.0);\n                       \n        if (h < 0.0) \n        { \n            return false; \n        }\n        \n        t = (-b-sqrt(h))/a;\n        \n        return true;\n    }\n    \n    bool intersectEllipsoid( in vec3 ro, in vec3 rd, in vec3 ra, inout float t1, inout float t2)\n    {\n        vec3 ocn = ro/ra;\n        vec3 rdn = rd/ra;\n        float a = dot( rdn, rdn );\n        float b = dot( ocn, rdn );\n        float c = dot( ocn, ocn );\n        float h = b*b - a*(c-1.0);\n                \n        if (h < 0.0) \n        { \n            return false; \n        }\n        \n        h = sqrt(h);\n        t1 = (-b-h)/a;\n        t2 = (-b+h)/a;\n        \n        return true;\n    }\n    \n    vec3 normalEllipsoid( in vec3 pos, in vec3 ra )\n    {\n        return normalize( pos/(ra*ra) );\n    }\n`;","import { Program } from '../webgl/Program';\nimport { UTILS } from './utils';\n\nexport const COMMON =\n    `\n    \n    ${UTILS}\n    \n    #define PI 3.1415926538\n    #define ATMOS_HEIGHT 100000.0\n    #define RAYLEIGH_SCALE 0.08\n    #define MIE_SCALE 0.012\n    \n    #define SAMPLE_COUNT 16\n    #define SQRT_SAMPLE_COUNT 4\n            \n    const float GROUND_ALBEDO = 0.05 / PI;\n\n    // Sphere\n    const float BOTTOM_RADIUS = 6356752.3142451793;\n    const float TOP_RADIUS = 6356752.3142451793 + ATMOS_HEIGHT;\n        \n    // Ellipsoid\n    const vec3 bottomRadii = vec3(6378137.0, 6378137.0, 6356752.3142451793);           \n    const vec3 topRadii = bottomRadii + ATMOS_HEIGHT;\n    \n    const vec3 SPHERE_TO_ELLIPSOID_SCALE = vec3(BOTTOM_RADIUS) / bottomRadii;           \n    \n    const vec2 rayleighMieHeights = vec2(RAYLEIGH_SCALE, MIE_SCALE) * ATMOS_HEIGHT;\n     \n    const vec3 rayleighScatteringCoefficient = vec3(5.802, 13.558, 33.100) * 1e-6;\n    \n    const float mieScatteringCoefficient = 3.996e-06;\n    const float mieExtinctionCoefficient = 4.440e-06;\n    const vec3 ozoneAbsorptionCoefficient = vec3(0.650, 1.881, 0.085) * 1e-6;\n    \n    const float SUN_ANGULAR_RADIUS = 0.004685;\n    const float SUN_INTENSITY = 1.0;        \n    \n    vec3 sunWithBloom(vec3 rayDir, vec3 sunDir) \n    {\n        float minSunCosTheta = cos(SUN_ANGULAR_RADIUS);            \n        float cosTheta = dot(rayDir, sunDir);\n        if (cosTheta >= minSunCosTheta) return vec3(1.0);                \n        float offset = minSunCosTheta - cosTheta;\n        float gaussianBloom = exp(-offset*15000.0)*0.7;\n        float invBloom = 1.0/(0.09 + offset*200.0)*0.01;\n        return vec3(gaussianBloom + invBloom);\n    }\n    \n    float rayleighPhase(float angle) \n    {\n        return 3.0 / (16.0 * PI) * (1.0 + (angle * angle));\n    }\n    \n    float miePhase(float angle) \n    {\n        float g = 0.8;\n        return 3.0 / (8.0 * PI) * ((1.0 - g * g) * (1.0 + angle * angle)) / ((2.0 + g * g) * pow(1.0 + g * g - 2.0 * g * angle, 1.5));\n    }\n        \n    vec3 opticalDepth(float height, float angle) \n    {\n        vec3 rayOrigin = vec3(0.0, BOTTOM_RADIUS + height, 0.0);\n        vec3 rayDirection = vec3(sqrt(1.0 - angle * angle), angle, 0.0);\n        float t1, t2;\n        intersectSphere(rayOrigin, rayDirection, TOP_RADIUS, t1, t2);\n        float segmentLength = t2 / float(SAMPLE_COUNT);\n        \n        float t = segmentLength * 0.5;\n        vec3 opticalDepth = vec3(0.0);\n        \n        for (int i = 0; i < SAMPLE_COUNT; i++) \n        {\n            vec3 position = rayOrigin + t * rayDirection;\n            float height = length(position) - BOTTOM_RADIUS;\n            opticalDepth.xy += exp(-height / rayleighMieHeights) * segmentLength;\n            \n            // density of the ozone layer is modeled as a triangular \n            // function that is 30 km wide and centered at 25 km altitude\n            opticalDepth.z += (1.0 - min(abs(height - 25e3) / 15e3, 1.0)) * segmentLength;  \n            t += segmentLength;\n        }\n        \n        return opticalDepth;\n    }\n    \n    vec3 transmittance(float height, float angle) \n    {\n        vec3 opticalDepth = opticalDepth(height, angle);\n        return exp(-(rayleighScatteringCoefficient * opticalDepth.x + mieExtinctionCoefficient * opticalDepth.y + ozoneAbsorptionCoefficient * opticalDepth.z));\n    }`;\n\nexport function transmittance(): Program {\n    return new Program(\"transmittance\", {\n        uniforms: {\n            iResolution: \"vec2\"\n        },\n        attributes: {\n            a_position: \"vec2\"\n        },\n\n        vertexShader:\n            `\n            attribute vec2 a_position;\n            \n            void main(void) \n            {\n                gl_Position = vec4(a_position, 0.0, 1.0);\n            }`,\n\n        fragmentShader:\n            `\n            precision highp float;\n            \n            ${COMMON}\n                       \n            uniform vec2 iResolution;\n                        \n            void main(void) \n            {\n                vec2 uv = gl_FragCoord.xy / iResolution.xy;\n                float height = uv.y * ATMOS_HEIGHT;\n                float angle = uv.x * 2.0 - 1.0;\n                gl_FragColor = vec4(transmittance(height, angle), 1.0);\n            }`\n    });\n}\n\nexport function scattering(): Program {\n    return new Program(\"scattering\", {\n        uniforms: {\n            iResolution: \"vec2\",\n            transmittanceTexture: \"sampler2d\"\n        },\n        attributes: {\n            a_position: \"vec2\"\n        },\n\n        vertexShader:\n            `            \n            attribute vec2 a_position;  \n                      \n            void main(void) \n            {\n                gl_Position = vec4(a_position, 0.0, 1.0);\n            }`,\n\n        fragmentShader:\n            `            \n            precision highp float;\n            \n            uniform sampler2D transmittanceTexture;\n            uniform vec2 iResolution;\n            \n            ${COMMON}\n            \n            vec3 transmittanceFromTexture(float height, float angle) \n            {\n                float u = (angle + 1.0) * 0.5;\n                float v = height / ATMOS_HEIGHT;\n                return texture2D(transmittanceTexture, vec2(u, v)).xyz;\n            }\n                                   \n            void main(void) \n            {\n                vec2 uv = gl_FragCoord.xy / iResolution.xy;\n                \n                float height = uv.y * ATMOS_HEIGHT;\n                float angle = uv.x * 2.0 - 1.0;\n                \n                vec3 rayOrigin = vec3(0.0, BOTTOM_RADIUS + height, 0.0);\n                vec3 up = rayOrigin / length(rayOrigin);\n                vec3 lightDirection = vec3(sqrt(1.0 - angle * angle), angle, 0.0);\n                                \n                const float isotropicPhase = 1.0 / (4.0 * PI);\n                \n                vec3 light = vec3(0.0);\n                vec3 lightTransferFactor = vec3(0.0);\n                \n                for (int i = 0; i < SQRT_SAMPLE_COUNT; i++)\n                {\n                    for (int j = 0; j < SQRT_SAMPLE_COUNT; j++)\n                    {\n                        float u = ((0.5 + float(i)) / float(SQRT_SAMPLE_COUNT)) * 2.0 - 1.0;\n                        float v = (0.5 + float(j)) / float(SQRT_SAMPLE_COUNT);\n                        float r = sqrt(1.0 - u * u);\n                        float theta = 2.0 * PI * v;\n                        vec3 rayDirection = vec3(cos(theta) * r, sin(theta) * r, u);\n                                                \n                        float rayAngle = dot(up, rayDirection);\n                        bool cameraBelow = rayAngle < 0.0;\n                        \n                        vec3 transmittanceFromCameraToSpace = transmittanceFromTexture(height, cameraBelow ? -rayAngle : rayAngle);\n                        \n                        float offset = 0.0;\n                        float distanceToSpace = 0.0;\n                        \n                        intersectSphere(rayOrigin, rayDirection, TOP_RADIUS, offset, distanceToSpace);\n                        \n                        float distanceToGround = 0.0;\n                        bool hitGround = intersectSphere(rayOrigin, rayDirection, BOTTOM_RADIUS, distanceToGround) && distanceToGround > 0.0;                        \n                        float segmentLength = (hitGround ? distanceToGround : distanceToSpace) / float(SAMPLE_COUNT);\n                        float t = segmentLength * 0.5;\n                        \n                        vec3 transmittanceCamera;\n                        vec3 transmittanceLight;\n                         \n                        for (int k = 0; k < SAMPLE_COUNT; k++) \n                        {\n                            vec3 position = rayOrigin + t * rayDirection;\n                            float height = length(position) - BOTTOM_RADIUS;\n                            vec3 up = position / length(position);\n                            float rayAngle = dot(up, rayDirection);\n                            float lightAngle = dot(up, lightDirection);\n                            \n                            float distanceToGround;\n                            float shadow = intersectSphere(position, lightDirection, BOTTOM_RADIUS, distanceToGround) && distanceToGround >= 0.0 ? 0.0 : 1.0;\n                            vec3 transmittanceToSpace = transmittanceFromTexture(height, cameraBelow ? -rayAngle : rayAngle);\n                            \n                            transmittanceCamera = cameraBelow ? (transmittanceToSpace / transmittanceFromCameraToSpace) : (transmittanceFromCameraToSpace / transmittanceToSpace);\n                            transmittanceLight = transmittanceFromTexture(height, lightAngle);\n                            \n                            vec2 opticalDensity = exp(-height / rayleighMieHeights);        \n                            vec3 scatteredLight = transmittanceLight * (rayleighScatteringCoefficient * opticalDensity.x + mieScatteringCoefficient * opticalDensity.y) * isotropicPhase;\n                            \n                            light += shadow * transmittanceCamera * scatteredLight * segmentLength;\n                            lightTransferFactor += transmittanceCamera * (rayleighScatteringCoefficient * opticalDensity.x + mieScatteringCoefficient * opticalDensity.y) * segmentLength;\n                            \n                            t += segmentLength;\n                        }\n                    \n                        if (hitGround) \n                        {\n                            vec3 hitPoint = rayOrigin + rayDirection * distanceToGround;\n                            vec3 normal = normalize(hitPoint);\n                            float diffuseAngle = max(dot(normal, lightDirection), 0.0); \n                            float earthAlbedo = 0.05;\n                            light += transmittanceCamera * transmittanceLight * (earthAlbedo / PI) * diffuseAngle;\n                        }\n                    }\n                }\n                \n                light /= float(SAMPLE_COUNT);\n                lightTransferFactor /= float(SAMPLE_COUNT);\n                vec3 color = light / (1.0 - lightTransferFactor);                 \n                gl_FragColor = vec4(color, 1.0);\n            }`\n    });\n}\n\n// const vec3 solar_irradiance = vec3(1.474000,1.850400,1.911980);\n// float GetTextureCoordFromUnitRange(float x, int texture_size) {\n//     return 0.5 / float(texture_size) + x * (1.0 - 1.0 / float(texture_size));\n// }\n//\n// float ClampDistance(float d) {\n//     return max(d, 0.0 * m);\n// }\n//\n// float SafeSqrt(float a) {\n//     return sqrt(max(a, 0.0 * m2));\n// }\n\n// float DistanceToTopAtmosphereBoundary(float r, float mu) {\n//\n//     //assert(r <= atmosphere.top_radius);\n//     //assert(mu >= -1.0 && mu <= 1.0);\n//\n//     float discriminant = r * r * (mu * mu - 1.0) + TOP_RADIUS * TOP_RADIUS;\n//     return ClampDistance(-r * mu + SafeSqrt(discriminant));\n// }\n\n// vec2 GetTransmittanceTextureUvFromRMu(\n//     float r,\n//     float mu)\n// {\n//     //assert(r >= atmosphere.BOTTOM_RADIUS && r <= TOP_RADIUS);\n//     //assert(mu >= -1.0 && mu <= 1.0);\n//\n//     float H = sqrt(TOP_RADIUS * TOP_RADIUS - BOTTOM_RADIUS * BOTTOM_RADIUS);\n//     float rho = SafeSqrt(r * r - BOTTOM_RADIUS * BOTTOM_RADIUS);\n//     float d = DistanceToTopAtmosphereBoundary(r, mu);\n//     float d_min = TOP_RADIUS - r;\n//     float d_max = rho + H;\n//     float x_mu = (d - d_min) / (d_max - d_min);\n//     float x_r = rho / H;\n//\n//     return vec2(\n//         GetTextureCoordFromUnitRange(x_mu, TRANSMITTANCE_TEXTURE_WIDTH),\n//         GetTextureCoordFromUnitRange(x_r, TRANSMITTANCE_TEXTURE_HEIGHT)\n//     );\n// }\n\n// vec3 GetTransmittanceToTopAtmosphereBoundary(in sampler2D transmittance_texture, float r, float mu)\n// {\n//     //assert(r >= BOTTOM_RADIUS && r <= TOP_RADIUS);\n//\n//     vec2 uv = GetTransmittanceTextureUvFromRMu(r, mu);\n//     return texture(transmittance_texture, uv).xyz;\n// }\n\n// vec3 GetTransmittanceToSun(\n//     in sampler2D transmittance_texture,\n//     float r,\n//     float mu_s)\n// {\n//     float sin_theta_h = BOTTOM_RADIUS / r;\n//     float cos_theta_h = -sqrt(max(1.0 - sin_theta_h * sin_theta_h, 0.0));\n//\n//     return GetTransmittanceToTopAtmosphereBoundary(transmittance_texture, r, mu_s) * smoothstep(\n//         -sin_theta_h * SUN_ANGULAR_RADIUS / rad, sin_theta_h * SUN_ANGULAR_RADIUS / rad,\n//         mu_s - cos_theta_h\n//     );\n// }\n\n// vec3 GetSunAndSkyIrradiance(\n//     in sampler2D transmittance_texture,\n//     in vec3 point,\n//     in vec3 normal,\n//     in vec3 sun_direction,\n//     out vec3 sky_irradiance)\n// {\n//     float r = length(point);\n//     float mu_s = dot(point, sun_direction) / r;\n//\n//     sky_irradiance = vec3(0.0);  // GetIrradiance(atmosphere, irradiance_texture, r, mu_s) * (1.0 + dot(normal, point) / r) * 0.5;\n//\n//     return solar_irradiance * GetTransmittanceToSun(transmittance_texture, r, mu_s) * max(dot(normal, sun_direction), 0.0);\n// }","import * as atmos from \"./atmos\";\nimport {Program} from \"../webgl/Program\";\nimport {UTILS} from './utils';\n\n// REMEMBER!\n// src*(1)+dest*(1-src.alpha)\n// glBlendFunc(GL_ONE, GL_ONE_MINUS_SRC_ALPHA);\n// src*(src.alpha)+dest*(1-src.alpha)\n// glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);\n\n\nconst NIGHT = `const vec3 nightStep = 10.0 * vec3(0.58, 0.48, 0.25);`;\n\nconst DEF_BLEND = `#define blend(DEST, SAMPLER, OFFSET, OPACITY) \\\n                    src = texture( SAMPLER, OFFSET.xy + vTextureCoord.xy * OFFSET.zw );\\\n                    DEST = DEST * (1.0 - src.a * OPACITY) + src * OPACITY;`;\n\nconst DEF_BLEND_WEBGL1 = `#define blend(DEST, SAMPLER, OFFSET, OPACITY) \\\n                            src = texture2D( SAMPLER, OFFSET.xy + vTextureCoord.xy * OFFSET.zw ); \\\n                            DEST = DEST * (1.0 - src.a * OPACITY) + src * OPACITY;`;\n\nconst DEF_BLEND_PICKING = `#define blendPicking(DEST, OFFSET, SAMPLER, MASK, COLOR, OPACITY) \\\n    tc = OFFSET.xy + vTextureCoord.xy * OFFSET.zw; \\\n    t = texture2D(SAMPLER, tc); \\\n    p = texture2D(MASK, tc); \\\n    DEST = mix(DEST, vec4(max(COLOR.rgb, p.rgb), OPACITY), (t.a == 0.0 ? 0.0 : 1.0) * COLOR.a);`\n\n\nconst SLICE_SIZE = 4;\n\nexport function drawnode_screen_nl(): Program {\n    return new Program(\"drawnode_screen_nl\", {\n        uniforms: {\n            projectionMatrix: \"mat4\",\n            viewMatrix: \"mat4\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            samplerCount: \"int\",\n            tileOffsetArr: \"vec4\",\n            layerOpacityArr: \"float\",\n            samplerArr: \"sampler2darray\",\n            defaultTexture: \"sampler2d\",\n            height: \"float\"\n        }, attributes: {\n            aVertexPositionHigh: \"vec3\",\n            aVertexPositionLow: \"vec3\",\n            aTextureCoord: \"vec2\"\n        },\n\n        vertexShader:\n            `precision highp float;\n            \n            attribute vec3 aVertexPositionHigh;\n            attribute vec3 aVertexPositionLow;\n            attribute vec2 aTextureCoord;\n\n            uniform mat4 projectionMatrix;\n            uniform mat4 viewMatrix;\n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n            uniform float height;\n\n            varying vec2 vTextureCoord;\n\n            void main(void) {\n\n                vTextureCoord = aTextureCoord;\n                vec3 nh = height * normalize(aVertexPositionHigh + aVertexPositionLow);\n\n                mat4 viewMatrixRTE = viewMatrix;\n                viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n                mat4 m = projectionMatrix * viewMatrixRTE;\n        \n                vec3 highDiff = aVertexPositionHigh - eyePositionHigh;\n                vec3 lowDiff = aVertexPositionLow - eyePositionLow + nh;\n                \n                // This is works for Mac Chrome, prevent some weird optimization I suppose\n                gl_Position =  m * vec4(highDiff + lowDiff, 1.0);\n            }`,\n\n        fragmentShader: `precision highp float;\n            #define SLICE_SIZE ${SLICE_SIZE + 1}\n            uniform vec4 tileOffsetArr[SLICE_SIZE];\n            uniform float layerOpacityArr[SLICE_SIZE];\n            uniform sampler2D defaultTexture;\n            uniform sampler2D samplerArr[SLICE_SIZE];\n            uniform int samplerCount;\n            varying vec2 vTextureCoord;\n\n            ${DEF_BLEND_WEBGL1}\n\n            void main(void) {\n                gl_FragColor = texture2D( defaultTexture, vTextureCoord );\n                if( samplerCount == 0 ) return;\n\n                vec4 src;\n\n                blend(gl_FragColor, samplerArr[0], tileOffsetArr[0], layerOpacityArr[0]);\n                if( samplerCount == 1 ) return;\n\n                blend(gl_FragColor, samplerArr[1], tileOffsetArr[1], layerOpacityArr[1]);\n                if( samplerCount == 2 ) return;\n\n                blend(gl_FragColor, samplerArr[2], tileOffsetArr[2], layerOpacityArr[2]);\n                if( samplerCount == 3 ) return;\n\n                blend(gl_FragColor, samplerArr[3], tileOffsetArr[3], layerOpacityArr[3]);\n                if( samplerCount == 4 ) return;\n\n                blend(gl_FragColor, samplerArr[4], tileOffsetArr[4], layerOpacityArr[4]);\n            }`\n    });\n}\n\nexport function drawnode_screen_wl_webgl1NoAtmos(): Program {\n    return new Program(\"drawnode_screen_wl\", {\n        uniforms: {\n            projectionMatrix: \"mat4\",\n            viewMatrix: \"mat4\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            height: \"float\",\n\n            uGlobalTextureCoord: \"vec4\",\n            uNormalMapBias: \"vec3\",\n\n            samplerCount: \"int\",\n            tileOffsetArr: \"vec4\",\n            layerOpacityArr: \"float\",\n            samplerArr: \"sampler2darray\",\n            defaultTexture: \"sampler2d\",\n            uNormalMap: \"sampler2d\",\n            nightTexture: \"sampler2d\",\n            specularTexture: \"sampler2d\",\n            lightsPositions: \"vec3\",\n            diffuse: \"vec3\",\n            ambient: \"vec3\",\n            specular: \"vec4\",\n\n            camHeight: \"float\",\n            nightTextureCoefficient: \"float\"\n        }, attributes: {\n            aVertexPositionHigh: \"vec3\",\n            aVertexPositionLow: \"vec3\",\n            aTextureCoord: \"vec2\"\n        },\n\n        vertexShader:\n            `\n            attribute vec3 aVertexPositionHigh;\n            attribute vec3 aVertexPositionLow;\n            attribute vec2 aTextureCoord;\n\n            uniform mat4 projectionMatrix;\n            uniform mat4 viewMatrix;\n            uniform vec4 uGlobalTextureCoord;\n            uniform vec3 uNormalMapBias;\n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n            uniform float height;\n\n            varying vec4 vTextureCoord;\n            varying vec3 v_vertex;\n            varying vec3 cameraPosition;\n            varying vec2 vGlobalTextureCoord;\n            varying float v_height;\n\n            void main(void) {\n\n                // I replace it here (from the bottom) because it \n                // somehow affects on float precision on MacPC Chrome\n                vTextureCoord.xy = aTextureCoord;\n                vGlobalTextureCoord = uGlobalTextureCoord.xy + (uGlobalTextureCoord.zw - uGlobalTextureCoord.xy) * aTextureCoord;\n                vTextureCoord.zw = uNormalMapBias.z * ( aTextureCoord + uNormalMapBias.xy );\n\n                vec3 aVertexPosition = aVertexPositionHigh + aVertexPositionLow;                \n                vec3 nh = height * normalize(aVertexPosition);\n                cameraPosition = eyePositionHigh + eyePositionLow;\n                \n                vec3 highDiff = aVertexPositionHigh - eyePositionHigh;\n                vec3 lowDiff = aVertexPositionLow - eyePositionLow + nh;\n\n                mat4 viewMatrixRTE = viewMatrix;\n                viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                v_height = height;\n                v_vertex = aVertexPosition + nh;\n                            \n                gl_Position = projectionMatrix * viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n            }`,\n\n        fragmentShader:\n            `\n            precision highp float;\n            \n            #define MAX_POINT_LIGHTS 1\n            #define SLICE_SIZE ${SLICE_SIZE + 1}\n\n            uniform vec4 specular;\n            uniform vec3 diffuse;\n            uniform vec3 ambient;\n\n            uniform sampler2D uNormalMap;\n            uniform sampler2D nightTexture;\n            uniform sampler2D specularTexture;\n            uniform sampler2D defaultTexture;\n            uniform sampler2D samplerArr[SLICE_SIZE];\n\n            uniform vec4 tileOffsetArr[SLICE_SIZE];\n            uniform vec3 lightsPositions[MAX_POINT_LIGHTS];\n            uniform float layerOpacityArr[SLICE_SIZE];\n\n            uniform int samplerCount;\n            uniform float nightTextureCoefficient;              \n            uniform float camHeight;\n\n            varying vec4 vTextureCoord;\n            varying vec3 v_vertex;\n            varying vec3 cameraPosition;\n            varying vec2 vGlobalTextureCoord;\n            varying float v_height;\n\n            vec3 sunPos;\n\n            ${NIGHT}\n\n            ${DEF_BLEND_WEBGL1}\n            \n            ${UTILS}\n                                               \n            void main(void) {\n            \n                sunPos = lightsPositions[0];\n                                \n                vec3 texNormal = texture2D(uNormalMap, vTextureCoord.zw).rgb;\n                vec3 normal = normalize((texNormal - 0.5) * 2.0);\n                \n                float minH = 1200000.0;\n                float maxH = minH * 3.0;\n                float nightCoef = getLerpValue(minH, maxH, camHeight) * nightTextureCoefficient;\n                                \n                if(camHeight > 6000000.0)\n                {\n                    normal = normalize(v_vertex);\n                }\n                                            \n                vec3 lightDir = normalize(sunPos);\n                vec3 viewDir = normalize(cameraPosition - v_vertex);\n                                                \n                float overGround = 1.0 - step(0.1, v_height);\n\n                float shininess = texture2D( specularTexture, vGlobalTextureCoord.st ).r * 255.0 * overGround;\n                vec3 reflectionDirection = reflect(-lightDir, normal);\n                float reflection = max( dot(reflectionDirection, viewDir), 0.0);\n                vec3 spec = specular.rgb * pow( reflection, specular.w) * shininess;                \n                float diffuseLightWeighting = max(dot(normal, lightDir), 0.0);                \n                vec4 nightImageColor = texture2D( nightTexture, vGlobalTextureCoord.st );\n                vec3 night = nightStep * (.18 - diffuseLightWeighting * 3.0) * nightImageColor.rgb * nightCoef;\n                night *= overGround * step(0.0, night);                \n                vec4 lightWeighting = vec4(ambient + diffuse * diffuseLightWeighting + night, 1.0);\n                \n                gl_FragColor = texture2D( defaultTexture, vTextureCoord.xy );\n                if( samplerCount == 0 ) {\n                    gl_FragColor = gl_FragColor * lightWeighting + vec4(spec, 0.0);\n                    return;\n                }\n\n                vec4 src;\n\n                blend(gl_FragColor, samplerArr[0], tileOffsetArr[0], layerOpacityArr[0]);\n                if( samplerCount == 1 ) {                \n                    gl_FragColor = gl_FragColor * lightWeighting + vec4(spec, 0.0);\n                    return;\n                }\n\n                blend(gl_FragColor, samplerArr[1], tileOffsetArr[1], layerOpacityArr[1]);\n                if( samplerCount == 2 ) {\n                    gl_FragColor = gl_FragColor * lightWeighting + vec4(spec, 0.0);\n                    return;\n                }\n\n                blend(gl_FragColor, samplerArr[2], tileOffsetArr[2], layerOpacityArr[2]);\n                if( samplerCount == 3 ) {\n                    gl_FragColor = gl_FragColor * lightWeighting + vec4(spec, 0.0);\n                    return;\n                }\n\n                blend(gl_FragColor, samplerArr[3], tileOffsetArr[3], layerOpacityArr[3]);\n                if( samplerCount == 4 ) {\n                    gl_FragColor = gl_FragColor * lightWeighting + vec4(spec, 0.0);\n                    return;\n                }\n\n                blend(gl_FragColor, samplerArr[4], tileOffsetArr[4], layerOpacityArr[4]);\n                gl_FragColor = gl_FragColor * lightWeighting + vec4(spec, 0.0);\n            }`\n    });\n}\n\nexport function drawnode_screen_wl_webgl2NoAtmos(): Program {\n    return new Program(\"drawnode_screen_wl\", {\n        uniforms: {\n            projectionMatrix: \"mat4\",\n            viewMatrix: \"mat4\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            height: \"float\",\n\n            uGlobalTextureCoord: \"vec4\",\n            uNormalMapBias: \"vec3\",\n\n            samplerCount: \"int\",\n            tileOffsetArr: \"vec4\",\n            layerOpacityArr: \"float\",\n            samplerArr: \"sampler2darray\",\n            defaultTexture: \"sampler2d\",\n            uNormalMap: \"sampler2d\",\n            nightTexture: \"sampler2d\",\n            specularTexture: \"sampler2d\",\n            lightsPositions: \"vec3\",\n            diffuse: \"vec3\",\n            ambient: \"vec3\",\n            specular: \"vec4\",\n\n            camHeight: \"float\",\n            nightTextureCoefficient: \"float\"\n        }, attributes: {\n            aVertexPositionHigh: \"vec3\",\n            aVertexPositionLow: \"vec3\",\n            aTextureCoord: \"vec2\"\n        },\n\n        vertexShader:\n            `#version 300 es\n\n            precision highp float;\n\n            in vec3 aVertexPositionHigh;\n            in vec3 aVertexPositionLow;\n            in vec2 aTextureCoord;\n\n            uniform mat4 projectionMatrix;\n            uniform mat4 viewMatrix;\n            uniform vec4 uGlobalTextureCoord;\n            uniform vec3 uNormalMapBias;\n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n            uniform float height;\n\n            out vec4 vTextureCoord;\n            out vec3 v_vertex;\n            out vec3 cameraPosition;\n            out vec2 vGlobalTextureCoord;\n            out float v_height;\n\n            void main(void) {\n\n                // I replace it here (from the bottom) because it \n                // somehow affects on float precision on MacPC Chrome\n                vTextureCoord.xy = aTextureCoord;\n                vGlobalTextureCoord = uGlobalTextureCoord.xy + (uGlobalTextureCoord.zw - uGlobalTextureCoord.xy) * aTextureCoord;\n                vTextureCoord.zw = uNormalMapBias.z * ( aTextureCoord + uNormalMapBias.xy );\n\n                vec3 aVertexPosition = aVertexPositionHigh + aVertexPositionLow;                \n                vec3 nh = height * normalize(aVertexPosition);\n                cameraPosition = eyePositionHigh + eyePositionLow;\n                \n                vec3 highDiff = aVertexPositionHigh - eyePositionHigh;\n                vec3 lowDiff = aVertexPositionLow - eyePositionLow + nh;\n\n                mat4 viewMatrixRTE = viewMatrix;\n                viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                v_height = height;\n                v_vertex = aVertexPosition + nh;\n                            \n                gl_Position = projectionMatrix * viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n            }`,\n\n        fragmentShader:\n            `#version 300 es\n\n            precision highp float;\n            \n            #define MAX_POINT_LIGHTS 1\n            #define SLICE_SIZE ${SLICE_SIZE + 1}\n\n            uniform vec4 specular;\n            uniform vec3 diffuse;\n            uniform vec3 ambient;  \n\n            uniform sampler2D uNormalMap;\n            uniform sampler2D nightTexture;\n            uniform sampler2D specularTexture;\n            uniform sampler2D defaultTexture;\n            uniform sampler2D samplerArr[SLICE_SIZE];\n\n            uniform vec4 tileOffsetArr[SLICE_SIZE];\n            uniform vec3 lightsPositions[MAX_POINT_LIGHTS];\n            uniform float layerOpacityArr[SLICE_SIZE];\n\n            uniform int samplerCount;\n            uniform float nightTextureCoefficient;\n                \n            uniform float camHeight;\n\n            in vec4 vTextureCoord;\n            in vec3 v_vertex;\n            in vec3 cameraPosition;\n            in vec2 vGlobalTextureCoord;\n            in float v_height;\n\n            vec3 sunPos;\n\n            layout(location = 0) out vec4 diffuseColor;\n\n            ${NIGHT}\n\n            ${DEF_BLEND}\n            \n            ${UTILS}\n                                               \n            void main(void) {\n            \n                sunPos = lightsPositions[0];\n                                \n                vec3 texNormal = texture(uNormalMap, vTextureCoord.zw).rgb;\n                vec3 normal = normalize((texNormal - 0.5) * 2.0);\n                \n                float minH = 1200000.0;\n                float maxH = minH * 3.0;\n                float nightCoef = getLerpValue(minH, maxH, camHeight) * nightTextureCoefficient;\n                                \n                if(camHeight > 6000000.0)\n                {\n                    normal = normalize(v_vertex);\n                }\n                                            \n                vec3 lightDir = normalize(sunPos);\n                vec3 viewDir = normalize(cameraPosition - v_vertex);\n                                                \n                float overGround = 1.0 - step(0.1, v_height);\n\n                float shininess = texture( specularTexture, vGlobalTextureCoord.st ).r * 255.0 * overGround;\n                vec3 reflectionDirection = reflect(-lightDir, normal);\n                float reflection = max( dot(reflectionDirection, viewDir), 0.0);\n                vec3 spec = specular.rgb * pow( reflection, specular.w) * shininess;                \n                float diffuseLightWeighting = max(dot(normal, lightDir), 0.0);                \n                vec4 nightImageColor = texture( nightTexture, vGlobalTextureCoord.st );\n                vec3 night = nightStep * (.18 - diffuseLightWeighting * 3.0) * nightImageColor.rgb * nightCoef;\n                night *= overGround * step(0.0, night);                \n                vec4 lightWeighting = vec4(ambient + diffuse * diffuseLightWeighting + night, 1.0);\n                \n                diffuseColor = texture( defaultTexture, vTextureCoord.xy );\n                if( samplerCount == 0 ) {\n                    diffuseColor = diffuseColor * lightWeighting + vec4(spec, 0.0);\n                    return;\n                }\n\n                vec4 src;\n\n                blend(diffuseColor, samplerArr[0], tileOffsetArr[0], layerOpacityArr[0]);\n                if( samplerCount == 1 ) {                \n                    diffuseColor = diffuseColor * lightWeighting + vec4(spec, 0.0);\n                    return;\n                }\n\n                blend(diffuseColor, samplerArr[1], tileOffsetArr[1], layerOpacityArr[1]);\n                if( samplerCount == 2 ) {\n                    diffuseColor = diffuseColor * lightWeighting + vec4(spec, 0.0);\n                    return;\n                }\n\n                blend(diffuseColor, samplerArr[2], tileOffsetArr[2], layerOpacityArr[2]);\n                if( samplerCount == 3 ) {\n                    diffuseColor = diffuseColor * lightWeighting + vec4(spec, 0.0);\n                    return;\n                }\n\n                blend(diffuseColor, samplerArr[3], tileOffsetArr[3], layerOpacityArr[3]);\n                if( samplerCount == 4 ) {\n                    diffuseColor = diffuseColor * lightWeighting + vec4(spec, 0.0);\n                    return;\n                }\n\n                blend(diffuseColor, samplerArr[4], tileOffsetArr[4], layerOpacityArr[4]);\n                diffuseColor = diffuseColor * lightWeighting + vec4(spec, 0.0);\n            }`\n    });\n}\n\n\nexport function drawnode_screen_wl_webgl2Atmos(): Program {\n    return new Program(\"drawnode_screen_wl\", {\n        uniforms: {\n            projectionMatrix: \"mat4\",\n            viewMatrix: \"mat4\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            height: \"float\",\n\n            uGlobalTextureCoord: \"vec4\",\n            uNormalMapBias: \"vec3\",\n\n            samplerCount: \"int\",\n            tileOffsetArr: \"vec4\",\n            layerOpacityArr: \"float\",\n            samplerArr: \"sampler2darray\",\n            defaultTexture: \"sampler2d\",\n            uNormalMap: \"sampler2d\",\n            nightTexture: \"sampler2d\",\n            specularTexture: \"sampler2d\",\n            lightsPositions: \"vec3\",\n            diffuse: \"vec3\",\n            ambient: \"vec3\",\n            specular: \"vec4\",\n\n            transmittanceTexture: \"sampler2D\",\n            scatteringTexture: \"sampler2D\",\n            camHeight: \"float\",\n            nightTextureCoefficient: \"float\",\n            maxMinOpacity: \"vec2\"\n        }, attributes: {\n            aVertexPositionHigh: \"vec3\",\n            aVertexPositionLow: \"vec3\",\n            aTextureCoord: \"vec2\"\n        },\n\n        vertexShader:\n            `#version 300 es\n\n            precision highp float;\n\n            in vec3 aVertexPositionHigh;\n            in vec3 aVertexPositionLow;\n            in vec2 aTextureCoord;\n\n            uniform mat4 projectionMatrix;\n            uniform mat4 viewMatrix;\n            uniform vec4 uGlobalTextureCoord;\n            uniform vec3 uNormalMapBias;\n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n            uniform float height;\n\n            out vec4 vTextureCoord;\n            out vec3 v_vertex;\n            out vec3 cameraPosition;\n            out vec2 vGlobalTextureCoord;\n            out float v_height;\n\n            void main(void) {\n\n                // I replace it here (from the bottom) because it \n                // somehow affects on float precision on MacPC Chrome\n                vTextureCoord.xy = aTextureCoord;\n                vGlobalTextureCoord = uGlobalTextureCoord.xy + (uGlobalTextureCoord.zw - uGlobalTextureCoord.xy) * aTextureCoord;\n                vTextureCoord.zw = uNormalMapBias.z * ( aTextureCoord + uNormalMapBias.xy );\n\n                vec3 aVertexPosition = aVertexPositionHigh + aVertexPositionLow;                \n                vec3 nh = height * normalize(aVertexPosition);\n                cameraPosition = eyePositionHigh + eyePositionLow;\n                \n                vec3 highDiff = aVertexPositionHigh - eyePositionHigh;\n                vec3 lowDiff = aVertexPositionLow - eyePositionLow + nh;\n\n                mat4 viewMatrixRTE = viewMatrix;\n                viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                v_height = height;\n                v_vertex = aVertexPosition + nh;\n                            \n                gl_Position = projectionMatrix * viewMatrixRTE * vec4(highDiff + lowDiff, 1.0);\n            }`,\n\n        fragmentShader:\n            `#version 300 es\n\n            precision highp float;\n            \n            #define MAX_POINT_LIGHTS 1\n            #define SLICE_SIZE ${SLICE_SIZE + 1}\n\n            uniform vec4 specular;\n            uniform vec3 diffuse;\n            uniform vec3 ambient;\n\n            uniform vec3 lightsPositions[MAX_POINT_LIGHTS];\n\n            uniform sampler2D uNormalMap;\n            uniform sampler2D nightTexture;\n            uniform sampler2D specularTexture;\n            uniform sampler2D transmittanceTexture;\n            uniform sampler2D scatteringTexture;\n            uniform sampler2D defaultTexture;\n            uniform sampler2D samplerArr[SLICE_SIZE];\n\n            uniform vec4 tileOffsetArr[SLICE_SIZE];\n            uniform float layerOpacityArr[SLICE_SIZE];\n\n            uniform int samplerCount;\n            uniform float nightTextureCoefficient;\n            \n            uniform vec2 maxMinOpacity;                \n            uniform float camHeight;\n\n            in vec4 vTextureCoord;\n            in vec3 v_vertex;\n            in vec3 cameraPosition;\n            in vec2 vGlobalTextureCoord;\n            in float v_height;\n\n            vec3 sunPos;\n\n            layout(location = 0) out vec4 diffuseColor;\n\n            ${NIGHT}\n\n            ${DEF_BLEND}\n            \n            ${atmos.COMMON}            \n            \n            vec3 transmittanceFromTexture(float height, float angle) \n            {\n                float u = (angle + 1.0) * 0.5;\n                float v = height / ATMOS_HEIGHT;\n                return texture(transmittanceTexture, vec2(u, v)).xyz;\n            }\n\n            vec3 multipleScatteringContributionFromTexture(float height, float angle) \n            {\n                float u = (angle + 1.0) * 0.5;\n                float v = height / ATMOS_HEIGHT;\n                return texture(scatteringTexture, vec2(u, v)).xyz;\n            }\n            \n            void getSunIlluminance(in vec3 point, in vec3 lightDir, out vec3 sunIlluminance)\n            {\n                //     float r = length(point);\n                //     float mu_s = dot(point, sun_direction) / r;\n                //     float height = r - BOTTOM_RADIUS;\n                \n                float mu_s = dot(normalize(point), lightDir);\n                float height = length(point) - BOTTOM_RADIUS;\n                sunIlluminance = SUN_INTENSITY * transmittanceFromTexture(height, mu_s);\n            }\n           \n            void atmosGroundColor(out vec4 fragColor, in vec3 normal)\n            {                                                                                                                                \n                vec3 rayDirection = normalize(v_vertex - cameraPosition);\n                vec3 lightDir = normalize(sunPos);\n                \n                rayDirection = normalize(rayDirection * SPHERE_TO_ELLIPSOID_SCALE);\n                vec3 camPos = cameraPosition * SPHERE_TO_ELLIPSOID_SCALE;\n                lightDir = normalize(lightDir * SPHERE_TO_ELLIPSOID_SCALE);\n            \n                vec3 light = vec3(0.0);\n                vec3 transmittanceFromCameraToSpace = vec3(1.0);\n                float offset = 0.0;\n                float distanceToSpace = 0.0;\n                \n                intersectSphere(camPos, rayDirection, TOP_RADIUS, offset, distanceToSpace);\n            \n                vec3 rayOrigin = camPos;\n                \n                // above atmosphere\n                if (offset > 0.0) \n                {\n                    // intersection of camera ray with atmosphere\n                    rayOrigin += rayDirection * offset;\n                }\n                \n                float height = length(rayOrigin) - BOTTOM_RADIUS;\n                float rayAngle = dot(rayOrigin, rayDirection) / length(rayOrigin);\n                bool cameraBelow = rayAngle < 0.0;\n                \n                transmittanceFromCameraToSpace = transmittanceFromTexture(height, cameraBelow ? -rayAngle : rayAngle);\n                \n                float phaseAngle = dot(lightDir, rayDirection);\n                float rayleighPhase = rayleighPhase(phaseAngle);\n                float miePhase = miePhase(phaseAngle);\n                \n                float distanceToGround = 0.0;\n                \n                bool hitGround = intersectSphere(camPos, rayDirection, BOTTOM_RADIUS, distanceToGround) && distanceToGround > 0.0;                \n                \n                // Fix black dots on the edge of atmosphere                        \n                if(camHeight < 700000.0 || !hitGround)\n                {                          \n                    distanceToGround = distance(camPos, v_vertex * SPHERE_TO_ELLIPSOID_SCALE);\n                }\n                                                                \n                float segmentLength = (distanceToGround - max(offset, 0.0)) / float(SAMPLE_COUNT);\n                \n                float t = segmentLength * 0.5;\n                \n                vec3 transmittanceCamera; \n                vec3 transmittanceLight; \n                \n                for (int i = 0; i < SAMPLE_COUNT; i++) \n                {\n                    vec3 position = rayOrigin + t * rayDirection;\n                    float height = length(position) - BOTTOM_RADIUS;\n                    vec3 up = position / length(position);\n                    float rayAngle = dot(up, rayDirection);\n                    float lightAngle = dot(up, lightDir);                                                 \n                    vec3 transmittanceToSpace = transmittanceFromTexture(height, cameraBelow ? -rayAngle : rayAngle);\n                    transmittanceCamera = cameraBelow ? (transmittanceToSpace / transmittanceFromCameraToSpace) : (transmittanceFromCameraToSpace / transmittanceToSpace);\n                    transmittanceLight = transmittanceFromTexture(height, lightAngle);\n                    vec2 opticalDensity = exp(-height / rayleighMieHeights);\n                    vec3 scatteredLight = transmittanceLight * (rayleighScatteringCoefficient * opticalDensity.x * rayleighPhase + mieScatteringCoefficient * opticalDensity.y * miePhase);\n                    scatteredLight += multipleScatteringContributionFromTexture(height, lightAngle) * (rayleighScatteringCoefficient * opticalDensity.x + mieScatteringCoefficient * opticalDensity.y);  \n                    light += transmittanceCamera * scatteredLight * segmentLength;\n                    t += segmentLength;\n                }\n                \n                light *= SUN_INTENSITY;\n        \n                vec3 hitPoint = camPos + rayDirection * distanceToGround;\n                vec3 up = normalize(hitPoint);\n                float diffuseAngle = max(dot(up, lightDir), 0.0);                \n                                \n                float lightAngle = dot(normal, lightDir);\n                vec3 tA = transmittanceCamera * GROUND_ALBEDO * SUN_INTENSITY;                                               \n                vec3 scatteringLight = multipleScatteringContributionFromTexture(height, lightAngle);\n                vec3 diffuseTransmittanceLight = transmittanceLight * diffuseAngle;                \n                light += tA * (scatteringLight + diffuseTransmittanceLight);\n                                                                \n                fragColor = vec4(pow(light * 8.0, vec3(1.0 / 2.2)), 1.0);\n            }\n\n            void getAtmosFadingOpacity(out float opacity)\n            {            \n                float c = length(cameraPosition);\n                float maxDist = sqrt(c * c - BOTTOM_RADIUS * BOTTOM_RADIUS);\n                float minDist = c - BOTTOM_RADIUS;\n                float vertDist = distance(cameraPosition, v_vertex);                    \n                opacity = clamp(maxMinOpacity.y + ( maxMinOpacity.x -  maxMinOpacity.y) * getLerpValue(minDist, maxDist, vertDist), 0.0, 1.0);\n            }\n\n            void main(void) {\n            \n                sunPos = lightsPositions[0];\n                                \n                vec3 texNormal = texture(uNormalMap, vTextureCoord.zw).rgb;\n                vec3 normal = normalize((texNormal - 0.5) * 2.0);\n                \n                float minH = 1200000.0;\n                float maxH = minH * 3.0;\n                float nightCoef = getLerpValue(minH, maxH, camHeight) * nightTextureCoefficient;\n                                \n                if(camHeight > 6000000.0)\n                {\n                    normal = normalize(v_vertex);\n                }\n                                            \n                vec3 lightDir = normalize(sunPos);\n                vec3 viewDir = normalize(cameraPosition - v_vertex);\n                \n                vec4 atmosColor;\n                atmosGroundColor(atmosColor, normal);\n                \n                vec3 sunIlluminance;                \n                getSunIlluminance(v_vertex * SPHERE_TO_ELLIPSOID_SCALE, lightDir * SPHERE_TO_ELLIPSOID_SCALE, sunIlluminance);\n                \n                float overGround = 1.0 - step(0.1, v_height);\n\n                float shininess = texture( specularTexture, vGlobalTextureCoord.st ).r * 255.0 * overGround;\n                vec3 reflectionDirection = reflect(-lightDir, normal);\n                float reflection = max( dot(reflectionDirection, viewDir), 0.0);\n                vec3 spec = sunIlluminance * specular.rgb * pow( reflection, specular.w) * shininess;                \n                float diffuseLightWeighting = max(dot(normal, lightDir), 0.0);\n                              \n                vec4 nightImageColor = texture( nightTexture, vGlobalTextureCoord.st );\n                vec3 night = nightStep * (.18 - diffuseLightWeighting * 3.0) * nightImageColor.rgb * nightCoef;\n                night *= overGround * step(0.0, night);                \n                vec4 lightWeighting = vec4(ambient + sunIlluminance * diffuse * diffuseLightWeighting + night, 1.0);\n                \n                float fadingOpacity;\n                getAtmosFadingOpacity(fadingOpacity);\n                \n                getSunIlluminance(cameraPosition, viewDir * SPHERE_TO_ELLIPSOID_SCALE, sunIlluminance);\n                \n                spec *= sunIlluminance;\n\n                diffuseColor = texture( defaultTexture, vTextureCoord.xy );\n                if( samplerCount == 0 ) {\n                    diffuseColor = mix(diffuseColor * lightWeighting, atmosColor, fadingOpacity) + vec4(spec, 0.0);\n                    return;\n                }\n\n                vec4 src;\n\n                blend(diffuseColor, samplerArr[0], tileOffsetArr[0], layerOpacityArr[0]);\n                if( samplerCount == 1 ) {                \n                    diffuseColor = mix(diffuseColor * lightWeighting, atmosColor * diffuseColor.a, fadingOpacity) + vec4(spec, 0.0);\n                    return;\n                }\n\n                blend(diffuseColor, samplerArr[1], tileOffsetArr[1], layerOpacityArr[1]);\n                if( samplerCount == 2 ) {\n                    diffuseColor = mix(diffuseColor * lightWeighting, atmosColor * diffuseColor.a, fadingOpacity) + vec4(spec, 0.0);\n                    return;\n                }\n\n                blend(diffuseColor, samplerArr[2], tileOffsetArr[2], layerOpacityArr[2]);\n                if( samplerCount == 3 ) {\n                    diffuseColor = mix(diffuseColor * lightWeighting, atmosColor * diffuseColor.a, fadingOpacity) + vec4(spec, 0.0);\n                    return;\n                }\n\n                blend(diffuseColor, samplerArr[3], tileOffsetArr[3], layerOpacityArr[3]);\n                if( samplerCount == 4 ) {\n                    diffuseColor = mix(diffuseColor * lightWeighting, atmosColor * diffuseColor.a, fadingOpacity) + vec4(spec, 0.0);\n                    return;\n                }\n\n                blend(diffuseColor, samplerArr[4], tileOffsetArr[4], layerOpacityArr[4]);\n                diffuseColor = mix(diffuseColor * lightWeighting, atmosColor * diffuseColor.a, fadingOpacity) + vec4(spec, 0.0);\n            }`\n    });\n}\n\nexport function drawnode_colorPicking(): Program {\n    return new Program(\"drawnode_colorPicking\", {\n        uniforms: {\n            projectionMatrix: \"mat4\",\n            viewMatrix: \"mat4\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            samplerCount: \"int\",\n            tileOffsetArr: \"vec4\",\n            samplerArr: \"sampler2darray\",\n            pickingMaskArr: \"sampler2darray\",\n            pickingColorArr: \"vec4\",\n            height: \"float\"\n        }, attributes: {\n            aVertexPositionHigh: \"vec3\", aVertexPositionLow: \"vec3\", aTextureCoord: \"vec2\"\n        },\n\n        vertexShader:\n            `precision highp float;\n            \n            attribute vec3 aVertexPositionHigh;\n            attribute vec3 aVertexPositionLow;\n            attribute vec2 aTextureCoord;\n\n            uniform mat4 projectionMatrix;\n            uniform mat4 viewMatrix;\n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n            uniform float height;\n\n            varying vec2 vTextureCoord;\n\n            void main(void) {\n\n                vTextureCoord = aTextureCoord;\n\n                mat4 viewMatrixRTE = viewMatrix;\n                viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                mat4 m = projectionMatrix * viewMatrixRTE;\n\n                vec3 nh = height * normalize(aVertexPositionHigh + aVertexPositionLow);\n\n                vec3 highDiff = aVertexPositionHigh - eyePositionHigh;\n                vec3 lowDiff = aVertexPositionLow - eyePositionLow + nh;\n\n                gl_Position = m * vec4(highDiff + lowDiff, 1.0);\n            }`,\n\n        fragmentShader:\n            `precision highp float;\n            #define SLICE_SIZE ${SLICE_SIZE + 1}\n            uniform vec4 tileOffsetArr[SLICE_SIZE];\n            uniform vec4 pickingColorArr[SLICE_SIZE];\n            uniform sampler2D samplerArr[SLICE_SIZE];\n            uniform sampler2D pickingMaskArr[SLICE_SIZE];\n            uniform int samplerCount;\n            varying vec2 vTextureCoord;\n\n            ${DEF_BLEND_PICKING}\n\n            void main(void) {\n                gl_FragColor = vec4(0.0);\n                if( samplerCount == 0 ) return;\n\n                vec2 tc;\n                vec4 t;\n                vec4 p;\n\n                blendPicking(gl_FragColor, tileOffsetArr[0], samplerArr[0], pickingMaskArr[0], pickingColorArr[0], 1.0);\n                if( samplerCount == 1 ) return;\n\n                blendPicking(gl_FragColor, tileOffsetArr[1], samplerArr[1], pickingMaskArr[1], pickingColorArr[1], 1.0);\n                if( samplerCount == 2 ) return;\n\n                blendPicking(gl_FragColor, tileOffsetArr[2], samplerArr[2], pickingMaskArr[2], pickingColorArr[2], 1.0);\n                if( samplerCount == 3 ) return;\n\n                blendPicking(gl_FragColor, tileOffsetArr[3], samplerArr[3], pickingMaskArr[3], pickingColorArr[3], 1.0);\n                if( samplerCount == 4 ) return;\n\n                blendPicking(gl_FragColor, tileOffsetArr[4], samplerArr[4], pickingMaskArr[4], pickingColorArr[4], 1.0);\n            }`\n    });\n}\n\nexport function drawnode_heightPicking(): Program {\n    return new Program(\"drawnode_heightPicking\", {\n        uniforms: {\n            projectionMatrix: \"mat4\",\n            viewMatrix: \"mat4\",\n            height: \"float\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\"\n        }, attributes: {\n            aVertexPositionHigh: \"vec3\", aVertexPositionLow: \"vec3\"\n        },\n\n        vertexShader:\n            `precision highp float;\n\n            attribute vec3 aVertexPositionHigh;\n            attribute vec3 aVertexPositionLow;\n\n            uniform mat4 projectionMatrix;\n            uniform mat4 viewMatrix;\n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n            uniform float height;\n\n            varying vec3 eyePosition;\n            varying vec3 vertexPosition;\n\n            void main(void) {\n\n                // This code is works for Mac Chrome and Safari\n                // any other code probably will produce jittering\n\n                mat4 viewMatrixRTE = viewMatrix;\n                viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                mat4 m = projectionMatrix * viewMatrixRTE;\n\n                vec3 nh = height * normalize(aVertexPositionHigh + aVertexPositionLow);\n\n                eyePosition = eyePositionHigh + eyePositionLow;\n                vertexPosition = aVertexPositionHigh + aVertexPositionLow;\n\n                vec3 highDiff = aVertexPositionHigh - eyePositionHigh;\n                vec3 lowDiff = aVertexPositionLow - eyePositionLow + nh;\n                \n                gl_Position =  m * vec4(highDiff + lowDiff, 1.0);         \n            }`,\n\n        fragmentShader:\n            `precision highp float;\n\n            varying vec3 eyePosition;\n            varying vec3 vertexPosition;\n\n            vec3 encode24(highp float f) {\n                float F = abs(f);\n                float s = step( 0.0, -f );\n                float e = floor( log2(F) );\n                float m = exp2(- e) * F;\n                e = floor( log2(F) + 127.0 ) + floor( log2(m) );\n                return vec3(\n                    ( 128.0 * s + floor( e * exp2(-1.0) ) ) / 255.0,\n                    ( 128.0 * mod( e, 2.0 ) + mod( floor( m * 128.0 ), 128.0 ) ) / 255.0,\n                    floor( mod( floor( m * exp2( 23.0 - 8.0) ), exp2(8.0) ) ) / 255.0);\n            }\n\n            void main(void) {\n                float range = distance(eyePosition, vertexPosition);\n                gl_FragColor = vec4(encode24(range), 1.0);\n            }`\n    });\n}\n\nexport function drawnode_depth(): Program {\n    return new Program(\"drawnode_depth\", {\n        uniforms: {\n            projectionMatrix: \"mat4\",\n            viewMatrix: \"mat4\",\n            height: \"float\",\n            eyePositionHigh: \"vec3\",\n            eyePositionLow: \"vec3\",\n            frustumPickingColor: \"vec3\"\n        }, attributes: {\n            aVertexPositionHigh: \"vec3\", aVertexPositionLow: \"vec3\"\n        },\n\n        vertexShader:\n            `precision highp float;\n\n            attribute vec3 aVertexPositionHigh;\n            attribute vec3 aVertexPositionLow;\n\n            uniform mat4 projectionMatrix;\n            uniform mat4 viewMatrix;\n            uniform vec3 eyePositionHigh;\n            uniform vec3 eyePositionLow;\n            uniform float height;\n\n            void main(void) {\n\n                // @hack\n                // This code is works for Mac Chrome and Safari\n                // any other code probably will produce jittering\n\n                mat4 viewMatrixRTE = viewMatrix;\n                viewMatrixRTE[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\n                mat4 m = projectionMatrix * viewMatrixRTE;\n\n                vec3 nh = height * normalize(aVertexPositionHigh + aVertexPositionLow);\n\n                vec3 eyePosition = eyePositionHigh + eyePositionLow;\n                vec3 vertexPosition = aVertexPositionHigh + aVertexPositionLow;\n\n                vec3 highDiff = aVertexPositionHigh - eyePositionHigh;\n                vec3 lowDiff = aVertexPositionLow - eyePositionLow + nh;\n                \n                gl_Position =  m * vec4(highDiff + lowDiff, 1.0);    \n            }`,\n\n        fragmentShader:\n            `precision highp float;\n            uniform vec3 frustumPickingColor;\n\n            void main(void) {\n                gl_FragColor = vec4(frustumPickingColor, 1.0);\n            } `\n    });\n}\n","import {Handler} from \"./Handler\";\n\nexport interface IBaseFramebufferParams {\n    internalFormat?: string | string[];\n    width?: number;\n    height?: number;\n    useDepth?: boolean;\n    depthComponent?: string;\n    size?: number;\n    filter?: string;\n}\n\nexport class BaseFramebuffer {\n    public handler: Handler;\n    public _fbo: WebGLFramebuffer | null;\n    protected _depthRenderbuffer: WebGLRenderbuffer | null;\n    public _width: number;\n    public _height: number;\n    protected _depthComponent: string;\n    protected _size: number;\n    protected _active: boolean;\n    protected _useDepth: boolean;\n    protected _filter: string;\n\n    constructor(handler: Handler, options: IBaseFramebufferParams = {}) {\n        this.handler = handler;\n        this._fbo = null;\n        this._width = options.width || handler.canvas!.width;\n        this._height = options.height || handler.canvas!.height;\n        this._depthComponent = options.depthComponent != undefined ? options.depthComponent : \"DEPTH_COMPONENT16\";\n        this._useDepth = options.useDepth != undefined ? options.useDepth : true;\n        this._active = false;\n        this._size = options.size || 1;\n        this._depthRenderbuffer = null;\n        this._filter = options.filter || \"NEAREST\";\n    }\n\n    public get width(): number {\n        return this._width;\n    }\n\n    public get height(): number {\n        return this._height;\n    }\n\n    /**\n     * Sets framebuffer viewport size.\n     * @public\n     * @param {number} width - Framebuffer width.\n     * @param {number} height - Framebuffer height.\n     * @param {boolean} [forceDestroy] -\n     */\n    public setSize(width: number, height: number, forceDestroy: boolean = false) {\n        this._width = width;\n        this._height = height;\n\n        if (this._active) {\n            this.handler.gl!.viewport(0, 0, this._width, this._height);\n        }\n\n        if (this._useDepth || forceDestroy) {\n            this.destroy();\n            this.init();\n        }\n    }\n\n    public init() {\n    }\n\n    public destroy() {\n    }\n\n    /**\n     * Returns framebuffer completed.\n     * @public\n     * @returns {boolean} -\n     */\n    public isComplete(): boolean {\n        let gl = this.handler.gl!;\n        return gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    }\n\n    public checkStatus(): number {\n        let gl = this.handler.gl!;\n        return gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    }\n\n    /**\n     * Activate framebuffer frame to draw.\n     * @public\n     * @returns {Framebuffer} Returns Current framebuffer.\n     */\n    public activate() {\n        let gl = this.handler.gl!;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\n        gl.viewport(0, 0, this._width, this._height);\n        this._active = true;\n\n        let c = this.handler.framebufferStack.current().data;\n        c && (c._active = false);\n        this.handler.framebufferStack.push(this);\n        return this;\n    }\n\n    /**\n     * Deactivate framebuffer frame.\n     * @public\n     */\n    public deactivate() {\n        let h = this.handler,\n            gl = h.gl!;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null!);\n        this._active = false;\n\n        let f = this.handler.framebufferStack.popPrev();\n\n        if (f) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, f._fbo);\n            gl.viewport(0, 0, f._width, f._height);\n        } else {\n            gl.viewport(0, 0, h.canvas!.width, h.canvas!.height);\n        }\n    }\n}","/**\n * Usefull class for working with JS canvas object.\n * @class\n * @param {number} [width] - Canvas width. Default 256.\n * @param {number} [height] - Canvas height. Default 256.\n */\nclass ImageCanvas {\n\n    /**\n     * Canvas object.\n     * @protected\n     * @type {HTMLCanvasElement}\n     */\n    protected _canvas: HTMLCanvasElement;\n\n    /**\n     * Canvas context.\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    protected _context: CanvasRenderingContext2D;\n\n    constructor(width: number = 256, height: number = 256) {\n        this._canvas = document.createElement(\"canvas\");\n        this._canvas.width = width;\n        this._canvas.height = height;\n\n        this._context = this._canvas.getContext(\"2d\", {\n            willReadFrequently: true\n        })!;\n    }\n\n    /**\n     * Returns canvas object.\n     * @public\n     * @returns {HTMLCanvasElement}\n     */\n    public getCanvas(): HTMLCanvasElement {\n        return this._canvas;\n    }\n\n    /**\n     * Returns canvas context pointer.\n     * @public\n     * @returns {CanvasRenderingContext2D}\n     */\n    public getContext(): CanvasRenderingContext2D {\n        return this._context;\n    }\n\n    /**\n     * Fills canvas RGBA with zeroes.\n     * @public\n     */\n    public fillEmpty() {\n        let imgd = this._context.getImageData(0, 0, this._canvas.width, this._canvas.height);\n        let pixels = imgd.data;\n        for (let i = 0, n = pixels.length; i < n; i += 4) {\n            pixels[i] = pixels[i + 1] = pixels[i + 2] = pixels[i + 3] = 0;\n        }\n        this._context.putImageData(imgd, 0, 0);\n    }\n\n    /**\n     * Fills canvas RGBA with color.\n     * @public\n     * @param {string} color - CSS string color.\n     */\n    public fill(color: string) {\n        this._context.fillStyle = color\n        this._context.fill()\n    }\n\n    /**\n     * Gets canvas pixels RGBA data.\n     * @public\n     * @returns {Uint8ClampedArray}\n     */\n    public getData(): Uint8ClampedArray {\n        let imgd = this._context.getImageData(0, 0, this._canvas.width, this._canvas.height);\n        return imgd.data;\n    }\n\n    /**\n     * Fill the canvas by color.\n     * @public\n     * @param {string} color - CSS string color.\n     */\n    public fillColor(color: string) {\n        this._context.fillStyle = color;\n        this._context.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n\n    /**\n     * Sets RGBA pixel data.\n     * @public\n     * @param {Array.<number>} data - Array RGBA data.\n     */\n    public setData(data: ArrayLike<number>) {\n        let imageData = this._context.createImageData(this._canvas.width, this._canvas.height);\n        imageData.data.set(data);\n        this._context.putImageData(imageData, 0, 0);\n    }\n\n    /**\n     * Resize canvas.\n     * @public\n     * @param {number} width - Width.\n     * @param {number} height - Height.\n     */\n    public resize(width: number, height: number) {\n        this._canvas.width = width;\n        this._canvas.height = height;\n        this._context = this._canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    }\n\n    /**\n     * Draw an image on the canvas.\n     * @public\n     * @param {Image} img - Draw image.\n     * @param {number} [x] - Left top image corner X coordinate on the canvas.\n     * @param {number} [y] - Left top image corner Y coordinate on the canvas.\n     * @param {number} [width] - Image width slice. Image width is default.\n     * @param {number} [height] - Image height slice. Image height is default.\n     */\n    public drawImage(img: HTMLImageElement, x: number, y: number, width: number, height: number) {\n        this._context.drawImage(img, x || 0, y || 0, width || img.width, height || img.height);\n    }\n\n    /**\n     * Converts canvas to JS image object.\n     * @public\n     * @returns {Image}\n     */\n    public getImage(): HTMLImageElement {\n        let img = new Image();\n        img.width = this.getWidth();\n        img.height = this.getHeight();\n        img.src = this._canvas.toDataURL(\"image/png\");\n        return img;\n    }\n\n    /**\n     * Get measured text width.\n     * @public\n     * @param {string} text - Measured text.\n     * @returns {number}\n     */\n    public getTextWidth(text: string): number {\n        let metrics = this._context.measureText(text);\n        return Math.round(metrics.width);\n    }\n\n    /**\n     * Draw a text on the canvas.\n     * @public\n     * @param {string} text - Text.\n     * @param {number} [x] - Canvas X - coordinate. 0 - default.\n     * @param {number} [y] - Canvas Y - coordinate. 0 - default.\n     * @param {string} [font] - Font style. 'normal 14px Verdana' - is default.\n     * @param {string} [color] - Css font color.\n     */\n    public drawText(text: string, x: number = 0, y: number = 14, font: string = \"normal 14px Verdana\", color: string = \"black\") {\n        this._context.fillStyle = color;\n        this._context.font = font;\n        this._context.fillText(text, x, y);\n    }\n\n    /**\n     * Gets canvas width.\n     * @public\n     * @returns {number}\n     */\n    public getWidth(): number {\n        return this._canvas.width;\n    }\n\n    /**\n     * Gets canvas height.\n     * @public\n     * @returns {number}\n     */\n    public getHeight(): number {\n        return this._canvas.height;\n    }\n\n    /**\n     * Load image to canvas.\n     * @public\n     * @param {string} url - Image url.\n     * @param {Function} [callback] - Image onload callback.\n     */\n    public load(url: string, callback: Function) {\n        let img = new Image();\n        let that = this;\n        img.onload = function () {\n            that.resize(img.width, img.height);\n            that._context.drawImage(img, 0, 0, img.width, img.height);\n            callback && callback(img);\n        };\n        img.src = url;\n    }\n\n    /**\n     * Open canvas image in the new window.\n     * @public\n     */\n    public openImage() {\n        let img = this.getImage();\n        let dataUrl = img.src;\n\n        let windowContent = \"<!DOCTYPE html>\";\n        windowContent += \"<html>\";\n        windowContent += \"<head><title>Print</title></head>\";\n        windowContent += \"<body>\";\n        windowContent += '<img src=\"' + dataUrl + '\">';\n        windowContent += \"</body>\";\n        windowContent += \"</html>\";\n\n        let printWin = window.open(\n            \"\",\n            \"\",\n            \"width=\" + img.width + \"px ,height=\" + img.height + \"px\"\n        );\n\n        if (printWin) {\n            printWin.document.open();\n            printWin.document.write(windowContent);\n            printWin.document.close();\n            printWin.focus();\n        }\n    }\n\n    public destroy() {\n        this._canvas.width = 1;\n        this._canvas.height = 1;\n        //@ts-ignore\n        this._canvas = null;\n        //@ts-ignore\n        this._context = null;\n    }\n}\n\nexport {ImageCanvas};\n","import {BaseFramebuffer, IBaseFramebufferParams} from \"./BaseFramebuffer\";\nimport {ImageCanvas} from \"../ImageCanvas\";\nimport {Handler} from \"./Handler\";\n\nexport interface IFrameBufferParams extends IBaseFramebufferParams {\n    isBare?: boolean;\n    format?: string | string[];\n    type?: string | string[];\n    attachment?: string | string[];\n    renderbufferTarget?: string;\n    textures?: WebGLTexture[];\n}\n\n/**\n * Class represents framebuffer.\n * @class\n * @param {Handler} handler - WebGL handler.\n * @param {IFrameBufferParams} [options] - Framebuffer options:\n */\nexport class Framebuffer extends BaseFramebuffer {\n\n    protected _isBare: boolean;\n\n    protected _internalFormatArr: string[];\n\n    protected _formatArr: string[];\n\n    protected _typeArr: string[];\n\n    protected _attachmentArr: string[];\n\n    protected _renderbufferTarget: string;\n\n    /**\n     * Framebuffer texture.\n     * @public\n     * @type {number}\n     */\n    public textures: WebGLTexture[];\n\n    constructor(handler: Handler, options: IFrameBufferParams = {}) {\n\n        super(handler, options);\n\n        this._isBare = options.isBare || false;\n\n        this._internalFormatArr = options.internalFormat instanceof Array ? options.internalFormat : [options.internalFormat || \"RGBA\"];\n\n        this._formatArr = options.format instanceof Array ? options.format : [options.format || \"RGBA\"];\n\n        this._typeArr = options.type instanceof Array ? options.type : [options.type || \"UNSIGNED_BYTE\"];\n\n        if (options.attachment instanceof Array) {\n            this._attachmentArr = options.attachment.map((a: string, i: number) => {\n                let res = a.toUpperCase();\n                if (res === \"COLOR_ATTACHMENT\") {\n                    return `${res}${i.toString()}`;\n                }\n                return res;\n            })\n        } else {\n            this._attachmentArr = [options.attachment as string || \"COLOR_ATTACHMENT0\"];\n        }\n\n        this._renderbufferTarget = options.renderbufferTarget != undefined ? options.renderbufferTarget : \"DEPTH_ATTACHMENT\";\n\n        this.textures = options.textures || new Array(this._size);\n    }\n\n    // static blit(sourceFramebuffer: Framebuffer, destFramebuffer: Framebuffer, glAttachment: number, glMask: number, glFilter: number) {\n    //     let gl = sourceFramebuffer.handler.gl!;\n    //\n    //     gl.bindFramebuffer(gl.READ_FRAMEBUFFER, sourceFramebuffer._fbo);\n    //     gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, destFramebuffer._fbo);\n    //     gl.readBuffer(glAttachment);\n    //\n    //     gl.clearBufferfv(gl.COLOR, 0, [0.0, 0.0, 0.0, 1.0]);\n    //\n    //     gl.blitFramebuffer(0, 0, sourceFramebuffer._width, sourceFramebuffer._height, 0, 0, destFramebuffer._width, destFramebuffer._height, glMask, glFilter);\n    //\n    //     gl.bindFramebuffer(gl.FRAMEBUFFER, null!);\n    //     gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null!);\n    //     gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null!);\n    // }\n\n    public override destroy() {\n        let gl = this.handler.gl;\n\n        if (!gl) return;\n\n        for (let i = 0; i < this.textures.length; i++) {\n            gl.deleteTexture(this.textures[i]);\n        }\n        this.textures = new Array(this._size);\n\n        gl.deleteFramebuffer(this._fbo);\n        gl.deleteRenderbuffer(this._depthRenderbuffer);\n\n        this._depthRenderbuffer = null;\n        this._fbo = null;\n\n        this._active = false;\n    }\n\n    /**\n     * Framebuffer initialization.\n     * @public\n     * @override\n     */\n    public override init() {\n        let gl = this.handler.gl;\n\n        if (!gl) return;\n\n        this._fbo = gl.createFramebuffer();\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\n\n        if (!this._isBare) {\n            let attachmentArr = [];\n            for (let i = 0; i < this.textures.length; i++) {\n                let ti = this.textures[i] || this.handler.createEmptyTexture2DExt(this._width, this._height, this._filter, this._internalFormatArr[i], this._formatArr[i], this._typeArr[i]);\n\n                let att_i = (gl as any)[this._attachmentArr[i]];\n\n                if (ti) {\n                    this.bindOutputTexture(ti, att_i);\n                    this.textures[i] = ti;\n                }\n\n                if (this._attachmentArr[i] != \"DEPTH_ATTACHMENT\") {\n                    attachmentArr.push(att_i);\n                }\n            }\n            gl.drawBuffers && gl.drawBuffers(attachmentArr);\n        }\n\n        if (this._useDepth) {\n            this._depthRenderbuffer = gl.createRenderbuffer();\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this._depthRenderbuffer);\n            gl.renderbufferStorage(gl.RENDERBUFFER, (gl as any)[this._depthComponent], this._width, this._height);\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, (gl as any)[this._renderbufferTarget], gl.RENDERBUFFER, this._depthRenderbuffer);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        }\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null!);\n    }\n\n    /**\n     * Bind buffer texture.\n     * @public\n     * @param {WebGLTexture} texture - Output texture.\n     * @param {number} [glAttachment=0] - color attachment index.\n     */\n    public bindOutputTexture(texture: WebGLTexture, glAttachment?: number) {\n        let gl = this.handler.gl!;\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, glAttachment || gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n        gl.bindTexture(gl.TEXTURE_2D, null!);\n    }\n\n    /**\n     * Gets pixel RGBA color from framebuffer by coordinates.\n     * @public\n     * @param {Uint8Array} res - Normalized x - coordinate.\n     * @param {number} nx - Normalized x - coordinate.\n     * @param {number} ny - Normalized y - coordinate.\n     * @param {number} [w=1] - Normalized width.\n     * @param {number} [h=1] - Normalized height.\n     * @param {number} [index=0] - color attachment index.\n     */\n    public readPixels(res: Uint8Array, nx: number, ny: number, index: number = 0, w: number = 1, h: number = 1) {\n        let gl = this.handler.gl!;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\n        gl.readBuffer && gl.readBuffer(gl.COLOR_ATTACHMENT0 + index || 0);\n        gl.readPixels(nx * this._width, ny * this._height, w, h, gl.RGBA, (gl as any)[this._typeArr[index]], res);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null!);\n    }\n\n    /**\n     * Reads all pixels(RGBA colors) from framebuffer.\n     * @public\n     * @param {Uint8Array} res - Result array.\n     * @param {number} [attachmentIndex=0] - color attachment index.\n     */\n    public readAllPixels(res: Uint8Array, attachmentIndex: number = 0) {\n        let gl = this.handler.gl!;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\n        gl.readBuffer && gl.readBuffer(gl.COLOR_ATTACHMENT0 + attachmentIndex);\n        gl.readPixels(0, 0, this._width, this._height, gl.RGBA, (gl as any)[this._typeArr[attachmentIndex]], res);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null!);\n    }\n\n    /**\n     * Gets JavaScript image that in the framebuffer.\n     * @public\n     * @returns {HTMLImageElement} -\n     */\n    public getImage(): HTMLImageElement {\n        let data = new Uint8Array(4 * this._width * this._height);\n        this.readAllPixels(data);\n        let imageCanvas = new ImageCanvas(this._width, this._height);\n        imageCanvas.setData(data);\n        return imageCanvas.getImage();\n    }\n}\n","import * as atmos from \"../shaders/atmos\";\nimport {Framebuffer} from \"../webgl/Framebuffer\";\nimport {Program} from '../webgl/Program';\nimport {Control, IControlParams} from \"./Control\";\n\ninterface IAtmosphereParams extends IControlParams {\n}\n\nexport class Atmosphere extends Control {\n    public _transmittanceBuffer: Framebuffer | null;\n    public _scatteringBuffer: Framebuffer | null;\n    public opacity: number;\n\n    constructor(options: IAtmosphereParams = {}) {\n        super({\n            name: \"Atmosphere\",\n            ...options\n        });\n\n        this._transmittanceBuffer = null;\n        this._scatteringBuffer = null;\n\n        this.opacity = 1.0;\n    }\n\n    public override oninit() {\n        if (this.renderer) {\n            this.renderer.handler.addProgram(atmos.transmittance(), true);\n            this.renderer.handler.addProgram(atmos.scattering(), true);\n            this.renderer.handler.addProgram(atmosphereBackgroundShader(), true);\n\n            this._drawAtmosphereTextures();\n            this.activate();\n        }\n    }\n\n    public override onactivate() {\n        super.onactivate();\n        this.planet && this.planet.events.on(\"draw\", this._drawBackground, this);\n    }\n\n    public override ondeactivate() {\n        super.ondeactivate();\n        this.planet && this.planet.events.off(\"draw\", this._drawBackground);\n    }\n\n    protected _drawAtmosphereTextures() {\n\n        let width = 1024,\n            height = 1024;\n\n        this._transmittanceBuffer = new Framebuffer(this.renderer!.handler, {\n            width: width,\n            height: height,\n            useDepth: false,\n            filter: \"LINEAR\",\n            type: \"FLOAT\",\n            internalFormat: \"RGBA16F\"\n        });\n\n        this._transmittanceBuffer.init();\n\n        this._scatteringBuffer = new Framebuffer(this.renderer!.handler, {\n            width: width,\n            height: height,\n            useDepth: false,\n            filter: \"LINEAR\",\n            type: \"FLOAT\",\n            internalFormat: \"RGBA16F\"\n        });\n\n        this._scatteringBuffer.init();\n\n        let positionBuffer = this.renderer!.screenFramePositionBuffer;\n\n        let h = this.renderer!.handler;\n        let gl = h.gl!;\n\n        //\n        // Draw transmittance texture\n        //\n        this._transmittanceBuffer.activate();\n\n        let p = h.programs.transmittance;\n        let sha = p._program.attributes;\n        let shu = p._program.uniforms;\n        p.activate();\n\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        gl.uniform2fv(shu.iResolution, [this._transmittanceBuffer.width, this._transmittanceBuffer.height]);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer!);\n        gl.vertexAttribPointer(sha.a_position, positionBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, positionBuffer!.numItems);\n\n        this._transmittanceBuffer.deactivate();\n\n        //\n        // Draw scattering texture\n        //\n        this._scatteringBuffer.activate();\n\n        p = h.programs.scattering;\n        sha = p._program.attributes;\n        shu = p._program.uniforms;\n        p.activate();\n\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        gl.uniform2fv(shu.iResolution, [this._scatteringBuffer.width, this._scatteringBuffer.height]);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._transmittanceBuffer.textures[0]);\n        gl.uniform1i(shu.transmittanceTexture, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer!);\n        gl.vertexAttribPointer(sha.a_position, positionBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, positionBuffer!.numItems);\n\n        this._scatteringBuffer.deactivate();\n\n        //\n        // remove shaders\n        if (this._scatteringBuffer.isComplete()) {\n            h.removeProgram(\"scattering\");\n        }\n\n        if (this._transmittanceBuffer.isComplete()) {\n            h.removeProgram(\"transmittance\");\n        }\n    }\n\n    protected _drawBackground() {\n        let h = this.renderer!.handler;\n        let sh = h.programs.atmosphereBackground,\n            p = sh._program,\n            shu = p.uniforms,\n            gl = h.gl!;\n        let r = this.renderer!;\n        let cam = this.planet!.camera;\n\n        gl.disable(gl.DEPTH_TEST);\n\n        sh.activate();\n        gl.bindBuffer(gl.ARRAY_BUFFER, r.screenFramePositionBuffer!);\n        gl.vertexAttribPointer(p.attributes.corners, 2, gl.FLOAT, false, 0, 0);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._transmittanceBuffer!.textures[0]);\n        gl.uniform1i(shu.transmittanceTexture, 0);\n\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, this._scatteringBuffer!.textures[0]);\n        gl.uniform1i(shu.scatteringTexture, 1);\n\n        gl.uniformMatrix4fv(shu.viewMatrix, false, cam.getViewMatrix());\n\n        let sunPos = this.planet!.sunPos;\n        gl.uniform3fv(shu.sunPos, [sunPos.x, sunPos.y, sunPos.z]);\n        gl.uniform3fv(shu.camPos, [cam.eye.x, cam.eye.y, cam.eye.z]);\n        gl.uniform2fv(shu.iResolution, [r.sceneFramebuffer!.width, r.sceneFramebuffer!.height]);\n        gl.uniform1f(shu.fov, cam.getViewAngle());\n        gl.uniform1f(shu.opacity, this.opacity);\n\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n        gl.enable(gl.DEPTH_TEST);\n    }\n}\n\nfunction atmosphereBackgroundShader(): Program {\n    return new Program(\"atmosphereBackground\", {\n        uniforms: {\n            iResolution: \"vec2\",\n            fov: \"float\",\n            camPos: \"vec3\",\n            viewMatrix: \"mat4\",\n            transmittanceTexture: \"sampler2D\",\n            scatteringTexture: \"sampler2D\",\n            sunPos: \"vec3\",\n            opacity: \"float\"\n        },\n        attributes: {\n            corners: \"vec3\"\n        },\n        vertexShader:\n            `            \n            attribute vec2 corners;\n            \n            void main(void) {\n                gl_Position = vec4(corners, 0.0, 1.0);\n            }`,\n        fragmentShader:\n            `                                   \n            precision lowp float;\n            \n            ${atmos.COMMON}\n            \n            uniform mat4 viewMatrix;\n            uniform vec3 sunPos;\n            uniform vec3 camPos;     \n            uniform vec2 iResolution;\n            uniform float fov;\n            uniform float opacity;\n                       \n            uniform sampler2D transmittanceTexture;\n            uniform sampler2D scatteringTexture;\n                                                           \n            vec3 transmittanceFromTexture(float height, float angle) \n            {\n                float u = (angle + 1.0) * 0.5;\n                float v = height / ATMOS_HEIGHT;\n                return texture2D(transmittanceTexture, vec2(u, v)).xyz;\n            }\n            \n            vec3 multipleScatteringContributionFromTexture(float height, float angle) \n            {\n                float u = (angle + 1.0) * 0.5;\n                float v = height / ATMOS_HEIGHT;\n                return texture2D(scatteringTexture, vec2(u, v)).xyz; \n            }\n\n            bool intersectEllipsoidToSphere(in vec3 ro, in vec3 rd, in vec3 ellRadii, in float sphereRadius, out float t1, out float t2) \n            {\n                float offset = 0.0,\n                      distanceToSpace = 0.0;\n                                                        \n                if(intersectEllipsoid(ro, rd, ellRadii, offset, distanceToSpace)){\n                    vec3 hitEll = ro + rd * offset;\n                    vec3 nEll = normalEllipsoid(hitEll, ellRadii);\n                    float t = 0.0;\n                    bool intersectsSphere = intersectSphere(hitEll, nEll, sphereRadius, t);\n                    vec3 hitSphere = hitEll + nEll * t;\n                    t1 = length(hitSphere - ro);\n                    \n                    hitEll = ro + rd * distanceToSpace;\n                    nEll = normalEllipsoid(hitEll, ellRadii);\n                    t = 0.0;\n                    intersectsSphere = intersectSphere(hitEll, nEll, sphereRadius, t);\n                    hitSphere = hitEll + nEll * t;\n                    t2 = length(hitSphere - ro);\n                    \n                    return true; \n                }\n                return false; \n            }\n            \n            mat4 transpose(in mat4 m) \n            {\n                vec4 i0 = m[0];\n                vec4 i1 = m[1];\n                vec4 i2 = m[2];\n                vec4 i3 = m[3];\n            \n                mat4 outMatrix = mat4(\n                     vec4(i0.x, i1.x, i2.x, i3.x),\n                     vec4(i0.y, i1.y, i2.y, i3.y),\n                     vec4(i0.z, i1.z, i2.z, i3.z),\n                     vec4(i0.w, i1.w, i2.w, i3.w)\n                     );\n                                 \n                return outMatrix;\n            }\n                                                                     \n            void mainImage(out vec4 fragColor) \n            {            \n                vec3 cameraPosition = camPos;\n                \n                vec3 lightDirection = normalize(sunPos);               \n                             \n                vec2 uv = (2.0 * gl_FragCoord.xy - iResolution.xy) / iResolution.y;\n                float fieldOfView = fov;\n                float z = 1.0 / tan(fieldOfView * 0.5 * PI / 180.0);\n                vec3 rayDirection = normalize(vec3(uv, -z));\n                vec4 rd = transpose(viewMatrix) * vec4(rayDirection, 1.0);\n                rayDirection = rd.xyz;               \n                                          \n                vec3 light = vec3(0.0);\n                vec3 transmittanceFromCameraToSpace = vec3(1.0);\n                float offset = 0.0;\n                float distanceToSpace = 0.0;\n                                                \n                rayDirection = normalize(rayDirection * SPHERE_TO_ELLIPSOID_SCALE);\n                cameraPosition *= SPHERE_TO_ELLIPSOID_SCALE;\n                lightDirection = normalize(lightDirection * SPHERE_TO_ELLIPSOID_SCALE);\n                                                \n                if (intersectSphere(cameraPosition, rayDirection, TOP_RADIUS, offset, distanceToSpace)) \n                {    \n                    vec3 rayOrigin = cameraPosition;\n                    \n                    // above atmosphere                    \n                    if (offset > 0.0) {\n                        // intersection of camera ray with atmosphere\n                        rayOrigin = cameraPosition + rayDirection * offset;\n                    }                   \n                    \n                    float height = length(rayOrigin) - BOTTOM_RADIUS;\n                    float rayAngle = dot(rayOrigin, rayDirection) / length(rayOrigin);\n                    bool cameraBelow = rayAngle < 0.0;\n                    \n                    transmittanceFromCameraToSpace = transmittanceFromTexture(height, cameraBelow ? -rayAngle : rayAngle);\n                    \n                    float phaseAngle = dot(lightDirection, rayDirection);\n                    float rayleighPhase = rayleighPhase(phaseAngle);\n                    float miePhase = miePhase(phaseAngle);\n                    \n                    float distanceToGround = 0.0;\n                    \n                    bool hitGround = intersectSphere(cameraPosition, rayDirection, BOTTOM_RADIUS, distanceToGround) && distanceToGround > 0.0;\n                    \n                    if(intersectSphere(cameraPosition, rayDirection, BOTTOM_RADIUS - 15000.0, distanceToGround) && hitGround)\n                    {\n                        discard;\n                    }\n                    \n                    float segmentLength = ((hitGround ? distanceToGround : distanceToSpace) - max(offset, 0.0)) / float(SAMPLE_COUNT);\n                                                                    \n                    float t = segmentLength * 0.5;\n                    \n                    vec3 transmittanceCamera; \n                    vec3 transmittanceLight; \n            \n                    for (int i = 0; i < SAMPLE_COUNT; i++) \n                    {\n                        vec3 position = rayOrigin + t * rayDirection;\n                        float height = length(position) - BOTTOM_RADIUS; \n                        vec3 up = position / length(position);\n                        float rayAngle = dot(up, rayDirection);\n                        float lightAngle = dot(up, lightDirection);\n                        vec3 transmittanceToSpace = transmittanceFromTexture(height, cameraBelow ? -rayAngle : rayAngle);\n                        transmittanceCamera = cameraBelow ? (transmittanceToSpace / transmittanceFromCameraToSpace) : (transmittanceFromCameraToSpace / transmittanceToSpace);\n                        transmittanceLight = transmittanceFromTexture(height, lightAngle);\n                        vec2 opticalDensity = exp(-height / rayleighMieHeights);\n                        vec3 scatteredLight = transmittanceLight * (rayleighScatteringCoefficient * opticalDensity.x * rayleighPhase + mieScatteringCoefficient * opticalDensity.y * miePhase);\n                        scatteredLight += multipleScatteringContributionFromTexture(height, lightAngle) * (rayleighScatteringCoefficient * opticalDensity.x + mieScatteringCoefficient * opticalDensity.y);  \n                        light += transmittanceCamera * scatteredLight * segmentLength;\n                        t += segmentLength;\n                    }\n                    \n                    light *= SUN_INTENSITY;\n            \n                    if (hitGround) \n                    {\n                        vec3 hitPoint = cameraPosition + rayDirection * distanceToGround;\n                        vec3 up = hitPoint / length(hitPoint);\n                        float diffuseAngle = max(dot(up, lightDirection), 0.0);\n                        float lightAngle = dot(up, lightDirection);\n                        light += transmittanceCamera * GROUND_ALBEDO * multipleScatteringContributionFromTexture(height, lightAngle) * SUN_INTENSITY;\n                        light += transmittanceCamera * transmittanceLight * GROUND_ALBEDO * diffuseAngle * SUN_INTENSITY;\n                    }\n                }\n                                     \n                // sun disk\n                // float distanceToGround;\n                // bool hitGround = intersectSphere(cameraPosition, rayDirection, BOTTOM_RADIUS, distanceToGround) && distanceToGround > 0.0;\n                // if (!hitGround) {\n                //    float angle = dot(rayDirection, lightDirection);\n                //    if (angle > cos(SUN_ANGULAR_RADIUS)) {\n                //       light = SUN_INTENSITY * transmittanceFromCameraToSpace;\n                //    }\n                // }\n                \n                float distanceToGround = 0.0;\n                bool hitGround = intersectSphere(cameraPosition, rayDirection, BOTTOM_RADIUS, distanceToGround) && distanceToGround > 0.0;\n                if(!hitGround)\n                {\n                    vec3 sunLum = sunWithBloom(rayDirection, lightDirection) * vec3(1.0,1.0,0.8);\n                    // limit the bloom effect\n                    sunLum = smoothstep(0.002, 1.0, sunLum);\n                    light += sunLum * SUN_INTENSITY * transmittanceFromCameraToSpace;\n                }\n                            \n                fragColor = vec4(pow(light * 8.0, vec3(1.0 / 2.2)), clamp(opacity, 0.0, 1.0));           \n            }\n                                    \n            void main(void) \n            {                            \n                mainImage(gl_FragColor);            \n            }`\n    });\n}\n","interface IProjParams {\n    units: string;\n    code: string;\n}\n\n/**\n * Projection units: 'degrees', 'ft', 'm' or 'km'.\n * @enum {string}\n * @api\n */\nexport const Units = {\n    DEGREES: \"degrees\",\n    FEET: \"ft\",\n    METERS: \"m\",\n    KILOMETERS: \"km\"\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Record<string, number>}\n */\nexport const METERS_PER_UNIT: Record<string, number> = {};\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.KILOMETERS] = 1000;\n\nlet _counter = 0;\n\nclass Proj {\n\n    public id: number;\n\n    /**\n     * @public\n     * @type {string}\n     */\n    public code: string;\n\n    /**\n     * @public\n     * @type {Units}\n     */\n    public units: string;\n\n    constructor(options: IProjParams) {\n        this.id = _counter++;\n        this.code = options.code;\n        this.units = options.units;\n    }\n\n    /**\n     * Compare projections.\n     * @public\n     * @param {Proj} proj - Projection object.\n     * @returns {boolean}\n     */\n    public equal(proj: Proj): boolean {\n        return proj.id === this.id;\n    }\n}\n\nexport {Proj};","/**\n * @module og/proj/EPSG3857\n */\n\nimport { Proj, Units } from \"./Proj\";\n\n/**\n * EPSG:3857 projection object.\n * @type {Proj}\n */\nexport const EPSG3857 = new Proj({ code: \"epsg:3857\", units: Units.METERS });\n","/**\n * @module og/proj/EPSG4326\n */\n\nimport { Proj, Units } from \"./Proj\";\n\n/**\n * EPSG:4326 projection object.\n * @type {Proj}\n */\nexport const EPSG4326 = new Proj({ code: \"epsg:4326\", units: Units.DEGREES });\n","import {Layer} from \"../layer/Layer\";\nimport {Segment} from \"./Segment\";\nimport {Material} from \"../layer/Material\";\n\nclass Slice {\n    public segment: Segment;\n    public layers: Layer[];\n    public tileOffsetArr: Float32Array;\n    public layerOpacityArr: Float32Array;\n\n    constructor(segment: Segment) {\n        this.segment = segment;\n        this.layers = [];\n        this.tileOffsetArr = new Float32Array(segment.planet.SLICE_SIZE_4);\n        this.layerOpacityArr = new Float32Array(segment.planet.SLICE_SIZE);\n    }\n\n    public clear() {\n        // @ts-ignore\n        this.layers = null;\n        // @ts-ignore\n        this.tileOffsetArr = null;\n        // @ts-ignore\n        this.layerOpacityArr = null;\n    }\n\n    public append(layer: Layer, material: Material) {\n        let n = this.layers.length;\n\n        this.layers.push(layer);\n\n        this.layerOpacityArr[n] = layer.screenOpacity;\n\n        let n4 = n * 4;\n\n        let arr = layer.applyMaterial(material);\n        this.tileOffsetArr[n4] = arr[0];\n        this.tileOffsetArr[n4 + 1] = arr[1];\n        this.tileOffsetArr[n4 + 2] = arr[2];\n        this.tileOffsetArr[n4 + 3] = arr[3];\n\n        //arr = this.segment._getLayerExtentOffset(layer);\n        //slice.visibleExtentOffsetArr[n4] = arr[0];\n        //slice.visibleExtentOffsetArr[n4 + 1] = arr[1];\n        //slice.visibleExtentOffsetArr[n4 + 2] = arr[2];\n        //slice.visibleExtentOffsetArr[n4 + 3] = arr[3];\n\n    }\n}\n\nexport {Slice}","import * as mercator from \"../mercator\";\nimport * as segmentHelper from \"../segment/segmentHelper\";\nimport {Box} from \"../bv/Box\";\nimport {Extent} from \"../Extent\";\nimport {Entity} from \"../entity/Entity\";\nimport {EPSG3857} from \"../proj/EPSG3857\";\nimport {E, N, NOTRENDERING, OPSIDE, S, W} from \"../quadTree/quadTree\";\nimport {getMatrixSubArray64, TypedArray} from \"../utils/shared\";\nimport {Handler, WebGLBufferExt, WebGLTextureExt} from \"../webgl/Handler\";\nimport {ITerrainWorkerData} from \"../utils/TerrainWorker\";\nimport {Layer} from \"../layer/Layer\";\nimport {LonLat} from \"../LonLat\";\nimport {Material} from \"../layer/Material\";\nimport {Node} from \"../quadTree/Node\";\nimport {Planet} from \"../scene/Planet\";\nimport {PlanetCamera} from \"../camera/PlanetCamera\";\nimport {Program} from \"../webgl/Program\";\nimport {Proj} from \"../proj/Proj\";\nimport {NumberArray6, Sphere} from \"../bv/Sphere\";\nimport {Slice} from \"./Slice\";\nimport {Ray} from \"../math/Ray\";\nimport {Vec3} from \"../math/Vec3\";\nimport {IPlainSegmentWorkerData} from \"../utils/PlainSegmentWorker\";\n\nexport const TILEGROUP_COMMON = 0;\nexport const TILEGROUP_NORTH = 1;\nexport const TILEGROUP_SOUTH = 2;\n\nlet _tempHigh = new Vec3();\nlet _tempLow = new Vec3();\n\nlet _v0 = new Vec3(),\n    _v1 = new Vec3(),\n    _v2 = new Vec3(),\n    _v3 = new Vec3();\n\nlet _ray = new Ray(),\n    _rayEx = new Ray();\n\nconst _S = new Array(4);\n_S[N] = 0;\n_S[E] = 1;\n_S[S] = 1;\n_S[W] = 0;\n\nconst _V = new Array(4);\n_V[N] = false;\n_V[E] = true;\n_V[S] = false;\n_V[W] = true;\n\n/**\n * Planet segment Web Mercator tile class that stored and rendered with a quad-tree.\n * @class\n * @param {Node} node - Segment node.\n * @param {Planet} planet - Planet scene.\n * @param {number} tileZoom - Zoom index.\n * @param {Extent} extent - Segment extent.\n */\nclass Segment {\n\n    public _isNorth?: boolean;\n\n    public isPole: boolean;\n\n    public _tileGroup: number;\n\n    public _projection: Proj;\n\n    /**\n     * Quad tree node of the segment.\n     * @type {Node}\n     */\n    public node: Node;\n\n    /**\n     * Planet pointer.\n     * @type {Planet}\n     */\n    public planet: Planet;\n\n    /**\n     * WebGl handler pointer.\n     * @type {Handler}\n     */\n    public handler: Handler;\n\n    /**\n     * Segment bounding sphere\n     * @type {Sphere}\n     */\n    public bsphere: Sphere;\n\n    public _plainRadius: number;\n\n    /**\n     * Segment bounding box.\n     * @type {Box}\n     */\n    public bbox: Box;\n\n    public _sw: Vec3;\n    public _nw: Vec3;\n    public _se: Vec3;\n    public _ne: Vec3;\n\n    public centerNormal: Vec3;\n\n    /**\n     * Geographical extent.\n     * @type {Extent}\n     */\n    public _extent: Extent;\n\n    public _extentMerc: Extent;\n\n    public _extentLonLat: Extent;\n\n    /**\n     * Vertices grid size.\n     * @type {number}\n     */\n    public gridSize: number;\n\n    public fileGridSize: number;\n\n    /**\n     * Tile zoom index.\n     * @type {number}\n     */\n    public tileZoom: number;\n\n    /**\n     * Horizontal tile index.\n     * @type {number}\n     */\n    public tileX: number;\n\n    public tileXE: number;\n\n    public tileXW: number;\n\n    public tileYN: number;\n\n    public tileYS: number;\n\n    /**\n     * Vertical tile index.\n     * @type {number}\n     */\n    public tileY: number;\n\n    public tileIndex: string;\n\n    /**\n     * Texture materials array.\n     * @type {Array.<Material>}\n     *\n     * @toso: Check it should be Map<number, Material> instead of array\n     *\n     */\n    public materials: Material[];\n\n    /**\n     * Plain segment vertices was created.\n     * @type {boolean}\n     */\n    public plainReady: boolean;\n\n    /**\n     * Segment is ready to create plain vertices.\n     * @type {boolean}\n     */\n    public initialized: boolean;\n\n    /**\n     * Normal map is allready made.\n     * @type {boolean}\n     */\n    public normalMapReady: boolean;\n\n    /**\n     * Terrain is allready applied flag.\n     * @type {boolean}\n     */\n    public terrainReady: boolean;\n\n    /**\n     * Terrain is loading now flag.\n     * @type {boolean}\n     */\n    public terrainIsLoading: boolean;\n\n    /**\n     * Terrain existing flag.\n     * @type {boolean}\n     */\n    public terrainExists: boolean;\n\n    /**\n     * Means that tree passage reach the segment, and the segment terrain is ready.\n     * @type {boolean}\n     */\n    public passReady: boolean;\n\n    public plainVertices: Float64Array | null;\n    public plainVerticesHigh: Float32Array | null;\n    public plainVerticesLow: Float32Array | null;\n\n    public plainNormals: Float32Array | null;\n\n    public terrainVertices: Float64Array | null;\n    public terrainVerticesHigh: Float32Array | null;\n    public terrainVerticesLow: Float32Array | null;\n    public noDataVertices: Uint8Array | null;\n\n    public tempVertices: Float64Array | null;\n    public tempVerticesHigh: Float32Array | null;\n    public tempVerticesLow: Float32Array | null;\n\n    public normalMapTexture: WebGLTextureExt | null;\n    public normalMapTextureBias: Float32Array;\n    public normalMapVertices: Float64Array | null;\n    public normalMapVerticesHigh: Float32Array | null;\n    public normalMapVerticesLow: Float32Array | null;\n    public normalMapNormals: Float32Array | null;\n\n    public vertexNormalBuffer: WebGLBufferExt | null;\n    public vertexPositionBuffer: WebGLBufferExt | null;\n    public vertexPositionBufferHigh: WebGLBufferExt | null;\n    public vertexPositionBufferLow: WebGLBufferExt | null;\n    public vertexTextureCoordBuffer: WebGLBufferExt | null;\n\n    public _globalTextureCoordinates: Float32Array;\n    public _inTheQueue: boolean;\n    public _appliedNeighborsZoom: [number, number, number, number];\n\n    public _slices: Slice[];\n\n    public _indexBuffer: WebGLBufferExt | null;\n\n    public readyToEngage: boolean;\n\n    public plainProcessing: boolean;\n\n    public normalMapTexturePtr: WebGLTextureExt | null;\n\n    constructor(node: Node, planet: Planet, tileZoom: number, extent: Extent) {\n        this.isPole = false;\n\n        this._tileGroup = TILEGROUP_COMMON;\n\n        this._projection = EPSG3857;\n\n        this.node = node;\n\n        this.planet = planet;\n\n        this.handler = planet.renderer!.handler;\n\n        this.bsphere = new Sphere();\n\n        this._plainRadius = 0;\n\n        this.bbox = new Box();\n\n        this._sw = new Vec3();\n        this._nw = new Vec3();\n        this._se = new Vec3();\n        this._ne = new Vec3();\n\n        this.centerNormal = new Vec3();\n\n        this._extent = this._extentMerc = extent;\n\n        this._extentLonLat = new Extent();\n\n        this.gridSize = planet.terrain!.gridSizeByZoom[tileZoom];\n\n        this.fileGridSize = 0;\n\n        this.tileZoom = tileZoom;\n\n        this.tileX = 0;\n\n        this.tileXE = 0;\n\n        this.tileXW = 0;\n\n        this.tileYN = 0;\n\n        this.tileYS = 0;\n\n        this.tileY = 0;\n\n        this.tileIndex = \"\";\n\n        this._assignTileIndexes();\n\n        /**\n         * @toso: Check it should be Map<number, Material> instead of array\n         */\n        this.materials = [];\n\n        this.plainReady = false;\n\n        this.initialized = false;\n\n        this.normalMapReady = false;\n\n        this.terrainReady = false;\n\n        this.terrainIsLoading = false;\n\n        this.terrainExists = false;\n\n        this.passReady = false;\n\n        this.plainVertices = null;\n        this.plainVerticesHigh = null;\n        this.plainVerticesLow = null;\n\n        this.plainNormals = null;\n\n        this.terrainVertices = null;\n        this.terrainVerticesHigh = null;\n        this.terrainVerticesLow = null;\n        this.noDataVertices = null;\n\n        this.tempVertices = null;\n        this.tempVerticesHigh = null;\n        this.tempVerticesLow = null;\n\n        this.normalMapTexture = null;\n        this.normalMapTextureBias = new Float32Array(3);\n        this.normalMapVertices = null;\n        this.normalMapVerticesHigh = null;\n        this.normalMapVerticesLow = null;\n        this.normalMapNormals = null;\n\n        this.vertexNormalBuffer = null;\n        this.vertexPositionBuffer = null;\n        this.vertexPositionBufferHigh = null;\n        this.vertexPositionBufferLow = null;\n        this.vertexTextureCoordBuffer = null;\n\n        this._globalTextureCoordinates = new Float32Array(4);\n        this._inTheQueue = false;\n        this._appliedNeighborsZoom = [0, 0, 0, 0];\n\n        this._slices = [];\n\n        this._indexBuffer = null;\n\n        this.readyToEngage = false;\n\n        this.plainProcessing = false;\n\n        this.normalMapTexturePtr = null;\n    }\n\n    public checkZoom(): boolean {\n        return this.tileZoom < this.planet.terrain!._maxNodeZoom;\n    }\n\n    /**\n     * Returns entity terrain point.\n     * @public\n     * @param {Entity} entity - Entity.\n     * @param {Vec3} res - Point coordinates.\n     * @returns {Vec3} -\n     */\n    public getEntityTerrainPoint(entity: Entity, res: Vec3): number {\n        return this.getTerrainPoint(entity._cartesian, this.getInsideLonLat(entity), res);\n    }\n\n    public getInsideLonLat(obj: Entity | PlanetCamera): LonLat {\n        return obj._lonLatMerc;\n    }\n\n    public isEntityInside(entity: Entity): boolean {\n        return this._extentLonLat!.isInside(entity._lonLat);\n    }\n\n    /**\n     * Returns distance from object to terrain coordinates and terrain point that calculates out in the res parameter.\n     * @public\n     * @param {Vec3} xyz - Cartesian object position.\n     * @param {LonLat} insideSegmentPosition - Geodetic object position.\n     * @param {Vec3} [res] - Result cartesian coordinates on the terrain.\n     * @returns {number} -\n     */\n    public getTerrainPoint(xyz: Vec3, insideSegmentPosition: LonLat, res: Vec3): number {\n        let verts = this.tempVertices;\n\n        if (verts && verts.length) {\n            let norm = this.planet.ellipsoid.getSurfaceNormal3v(xyz);\n            _ray.set(xyz, norm.negateTo());\n\n            let ne = this._extent.northEast,\n                sw = this._extent.southWest,\n                size = Math.sqrt(verts.length / 3) - 1;\n\n            let xmax = ne.lon,\n                ymax = ne.lat,\n                xmin = sw.lon,\n                ymin = sw.lat,\n                x = insideSegmentPosition.lon,\n                y = insideSegmentPosition.lat;\n\n            let sxn = xmax - xmin,\n                syn = ymax - ymin;\n\n            let qx = sxn / size,\n                qy = syn / size;\n\n            let xn = x - xmin,\n                yn = y - ymin;\n\n            let indX = Math.floor(xn / qx),\n                indY = Math.floor(size - yn / qy);\n\n            let ind_v0 = ((size + 1) * indY + indX) * 3;\n            let ind_v2 = ((size + 1) * (indY + 1) + indX) * 3;\n\n            _v0.set(verts[ind_v0], verts[ind_v0 + 1], verts[ind_v0 + 2]);\n            _v1.set(verts[ind_v0 + 3], verts[ind_v0 + 4], verts[ind_v0 + 5]);\n            _v2.set(verts[ind_v2], verts[ind_v2 + 1], verts[ind_v2 + 2]);\n\n            let d = _ray.hitTriangle(_v0, _v1, _v2, res);\n\n            if (d === Ray.INSIDE) {\n                return xyz.distance(res);\n            } else if (d === Ray.AWAY) {\n                _rayEx.set(xyz, norm);\n                let d = _rayEx.hitTriangle(_v0, _v1, _v2, res);\n                if (d === Ray.INSIDE) {\n                    return -xyz.distance(res);\n                }\n            }\n\n            _v3.set(verts[ind_v2 + 3], verts[ind_v2 + 4], verts[ind_v2 + 5]);\n\n            d = _ray.hitTriangle(_v1, _v3, _v2, res);\n            if (d === Ray.INSIDE) {\n                return xyz.distance(res);\n            } else if (d === Ray.AWAY) {\n                _rayEx.set(xyz, norm);\n                let d = _rayEx.hitTriangle(_v1, _v3, _v2, res);\n                if (d === Ray.INSIDE) {\n                    return -xyz.distance(res);\n                }\n            }\n\n            if (d === Ray.AWAY) {\n                return -xyz.distance(res);\n            }\n\n            return xyz.distance(res);\n        } else {\n            return xyz.distance(this.planet.ellipsoid.hitRay(_ray.origin, _ray.direction)!);\n        }\n    }\n\n    /**\n     * Project wgs86 to segment native projection.\n     * @public\n     * @param {LonLat} lonlat - Coordinates to project.\n     * @returns {LonLat} -\n     */\n    public projectNative(lonlat: LonLat): LonLat {\n        return lonlat.forwardMercator();\n    }\n\n    public loadTerrain(forceLoading: boolean = false) {\n        if (this.tileZoom < this.planet.terrain!.minZoom || this.planet.terrain!.isEmpty) {\n            this.terrainIsLoading = true;\n\n            this.elevationsNotExists();\n\n            if (!this._inTheQueue) {\n                this.planet._normalMapCreator.queue(this);\n            }\n        } else {\n            if (this.tileZoom > this.planet.terrain!.maxZoom) {\n                this.elevationsNotExists();\n            } else if (!this.terrainIsLoading && !this.terrainReady) {\n                this.planet.terrain!.loadTerrain(this, forceLoading);\n            }\n            // if (!this.terrainIsLoading && !this.terrainReady) {\n            //     this.planet.terrain.loadTerrain(this, forceLoading);\n            // }\n        }\n    }\n\n    /**\n     * Terrain obtained from server.\n     * @param {Float32Array} elevations - Elevation data.\n     */\n    public elevationsExists(elevations: number[] | TypedArray) {\n        if (this.plainReady && this.terrainIsLoading) {\n\n            let _elevations = new Float32Array(elevations.length);\n            _elevations.set(elevations);\n\n            this.planet._terrainWorker.make({segment: this, elevations: _elevations});\n\n            this.plainVerticesHigh = null;\n            this.plainVerticesLow = null;\n\n            this.normalMapVerticesHigh = null;\n            this.normalMapVerticesLow = null;\n\n            if (!this.planet.terrain!.equalizeVertices) {\n                this.tempVerticesHigh = null;\n                this.tempVerticesLow = null;\n            }\n        }\n    }\n\n    /**\n     * Keep plain elevation segment for rendering\n     *\n     * 'this.tileZoom <= this.planet.terrain.maxZoom' it means, that the segment is plain\n     *\n     */\n    public elevationsNotExists() {\n        if (this.planet && this.tileZoom <= this.planet.terrain!.maxNativeZoom) {\n\n            if (this.plainReady && this.terrainIsLoading) {\n                this.terrainIsLoading = false;\n\n                let n = this.node;\n                n.appliedTerrainNodeId = this.node.nodeId;\n                n.equalizedSideWithNodeId[N] = n.equalizedSideWithNodeId[E] = n.equalizedSideWithNodeId[S] =\n                    n.equalizedSideWithNodeId[W] = n.appliedTerrainNodeId;\n\n                if (this.planet.lightEnabled && !this._inTheQueue) {\n                    this.planet._normalMapCreator.queue(this);\n                }\n\n                this.readyToEngage = true;\n            }\n\n            // plain terrain only\n            this.terrainVertices = this.plainVertices;\n            this.terrainVerticesHigh = this.plainVerticesHigh;\n            this.terrainVerticesLow = this.plainVerticesLow;\n\n            this.tempVertices = this.terrainVertices;\n            this.tempVerticesHigh = this.terrainVerticesHigh;\n            this.tempVerticesLow = this.terrainVerticesLow;\n\n            this.noDataVertices = null;\n\n            this.fileGridSize = Math.sqrt(this.terrainVertices!.length / 3) - 1;\n            this.gridSize = this.fileGridSize;\n            this.terrainReady = true;\n            this.terrainExists = false;\n\n        } else {\n\n            if (this.plainReady && this.terrainIsLoading) {\n                this.terrainIsLoading = false;\n\n                let n = this.node;\n                n.appliedTerrainNodeId = this.node.nodeId;\n                n.equalizedSideWithNodeId[N] = n.equalizedSideWithNodeId[E] = n.equalizedSideWithNodeId[S] =\n                    n.equalizedSideWithNodeId[W] = n.appliedTerrainNodeId;\n\n                this.readyToEngage = true;\n                this.terrainReady = true;\n                this.passReady = true;\n\n                this.terrainExists = false;\n            }\n        }\n    }\n\n    protected _checkEqualization(neighborSide: number, neigborNode: Node): boolean {\n        return neigborNode && this.tileZoom >= neigborNode.segment.tileZoom &&\n            this.node.equalizedSideWithNodeId[neighborSide] !== neigborNode.equalizedSideWithNodeId[OPSIDE[neighborSide]];\n    }\n\n    public equalize() {\n\n        if (this.tileZoom < 8 || this.gridSize < 2) {\n            return;\n        }\n\n        this.readyToEngage = true;\n\n        let nn = this.node.neighbors;\n\n        let v = this.tempVertices!,\n            vHigh = this.tempVerticesHigh!,\n            vLow = this.tempVerticesLow!;\n\n        let gs = this.gridSize,\n            gsOne = gs + 1;\n\n        let n = nn[N][0];\n        if (this._checkEqualization(N, n)) {\n\n            this.node.equalizedSideWithNodeId[N] = n.equalizedSideWithNodeId[S];\n\n            this.readyToEngage = true;\n\n            let offset = this.node.getOffsetOppositeNeighbourSide(n, N);\n\n            let nv = n.segment.tempVertices!,\n                nvHigh = n.segment.tempVerticesHigh!,\n                nvLow = n.segment.tempVerticesLow!;\n\n            let n_gs = n.segment.gridSize,\n                n_gsOne = n_gs + 1;\n\n            let dz = 1 / (1 << (this.tileZoom - n.segment.tileZoom));\n\n            let inc = Math.max(gs / (n_gs * dz), 1),\n                n_inc = Math.max((n_gs * dz) / gs, 1),\n                n_offset = offset * n_gs;\n\n            for (let k = 0, nk = n_offset; k < gsOne; k += inc, nk += n_inc) {\n                const index = k * 3;\n                const n_index = (n_gsOne * n_gs + nk) * 3;\n\n                v[index] = nv[n_index];\n                v[index + 1] = nv[n_index + 1];\n                v[index + 2] = nv[n_index + 2];\n\n                vHigh[index] = nvHigh[n_index];\n                vHigh[index + 1] = nvHigh[n_index + 1];\n                vHigh[index + 2] = nvHigh[n_index + 2];\n\n                vLow[index] = nvLow[n_index];\n                vLow[index + 1] = nvLow[n_index + 1];\n                vLow[index + 2] = nvLow[n_index + 2];\n            }\n        }\n\n        n = nn[E][0];\n        if (this._checkEqualization(E, n)) {\n\n            this.node.equalizedSideWithNodeId[E] = n.equalizedSideWithNodeId[W];\n\n            this.readyToEngage = true;\n\n            let offset = this.node.getOffsetOppositeNeighbourSide(n, E);\n\n            let nv = n.segment.tempVertices!,\n                nvHigh = n.segment.tempVerticesHigh!,\n                nvLow = n.segment.tempVerticesLow!;\n\n            let n_gs = n.segment.gridSize,\n                n_gsOne = n_gs + 1;\n\n            let dz = 1 / (1 << (this.tileZoom - n.segment.tileZoom));\n\n            let inc = Math.max(gs / (n_gs * dz), 1),\n                n_inc = Math.max((n_gs * dz) / gs, 1),\n                n_offset = offset * n_gs;\n\n            for (let k = 0, nk = n_offset; k < gsOne; k += inc, nk += n_inc) {\n                const index = (gsOne * k + gs) * 3;\n                const n_index = n_gsOne * nk * 3;\n\n                v[index] = nv[n_index];\n                v[index + 1] = nv[n_index + 1];\n                v[index + 2] = nv[n_index + 2];\n\n                vHigh[index] = nvHigh[n_index];\n                vHigh[index + 1] = nvHigh[n_index + 1];\n                vHigh[index + 2] = nvHigh[n_index + 2];\n\n                vLow[index] = nvLow[n_index];\n                vLow[index + 1] = nvLow[n_index + 1];\n                vLow[index + 2] = nvLow[n_index + 2];\n            }\n        }\n\n        n = nn[S][0];\n        if (this._checkEqualization(S, n)) {\n\n            this.node.equalizedSideWithNodeId[S] = n.equalizedSideWithNodeId[N];\n\n            this.readyToEngage = true;\n\n            let offset = this.node.getOffsetOppositeNeighbourSide(n, S);\n\n            let nv = n.segment.tempVertices!,\n                nvHigh = n.segment.tempVerticesHigh!,\n                nvLow = n.segment.tempVerticesLow!;\n\n            let n_gs = n.segment.gridSize; // n_gsOne = n_gs + 1;\n\n            let dz = 1 / (1 << (this.tileZoom - n.segment.tileZoom));\n\n            let inc = Math.max(gs / (n_gs * dz), 1),\n                n_inc = Math.max((n_gs * dz) / gs, 1),\n                n_offset = offset * n_gs;\n\n            for (let k = 0, nk = n_offset; k < gsOne; k += inc, nk += n_inc) {\n                const index = (gsOne * gs + k) * 3;\n                const n_index = nk * 3;\n\n                v[index] = nv[n_index];\n                v[index + 1] = nv[n_index + 1];\n                v[index + 2] = nv[n_index + 2];\n\n                vHigh[index] = nvHigh[n_index];\n                vHigh[index + 1] = nvHigh[n_index + 1];\n                vHigh[index + 2] = nvHigh[n_index + 2];\n\n                vLow[index] = nvLow[n_index];\n                vLow[index + 1] = nvLow[n_index + 1];\n                vLow[index + 2] = nvLow[n_index + 2];\n            }\n        }\n\n        n = nn[W][0];\n        if (this._checkEqualization(W, n)) {\n\n            this.node.equalizedSideWithNodeId[W] = n.equalizedSideWithNodeId[E];\n\n            this.readyToEngage = true;\n\n            let offset = this.node.getOffsetOppositeNeighbourSide(n, W);\n\n            let nv = n.segment.tempVertices!,\n                nvHigh = n.segment.tempVerticesHigh!,\n                nvLow = n.segment.tempVerticesLow!;\n\n            let n_gs = n.segment.gridSize,\n                n_gsOne = n_gs + 1;\n\n            let dz = 1 / (1 << (this.tileZoom - n.segment.tileZoom));\n\n            let inc = Math.max(gs / (n_gs * dz), 1),\n                n_inc = Math.max((n_gs * dz) / gs, 1),\n                n_offset = offset * n_gs;\n\n            for (let k = 0, nk = n_offset; k < gsOne; k += inc, nk += n_inc) {\n                const index = gsOne * k * 3;\n                const n_index = (n_gsOne * nk + n_gs) * 3;\n\n                v[index] = nv[n_index];\n                v[index + 1] = nv[n_index + 1];\n                v[index + 2] = nv[n_index + 2];\n\n                vHigh[index] = nvHigh[n_index];\n                vHigh[index + 1] = nvHigh[n_index + 1];\n                vHigh[index + 2] = nvHigh[n_index + 2];\n\n                vLow[index] = nvLow[n_index];\n                vLow[index + 1] = nvLow[n_index + 1];\n                vLow[index + 2] = nvLow[n_index + 2];\n            }\n        }\n    }\n\n    public engage() {\n        this.readyToEngage = false;\n        this.createCoordsBuffers(this.tempVerticesHigh!, this.tempVerticesLow!, this.gridSize);\n    }\n\n    public _terrainWorkerCallback(data: ITerrainWorkerData) {\n        if (this.plainReady) {\n            this.readyToEngage = true;\n\n            this.normalMapNormals = null;\n\n            this.normalMapVertices = null;\n            this.normalMapVerticesHigh = null;\n            this.normalMapVerticesLow = null;\n\n            this.terrainVertices = null;\n            this.terrainVerticesHigh = null;\n            this.terrainVerticesLow = null;\n            this.noDataVertices = null;\n\n            this.tempVertices = null;\n            this.tempVerticesHigh = null;\n            this.tempVerticesLow = null;\n\n            this.normalMapNormals = data.normalMapNormals;\n            this.normalMapVertices = data.normalMapVertices;\n            this.normalMapVerticesHigh = data.normalMapVerticesHigh;\n            this.normalMapVerticesLow = data.normalMapVerticesLow;\n\n            this.terrainVertices = data.terrainVertices;\n            this.terrainVerticesHigh = data.terrainVerticesHigh;\n            this.terrainVerticesLow = data.terrainVerticesLow;\n\n            this.noDataVertices = data.noDataVertices;\n\n            this.tempVertices = this.terrainVertices;\n            this.tempVerticesHigh = this.terrainVerticesHigh;\n            this.tempVerticesLow = this.terrainVerticesLow;\n\n            this.setBoundingVolumeArr(data.bounds);\n\n            this.gridSize = Math.sqrt(this.terrainVertices!.length / 3) - 1;\n\n            let n = this.node;\n            n.appliedTerrainNodeId = n.nodeId;\n            n.equalizedSideWithNodeId[N] = n.equalizedSideWithNodeId[E] = n.equalizedSideWithNodeId[S] =\n                n.equalizedSideWithNodeId[W] = n.appliedTerrainNodeId;\n\n            this.terrainReady = true;\n            this.terrainIsLoading = false;\n            this.terrainExists = true;\n\n            if (!this.normalMapTexturePtr) {\n                const nmc = this.planet._normalMapCreator;\n                this.normalMapTexturePtr = this.planet.renderer!.handler.createEmptyTexture_l(nmc.width, nmc.height);\n            }\n\n            if (this.planet.lightEnabled) {\n                this.planet._normalMapCreator.queue(this);\n            }\n        }\n    }\n\n    public _normalMapEdgeEqualize(side: number) {\n        let nn = this.node.neighbors;\n        let n: Node | undefined = nn[side][0];\n        let maxZ = this.planet.terrain!.maxZoom;\n\n        if (this.tileZoom === maxZ) {\n            if (!(nn[0].length || nn[1].length || nn[2].length || nn[3].length)) {\n                n = this.node.getEqualNeighbor(side);\n            }\n        }\n\n        let b = n && n.segment,\n            s = this;\n\n        if (\n            n &&\n            b &&\n            b.terrainReady &&\n            b.terrainExists &&\n            b.tileZoom <= maxZ &&\n            s._appliedNeighborsZoom[side] !== b.tileZoom\n        ) {\n            s._appliedNeighborsZoom[side] = b.tileZoom;\n\n            let seg_a = s.normalMapNormals,\n                seg_b = b.normalMapNormals;\n\n            if (!(seg_a && seg_b)) return;\n\n            let seg_a_raw = s.normalMapNormals!,\n                seg_b_raw = b.normalMapNormals!;\n\n            // let seg_a_verts = s.terrainVertices,\n            //     seg_b_verts = s.terrainVertices;\n\n            let s_gs = Math.sqrt(seg_a.length / 3),\n                // b_gs = Math.sqrt(seg_b.length / 3),\n                s_gs1 = s_gs - 1;\n            // b_gs1 = b_gs - 1;\n\n            const i_a = s_gs1 * _S[side];\n\n            let nx, ny, nz, q;\n\n            if (s.tileZoom === b.tileZoom) {\n                const i_b = s_gs1 - i_a;\n\n                if (_V[side]) {\n                    for (let k = 0; k < s_gs; k++) {\n                        let vInd_a = (k * s_gs + i_a) * 3,\n                            vInd_b = (k * s_gs + i_b) * 3;\n\n                        nx = seg_a_raw[vInd_a] + seg_b_raw[vInd_b];\n                        ny = seg_a_raw[vInd_a + 1] + seg_b_raw[vInd_b + 1];\n                        nz = seg_a_raw[vInd_a + 2] + seg_b_raw[vInd_b + 2];\n\n                        q = 1.0 / Math.sqrt(nx * nx + ny * ny + nz * nz);\n\n                        seg_b[vInd_b] = seg_a[vInd_a] = nx * q;\n                        seg_b[vInd_b + 1] = seg_a[vInd_a + 1] = ny * q;\n                        seg_b[vInd_b + 2] = seg_a[vInd_a + 2] = nz * q;\n                    }\n                } else {\n                    for (let k = 0; k < s_gs; k++) {\n                        let vInd_a = (i_a * s_gs + k) * 3,\n                            vInd_b = (i_b * s_gs + k) * 3;\n\n                        nx = seg_a_raw[vInd_a] + seg_b_raw[vInd_b];\n                        ny = seg_a_raw[vInd_a + 1] + seg_b_raw[vInd_b + 1];\n                        nz = seg_a_raw[vInd_a + 2] + seg_b_raw[vInd_b + 2];\n\n                        q = 1.0 / Math.sqrt(nx * nx + ny * ny + nz * nz);\n\n                        seg_b[vInd_b] = seg_a[vInd_a] = nx * q;\n                        seg_b[vInd_b + 1] = seg_a[vInd_a + 1] = ny * q;\n                        seg_b[vInd_b + 2] = seg_a[vInd_a + 2] = nz * q;\n                    }\n                }\n\n                if (!b._inTheQueue && b._appliedNeighborsZoom[OPSIDE[side]] !== s.tileZoom) {\n                    b._appliedNeighborsZoom[OPSIDE[side]] = s.tileZoom;\n                    s.planet._normalMapCreator.queue(b);\n                }\n            }\n        }\n    }\n\n    public applyTerrain(elevations?: number[] | TypedArray | null) {\n        if (elevations) {\n            this.elevationsExists(elevations);\n        } else {\n            this.elevationsNotExists();\n        }\n    }\n\n    public deleteBuffers() {\n\n        const gl = this.handler.gl!;\n\n        gl.deleteBuffer(this.vertexNormalBuffer!);\n        gl.deleteBuffer(this.vertexPositionBuffer!);\n        gl.deleteBuffer(this.vertexPositionBufferHigh!);\n        gl.deleteBuffer(this.vertexPositionBufferLow!);\n\n        this.vertexNormalBuffer = null;\n        this.vertexPositionBuffer = null;\n        this.vertexPositionBufferHigh = null;\n        this.vertexPositionBufferLow = null;\n        this.vertexTextureCoordBuffer = null;\n    }\n\n    public deleteMaterials() {\n        let m = this.materials;\n        for (let i = 0; i < m.length; i++) {\n            let mi = m[i];\n            if (mi) {\n                mi.clear();\n            }\n        }\n        this.materials.length = 0;\n    }\n\n    public deleteElevations() {\n        this.terrainExists = false;\n        this.terrainReady = false;\n        this.terrainIsLoading = false;\n\n        this.normalMapVertices = null;\n        this.normalMapVerticesHigh = null;\n        this.normalMapVerticesLow = null;\n        this.normalMapNormals = null;\n\n        this.tempVertices = null;\n        this.tempVerticesHigh = null;\n        this.tempVerticesLow = null;\n\n        this.terrainVertices = null;\n        this.terrainVerticesHigh = null;\n        this.terrainVerticesLow = null;\n        this.noDataVertices = null;\n\n        this.plainVertices = null;\n        this.plainVerticesHigh = null;\n        this.plainVerticesLow = null;\n        this.plainNormals = null;\n\n        if (this.normalMapReady) {\n            this.handler.gl!.deleteTexture(this.normalMapTexture!);\n            this.normalMapReady = false;\n        }\n\n        this._appliedNeighborsZoom = [0, 0, 0, 0];\n\n        this.normalMapTextureBias[0] = 0;\n        this.normalMapTextureBias[1] = 0;\n        this.normalMapTextureBias[2] = 1;\n\n        this._inTheQueue = false;\n    }\n\n    public clearSegment() {\n        this.plainReady = false;\n        this.initialized = false;\n        this.deleteBuffers();\n        this.deleteMaterials();\n        this.deleteElevations();\n    }\n\n    public destroySegment() {\n\n        this.clearSegment();\n\n        let i = this._slices.length;\n        while (i--) {\n            this._slices[i].clear();\n        }\n\n        //@ts-ignore\n        this._slices = null;\n        //@ts-ignore\n        this.node = null;\n        //@ts-ignore\n        this.planet = null;\n        //@ts-ignore\n        this.handler = null;\n        //@ts-ignore\n        this.bbox = null;\n        //@ts-ignore\n        this.bsphere = null;\n        //@ts-ignore\n        this._extent = null;\n        //@ts-ignore\n        this.materials = null;\n\n        this.plainVertices = null;\n        this.plainVerticesHigh = null;\n        this.plainVerticesLow = null;\n        this.plainNormals = null;\n\n        this.terrainVertices = null;\n        this.terrainVerticesHigh = null;\n        this.terrainVerticesLow = null;\n        this.noDataVertices = null;\n\n        this.tempVertices = null;\n        this.tempVerticesHigh = null;\n        this.tempVerticesLow = null;\n\n        //@ts-ignore\n        this.normalMapTextureBias = null;\n        this.normalMapTexture = null;\n        this.normalMapVertices = null;\n        this.normalMapVerticesHigh = null;\n        this.normalMapVerticesLow = null;\n        this.normalMapNormals = null;\n\n        this.vertexNormalBuffer = null;\n        this.vertexPositionBuffer = null;\n        this.vertexPositionBufferHigh = null;\n        this.vertexPositionBufferLow = null;\n        this.vertexTextureCoordBuffer = null;\n\n        // @ts-ignore\n        this._projection = null;\n        // @ts-ignore\n        this._appliedNeighborsZoom = null;\n        // @ts-ignore\n        this._globalTextureCoordinates = null;\n    }\n\n    /**\n     * @todo: looks like it could be simplified in Segment contructor\n     */\n    public _setExtentLonLat() {\n        this._extentLonLat = this._extent.inverseMercator();\n    }\n\n    public createBoundsByExtent() {\n        const ellipsoid = this.planet.ellipsoid;\n        const extent = this._extentLonLat;\n\n        const coord_sw = ellipsoid.geodeticToCartesian(extent.southWest.lon, extent.southWest.lat);\n        const coord_ne = ellipsoid.geodeticToCartesian(extent.northEast.lon, extent.northEast.lat);\n\n        const coord_nw = ellipsoid.geodeticToCartesian(\n            extent.southWest.lon,\n            extent.northEast.lat\n        );\n\n        const coord_se = ellipsoid.geodeticToCartesian(\n            extent.northEast.lon,\n            extent.southWest.lat\n        );\n\n        this._sw.copy(coord_sw);\n        this._nw.copy(coord_nw);\n        this._ne.copy(coord_ne);\n        this._se.copy(coord_se);\n\n        this.setBoundingVolume3v(coord_sw, coord_ne);\n    }\n\n    public createBoundsByParent() {\n        let pn = this.node;\n\n        while (pn.parentNode && !pn.segment.terrainReady) {\n            pn = pn.parentNode;\n        }\n\n        let dZ2 = 1 << (this.tileZoom - pn.segment.tileZoom);\n\n        let offsetX = this.tileX - pn.segment.tileX * dZ2,\n            offsetY = this.tileY - pn.segment.tileY * dZ2;\n\n        if (pn.segment.terrainReady && pn.segment.tileZoom >= this.planet.terrain!.minZoom) {\n            let gridSize = pn.segment.gridSize / dZ2;\n\n            if (gridSize >= 1.0) {\n                //\n                // (*) Actually, we get parent whole bounding volume\n                //\n                this.bsphere.center.x = pn.segment.bsphere.center.x;\n                this.bsphere.center.y = pn.segment.bsphere.center.y;\n                this.bsphere.center.z = pn.segment.bsphere.center.z;\n                this.bsphere.radius = pn.segment.bsphere.radius;\n\n                let i0 = gridSize * offsetY;\n                let j0 = gridSize * offsetX;\n\n                let pnGsOne = pn.segment.gridSize + 1;\n\n                let ind_sw = 3 * ((i0 + gridSize) * pnGsOne + j0),\n                    ind_nw = 3 * (i0 * pnGsOne + j0),\n                    ind_ne = 3 * (i0 * pnGsOne + j0 + gridSize),\n                    ind_se = 3 * ((i0 + gridSize) * pnGsOne + j0 + gridSize);\n\n                let pVerts = pn.segment.tempVertices!;\n\n                let v_sw = new Vec3(pVerts[ind_sw], pVerts[ind_sw + 1], pVerts[ind_sw + 2]),\n                    v_ne = new Vec3(pVerts[ind_ne], pVerts[ind_ne + 1], pVerts[ind_ne + 2]);\n\n                // check for segment zoom\n                let v_nw = new Vec3(pVerts[ind_nw], pVerts[ind_nw + 1], pVerts[ind_nw + 2]),\n                    v_se = new Vec3(pVerts[ind_se], pVerts[ind_se + 1], pVerts[ind_se + 2]);\n\n                this._sw.copy(v_sw);\n                this._nw.copy(v_nw);\n                this._ne.copy(v_ne);\n                this._se.copy(v_se);\n\n            } else {\n                let pseg = pn.segment;\n\n                let i0 = Math.floor(gridSize * offsetY),\n                    j0 = Math.floor(gridSize * offsetX);\n\n                let insideSize = 1.0 / gridSize;\n\n                let t_i0 = offsetY - insideSize * i0,\n                    t_j0 = offsetX - insideSize * j0;\n\n                let bigOne;\n                if (pseg.gridSize === 1) {\n                    bigOne = pseg.tempVertices!;\n                } else {\n                    bigOne = getMatrixSubArray64(pseg.tempVertices!, pseg.gridSize, i0, j0, 1);\n                }\n\n                let v_lt = new Vec3(bigOne[0], bigOne[1], bigOne[2]),\n                    v_rb = new Vec3(bigOne[9], bigOne[10], bigOne[11]);\n\n                let vn = new Vec3(\n                        bigOne[3] - bigOne[0],\n                        bigOne[4] - bigOne[1],\n                        bigOne[5] - bigOne[2]\n                    ),\n                    vw = new Vec3(\n                        bigOne[6] - bigOne[0],\n                        bigOne[7] - bigOne[1],\n                        bigOne[8] - bigOne[2]\n                    ),\n                    ve = new Vec3(\n                        bigOne[3] - bigOne[9],\n                        bigOne[4] - bigOne[10],\n                        bigOne[5] - bigOne[11]\n                    ),\n                    vs = new Vec3(\n                        bigOne[6] - bigOne[9],\n                        bigOne[7] - bigOne[10],\n                        bigOne[8] - bigOne[11]\n                    );\n\n                let vi_y = t_i0,\n                    vi_x = t_j0;\n\n                let coords_lt, coords_rb;\n\n                if (vi_y + vi_x < insideSize) {\n                    coords_lt = Vec3.add(\n                        vn.scaleTo(vi_x / insideSize),\n                        vw.scaleTo(vi_y / insideSize)\n                    ).addA(v_lt);\n                } else {\n                    coords_lt = Vec3.add(\n                        vs.scaleTo(1 - vi_x / insideSize),\n                        ve.scaleTo(1 - vi_y / insideSize)\n                    ).addA(v_rb);\n                }\n\n                vi_y = t_i0 + 1;\n                vi_x = t_j0 + 1;\n\n                if (vi_y + vi_x < insideSize) {\n                    coords_rb = Vec3.add(\n                        vn.scaleTo(vi_x / insideSize),\n                        vw.scaleTo(vi_y / insideSize)\n                    ).addA(v_lt);\n                } else {\n                    coords_rb = Vec3.add(\n                        vs.scaleTo(1 - vi_x / insideSize),\n                        ve.scaleTo(1 - vi_y / insideSize)\n                    ).addA(v_rb);\n                }\n\n                this.setBoundingVolume3v(coords_lt, coords_rb);\n            }\n        } else {\n            this.createBoundsByExtent();\n        }\n    }\n\n    public setBoundingSphere(x: number, y: number, z: number, v: Vec3) {\n        this.bsphere.center.x = x;\n        this.bsphere.center.y = y;\n        this.bsphere.center.z = z;\n        this.bsphere.radius = this.bsphere.center.distance(v);\n    }\n\n    public setBoundingVolume(xmin: number, ymin: number, zmin: number, xmax: number, ymax: number, zmax: number) {\n        this.bbox.setFromBoundsArr([xmin, ymin, zmin, xmax, ymax, zmax]);\n\n        let x = xmin + (xmax - xmin) * 0.5,\n            y = ymin + (ymax - ymin) * 0.5,\n            z = zmin + (zmax - zmin) * 0.5;\n\n        this.bsphere.center.set(x, y, z);\n        this.bsphere.radius = this.bsphere.center.distance(new Vec3(xmin, ymin, zmin));\n    }\n\n    public setBoundingVolume3v(vmin: Vec3, vmax: Vec3) {\n        this.bbox.setFromBoundsArr([vmin.x, vmin.y, vmin.z, vmax.x, vmax.y, vmax.z]);\n\n        let x = vmin.x + (vmax.x - vmin.x) * 0.5,\n            y = vmin.y + (vmax.y - vmin.y) * 0.5,\n            z = vmin.z + (vmax.z - vmin.z) * 0.5;\n\n        this.bsphere.center.set(x, y, z);\n        this.bsphere.radius = this.bsphere.center.distance(new Vec3(vmin.x, vmin.y, vmin.z));\n    }\n\n    public setBoundingVolumeArr(bounds: NumberArray6) {\n        this.bbox.setFromBoundsArr(bounds);\n\n        let x = bounds[0] + (bounds[3] - bounds[0]) * 0.5,\n            y = bounds[1] + (bounds[4] - bounds[1]) * 0.5,\n            z = bounds[2] + (bounds[5] - bounds[2]) * 0.5;\n\n        this.bsphere.center.set(x, y, z);\n        this.bsphere.radius = this.bsphere.center.distance(\n            new Vec3(bounds[0], bounds[1], bounds[2])\n        );\n    }\n\n    public createCoordsBuffers(verticesHigh: Float32Array, verticesLow: Float32Array, gridSize: number) {\n        const gsgs = (gridSize + 1) * (gridSize + 1);\n        const h = this.handler;\n\n        if (this.vertexPositionBufferHigh && this.vertexPositionBufferHigh.numItems === gsgs) {\n            h.setStreamArrayBuffer(this.vertexPositionBufferHigh!, verticesHigh);\n            h.setStreamArrayBuffer(this.vertexPositionBufferLow!, verticesLow);\n        } else {\n            h.gl!.deleteBuffer(this.vertexPositionBufferHigh!);\n            h.gl!.deleteBuffer(this.vertexPositionBufferLow!);\n\n            this.vertexTextureCoordBuffer = this.planet._textureCoordsBufferCache[Math.log2(gridSize)];\n\n            // @todo use it!\n            //this.vertexPositionBufferHigh = h.createStreamArrayBuffer(3, gsgs);\n            //h.setStreamArrayBuffer(this.vertexPositionBufferHigh, verticesHigh);\n            //this.vertexPositionBufferLow = h.createStreamArrayBuffer(3, gsgs);\n            //h.setStreamArrayBuffer(this.vertexPositionBufferLow, verticesLow);\n\n            // It works, but I'm not sure that it is correct and better use the comment above\n            this.vertexPositionBufferHigh = h.createArrayBuffer(verticesHigh, 3, gsgs);\n            this.vertexPositionBufferLow = h.createArrayBuffer(verticesLow, 3, gsgs);\n        }\n    }\n\n    public _addViewExtent() {\n        const ext = this._extentLonLat;\n\n        let viewExt = this.planet._viewExtent;\n\n        if (ext.southWest.lon < viewExt.southWest.lon) {\n            viewExt.southWest.lon = ext.southWest.lon;\n        }\n\n        if (ext.northEast.lon > viewExt.northEast.lon) {\n            viewExt.northEast.lon = ext.northEast.lon;\n        }\n\n        if (ext.southWest.lat < viewExt.southWest.lat) {\n            viewExt.southWest.lat = ext.southWest.lat;\n        }\n\n        if (ext.northEast.lat > viewExt.northEast.lat) {\n            viewExt.northEast.lat = ext.northEast.lat;\n        }\n    }\n\n    protected _assignTileIndexes() {\n\n        this._tileGroup = TILEGROUP_COMMON;\n\n        const tileZoom = this.tileZoom;\n        const extent = this._extent;\n        const pole = mercator.POLE;\n\n        this.tileX = Math.round(Math.abs(-pole - extent.southWest.lon) / (extent.northEast.lon - extent.southWest.lon));\n        this.tileY = Math.round(Math.abs(pole - extent.northEast.lat) / (extent.northEast.lat - extent.southWest.lat));\n\n        const p2 = Math.pow(2, tileZoom);\n\n        this.tileXE = (this.tileX + 1) % p2;\n        this.tileXW = (p2 + this.tileX - 1) % p2;\n\n        this.tileYN = this.tileY - 1;\n        this.tileYS = this.tileY + 1;\n\n        this.tileIndex = Layer.getTileIndex(this.tileX, this.tileY, tileZoom);\n    }\n\n    public initialize() {\n        const p = this.planet;\n        const n = this.node;\n\n        this.gridSize = p.terrain!.gridSizeByZoom[this.tileZoom] || p.terrain!.plainGridSize;\n\n        n.sideSizeLog2[0] = n.sideSizeLog2[1] = n.sideSizeLog2[2] = n.sideSizeLog2[3] = Math.log2(this.gridSize);\n\n        if (this.tileZoom <= p.terrain!.maxZoom) {\n            const nmc = this.planet._normalMapCreator;\n            this.normalMapTexturePtr = p.renderer!.handler.createEmptyTexture_l(nmc.width, nmc.height);\n        }\n\n        this.normalMapTexture = this.planet.transparentTexture;\n\n        this._assignGlobalTextureCoordinates();\n\n        this.initialized = true;\n    }\n\n    protected _assignGlobalTextureCoordinates() {\n        const e = this._extent;\n        this._globalTextureCoordinates[0] =\n            (e.southWest.lon + mercator.POLE) * mercator.ONE_BY_POLE_DOUBLE;\n        this._globalTextureCoordinates[1] =\n            (mercator.POLE - e.northEast.lat) * mercator.ONE_BY_POLE_DOUBLE;\n        this._globalTextureCoordinates[2] =\n            (e.northEast.lon + mercator.POLE) * mercator.ONE_BY_POLE_DOUBLE;\n        this._globalTextureCoordinates[3] =\n            (mercator.POLE - e.southWest.lat) * mercator.ONE_BY_POLE_DOUBLE;\n    }\n\n    public createPlainSegmentAsync() {\n        let p = this.planet,\n            t = p.terrain!;\n\n        if (t.isReady() && !this.plainReady && this.tileZoom <= t.maxZoom) {\n            this.plainProcessing = true;\n            p._plainSegmentWorker.make(this);\n        }\n    }\n\n    public _plainSegmentWorkerCallback(data: IPlainSegmentWorkerData) {\n        this.plainProcessing = false;\n\n        if (this.initialized && !this.terrainReady) {\n            this.plainReady = true;\n\n            this.plainVertices = data.plainVertices;\n            this.plainVerticesHigh = data.plainVerticesHigh;\n            this.plainVerticesLow = data.plainVerticesLow;\n            this.plainNormals = data.plainNormals;\n            this._plainRadius = data.plainRadius;\n\n            this.normalMapNormals = data.normalMapNormals;\n            this.normalMapVertices = data.normalMapVertices;\n            this.normalMapVerticesHigh = data.normalMapVerticesHigh;\n            this.normalMapVerticesLow = data.normalMapVerticesLow;\n\n            //this.terrainVertices = this.plainVertices;\n            //this.terrainVerticesHigh = this.plainVerticesHigh;\n            //this.terrainVerticesLow = this.plainVerticesLow;\n\n            this.fileGridSize = Math.sqrt(data.normalMapVertices!.length / 3) - 1;\n        }\n    }\n\n    public createPlainSegment() {\n        this.initialize();\n        this._createPlainVertices();\n        this.readyToEngage = true;\n    }\n\n    protected _createPlainVertices() {\n        const gridSize = this.planet.terrain!.gridSizeByZoom[this.tileZoom];\n        const e = this._extent;\n        const fgs = this.planet.terrain!.plainGridSize;\n        const lonSize = e.getWidth();\n        const llStep = lonSize / Math.max(fgs, gridSize);\n        const esw_lon = e.southWest.lon;\n        const ene_lat = e.northEast.lat;\n        const dg = Math.max(fgs / gridSize, 1);\n        const gs = Math.max(fgs, gridSize) + 1;\n        const r2 = this.planet.ellipsoid._invRadii2;\n        const gsgs = gs * gs;\n        const gridSize3 = (gridSize + 1) * (gridSize + 1) * 3;\n\n        let ind = 0,\n            nmInd = 0;\n\n        this.plainNormals = new Float32Array(gridSize3);\n        this.plainVertices = new Float64Array(gridSize3);\n        this.plainVerticesHigh = new Float32Array(gridSize3);\n        this.plainVerticesLow = new Float32Array(gridSize3);\n\n        this.normalMapNormals = new Float32Array(gsgs * 3);\n        this.normalMapVertices = new Float64Array(gsgs * 3);\n        this.normalMapVerticesHigh = new Float32Array(gsgs * 3);\n        this.normalMapVerticesLow = new Float32Array(gsgs * 3);\n\n        let verts = this.plainVertices,\n            vertsHigh = this.plainVerticesHigh,\n            vertsLow = this.plainVerticesLow,\n            norms = this.plainNormals,\n            nmVerts = this.normalMapVertices,\n            nmVertsHigh = this.normalMapVerticesHigh,\n            nmVertsLow = this.normalMapVerticesLow,\n            nmNorms = this.normalMapNormals;\n\n        for (let k = 0; k < gsgs; k++) {\n            let j = k % gs,\n                i = ~~(k / gs);\n\n            let v = this.planet.ellipsoid.lonLatToCartesian(\n                LonLat.inverseMercator(esw_lon + j * llStep, ene_lat - i * llStep)\n            );\n\n            let nx = v.x * r2.x,\n                ny = v.y * r2.y,\n                nz = v.z * r2.z;\n\n            let l = 1.0 / Math.sqrt(nx * nx + ny * ny + nz * nz);\n\n            let nxl = nx * l,\n                nyl = ny * l,\n                nzl = nz * l;\n\n            Vec3.doubleToTwoFloats(v, _tempHigh, _tempLow);\n\n            nmVerts[nmInd] = v.x;\n            nmVertsHigh[nmInd] = _tempHigh.x;\n            nmVertsLow[nmInd] = _tempLow.x;\n            nmNorms[nmInd++] = nxl;\n\n            nmVerts[nmInd] = v.y;\n            nmVertsHigh[nmInd] = _tempHigh.y;\n            nmVertsLow[nmInd] = _tempLow.y;\n            nmNorms[nmInd++] = nyl;\n\n            nmVerts[nmInd] = v.z;\n            nmVertsHigh[nmInd] = _tempHigh.z;\n            nmVertsLow[nmInd] = _tempLow.z;\n            nmNorms[nmInd++] = nzl;\n\n            if (i % dg === 0 && j % dg === 0) {\n                verts[ind] = v.x;\n                vertsHigh[ind] = _tempHigh.x;\n                vertsLow[ind] = _tempLow.x;\n                norms[ind++] = nxl;\n\n                verts[ind] = v.y;\n                vertsHigh[ind] = _tempHigh.y;\n                vertsLow[ind] = _tempLow.y;\n                norms[ind++] = nyl;\n\n                verts[ind] = v.z;\n                vertsHigh[ind] = _tempHigh.z;\n                vertsLow[ind] = _tempLow.z;\n                norms[ind++] = nzl;\n            }\n        }\n\n        this.terrainVertices = verts;\n        this.terrainVerticesHigh = vertsHigh;\n        this.terrainVerticesLow = vertsLow;\n\n        this.plainReady = true;\n    }\n\n    /**\n     * Gets specific layer material.\n     * @public\n     * @param {Layer} layer - Layer object.\n     * @returns {Material | undefined} - Segment material.\n     */\n    public getMaterialByLayer(layer: Layer): Material | undefined {\n        return this.materials[layer.__id];\n    }\n\n    /**\n     * @param layer\n     * @protected\n     *\n     * @todo siplify layer._extentMerc in this.getLayerExtent(layer)\n     *\n     */\n\n    protected _getLayerExtentOffset(layer: Layer): [number, number, number, number] {\n        const v0s = layer._extentMerc;\n        const v0t = this._extent;\n        const sSize_x = v0s.northEast.lon - v0s.southWest.lon;\n        const sSize_y = v0s.northEast.lat - v0s.southWest.lat;\n        const dV0s_x = (v0t.southWest.lon - v0s.southWest.lon) / sSize_x;\n        const dV0s_y = (v0s.northEast.lat - v0t.northEast.lat) / sSize_y;\n        const dSize_x = (v0t.northEast.lon - v0t.southWest.lon) / sSize_x;\n        const dSize_y = (v0t.northEast.lat - v0t.southWest.lat) / sSize_y;\n        return [dV0s_x, dV0s_y, dSize_x, dSize_y];\n    }\n\n    public screenRendering(sh: Program, layerSlice: Layer[], sliceIndex: number, defaultTexture?: WebGLTextureExt | null, isOverlay: boolean = false) {\n        const gl = this.handler.gl!;\n        const sha = sh.attributes;\n        const shu = sh.uniforms;\n\n        const pm = this.materials;\n        const p = this.planet;\n\n        let currHeight, li;\n        if (layerSlice && layerSlice.length) {\n            li = layerSlice[0];\n            currHeight = li._height;\n        } else {\n            currHeight = 0;\n        }\n\n        // First always draw whole planet base layer segment with solid texture.\n        gl.activeTexture(gl.TEXTURE0 + p.SLICE_SIZE + 2);\n        gl.bindTexture(gl.TEXTURE_2D, (defaultTexture || this.getDefaultTexture())!);\n        gl.uniform1i(shu.defaultTexture, p.SLICE_SIZE + 2);\n\n        let n = 0,\n            i = 0;\n\n        let notEmpty = false;\n\n        let slice = this._slices[sliceIndex];\n\n        if (!slice) {\n            slice = this._slices[sliceIndex] = new Slice(this);\n        } else {\n            //TODO: optimization!!!\n            slice.layers = [];\n        }\n\n        this._indexBuffer = this._getIndexBuffer();\n\n        while (li) {\n            if (\n                this.layerOverlap(li) &&\n                ((li._fading && li._fadingOpacity > 0.0) ||\n                    ((li.minZoom >= p.minCurrZoom || li.maxZoom >= p.minCurrZoom) &&\n                        (li.minZoom <= p.maxCurrZoom || li.maxZoom <= p.maxCurrZoom)))\n            ) {\n                notEmpty = true;\n\n                let m = pm[li.__id];\n\n                if (!m) {\n                    m = pm[li.__id] = li.createMaterial(this);\n                }\n\n                if (!m.isReady) {\n                    this.planet._renderCompleted = false;\n                }\n\n                slice.append(li, m);\n\n                p._samplerArr[n] = n;\n\n                gl.activeTexture(gl.TEXTURE0 + n);\n                gl.bindTexture(gl.TEXTURE_2D, (m.texture || p.transparentTexture)!);\n\n                n++;\n            }\n            i++;\n            li = layerSlice[i];\n        }\n\n        if (notEmpty || !isOverlay) {\n            gl.uniform1i(shu.samplerCount, n);\n            gl.uniform1f(shu.height, currHeight);\n            gl.uniform1iv(shu.samplerArr, p._samplerArr);\n\n            //slice.uniform(gl, shu);\n\n            gl.uniform4fv(shu.tileOffsetArr, slice.tileOffsetArr);\n            gl.uniform1fv(shu.layerOpacityArr, slice.layerOpacityArr);\n            //gl.uniform4fv(shu.visibleExtentOffsetArr, slice.visibleExtentOffsetArr);\n\n            // bind normalmap texture\n            if (p.lightEnabled) {\n                gl.activeTexture(gl.TEXTURE0 + p.SLICE_SIZE + 3);\n                gl.bindTexture(gl.TEXTURE_2D, (this.normalMapTexture || p.transparentTexture)!);\n                gl.uniform1i(shu.uNormalMap, p.SLICE_SIZE + 3);\n\n                gl.uniform3fv(shu.uNormalMapBias, this.normalMapTextureBias);\n\n                // bind segment specular and night material texture coordinates\n                gl.uniform4fv(shu.uGlobalTextureCoord, this._globalTextureCoordinates);\n            }\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBufferHigh!);\n            gl.vertexAttribPointer(sha.aVertexPositionHigh, this.vertexPositionBufferHigh!.itemSize, gl.FLOAT, false, 0, 0);\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBufferLow!);\n            gl.vertexAttribPointer(sha.aVertexPositionLow, this.vertexPositionBufferLow!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexTextureCoordBuffer!);\n            gl.vertexAttribPointer(sha.aTextureCoord, 2, gl.UNSIGNED_SHORT, true, 0, 0);\n\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\n            gl.drawElements(p.drawMode, this._indexBuffer.numItems, gl.UNSIGNED_INT, 0);\n        }\n    }\n\n    public heightPickingRendering(sh: Program, layerSlice: Layer[]) {\n        const gl = this.handler.gl!;\n        const sha = sh.attributes;\n        const shu = sh.uniforms;\n\n        // var pm = this.materials,\n        //     p = this.planet;\n\n        let currHeight;\n        if (layerSlice && layerSlice.length) {\n            currHeight = layerSlice[0]._height;\n        } else {\n            currHeight = 0;\n        }\n\n        gl.uniform1f(shu.height, currHeight);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBufferHigh!);\n        gl.vertexAttribPointer(sha.aVertexPositionHigh, this.vertexPositionBufferHigh!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBufferLow!);\n        gl.vertexAttribPointer(sha.aVertexPositionLow, this.vertexPositionBufferLow!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer!);\n        gl.drawElements(gl.TRIANGLE_STRIP, this._indexBuffer!.numItems, gl.UNSIGNED_INT, 0);\n    }\n\n    public colorPickingRendering(sh: Program, layerSlice: Layer[], sliceIndex: number, defaultTexture?: WebGLTextureExt | null, isOverlay: boolean = false) {\n        const gl = this.handler.gl!;\n        const sha = sh.attributes;\n        const shu = sh.uniforms;\n\n        let pm = this.materials,\n            p = this.planet;\n\n        let currHeight;\n        if (layerSlice && layerSlice.length) {\n            currHeight = layerSlice[0]._height;\n        } else {\n            currHeight = 0;\n        }\n\n        let notEmpty = false;\n\n        let slice = this._slices[sliceIndex];\n\n        let len = slice.layers.length;\n\n        for (let n = 0; n < len; n++) {\n            notEmpty = true;\n\n            let li = slice.layers[n];\n            let n4 = n * 4;\n\n            p._pickingColorArr[n4] = li._pickingColor.x / 255.0;\n            p._pickingColorArr[n4 + 1] = li._pickingColor.y / 255.0;\n            p._pickingColorArr[n4 + 2] = li._pickingColor.z / 255.0;\n            p._pickingColorArr[n4 + 3] = Number(li._pickingEnabled);\n\n            p._samplerArr[n] = n;\n            gl.activeTexture(gl.TEXTURE0 + n);\n            gl.bindTexture(gl.TEXTURE_2D, (pm[li.__id].texture || this.planet.transparentTexture)!);\n\n            p._pickingMaskArr[n] = n + p.SLICE_SIZE;\n            gl.activeTexture(gl.TEXTURE0 + n + p.SLICE_SIZE);\n            gl.bindTexture(gl.TEXTURE_2D, (pm[li.__id].pickingMask || this.planet.transparentTexture)!);\n        }\n\n        if (notEmpty || !isOverlay) {\n            gl.uniform1i(shu.samplerCount, len);\n            gl.uniform1f(shu.height, currHeight);\n            gl.uniform1iv(shu.samplerArr, p._samplerArr);\n            gl.uniform1iv(shu.pickingMaskArr, p._pickingMaskArr);\n            gl.uniform4fv(shu.pickingColorArr, p._pickingColorArr);\n\n            //slice.uniform(gl, shu);\n\n            gl.uniform4fv(shu.tileOffsetArr, slice.tileOffsetArr);\n            gl.uniform1fv(shu.layerOpacityArr, slice.layerOpacityArr);\n            //gl.uniform4fv(shu.visibleExtentOffsetArr, slice.visibleExtentOffsetArr);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBufferHigh!);\n            gl.vertexAttribPointer(sha.aVertexPositionHigh, this.vertexPositionBufferHigh!.itemSize, gl.FLOAT, false, 0, 0);\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBufferLow!);\n            gl.vertexAttribPointer(sha.aVertexPositionLow, this.vertexPositionBufferLow!.itemSize, gl.FLOAT, false, 0, 0);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexTextureCoordBuffer!);\n            gl.vertexAttribPointer(sha.aTextureCoord, 2, gl.UNSIGNED_SHORT, true, 0, 0);\n\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer!);\n            gl.drawElements(gl.TRIANGLE_STRIP, this._indexBuffer!.numItems, gl.UNSIGNED_INT, 0);\n        }\n    }\n\n    public depthRendering(sh: Program, layerSlice: Layer[]) {\n        const gl = this.handler.gl!;\n        const sha = sh.attributes;\n        const shu = sh.uniforms;\n\n        var currHeight;\n        if (layerSlice && layerSlice.length) {\n            currHeight = layerSlice[0]._height;\n        } else {\n            currHeight = 0;\n        }\n\n        gl.uniform1f(shu.height, currHeight);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBufferHigh!);\n        gl.vertexAttribPointer(sha.aVertexPositionHigh, this.vertexPositionBufferHigh!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBufferLow!);\n        gl.vertexAttribPointer(sha.aVertexPositionLow, this.vertexPositionBufferLow!.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer!);\n        gl.drawElements(gl.TRIANGLE_STRIP, this._indexBuffer!.numItems, gl.UNSIGNED_INT, 0);\n    }\n\n    protected _getIndexBuffer(): WebGLBufferExt {\n        const s = this.node.sideSizeLog2;\n        let cache = this.planet._indexesCache[Math.log2(this.gridSize)][s[0]][s[1]][s[2]][s[3]];\n        if (!cache.buffer) {\n            let indexes = segmentHelper.getInstance().createSegmentIndexes(Math.log2(this.gridSize), [s[0], s[1], s[2], s[3]]);\n            cache.buffer = this.planet.renderer!.handler.createElementArrayBuffer(indexes, 1);\n            this.planet._indexesCacheToRemoveCounter++;\n        }\n        return cache.buffer;\n    }\n\n    /**\n     * @todo: replace to the strategy\n     */\n    public _collectVisibleNodes() {\n        this.planet._visibleNodes[this.node.nodeId] = this.node;\n    }\n\n    public layerOverlap(layer: Layer): boolean {\n        return this._extent.overlaps(layer._extentMerc);\n    }\n\n    public getDefaultTexture(): WebGLTextureExt | null {\n        return this.planet.solidTextureOne;\n    }\n\n    public getExtentLonLat(): Extent {\n        return this._extentLonLat;\n    }\n\n    public getExtentMerc(): Extent {\n        return this._extentMerc;\n    }\n\n    public getExtent(): Extent {\n        return this._extent;\n    }\n\n    /**\n     * @todo replace to the strategy\n     */\n    public getNodeState(): number {\n        let vn = this.planet._visibleNodes[this.node.nodeId];\n        return (vn && vn.state) || NOTRENDERING;\n    }\n\n    public getNeighborSide(b: Segment) {\n        if (this.tileY === b.tileY) {\n            if (this.tileX === b.tileXE) {\n                return W;\n            } else if (this.tileX === b.tileXW) {\n                return E;\n            }\n        } else if (this.tileX === b.tileX) {\n            if (this.tileY === b.tileYS) {\n                return N;\n            } else if (this.tileY === b.tileYN) {\n                return S;\n            }\n        }\n        return -1;\n    }\n}\n\nexport {Segment};","import {Extent} from \"../Extent\";\nimport {EPSG3857} from \"../proj/EPSG3857\";\nimport {EPSG4326} from \"../proj/EPSG4326\";\nimport {getMatrixSubArray32, getMatrixSubArray64, getMatrixSubArrayBoundsExt} from \"../utils/shared\";\nimport {LonLat} from \"../LonLat\";\nimport {MAX, MIN} from \"../math\";\nimport {MAX_LAT} from \"../mercator\";\nimport {Planet} from \"../scene/Planet\";\nimport {Segment} from \"../segment/Segment\";\n\nimport {Vec2} from \"../math/Vec2\";\nimport {Vec3} from \"../math/Vec3\";\nimport {\n    COMSIDE,\n    E,\n    MAX_RENDERED_NODES,\n    N,\n    NE,\n    NEIGHBOUR,\n    NOTRENDERING,\n    NW,\n    OPPART,\n    OPSIDE,\n    PARTOFFSET,\n    RENDERING,\n    S,\n    SE,\n    SW,\n    VISIBLE_DISTANCE,\n    W,\n    WALKTHROUGH\n} from \"./quadTree\";\n\nimport {\n    TILEGROUP_COMMON,\n    TILEGROUP_NORTH,\n    TILEGROUP_SOUTH\n} from \"../segment/Segment\";\n\nimport {PlanetCamera} from \"../camera/PlanetCamera\";\n\nlet _tempHigh = new Vec3(),\n    _tempLow = new Vec3();\n\nconst _vertOrder: Vec2[] = [\n    new Vec2(0, 0), new Vec2(1, 0),\n    new Vec2(0, 1), new Vec2(1, 1)\n];\n\nconst _neGridSize = Math.sqrt(_vertOrder.length) - 1;\n\ntype BoundsType = {\n    xmin: number; ymin: number; zmin: number;\n    xmax: number; ymax: number; zmax: number\n};\n\nlet BOUNDS: BoundsType = {\n    xmin: 0.0, ymin: 0.0, zmin: 0.0,\n    xmax: 0.0, ymax: 0.0, zmax: 0.0\n};\n\n/**\n * Quad tree planet segment node.\n * @constructor\n * @param {Segment} segmentPrototype - Planet segment node constructor.\n * @param {Planet} planet - Planet scene instance.\n * @param {number} partId - NorthEast, SouthWest etc.\n * @param {Node} parent - Parent of this node.\n * @param {number} id - Tree node identifier (id * 4 + 1);\n * @param {number} tileZoom - Deep index of the quad tree.\n * @param {Extent} extent - Planet segment extent.\n */\nclass Node {\n    public SegmentPrototype: typeof Segment;\n    public planet: Planet;\n    public parentNode: Node | null;\n    public partId: number;\n    public nodeId: number;\n    public state: number | null;\n    public appliedTerrainNodeId: number;\n    public sideSizeLog2: [number, number, number, number];\n    public ready: boolean;\n    public neighbors: [Node[], Node[], Node[], Node[]];\n    public equalizedSideWithNodeId: number[];\n    public nodes: [Node, Node, Node, Node] | [];\n    public segment: Segment;\n    public _cameraInside: boolean;\n    public inFrustum: number;\n\n    constructor(\n        SegmentPrototype: typeof Segment,\n        planet: Planet,\n        partId: number,\n        parent: Node | null,\n        id: number,\n        tileZoom: number,\n        extent: Extent\n    ) {\n        planet._createdNodesCount++;\n\n        this.SegmentPrototype = SegmentPrototype;\n        this.planet = planet;\n        this.parentNode = parent;\n        this.partId = partId;\n        this.nodeId = partId + id;\n        this.state = null;\n        this.appliedTerrainNodeId = -1;\n        this.sideSizeLog2 = [0, 0, 0, 0];\n        this.ready = false;\n        this.neighbors = [[], [], [], []];\n        this.equalizedSideWithNodeId = [this.nodeId, this.nodeId, this.nodeId, this.nodeId];\n        this.nodes = [];\n        this.segment = new SegmentPrototype(this, planet, tileZoom, extent);\n        this._cameraInside = false;\n        this.inFrustum = 0;\n        this.createBounds();\n    }\n\n    public createChildrenNodes() {\n        this.ready = true;\n        const p = this.planet;\n        const ps = this.segment;\n        const ext = ps._extent;\n        const z = ps.tileZoom + 1;\n        const size_x = ext.getWidth() * 0.5;\n        const size_y = ext.getHeight() * 0.5;\n        const ne = ext.northEast;\n        const sw = ext.southWest;\n        const id = this.nodeId * 4 + 1;\n        const c = new LonLat(sw.lon + size_x, sw.lat + size_y);\n        const nd = this.nodes;\n\n        nd[NW] = new Node(this.SegmentPrototype, p, NW, this, id, z, new Extent(new LonLat(sw.lon, sw.lat + size_y), new LonLat(sw.lon + size_x, ne.lat)));\n        nd[NE] = new Node(this.SegmentPrototype, p, NE, this, id, z, new Extent(c, new LonLat(ne.lon, ne.lat)));\n        nd[SW] = new Node(this.SegmentPrototype, p, SW, this, id, z, new Extent(new LonLat(sw.lon, sw.lat), c));\n        nd[SE] = new Node(this.SegmentPrototype, p, SE, this, id, z, new Extent(new LonLat(sw.lon + size_x, sw.lat), new LonLat(ne.lon, sw.lat + size_y)));\n    }\n\n    public createBounds() {\n\n        let seg = this.segment;\n\n        seg._setExtentLonLat();\n\n        if (seg.tileZoom === 0) {\n            seg.setBoundingSphere(0.0, 0.0, 0.0, new Vec3(0.0, 0.0, seg.planet.ellipsoid.equatorialSize));\n        } else if (seg.tileZoom < seg.planet.terrain!.minZoom) {\n            seg.createBoundsByExtent();\n        } else {\n            seg.createBoundsByParent();\n        }\n\n        let x = seg.bsphere.center.x,\n            y = seg.bsphere.center.y,\n            z = seg.bsphere.center.z;\n\n        let length = 1.0 / Math.sqrt(x * x + y * y + z * z);\n        seg.centerNormal.x = x * length;\n        seg.centerNormal.y = y * length;\n        seg.centerNormal.z = z * length;\n    }\n\n    public getState(): number | null {\n        if (this.state === -1) {\n            return this.state;\n        }\n        let pn = this.parentNode;\n        while (pn) {\n            if (pn.state !== WALKTHROUGH) {\n                return NOTRENDERING;\n            }\n            pn = pn.parentNode;\n        }\n        return this.state;\n    }\n\n    /**\n     * Returns the same deep existent neighbour node.\n     * @public\n     * @param {number} side - Neighbour side index e.g. og.quadTree.N, og.quadTree.W etc.\n     * @returns {Node} -\n     */\n    public getEqualNeighbor(side: number): Node | undefined {\n        let pn: Node = this;\n        let part = NEIGHBOUR[side][pn.partId];\n        if (part !== -1) {\n            // (!) it means that we would never ask to get head node neighbors\n            return pn.parentNode!.nodes[part];\n        } else {\n            let pathId = [];\n            while (pn.parentNode) {\n                pathId.push(pn.partId);\n                part = NEIGHBOUR[side][pn.partId];\n                pn = pn.parentNode;\n                if (part !== -1) {\n                    let i = pathId.length;\n                    side = OPSIDE[side];\n                    while (pn && i--) {\n                        part = OPPART[side][pathId[i]];\n                        pn = pn.nodes[part];\n                    }\n                    return pn;\n                }\n            }\n        }\n    }\n\n    // public isBrother(node: Node): boolean {\n    //     return !(this.parentNode || node.parentNode) || (this.parentNode!.nodeId === node.parentNode!.nodeId);\n    // }\n\n    public renderTree(cam: PlanetCamera, maxZoom?: number | null, terrainReadySegment?: Segment | null, stopLoading?: boolean) {\n        if (this.planet._renderedNodes.length >= MAX_RENDERED_NODES) {\n            return;\n        }\n\n        this.state = WALKTHROUGH;\n\n        // @ts-ignore\n        this.neighbors[0] = null;\n        // @ts-ignore\n        this.neighbors[1] = null;\n        // @ts-ignore\n        this.neighbors[2] = null;\n        // @ts-ignore\n        this.neighbors[3] = null;\n\n        this.neighbors[0] = [];\n        this.neighbors[1] = [];\n        this.neighbors[2] = [];\n        this.neighbors[3] = [];\n\n        let seg = this.segment,\n            planet = this.planet;\n\n        this._cameraInside = false;\n\n        // Search a node which the camera is flying over.\n        if (!this.parentNode || this.parentNode._cameraInside) {\n            let inside;\n            if (Math.abs(cam._lonLat.lat) <= MAX_LAT && seg._projection.id === EPSG3857.id) {\n                inside = seg._extent.isInside(cam._lonLatMerc);\n            } else if (seg._projection.id === EPSG4326.id) {\n                inside = seg._extent.isInside(cam._lonLat);\n            }\n\n            if (inside) {\n                cam._insideSegment = seg;\n                this._cameraInside = true;\n            }\n        }\n\n        this.inFrustum = 0;\n\n        let frustums = cam.frustums, numFrustums = frustums.length;\n\n        if (seg.tileZoom < 6) {\n            for (let i = 0; i < numFrustums; i++) {\n                if (frustums[i].containsSphere(seg.bsphere)) {\n                    this.inFrustum |= 1 << i;\n                }\n            }\n        } else {\n            let commonFrustumFlag = 1 << (numFrustums - 1 - 1);\n            for (let i = 0; commonFrustumFlag && i < numFrustums; i++) {\n                if (seg.terrainReady) {\n                    if (frustums[i].containsBox(seg.bbox)) {\n                        commonFrustumFlag >>= 1;\n                        this.inFrustum |= 1 << i;\n                    }\n                } else {\n                    if (frustums[i].containsSphere(seg.bsphere)) {\n                        commonFrustumFlag >>= 1;\n                        this.inFrustum |= 1 << i;\n                    }\n                }\n            }\n        }\n\n        if (this.inFrustum || this._cameraInside || seg.tileZoom < 3) {\n            let h = Math.abs(cam._lonLat.height);\n\n            let eye = cam.eye;\n            let horizonDist = eye.length2() - this.planet.ellipsoid.polarSizeSqr;\n\n            let altVis = seg.tileZoom > 19 || (seg.tileZoom < 5 && !seg.terrainReady) || seg.tileZoom < 2;\n\n            if (h > 21000) {\n                altVis = altVis || eye.distance2(seg._sw) < horizonDist || eye.distance2(seg._nw) < horizonDist || eye.distance2(seg._ne) < horizonDist || eye.distance2(seg._se) < horizonDist;\n            } else {\n                altVis = altVis || cam.eye.distance(seg.bsphere.center) - seg.bsphere.radius < VISIBLE_DISTANCE * Math.sqrt(h);\n            }\n\n            if ((this.inFrustum && (altVis || h > 10000.0)) || this._cameraInside) {\n                //@todo: replace to the strategy\n                seg._collectVisibleNodes();\n            }\n\n            if (seg.tileZoom < 2) {\n                this.traverseNodes(cam, maxZoom, terrainReadySegment, stopLoading);\n            } else if (seg.terrainReady && (!maxZoom && cam.projectedSize(seg.bsphere.center, seg._plainRadius) < planet.lodSize || maxZoom && ((seg.tileZoom === maxZoom) || !altVis))) {\n\n                if (altVis) {\n                    seg.passReady = true;\n                    this.renderNode(this.inFrustum, !this.inFrustum, terrainReadySegment, stopLoading);\n                } else {\n                    this.state = NOTRENDERING;\n                }\n\n            } else if (seg.terrainReady && seg.checkZoom() && (!maxZoom || cam.projectedSize(seg.bsphere.center, seg.bsphere.radius) > this.planet._maxLodSize)) {\n                this.traverseNodes(cam, maxZoom, seg, stopLoading);\n            } else if (altVis) {\n                seg.passReady = maxZoom ? seg.terrainReady : false;\n                this.renderNode(this.inFrustum, !this.inFrustum, terrainReadySegment, stopLoading);\n            } else {\n                this.state = NOTRENDERING;\n            }\n        } else {\n            this.state = NOTRENDERING;\n        }\n    }\n\n    public traverseNodes(cam: PlanetCamera, maxZoom?: number | null, terrainReadySegment?: Segment | null, stopLoading?: boolean) {\n        if (!this.ready) {\n            this.createChildrenNodes();\n        }\n\n        let n = this.nodes;\n\n        n[0]!.renderTree(cam, maxZoom, terrainReadySegment, stopLoading);\n        n[1]!.renderTree(cam, maxZoom, terrainReadySegment, stopLoading);\n        n[2]!.renderTree(cam, maxZoom, terrainReadySegment, stopLoading);\n        n[3]!.renderTree(cam, maxZoom, terrainReadySegment, stopLoading);\n    }\n\n    public renderNode(inFrustum: number, onlyTerrain?: boolean, terrainReadySegment?: Segment | null, stopLoading?: boolean) {\n        let seg = this.segment;\n\n        // Create and load terrain data\n        if (!seg.terrainReady) {\n            if (!seg.initialized) {\n                seg.initialize();\n            }\n\n            this.whileTerrainLoading(terrainReadySegment);\n\n            if (!seg.plainProcessing) {\n                seg.createPlainSegmentAsync();\n            }\n\n            if (seg.plainReady && !stopLoading) {\n                seg.loadTerrain();\n            }\n        }\n\n        // Create normal map texture\n        if (seg.planet.lightEnabled && !seg.normalMapReady) {\n            this.whileNormalMapCreating();\n        }\n\n        if (onlyTerrain) {\n            this.state = -1;\n            return;\n        }\n\n        // Calculate minimal and maximal zoom index on the screen\n        if (!this._cameraInside && seg.tileZoom > this.planet.maxCurrZoom) {\n            this.planet.maxCurrZoom = seg.tileZoom;\n        }\n\n        if (seg.tileZoom < this.planet.minCurrZoom) {\n            this.planet.minCurrZoom = seg.tileZoom;\n        }\n\n        seg._addViewExtent();\n\n        // Finally this node proceeds to rendering.\n        this.addToRender(inFrustum);\n    }\n\n    /**\n     * Searching for neighbours and picking up current node to render processing.\n     * @public\n     */\n    public addToRender(inFrustum: number) {\n        this.state = RENDERING;\n\n        let nodes = this.planet._renderedNodes;\n\n        for (let i = nodes.length - 1; i >= 0; --i) {\n            const ni = nodes[i];\n            const cs = this.getCommonSide(ni);\n\n            if (cs !== -1) {\n                const opcs = OPSIDE[cs];\n\n                if (this.neighbors[cs].length === 0 || ni.neighbors[opcs].length === 0) {\n                    const ap = this.segment;\n                    const bp = ni.segment;\n                    const ld = ap.gridSize / (bp.gridSize * Math.pow(2, bp.tileZoom - ap.tileZoom));\n\n                    let cs_size = ap.gridSize,\n                        opcs_size = bp.gridSize;\n\n                    if (ld > 1) {\n                        cs_size = Math.ceil(ap.gridSize / ld);\n                        opcs_size = bp.gridSize;\n                    } else if (ld < 1) {\n                        cs_size = ap.gridSize;\n                        opcs_size = Math.ceil(bp.gridSize * ld);\n                    }\n\n                    this.sideSizeLog2[cs] = Math.log2(cs_size);\n                    ni.sideSizeLog2[opcs] = Math.log2(opcs_size);\n                }\n\n                this.neighbors[cs].push(ni);\n                ni.neighbors[opcs].push(this);\n            }\n        }\n\n        nodes.push(this);\n\n        if (!this.segment.terrainReady) {\n            this.planet._renderCompleted = false;\n            this.planet._terrainCompleted = false;\n        }\n\n        let k = 0,\n            rf = this.planet._renderedNodesInFrustum;\n        while (inFrustum) {\n            if (inFrustum & 1) {\n                rf[k].push(this);\n            }\n            k++;\n            inFrustum >>= 1;\n        }\n    }\n\n    public getCommonSide(node: Node): number {\n        const as = this.segment;\n        const bs = node.segment;\n\n        if (as.tileZoom === bs.tileZoom && as._tileGroup === bs._tileGroup) {\n            return as.getNeighborSide(bs);\n        } else {\n            const a = as._extentLonLat;\n            const b = bs._extentLonLat;\n\n            let a_ne = a.northEast, a_sw = a.southWest, b_ne = b.northEast, b_sw = b.southWest;\n\n            let a_ne_lon = a_ne.lon, a_ne_lat = a_ne.lat, a_sw_lon = a_sw.lon, a_sw_lat = a_sw.lat, b_ne_lon = b_ne.lon,\n                b_ne_lat = b_ne.lat, b_sw_lon = b_sw.lon, b_sw_lat = b_sw.lat;\n\n            if (as._tileGroup === bs._tileGroup) {\n                if (a_ne_lon === b_sw_lon && ((a_ne_lat <= b_ne_lat && a_sw_lat >= b_sw_lat) || (a_ne_lat >= b_ne_lat && a_sw_lat <= b_sw_lat))) {\n                    return E;\n                } else if (a_sw_lon === b_ne_lon && ((a_ne_lat <= b_ne_lat && a_sw_lat >= b_sw_lat) || (a_ne_lat >= b_ne_lat && a_sw_lat <= b_sw_lat))) {\n                    return W;\n                } else if (a_ne_lat === b_sw_lat && ((a_sw_lon >= b_sw_lon && a_ne_lon <= b_ne_lon) || (a_sw_lon <= b_sw_lon && a_ne_lon >= b_ne_lon))) {\n                    return N;\n                } else if (a_sw_lat === b_ne_lat && ((a_sw_lon >= b_sw_lon && a_ne_lon <= b_ne_lon) || (a_sw_lon <= b_sw_lon && a_ne_lon >= b_ne_lon))) {\n                    return S;\n                } else if (bs.tileX === 0 && as.tileX === Math.pow(2, as.tileZoom) - 1 && ((a_ne_lat <= b_ne_lat && a_sw_lat >= b_sw_lat) || (a_ne_lat >= b_ne_lat && a_sw_lat <= b_sw_lat))) {\n                    return E;\n                } else if (as.tileX === 0 && bs.tileX === Math.pow(2, bs.tileZoom) - 1 && ((a_ne_lat <= b_ne_lat && a_sw_lat >= b_sw_lat) || (a_ne_lat >= b_ne_lat && a_sw_lat <= b_sw_lat))) {\n                    return W;\n                }\n            }\n\n            if (as._tileGroup === TILEGROUP_COMMON && bs._tileGroup === TILEGROUP_NORTH && as.tileY === 0 && bs.tileY === Math.pow(2, bs.tileZoom) - 1 && ((a_sw_lon >= b_sw_lon && a_ne_lon <= b_ne_lon) || (a_sw_lon <= b_sw_lon && a_ne_lon >= b_ne_lon))) {\n                return N;\n            } else if (as._tileGroup === TILEGROUP_SOUTH && bs._tileGroup === TILEGROUP_COMMON && as.tileY === 0 && bs.tileY === Math.pow(2, bs.tileZoom) - 1 && ((a_sw_lon >= b_sw_lon && a_ne_lon <= b_ne_lon) || (a_sw_lon <= b_sw_lon && a_ne_lon >= b_ne_lon))) {\n                return N;\n            } else if (bs._tileGroup === TILEGROUP_NORTH && as._tileGroup === TILEGROUP_COMMON && as.tileY === Math.pow(2, as.tileZoom) - 1 && bs.tileY === 0 && ((a_sw_lon >= b_sw_lon && a_ne_lon <= b_ne_lon) || (a_sw_lon <= b_sw_lon && a_ne_lon >= b_ne_lon))) {\n                return S;\n            } else if (as._tileGroup === TILEGROUP_NORTH && bs._tileGroup === TILEGROUP_COMMON && as.tileY === Math.pow(2, as.tileZoom) - 1 && bs.tileY === 0 && ((a_sw_lon >= b_sw_lon && a_ne_lon <= b_ne_lon) || (a_sw_lon <= b_sw_lon && a_ne_lon >= b_ne_lon))) {\n                return S;\n            }\n        }\n\n        return -1;\n    }\n\n    // // TODO: test test test\n    // public ___getCommonSide___(b: Node) {\n    //     let a = this, as = a.segment, bs = b.segment;\n    //\n    //     if (as.tileZoom === bs.tileZoom) {\n    //         return as.getNeighborSide(bs);\n    //     } else if (as.tileZoom > bs.tileZoom) {\n    //         let dz = as.tileZoom - bs.tileZoom, i = dz, p: Node = this;\n    //\n    //         while (i--) {\n    //             p = p.parentNode!;\n    //         }\n    //\n    //         let side = p.segment.getNeighborSide(bs);\n    //\n    //         if (side !== -1) {\n    //             i = dz;\n    //             p = this;\n    //             let _n = true;\n    //\n    //             while (i--) {\n    //                 _n = _n && COMSIDE[p.partId][side];\n    //             }\n    //\n    //             if (_n) {\n    //                 return side;\n    //             }\n    //         }\n    //     } else {\n    //         let dz = bs.tileZoom - as.tileZoom, i = dz, p = b;\n    //\n    //         while (i--) {\n    //             p = p.parentNode!;\n    //         }\n    //\n    //         let side = p.segment.getNeighborSide(as);\n    //\n    //         if (side !== -1) {\n    //             i = dz;\n    //             p = b;\n    //             let _n = true;\n    //\n    //             while (i--) {\n    //                 _n = _n && COMSIDE[p.partId][side];\n    //             }\n    //\n    //             if (_n) {\n    //                 return OPSIDE[side];\n    //             }\n    //         }\n    //     }\n    //\n    //     return -1;\n    // }\n\n    public whileNormalMapCreating() {\n\n        const seg = this.segment;\n\n        if (!seg.terrainIsLoading && seg.terrainExists && !seg._inTheQueue) {\n            seg.planet._normalMapCreator.queue(seg);\n        }\n\n        let pn: Node = this;\n        while (pn.parentNode && !pn.segment.normalMapReady) {\n            pn = pn.parentNode;\n        }\n\n        const dZ2 = 2 << (seg.tileZoom - pn.segment.tileZoom - 1);\n\n        seg.normalMapTexture = pn.segment.normalMapTexture;\n        seg.normalMapTextureBias[0] = seg.tileX - pn.segment.tileX * dZ2;\n        seg.normalMapTextureBias[1] = seg.tileY - pn.segment.tileY * dZ2;\n        seg.normalMapTextureBias[2] = 1.0 / dZ2;\n    }\n\n    public whileTerrainLoading(terrainReadySegment?: Segment | null) {\n\n        const seg = this.segment;\n\n        let pn: Node = this;\n\n        if (terrainReadySegment && terrainReadySegment.terrainReady) {\n            pn = terrainReadySegment.node;\n        } else {\n            while (pn.parentNode && !pn.segment.terrainReady) {\n                pn = pn.parentNode;\n            }\n        }\n\n        if (pn.segment.terrainReady && this.appliedTerrainNodeId !== pn.nodeId) {\n\n            let dZ2 = 2 << (seg.tileZoom - pn.segment.tileZoom - 1),\n                offsetX = seg.tileX - pn.segment.tileX * dZ2,\n                offsetY = seg.tileY - pn.segment.tileY * dZ2;\n\n            const pseg = pn.segment;\n\n            let tempVertices: Float64Array,\n                tempVerticesHigh: Float32Array,\n                tempVerticesLow: Float32Array,\n                noDataVertices: Uint8Array;\n\n            this.appliedTerrainNodeId = pn.nodeId;\n            this.equalizedSideWithNodeId[N] = this.equalizedSideWithNodeId[E] = this.equalizedSideWithNodeId[S] = this.equalizedSideWithNodeId[W] = this.appliedTerrainNodeId;\n\n            let gridSize = pn.segment.gridSize / dZ2,\n                gridSizeExt = pn.segment.fileGridSize / dZ2;\n\n            BOUNDS.xmin = MAX;\n            BOUNDS.xmax = MIN;\n            BOUNDS.ymin = MAX;\n            BOUNDS.ymax = MIN;\n            BOUNDS.zmin = MAX;\n            BOUNDS.zmax = MIN;\n\n            if (gridSize >= 1) {\n                seg.gridSize = gridSize;\n\n                let len = (gridSize + 1) * (gridSize + 1) * 3;\n                tempVertices = new Float64Array(len);\n                tempVerticesHigh = new Float32Array(len);\n                tempVerticesLow = new Float32Array(len);\n\n                if (pseg.noDataVertices) {\n                    noDataVertices = new Uint8Array(len / 3);\n                }\n\n                getMatrixSubArrayBoundsExt(\n                    pseg.terrainVertices!,\n                    pseg.terrainVerticesHigh!,\n                    pseg.terrainVerticesLow!,\n                    pseg.noDataVertices!,\n                    pseg.gridSize,\n                    gridSize * offsetY,\n                    gridSize * offsetX,\n                    gridSize,\n                    tempVertices,\n                    tempVerticesHigh,\n                    tempVerticesLow,\n                    BOUNDS,\n                    noDataVertices!\n                );\n\n            } else if (gridSizeExt >= 1 && pn.segment.terrainExists) {\n\n                seg.gridSize = gridSizeExt;\n\n                let len = (gridSizeExt + 1) * (gridSizeExt + 1) * 3;\n                tempVertices = new Float64Array(len);\n                tempVerticesHigh = new Float32Array(len);\n                tempVerticesLow = new Float32Array(len);\n\n                if (pseg.noDataVertices) {\n                    noDataVertices = new Uint8Array(len / 3);\n                }\n\n                getMatrixSubArrayBoundsExt(\n                    pseg.normalMapVertices!,\n                    pseg.normalMapVerticesHigh!,\n                    pseg.normalMapVerticesLow!,\n                    pseg.noDataVertices!,\n                    pn.segment.fileGridSize,\n                    gridSizeExt * offsetY,\n                    gridSizeExt * offsetX,\n                    gridSizeExt,\n                    tempVertices,\n                    tempVerticesHigh,\n                    tempVerticesLow,\n                    BOUNDS,\n                    noDataVertices!\n                );\n\n            } else {\n\n                seg.gridSize = _neGridSize;\n\n                let i0 = Math.floor(gridSize * offsetY),\n                    j0 = Math.floor(gridSize * offsetX);\n\n                let bigOne;\n                if (pseg.gridSize === 1) {\n                    bigOne = pseg.terrainVertices!;\n                } else {\n                    bigOne = getMatrixSubArray64(pseg.terrainVertices!, pseg.gridSize, i0, j0, 1);\n                }\n\n                let insideSize = 1.0 / gridSize;\n\n                let t_i0 = offsetY - insideSize * i0, t_j0 = offsetX - insideSize * j0;\n\n                let v_lt = new Vec3(bigOne[0], bigOne[1], bigOne[2]),\n                    v_rb = new Vec3(bigOne[9], bigOne[10], bigOne[11]);\n\n                let vn = new Vec3(bigOne[3] - bigOne[0], bigOne[4] - bigOne[1], bigOne[5] - bigOne[2]),\n                    vw = new Vec3(bigOne[6] - bigOne[0], bigOne[7] - bigOne[1], bigOne[8] - bigOne[2]),\n                    ve = new Vec3(bigOne[3] - bigOne[9], bigOne[4] - bigOne[10], bigOne[5] - bigOne[11]),\n                    vs = new Vec3(bigOne[6] - bigOne[9], bigOne[7] - bigOne[10], bigOne[8] - bigOne[11]);\n\n                let coords = new Vec3();\n\n                tempVertices = new Float64Array(3 * _vertOrder.length);\n                tempVerticesHigh = new Float32Array(3 * _vertOrder.length);\n                tempVerticesLow = new Float32Array(3 * _vertOrder.length);\n\n                for (let i = 0; i < _vertOrder.length; i++) {\n                    let vi_y = _vertOrder[i].y + t_i0, vi_x = _vertOrder[i].x + t_j0;\n\n                    let vi_x_is = vi_x * gridSize, vi_y_is = vi_y * gridSize;\n\n                    if (vi_y + vi_x < insideSize) {\n                        coords = vn.scaleTo(vi_x_is).addA(vw.scaleTo(vi_y_is)).addA(v_lt);\n                    } else {\n                        coords = vs.scaleTo(1 - vi_x_is).addA(ve.scaleTo(1 - vi_y_is)).addA(v_rb);\n                    }\n\n                    Vec3.doubleToTwoFloats(coords, _tempHigh, _tempLow);\n\n                    let i3 = i * 3;\n\n                    tempVertices[i3] = coords.x;\n                    tempVertices[i3 + 1] = coords.y;\n                    tempVertices[i3 + 2] = coords.z;\n\n                    tempVerticesHigh[i3] = _tempHigh.x;\n                    tempVerticesHigh[i3 + 1] = _tempHigh.y;\n                    tempVerticesHigh[i3 + 2] = _tempHigh.z;\n\n                    tempVerticesLow[i3] = _tempLow.x;\n                    tempVerticesLow[i3 + 1] = _tempLow.y;\n                    tempVerticesLow[i3 + 2] = _tempLow.z;\n\n                    if (coords.x < BOUNDS.xmin) BOUNDS.xmin = coords.x;\n                    if (coords.x > BOUNDS.xmax) BOUNDS.xmax = coords.x;\n                    if (coords.y < BOUNDS.ymin) BOUNDS.ymin = coords.y;\n                    if (coords.y > BOUNDS.ymax) BOUNDS.ymax = coords.y;\n                    if (coords.z < BOUNDS.zmin) BOUNDS.zmin = coords.z;\n                    if (coords.z > BOUNDS.zmax) BOUNDS.zmax = coords.z;\n                }\n            }\n\n            seg.readyToEngage = true;\n\n            seg.terrainVertices = tempVertices;\n            seg.terrainVerticesHigh = tempVerticesHigh;\n            seg.terrainVerticesLow = tempVerticesLow;\n\n            seg.tempVertices = tempVertices;\n            seg.tempVerticesHigh = tempVerticesHigh;\n            seg.tempVerticesLow = tempVerticesLow;\n\n            seg.noDataVertices = noDataVertices!;\n\n            seg.setBoundingVolume(BOUNDS.xmin, BOUNDS.ymin, BOUNDS.zmin, BOUNDS.xmax, BOUNDS.ymax, BOUNDS.zmax);\n\n            if (seg.tileZoom > seg.planet.terrain!.maxZoom) {\n                if (pn.segment.tileZoom >= seg.planet.terrain!.maxZoom) {\n\n                    seg._plainRadius = pn.segment._plainRadius / dZ2;\n\n                    seg.terrainReady = true;\n                    seg.terrainIsLoading = false;\n\n                    seg.terrainVertices = tempVertices;\n                    seg.terrainVerticesHigh = tempVerticesHigh;\n                    seg.terrainVerticesLow = tempVerticesLow;\n\n                    seg.passReady = true;\n\n                    this.appliedTerrainNodeId = this.nodeId;\n                    this.equalizedSideWithNodeId[N] = this.equalizedSideWithNodeId[E] = this.equalizedSideWithNodeId[S] = this.equalizedSideWithNodeId[W] = this.appliedTerrainNodeId;\n\n                    if (pn.segment.terrainExists) {\n                        seg.normalMapVertices = tempVertices;\n                        seg.fileGridSize = Math.sqrt(tempVertices.length / 3) - 1;\n\n                        let fgs = Math.sqrt(pseg.normalMapNormals!.length / 3) - 1, fgsZ = fgs / dZ2;\n\n                        if (fgs > 1) {\n                            seg.normalMapNormals = getMatrixSubArray32(pseg.normalMapNormals!, fgs, fgsZ * offsetY, fgsZ * offsetX, fgsZ);\n                        } else {\n                            // TODO: interpolation\n                            seg.normalMapNormals = pseg.normalMapNormals;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    public destroy() {\n\n        this.state = NOTRENDERING;\n        this.segment.destroySegment();\n\n        let n = this.neighbors;\n        for (let i = 0; i < n.length; i++) {\n            let ni = n[i];\n            if (ni) {\n                for (let j = 0; j < ni.length; j++) {\n                    let nij = ni[j];\n                    if (nij && nij.neighbors) {\n                        // @ts-ignore\n                        nij.neighbors[N] = null;\n                        // @ts-ignore\n                        nij.neighbors[E] = null;\n                        // @ts-ignore\n                        nij.neighbors[S] = null;\n                        // @ts-ignore\n                        nij.neighbors[W] = null;\n                    }\n                }\n            }\n        }\n\n        // @ts-ignore\n        this.neighbors = null;\n        // @ts-ignore\n        this.parentNode = null;\n        // @ts-ignore\n        this.sideSizeLog2 = null;\n        // @ts-ignore\n        this.segment = null;\n    }\n\n    public clearTree() {\n        const state = this.getState();\n        if (state === NOTRENDERING || state === RENDERING) {\n            this.destroyBranches();\n        } else {\n            for (let i = 0; i < this.nodes.length; i++) {\n                this.nodes[i] && this.nodes[i].clearTree();\n            }\n        }\n    }\n\n    public clearBranches() {\n        for (let i = 0; i < this.nodes.length; i++) {\n            this.nodes[i]!.clearBranches();\n            this.nodes[i]!.segment.deleteMaterials();\n        }\n    }\n\n    public destroyBranches() {\n        if (this.ready) {\n            let nodesToRemove: Node[] = [],\n                i;\n\n            for (i = 0; i < this.nodes.length; i++) {\n                nodesToRemove[i] = this.nodes[i]!;\n            }\n\n            this.ready = false;\n            this.nodes = [];\n\n            for (i = 0; i < nodesToRemove.length; i++) {\n                nodesToRemove[i].destroyBranches();\n                nodesToRemove[i].destroy();\n                //@ts-ignore\n                nodesToRemove[i] = null;\n            }\n\n            nodesToRemove.length = 0;\n\n            // @ts-ignore\n            nodesToRemove = null;\n        }\n    }\n\n    public traverseTree(callback: Function) {\n        callback(this);\n        if (this.ready) {\n            for (let i = 0; i < this.nodes.length; i++) {\n                this.nodes[i]!.traverseTree(callback);\n            }\n        }\n    }\n\n    public getOffsetOppositeNeighbourSide(neighbourNode: Node, side: number): number {\n        let pNode: Node = this,\n            neighbourZoom = neighbourNode.segment.tileZoom,\n            offset = 0;\n\n        while (pNode.segment.tileZoom > neighbourZoom) {\n            offset += PARTOFFSET[pNode.partId][side] / (1 << (pNode.segment.tileZoom - neighbourZoom));\n            pNode = pNode.parentNode!;\n        }\n\n        return offset;\n    }\n}\n\nexport {Node};\n","import {EPSG3857} from \"../proj/EPSG3857\";\nimport {Layer} from \"../layer/Layer\";\nimport {Node} from \"../quadTree/Node\";\nimport {Planet} from \"../scene/Planet\";\nimport {Proj} from \"../proj/Proj\";\n\nexport class QuadTreeStrategy {\n    public name: string;\n    public projection: Proj;\n    protected _planet: Planet;\n\n    /**\n     * grid tree list.\n     * @protected\n     * @type {Node[]}\n     */\n    protected _quadTreeList: Node[];\n\n    constructor(planet: Planet, name: string = \"\", proj: Proj = EPSG3857) {\n        this.name = name;\n        this.projection = proj;\n        this._planet = planet;\n        this._quadTreeList = [];\n    }\n\n    public destroyBranches() {\n        for (let i = 0, len = this._quadTreeList.length; i < len; i++) {\n            this._quadTreeList[i].destroyBranches();\n        }\n    }\n\n    public clearLayerMaterial(layer: Layer) {\n        let lid = layer.__id;\n        for (let i = 0, len = this._quadTreeList.length; i < len; i++) {\n            this._quadTreeList[i].traverseTree(function (node: Node) {\n                let mats = node.segment.materials;\n                if (mats[lid]) {\n                    mats[lid].clear();\n                    //@ts-ignore\n                    mats[lid] = null;\n                    //delete mats[lid];\n                }\n            });\n        }\n    }\n\n    public get planet() {\n        return this._planet;\n    }\n\n    public init() {\n\n    }\n\n    public preRender() {\n        for (let i = 0; i < this._quadTreeList.length; i++) {\n\n            let quadTree = this._quadTreeList[i];\n            quadTree.createChildrenNodes();\n            quadTree.segment.createPlainSegment();\n\n            for (let j = 0; j < quadTree.nodes.length; j++) {\n                quadTree.nodes[j].segment.createPlainSegment();\n            }\n        }\n    }\n\n    public preLoad() {\n\n        for (let i = 0; i < this._quadTreeList.length; i++) {\n\n            let quadTree = this._quadTreeList[i];\n            quadTree.segment.passReady = true;\n            quadTree.renderNode(1);\n            this._planet.normalMapCreator.drawSingle(quadTree.segment);\n\n            for (let j = 0; j < quadTree.nodes.length; j++) {\n                quadTree.nodes[j].segment.passReady = true;\n                quadTree.nodes[j].renderNode(1);\n                this._planet._normalMapCreator.drawSingle(quadTree.nodes[j].segment);\n            }\n        }\n    }\n\n    public collectRenderNodes() {\n        for (let i = 0; i < this._quadTreeList.length; i++) {\n            this._quadTreeList[i].renderTree(this._planet.camera, 0, null);\n        }\n    }\n\n    public clear() {\n        for (let i = 0; i < this._quadTreeList.length; i++) {\n            this._quadTreeList[i].clearTree();\n        }\n    }\n\n    public get quadTreeList(): Node[] {\n        return this._quadTreeList;\n    }\n}","import * as mercator from \"../mercator\";\nimport * as quadTree from \"../quadTree/quadTree\";\nimport {EPSG4326} from \"../proj/EPSG4326\";\nimport {Extent} from \"../Extent\";\nimport {Layer} from \"../layer/Layer\";\nimport {Node} from \"../quadTree/Node\";\nimport {Planet} from \"../scene/Planet\";\nimport {Segment, TILEGROUP_NORTH, TILEGROUP_SOUTH} from \"./Segment\";\nimport {LonLat} from \"../LonLat\";\nimport {Vec3} from \"../math/Vec3\";\nimport {Entity} from \"../entity/Entity\";\nimport {PlanetCamera} from \"../camera/PlanetCamera\";\nimport {WebGLTextureExt} from \"../webgl/Handler\";\n\nconst MAX_POLE_ZOOM = 7;\nexport const POLE_PIECE_SIZE = (90.0 - mercator.MAX_LAT) / Math.pow(2, MAX_POLE_ZOOM);\n\nlet _tempHigh = new Vec3(),\n    _tempLow = new Vec3();\n\n/**\n * Planet segment Web Mercator tile class that stored and rendered with quad tree.\n * @class\n * @extends {Segment}\n */\nclass SegmentLonLat extends Segment {\n    constructor(node: Node, planet: Planet, tileZoom: number, extent: Extent) {\n        super(node, planet, tileZoom, extent);\n\n        this._projection = EPSG4326;\n\n        this._extentLonLat = this._extent;\n\n        this._extentMerc = new Extent(\n            extent.southWest.forwardMercatorEPS01(),\n            extent.northEast.forwardMercatorEPS01()\n        );\n\n        this._isNorth = this._extent.northEast.lat > 0;\n\n        this.isPole = true;\n    }\n\n    public override _setExtentLonLat() {\n        this._extentLonLat = this._extent;\n    }\n\n    public override projectNative(coords: LonLat): LonLat {\n        return coords;\n    }\n\n    public override getInsideLonLat(obj: Entity | PlanetCamera): LonLat {\n        return obj._lonLat;\n    }\n\n    protected _getMaxZoom() {\n        let maxPoleZoom = 0;\n        if (this._isNorth) {\n            //north pole limits\n            let Yz = Math.floor((90.0 - this._extent.northEast.lat) / POLE_PIECE_SIZE);\n            maxPoleZoom = Math.floor(Yz / 16) + 7;\n        } else {\n            //south pole limits\n            let Yz = Math.floor((mercator.MIN_LAT - this._extent.northEast.lat) / POLE_PIECE_SIZE);\n            maxPoleZoom = 12 - Math.floor(Yz / 16);\n        }\n        return maxPoleZoom;\n    }\n\n    public override checkZoom() {\n        return super.checkZoom() && this.tileZoom <= this._getMaxZoom();\n    }\n\n    protected override _assignTileIndexes() {\n        this._assignTileXIndexes(this._extent);\n        this._assignTileYIndexes(this._extent);\n        this.tileIndex = Layer.getTileIndex(this.tileX, this.tileY, this.tileZoom);\n    }\n\n    protected _assignTileXIndexes(extent: Extent) {\n        this.tileX = Math.round(\n            Math.abs(-180.0 - extent.southWest.lon) / (extent.northEast.lon - extent.southWest.lon)\n        );\n\n        let p2 = 1 << this.tileZoom;\n        this.tileXE = (this.tileX + 1) % p2;\n        this.tileXW = (p2 + this.tileX - 1) % p2;\n    }\n\n    protected _assignTileYIndexes(extent: Extent) {\n        const lat = extent.northEast.lat;\n        if (lat > 0) {\n            this._tileGroup = TILEGROUP_NORTH;\n            this.tileY = Math.round((90.0 - lat) / (extent.northEast.lat - extent.southWest.lat));\n        } else {\n            this._tileGroup = TILEGROUP_SOUTH;\n            this.tileY = Math.round(\n                (mercator.MIN_LAT - lat) / (extent.northEast.lat - extent.southWest.lat)\n            );\n        }\n        this.tileYN = this.tileY - 1;\n        this.tileYS = this.tileY + 1;\n    }\n\n\n    protected override _createPlainVertices() {\n        const gridSize = this.planet.terrain!.gridSizeByZoom[this.tileZoom];\n\n        const e = this._extent;\n        const fgs = this.planet.terrain!.plainGridSize;\n        const lonSize = e.getWidth();\n        const latSize = e.getHeight();\n        const llStep = lonSize / Math.max(fgs, gridSize);\n        const ltStep = latSize / gridSize;\n        const esw_lon = e.southWest.lon;\n        const ene_lat = e.northEast.lat;\n        const dg = Math.max(fgs / gridSize, 1);\n        const gs = Math.max(fgs, gridSize) + 1;\n        const r2 = this.planet.ellipsoid._invRadii2;\n\n        let ind = 0,\n            nmInd = 0;\n\n        const gsgs = gs * gs;\n\n        const gridSize3 = (gridSize + 1) * (gridSize + 1) * 3;\n\n        this.plainNormals = new Float32Array(gridSize3);\n        this.plainVertices = new Float64Array(gridSize3);\n        this.plainVerticesHigh = new Float32Array(gridSize3);\n        this.plainVerticesLow = new Float32Array(gridSize3);\n\n        this.normalMapNormals = new Float32Array(gsgs * 3);\n        this.normalMapVertices = new Float64Array(gsgs * 3);\n        this.normalMapVerticesHigh = new Float32Array(gsgs * 3);\n        this.normalMapVerticesLow = new Float32Array(gsgs * 3);\n\n        let xmin = 549755748352.0,\n            xmax = -549755748352.0,\n            ymin = 549755748352.0,\n            ymax = -549755748352.0,\n            zmin = 549755748352.0,\n            zmax = -549755748352.0;\n\n        let verts = this.plainVertices,\n            vertsHigh = this.plainVerticesHigh,\n            vertsLow = this.plainVerticesLow,\n            norms = this.plainNormals,\n            nmVerts = this.normalMapVertices,\n            nmVertsHigh = this.normalMapVerticesHigh,\n            nmVertsLow = this.normalMapVerticesLow,\n            nmNorms = this.normalMapNormals;\n\n        for (let k = 0; k < gsgs; k++) {\n            let j = k % gs,\n                i = ~~(k / gs);\n\n            const v = this.planet.ellipsoid.lonLatToCartesian(\n                new LonLat(esw_lon + j * llStep, ene_lat - i * ltStep)\n            );\n            let nx = v.x * r2.x,\n                ny = v.y * r2.y,\n                nz = v.z * r2.z;\n            let l = 1.0 / Math.sqrt(nx * nx + ny * ny + nz * nz);\n            let nxl = nx * l,\n                nyl = ny * l,\n                nzl = nz * l;\n\n            Vec3.doubleToTwoFloats(v, _tempHigh, _tempLow);\n\n            nmVerts[nmInd] = v.x;\n            nmVertsHigh[nmInd] = _tempHigh.x;\n            nmVertsLow[nmInd] = _tempLow.x;\n            nmNorms[nmInd++] = nxl;\n\n            nmVerts[nmInd] = v.y;\n            nmVertsHigh[nmInd] = _tempHigh.y;\n            nmVertsLow[nmInd] = _tempLow.y;\n            nmNorms[nmInd++] = nyl;\n\n            nmVerts[nmInd] = v.z;\n            nmVertsHigh[nmInd] = _tempHigh.z;\n            nmVertsLow[nmInd] = _tempLow.z;\n            nmNorms[nmInd++] = nzl;\n\n            if (i % dg === 0 && j % dg === 0) {\n                verts[ind] = v.x;\n                vertsHigh[ind] = _tempHigh.x;\n                vertsLow[ind] = _tempLow.x;\n                norms[ind++] = nxl;\n\n                verts[ind] = v.y;\n                vertsHigh[ind] = _tempHigh.y;\n                vertsLow[ind] = _tempLow.y;\n                norms[ind++] = nyl;\n\n                verts[ind] = v.z;\n                vertsHigh[ind] = _tempHigh.z;\n                vertsLow[ind] = _tempLow.z;\n                norms[ind++] = nzl;\n\n                if (v.x < xmin) xmin = v.x;\n                if (v.x > xmax) xmax = v.x;\n                if (v.y < ymin) ymin = v.y;\n                if (v.y > ymax) ymax = v.y;\n                if (v.z < zmin) zmin = v.z;\n                if (v.z > zmax) zmax = v.z;\n            }\n        }\n\n        this.terrainVertices = verts;\n        this.terrainVerticesHigh = vertsHigh;\n        this.terrainVerticesLow = vertsLow;\n\n        let x = (xmax - xmin) * 0.5,\n            y = (ymax - ymin) * 0.5,\n            z = (zmax - zmin) * 0.5;\n\n        this._plainRadius = Math.sqrt(x * x + y * y + z * z);\n\n        this.plainReady = true;\n    }\n\n    protected override _assignGlobalTextureCoordinates() {\n        const e = this._extent;\n        this._globalTextureCoordinates[0] = (e.southWest.lon + 180.0) / 360.0;\n        this._globalTextureCoordinates[1] = (90 - e.northEast.lat) / 180.0;\n        this._globalTextureCoordinates[2] = (e.northEast.lon + 180.0) / 360.0;\n        this._globalTextureCoordinates[3] = (90 - e.southWest.lat) / 180.0;\n    }\n\n    /**\n     * @todo: replace to the strategy\n     */\n    public override _collectVisibleNodes() {\n        if (this._isNorth) {\n            this.planet._visibleNodesNorth[this.node.nodeId] = this.node;\n        } else {\n            this.planet._visibleNodesSouth[this.node.nodeId] = this.node;\n        }\n    }\n\n    /**\n     * @param layer\n     * @protected\n     *\n     * @todo simplify layer._extentMerc in layer.getNativeExtent(this)\n     *\n     */\n    protected override _getLayerExtentOffset(layer: Layer): [number, number, number, number] {\n        const v0s = layer._extent;\n        const v0t = this._extent;\n        const sSize_x = v0s.northEast.lon - v0s.southWest.lon;\n        const sSize_y = v0s.northEast.lat - v0s.southWest.lat;\n        const dV0s_x = (v0t.southWest.lon - v0s.southWest.lon) / sSize_x;\n        const dV0s_y = (v0s.northEast.lat - v0t.northEast.lat) / sSize_y;\n        const dSize_x = (v0t.northEast.lon - v0t.southWest.lon) / sSize_x;\n        const dSize_y = (v0t.northEast.lat - v0t.southWest.lat) / sSize_y;\n        return [dV0s_x, dV0s_y, dSize_x, dSize_y];\n    }\n\n    public override layerOverlap(layer: Layer): boolean {\n        return this._extent.overlaps(layer._extent);\n    }\n\n    public override getDefaultTexture(): WebGLTextureExt | null {\n        return this._isNorth ? this.planet.solidTextureOne : this.planet.solidTextureTwo;\n    }\n\n    public override getExtentLonLat(): Extent {\n        return this._extent;\n    }\n\n    /**\n     * @todo: replace to the strategy\n     */\n    public override getNodeState(): number {\n        let vn;\n        if (this._isNorth) {\n            vn = this.planet._visibleNodesNorth[this.node.nodeId];\n        } else {\n            vn = this.planet._visibleNodesSouth[this.node.nodeId];\n        }\n        return (vn && vn.state) || quadTree.NOTRENDERING;\n    }\n}\n\nexport {SegmentLonLat};\n","import * as mercator from \"../mercator\";\nimport * as quadTree from \"../quadTree/quadTree\";\nimport {Extent} from \"../Extent\";\nimport {Node} from \"../quadTree/Node\";\nimport {Planet} from \"../scene/Planet\";\nimport {QuadTreeStrategy} from \"./QuadTreeStrategy\";\nimport {Segment} from \"../segment/Segment\";\nimport {SegmentLonLat} from \"../segment/SegmentLonLat\";\n\nexport class EarthQuadTreeStrategy extends QuadTreeStrategy {\n    constructor(planet: Planet) {\n        super(planet, \"Earth\");\n    }\n\n    public override init() {\n        this._quadTreeList = [\n            new Node(Segment, this.planet, quadTree.NW, null, 0, 0,\n                Extent.createFromArray([-20037508.34, -20037508.34, 20037508.34, 20037508.34])\n            ),\n            new Node(SegmentLonLat, this.planet, quadTree.NW, null, 0, 0,\n                Extent.createFromArray([-180, mercator.MAX_LAT, 180, 90])\n            ),\n            new Node(SegmentLonLat, this.planet, quadTree.NW, null, 0, 0,\n                Extent.createFromArray([-180, -90, 180, mercator.MIN_LAT])\n            )\n        ];\n    }\n}","/* This file is mostly a straight translation of\n * GeographicLib/src/Geoid.cpp from C++ to JavaScript\n * by Kim Vandry <vandry@TZoNE.ORG>\n *\n * @license\n *  **\n * * \\file Geoid.cpp\n * * \\brief Implementation for GeographicLib::Geoid class\n * *\n * * Copyright (c) Charles Karney (2009) <charles@karney.com>\n * * and licensed under the LGPL.  For more information, see\n * * http://geographiclib.sourceforge.net/\n * **********************************************************************\n *\n * Geoid height grade not supported\n * The files can be downloaded from here:\n * http://geographiclib.sourceforge.net/1.18/geoid.html\n */\n\n//window.myGeoid = new Geoid();\n\n//Geoid.loadModel(\"./res/egm84-30.pgm\")\n//    .then(function (model) {\n//        myGeoid.setModel(model);\n\n//        globe.planet.renderer.events.on(\"lclick\", (e) => {\n//            let c = globe.planet.getLonLatFromPixelTerrain(e);\n//            let h = myGeoid.getHeight(c.lon, c.lat);\n//            console.log(`${c.lat} ${c.lon} h=${h}`);\n//        });\n//    })\n//    .catch(function (err) {\n//        // If we get here, the model failed to load\n//        console.log(err);\n//    });\n\nimport {LonLat} from \"../LonLat\";\n\ninterface IGeoidParams {\n    model?: GeoidModel;\n    src?: string | null;\n}\n\n\nexport type GeoidModel = {\n    scale: number;\n    offset: number,\n    width: number;\n    height: number;\n    rlonres: number;\n    rlatres: number;\n    i: number;\n    rawfile: Uint8Array\n};\n\nclass Geoid {\n\n    public model: GeoidModel | null;\n    public src: string | null;\n\n    protected _cached_ix: number;\n    protected _cached_iy: number;\n    protected _v00: number;\n    protected _v01: number;\n    protected _v10: number;\n    protected _v11: number;\n    protected _t: number;\n\n    constructor(options: IGeoidParams = {}) {\n\n        this.model = options.model || null;\n        this.src = options.src || null;\n\n        this._cached_ix = 0;\n        this._cached_iy = 0;\n        this._v00 = 0;\n        this._v01 = 0;\n        this._v10 = 0;\n        this._v11 = 0;\n        this._t = 0;\n    }\n\n    static loadModel(url?: string | null): Promise<GeoidModel | null> {\n        if (!url) {\n            return new Promise((resolve: any) => {\n                resolve(null);\n            });\n        } else\n            return fetch(url, {})\n\n                .then((r: Response) => {\n                    if (!r.ok) {\n                        throw Error(\"Geoid model file: HTTP error \" + r.status);\n                    }\n                    return r.arrayBuffer();\n                })\n\n                .then((r: ArrayBuffer) => {\n                    if (r) {\n                        return new Uint8Array(r);\n                    } else {\n                        throw Error(\"Geoid model file: no data from \" + url);\n                    }\n                })\n\n                .then(function (rawfile: Uint8Array) {\n\n                    if (!((rawfile[0] === 80) && (rawfile[1] === 53) && (\n                        ((rawfile[2] === 13) && (rawfile[3] === 10)) ||\n                        (rawfile[2] === 10)\n                    ))) {\n                        throw new Error(\"Geoid model file: no PGM header\");\n                    }\n\n                    var i: number = (rawfile[2] === 13) ? 4 : 3;\n                    var offset: number | null = null;\n                    var scale: number | null = null;\n\n                    function getline(): string {\n                        let start = i;\n                        for (var j = i; ; j++) {\n                            if (j >= rawfile.length) {\n                                throw new Error(\"Geoid model file: missing newline in header\");\n                            }\n                            if (rawfile[j] === 10) {\n                                i = j + 1;\n                                break;\n                            }\n                        }\n                        if ((j > start) && (rawfile[j - 1] === 13)) j--;\n                        return String.fromCharCode.apply(null, rawfile.slice(start, j) as any);\n                    }\n\n                    var m, s;\n                    for (; ;) {\n                        s = getline();\n                        if (s[0] !== '#') break;\n                        m = s.match(/^# Offset (.*)$/);\n                        if (m) {\n                            offset = parseInt(m[1], 10);\n                            if (!isFinite(offset)) {\n                                throw new Error(\"Geoid model file: bad offset \" + m[1]);\n                            }\n                        } else {\n                            m = s.match(/^# Scale (.*)$/);\n                            if (m) {\n                                scale = parseFloat(m[1]);\n                                if (!isFinite(scale)) {\n                                    throw new Error(\"Geoid model file: bad scale \" + m[1]);\n                                }\n                            }\n                        }\n                    }\n\n                    m = s.match(/^\\s*(\\d+)\\s+(\\d+)\\s*$/);\n\n                    let width: number = 0;\n                    let height: number = 0;\n\n                    if (m) {\n                        width = parseInt(m[1], 10);\n                        height = parseInt(m[2], 10);\n                    }\n\n                    if (!(m && (width >= 0) && (height >= 0))) {\n                        throw new Error(\"Geoid model file: bad PGM width&height line\");\n                    }\n\n                    let levels = parseInt(getline());\n\n                    if (levels != 65535) {\n                        throw new Error(\"Geoid model file: PGM file must have 65535 gray levels\");\n                    }\n                    if (offset === null) {\n                        throw new Error(\"Geoid model file: PGM file does not contain offset\");\n                    }\n                    if (scale === null) {\n                        throw new Error(\"Geoid model file: PGM file does not contain scale\");\n                    }\n                    if ((width < 2) || (height < 2)) {\n                        throw new Error(\"Geoid model file: Raster size too small\");\n                    }\n\n                    let payload_len = rawfile.length - i;\n\n                    if (payload_len !== (width * height * 2)) {\n                        throw new Error(\"Geoid model file: File has the wrong length\");\n                    }\n\n                    return {\n                        scale: scale,\n                        offset: offset,\n                        width: width,\n                        height: height,\n                        rlonres: width / 360,\n                        rlatres: (height - 1) / 180,\n                        i: i,\n                        rawfile: rawfile\n                    };\n                });\n    }\n\n    setModel(model: GeoidModel | null) {\n        this.model = model;\n    }\n\n    protected _rawval(ix: number, iy: number): number {\n        let model = this.model!;\n\n        if (iy < 0) {\n            iy = -iy;\n            ix += model.width / 2;\n        } else if (iy >= model.height) {\n            iy = 2 * (model.height - 1) - iy;\n            ix += model.width / 2;\n        }\n\n        if (ix < 0) {\n            ix += model.width;\n        } else if (ix >= model.width) {\n            ix -= model.width;\n        }\n\n        let k = (iy * model.width + ix) * 2 + model.i;\n\n        return (model.rawfile[k] << 8) | model.rawfile[k + 1];\n    }\n\n    public getHeightLonLat(lonlat: LonLat): number {\n        return this.getHeight(lonlat.lon, lonlat.lat);\n    }\n\n    public getHeight(lon: number, lat: number): number {\n\n        if (!this.model) return 0;\n\n        let model = this.model;\n\n        if (lon < 0) lon += 360.0;\n\n        let fy = (90 - lat) * model.rlatres;\n        let fx = lon * model.rlonres;\n        let iy = Math.floor(fy);\n        let ix = Math.floor(fx);\n\n        fx -= ix;\n        fy -= iy;\n\n        if (iy === (model.height - 1)) {\n            iy--;\n        }\n\n        if ((this._cached_ix !== ix) || (this._cached_iy !== iy)) {\n\n            this._cached_ix = ix;\n            this._cached_iy = iy;\n\n            this._v00 = this._rawval(ix, iy);\n            this._v01 = this._rawval(ix + 1, iy);\n            this._v10 = this._rawval(ix, iy + 1);\n            this._v11 = this._rawval(ix + 1, iy + 1);\n        }\n\n        let a = (1 - fx) * this._v00 + fx * this._v01;\n        let b = (1 - fx) * this._v10 + fx * this._v11;\n\n        let h = (1 - fy) * a + fy * b;\n\n        return model.offset + model.scale * h;\n    }\n}\n\nexport {Geoid};","import * as utils from '../utils/shared';\nimport {BaseGeoImage} from \"../layer/BaseGeoImage\";\nimport {Framebuffer} from '../webgl/Framebuffer';\nimport {LonLat} from '../LonLat';\nimport {Program} from '../webgl/Program';\nimport {Planet} from \"../scene/Planet\";\nimport {doubleToTwoFloats2} from \"../math/coder\";\nimport {WebGLBufferExt, WebGLTextureExt} from \"../webgl/Handler\";\n\nexport class GeoImageCreator {\n\n    public MAX_FRAMES: number;\n\n    protected _gridSize: number;\n    protected _planet: Planet;\n    public _framebuffer: Framebuffer | null;\n    protected _framebufferMercProj: Framebuffer | null;\n    public _texCoordsBuffer: WebGLBufferExt | null;\n    public _indexBuffer: WebGLBufferExt | null;\n    protected _currentFrame: number;\n    protected _queue: BaseGeoImage[];\n    protected _animate: BaseGeoImage[];\n    protected _quadTexCoordsBuffer: WebGLBufferExt | null;\n    protected _quadVertexBuffer: WebGLTextureExt | null;\n\n    constructor(planet: Planet, maxFrames: number = 5) {\n        this.MAX_FRAMES = maxFrames;\n        this._gridSize = 64;\n        this._planet = planet;\n        this._framebuffer = null;\n        this._framebufferMercProj = null;\n        this._texCoordsBuffer = null;\n        this._indexBuffer = null;\n        this._currentFrame = 0;\n        this._queue = [];\n        this._animate = [];\n        this._quadTexCoordsBuffer = null;\n        this._quadVertexBuffer = null;\n    }\n\n    public init() {\n        this._initShaders();\n        this._initBuffers();\n    }\n\n    /**\n     * Creates geoImage corners coordinates grid buffer.\n     * @public\n     * @param{Array.<LonLat>} c - GeoImage corners coordinates.\n     * @param{boolean} [toMerc=false] - Transform to web mercator.\n     * @return{WebGLBuffer} Grid coordinates buffer.\n     */\n    public createGridBuffer(c: LonLat[], toMerc: boolean = false): [WebGLBufferExt, WebGLBufferExt] {\n        let gs = this._gridSize;\n\n        let v03 = new LonLat((c[3].lon - c[0].lon) / gs, (c[3].lat - c[0].lat) / gs),\n            v12 = new LonLat((c[2].lon - c[1].lon) / gs, (c[2].lat - c[1].lat) / gs),\n            v01 = new LonLat((c[1].lon - c[0].lon) / gs, (c[1].lat - c[0].lat) / gs),\n            v32 = new LonLat((c[2].lon - c[3].lon) / gs, (c[2].lat - c[3].lat) / gs);\n\n        const size = (gs + 1) * (gs + 1) * 2,\n            halfSize = size / 2;\n\n        let gridHigh = new Float32Array(size),\n            gridLow = new Float32Array(size);\n\n        let lonLatArr = new Array(halfSize);\n\n        let kh = 0,\n            kl = 0,\n            k = 0;\n\n        let tempArr = new Float32Array(2);\n\n        for (let i = 0; i <= gs; i++) {\n\n            let P03i = new LonLat(c[0].lon + i * v03.lon, c[0].lat + i * v03.lat),\n                P12i = new LonLat(c[1].lon + i * v12.lon, c[1].lat + i * v12.lat);\n\n            for (let j = 0; j <= gs; j++) {\n                let P01j = new LonLat(c[0].lon + j * v01.lon, c[0].lat + j * v01.lat),\n                    P32j = new LonLat(c[3].lon + j * v32.lon, c[3].lat + j * v32.lat);\n                let xx = utils.getLinesIntersectionLonLat(P03i, P12i, P01j, P32j)!;\n                doubleToTwoFloats2(xx.lon, tempArr);\n                gridHigh[kh++] = tempArr[0];\n                gridLow[kl++] = tempArr[1];\n                doubleToTwoFloats2(xx.lat, tempArr);\n                gridHigh[kh++] = tempArr[0];\n                gridLow[kl++] = tempArr[1];\n\n                lonLatArr[k++] = xx;\n            }\n        }\n\n        if (toMerc) {\n            for (let i = 0; i < halfSize; i++) {\n                let c = lonLatArr[i].forwardMercator();\n                doubleToTwoFloats2(c.lon, tempArr);\n                gridHigh[i * 2] = tempArr[0];\n                gridLow[i * 2] = tempArr[1];\n\n                doubleToTwoFloats2(c.lat, tempArr);\n                gridHigh[i * 2 + 1] = tempArr[0];\n                gridLow[i * 2 + 1] = tempArr[1];\n            }\n        }\n\n        return [\n            this._planet.renderer!.handler.createArrayBuffer(gridHigh, 2, halfSize),\n            this._planet.renderer!.handler.createArrayBuffer(gridLow, 2, halfSize)\n        ];\n    }\n\n    public frame() {\n        let i = this.MAX_FRAMES;\n        while (i-- && this._queue.length) {\n            const q = this._queue.shift()!;\n            q._isRendering = false;\n            q.rendering();\n            q.events.dispatch(q.events.loadend);\n        }\n\n        i = this._animate.length;\n        while (i--) {\n            this._animate[i].rendering();\n        }\n    }\n\n    public add(geoImage: BaseGeoImage) {\n        if (!geoImage._isRendering) {\n            geoImage._isRendering = true;\n            if (geoImage._animate) {\n                this._animate.push(geoImage);\n            } else {\n                this._queue.push(geoImage);\n            }\n        }\n    }\n\n    public remove(geoImage: BaseGeoImage) {\n        if (geoImage._isRendering) {\n            geoImage._creationProceeding = false;\n            geoImage._isRendering = false;\n            let arr: BaseGeoImage[];\n            if (geoImage._animate) {\n                arr = this._animate;\n            } else {\n                arr = this._queue;\n            }\n            for (let i = 0; i < arr.length; i++) {\n                if (arr[i].isEqual(geoImage)) {\n                    arr.splice(i, 1);\n                    return;\n                }\n            }\n        }\n    }\n\n    protected _initBuffers() {\n\n        let h = this._planet.renderer!.handler!;\n\n        this._framebuffer = new Framebuffer(h, {width: 2, height: 2, useDepth: false});\n        this._framebuffer.init();\n\n        this._framebufferMercProj = new Framebuffer(h, {width: 2, height: 2, useDepth: false});\n        this._framebufferMercProj.init();\n\n        let gs = Math.log2(this._gridSize);\n\n        this._texCoordsBuffer = this._planet._textureCoordsBufferCache[gs];\n\n        this._indexBuffer = this._planet._indexesCache[gs][gs][gs][gs][gs].buffer;\n\n        this._quadTexCoordsBuffer = h.createArrayBuffer(new Float32Array([0, 1, 1, 1, 0, 0, 1, 0]), 2, 4);\n        this._quadVertexBuffer = h.createArrayBuffer(new Float32Array([-1, 1, 1, 1, -1, -1, 1, -1]), 2, 4);\n    }\n\n    protected _initShaders() {\n\n        this._planet.renderer!.handler.addProgram(new Program(\"geoImageTransform\", {\n            uniforms: {\n                sourceTexture: \"sampler2d\",\n                extentParamsHigh: \"vec4\",\n                extentParamsLow: \"vec4\",\n                isFullExtent: \"bool\"\n            },\n            attributes: {\n                cornersHigh: \"vec2\",\n                cornersLow: \"vec2\",\n                texCoords: \"vec2\"\n            },\n            vertexShader:\n                `attribute vec2 cornersHigh; \n                     attribute vec2 cornersLow;\n                      attribute vec2 texCoords; \n                      uniform vec4 extentParamsHigh; \n                      uniform vec4 extentParamsLow; \n                      varying vec2 v_texCoords;\n                      void main() {                                                             \n                          v_texCoords = texCoords; \n                          vec2 highDiff = cornersHigh - extentParamsHigh.xy;\n                          vec2 lowDiff = cornersLow - extentParamsLow.xy;                                        \n                          gl_Position = vec4((-1.0 + (highDiff + lowDiff) * extentParamsHigh.zw) * vec2(1.0, -1.0), 0.0, 1.0); \n                      }`,\n            fragmentShader:\n                `precision highp float;\n                        uniform sampler2D sourceTexture;\n                        uniform bool isFullExtent;\n                        varying vec2 v_texCoords;\n                        void main () {\n                            if(!isFullExtent && (v_texCoords.x <= 0.001 || v_texCoords.x >= 0.999 ||\n                                v_texCoords.y <= 0.001 || v_texCoords.y >= 0.999)) {\n                                discard;\n                            }\n                            gl_FragColor = texture2D(sourceTexture, v_texCoords);\n                        }`\n        }));\n    }\n}","import {EventsHandler, createEvents} from '../Events';\nimport {Planet} from \"../scene/Planet\";\nimport {Segment} from \"../segment/Segment\";\n\ntype LoaderEventsList = [\"loadend\", \"layerloadend\"];\n\nconst LOADER_EVENTS: LoaderEventsList = [\"loadend\", \"layerloadend\"];\n\nexport interface IResponse {\n    status: string;\n    data?: any;\n    msg?: string;\n}\n\ntype IResponseCallback = (response: IResponse) => void;\n\n// interface IResponseHandler {\n//     json: (r: Response) => Promise<any>;\n//     blob: (r: Response) => Promise<Blob>;\n//     arrayBuffer: (r: Response) => Promise<ArrayBuffer>;\n//     imageBitmap: (r: Response) => Promise<ImageBitmap>;\n//     text: (r: Response) => Promise<string>;\n// }\n\ninterface Obj<T> {\n    __id: number;\n    isIdle: boolean;\n    isEqual: (obj: T) => boolean;\n    events: EventsHandler<any>\n    _planet: Planet | null;\n\n}\n\ntype QueryParams<T> = {\n    sender?: T,\n    src: string,\n    type: string,\n    filter?: (val: QueryParams<T>) => boolean,\n    options?: any,\n    segment?: Segment\n};\n\ntype QueueData<T> = {\n    params: QueryParams<T>,\n    callback: IResponseCallback\n};\n\ntype RequestCounter<T> = {\n    sender: T,\n    counter: number,\n    __requestCounterFrame__: number\n};\n\n\nexport class Loader<T extends Obj<T>> {\n    public MAX_REQUESTS: number;\n\n    public events: EventsHandler<LoaderEventsList>;\n\n    protected _loading: number;\n\n    protected _queue: QueueData<T>[];//new QueueArray();\n\n    protected _senderRequestCounter: RequestCounter<T>[];\n\n    protected _promises: { [key: string]: (r: Response) => Promise<any> };//IResponseHandler;\n\n    constructor(maxRequests: number = 24) {\n\n        this.MAX_REQUESTS = maxRequests;\n\n        this.events = createEvents(LOADER_EVENTS);\n\n        this._loading = 0;\n\n        this._queue = [];//new QueueArray();\n\n        this._senderRequestCounter = [];\n\n        this._promises = {\n            'json': r => r.json(),\n            'blob': r => r.blob(),\n            'arrayBuffer': r => r.arrayBuffer(),\n            'imageBitmap': r => r.blob().then(\n                (r: Blob) => createImageBitmap(r, {\n                    premultiplyAlpha: \"premultiply\"\n                })),\n            'text': r => r.text()\n        };\n    }\n\n    public load(params: QueryParams<T>, callback: IResponseCallback) {\n        if (params.sender) {\n            if (!this._senderRequestCounter[params.sender.__id]) {\n                this._senderRequestCounter[params.sender.__id] = {\n                    sender: params.sender, counter: 0, __requestCounterFrame__: 0\n                };\n            }\n            this._senderRequestCounter[params.sender.__id].counter++;\n        }\n        this._queue.push({params, callback});\n        this._exec();\n    }\n\n    public fetch(params: QueryParams<T>) {\n        return fetch(params.src, params.options || {})\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw Error(`Unable to load '${params.src}'`);\n                }\n                return this._promises[params.type || \"blob\"](response);\n            })\n\n            .then((data: any) => {\n                return {status: \"ready\", data: data};\n\n            })\n\n            .catch((err: Error) => {\n                return {status: \"error\", msg: err.toString()};\n            });\n    }\n\n    public getRequestCounter(sender: T): number {\n        if (sender) {\n            let r = this._senderRequestCounter[sender.__id];\n            if (r) {\n                return r.counter;\n            }\n        }\n        return 0;\n    }\n\n    public isIdle(sender: T): boolean {\n        return sender.isIdle;\n    }\n\n    protected _checkLoadend(request: RequestCounter<T>, sender: T) {\n        if (request.counter === 0 && (!sender._planet || sender._planet._terrainCompletedActivated)) {\n            sender.events.dispatch(sender.events.loadend, sender);\n            this.events.dispatch(this.events.layerloadend, sender);\n            request.__requestCounterFrame__ = 0;\n        } else {\n            request.__requestCounterFrame__ = requestAnimationFrame(() => {\n                this._checkLoadend(request, sender);\n            });\n        }\n    }\n\n    protected _handleResponse(q: QueueData<T>, response: IResponse) {\n        q.callback(response);\n        let sender = q.params.sender;\n        if (sender && (sender.events.loadend!.handlers.length || this.events.layerloadend!.handlers.length)) {\n            let request = this._senderRequestCounter[sender.__id];\n            if (request && request.counter > 0) {\n                request.counter--;\n                cancelAnimationFrame(request.__requestCounterFrame__!);\n                request.__requestCounterFrame__ = requestAnimationFrame(() => {\n                    this._checkLoadend(request, sender!);\n                });\n            }\n        }\n        this._exec();\n    }\n\n    protected _exec() {\n\n        if (this._queue.length > 0 && this._loading < this.MAX_REQUESTS) {\n\n            let q = this._queue.pop()!;\n\n            if (!q) return;\n\n            let p = q.params;\n\n            if (!p.filter || p.filter(p)) {\n\n                this._loading++;\n\n                return fetch(p.src!, p.options || {})\n                    .then((response: Response) => {\n                        if (!response.ok) {\n                            throw Error(`Unable to load '${p.src}'`);\n                        }\n                        return this._promises[p.type || \"blob\"](response);\n                    })\n                    .then((data: any) => {\n                        this._loading--;\n                        this._handleResponse(q, {status: \"ready\", data: data});\n                    })\n                    .catch((err: Error) => {\n                        this._loading--;\n                        this._handleResponse(q, {status: \"error\", msg: err.toString()});\n                    });\n\n            } else {\n                this._handleResponse(q, {status: \"abort\"});\n            }\n        } else if (this._loading === 0) {\n            this.events.dispatch(this.events.loadend);\n        }\n    }\n\n    public abort(sender: T) {\n\n        if (this._senderRequestCounter[sender.__id]) {\n            this._senderRequestCounter[sender.__id].counter = 0;\n            cancelAnimationFrame(this._senderRequestCounter[sender.__id].__requestCounterFrame__);\n            this._senderRequestCounter[sender.__id].__requestCounterFrame__ = 0;\n        }\n\n        for (let i = 0, len = this._queue.length; i < len; i++) {\n            let qi = this._queue[i];\n            if (qi && qi.params.sender && sender.isEqual(qi.params.sender)) {\n                qi.callback({'status': \"abort\"});\n                //@ts-ignore\n                this._queue[i] = null;\n            }\n        }\n    }\n\n    public abortAll() {\n        for (let i = 0, len = this._queue.length; i < len; i++) {\n            let qi = this._queue[i];\n            if (qi) {\n                let sender = qi.params.sender;\n                if (sender && this._senderRequestCounter[sender.__id]) {\n                    this._senderRequestCounter[sender.__id].counter = 0;\n                    cancelAnimationFrame(this._senderRequestCounter[sender.__id].__requestCounterFrame__);\n                    this._senderRequestCounter[sender.__id].__requestCounterFrame__ = 0;\n                }\n                qi.callback({'status': \"abort\"});\n                //@ts-ignore\n                this._queue[i] = null;\n            }\n        }\n        this._queue = [];\n    }\n\n    public get loading(): number {\n        return this._loading;\n    }\n\n    public get queue(): QueueData<T>[] {\n        return this._queue;\n    }\n}","import * as quadTree from \"../quadTree/quadTree\";\nimport {Framebuffer} from \"../webgl/Framebuffer\";\nimport {Lock, Key} from \"../Lock\";\nimport {Planet} from \"../scene/Planet\";\nimport {Program} from \"../webgl/Program\";\nimport {QueueArray} from \"../QueueArray\";\nimport {Segment} from \"../segment/Segment\";\nimport {WebGLBufferExt, WebGLTextureExt, Handler} from \"../webgl/Handler\";\n\ninterface INormalMapCreatorParams {\n    minTableSize?: number;\n    maxTableSize?: number;\n    width?: number;\n    height?: number;\n}\n\nexport class NormalMapCreator {\n\n    protected _minTabelSize: number;\n    protected _maxTableSize: number;\n\n    protected _planet: Planet;\n    protected _handler: Handler | null;\n    protected _verticesBufferArray: WebGLBufferExt[];\n    protected _indexBufferArray: WebGLBufferExt[];\n    protected _positionBuffer: WebGLBufferExt | null;\n    protected _framebuffer: Framebuffer | null;\n    protected _normalMapVerticesTexture: WebGLTextureExt | null;\n\n    protected _width: number;\n    protected _height: number;\n\n    protected _queue: QueueArray<Segment>;\n\n    protected _lock: Lock;\n\n    constructor(planet: Planet, options: INormalMapCreatorParams = {}) {\n\n        this._minTabelSize = options.minTableSize || 1;\n        this._maxTableSize = options.maxTableSize || 8;\n\n        this._planet = planet;\n        this._handler = null;\n        this._verticesBufferArray = [];\n        this._indexBufferArray = [];\n        this._positionBuffer = null;\n        this._framebuffer = null;\n        this._normalMapVerticesTexture = null;\n\n        this._width = options.width || 128;\n        this._height = options.height || 128;\n\n        this._queue = new QueueArray(1024);\n\n        this._lock = new Lock();\n    }\n\n    public get width(): number {\n        return this._width;\n    }\n\n    public get height(): number {\n        return this._height;\n    }\n\n    public init() {\n\n        this._maxTableSize = this._planet.maxGridSize || 8;\n\n        this._handler = this._planet.renderer!.handler;\n\n        let isWebkit = false; //('WebkitAppearance' in document.documentElement.style) && !/^((?!chrome).)*safari/i.test(navigator.userAgent);\n\n        /*==================================================================================\n         * http://www.sunsetlakesoftware.com/2013/10/21/optimizing-gaussian-blurs-mobile-gpu\n         *=================================================================================*/\n        const normalMapBlur = new Program(\"normalMapBlur\", {\n            attributes: {\n                a_position: \"vec2\"\n            },\n            uniforms: {\n                s_texture: \"sampler2d\"\n            },\n            vertexShader:\n                `attribute vec2 a_position;\n                       attribute vec2 a_texCoord;\n\n                      varying vec2 blurCoordinates[5];\n\n                      void main() {\n                          vec2 vt = a_position * 0.5 + 0.5; \n                          ${isWebkit ? \"vt.y = 1.0 - vt.y; \" : \" \"}\n                          gl_Position = vec4(a_position, 0.0, 1.0);\n                          blurCoordinates[0] = vt;\n                          blurCoordinates[1] = vt + ${(1.0 / this._width) * 1.407333};\n                          blurCoordinates[2] = vt - ${(1.0 / this._height) * 1.407333};\n                          blurCoordinates[3] = vt + ${(1.0 / this._width) * 3.294215};\n                          blurCoordinates[4] = vt - ${(1.0 / this._height) * 3.294215};\n                }`,\n            fragmentShader: `precision lowp float;\n                        uniform sampler2D s_texture;                        \n                        varying vec2 blurCoordinates[5];                        \n\n                        void main() {\n                            lowp vec4 sum = vec4(0.0);\n                            //if(blurCoordinates[0].x <= 0.01 || blurCoordinates[0].x >= 0.99 ||\n                            //    blurCoordinates[0].y <= 0.01 || blurCoordinates[0].y >= 0.99){\n                            //    sum = texture2D(s_texture, blurCoordinates[0]);\n                            //} else {\n                                sum += texture2D(s_texture, blurCoordinates[0]) * 0.204164;\n                                sum += texture2D(s_texture, blurCoordinates[1]) * 0.304005;\n                                sum += texture2D(s_texture, blurCoordinates[2]) * 0.304005;\n                                sum += texture2D(s_texture, blurCoordinates[3]) * 0.093913;\n                                sum += texture2D(s_texture, blurCoordinates[4]) * 0.093913;\n                            //}\n                            gl_FragColor = sum;\n                        }`\n        });\n\n        const normalMap = new Program(\"normalMap\", {\n            attributes: {\n                a_position: \"vec2\",\n                a_normal: \"vec3\"\n            },\n            uniforms: {},\n            vertexShader: `attribute vec2 a_position;\n                      attribute vec3 a_normal;\n                      \n                      varying vec3 v_color;\n                      \n                      void main() {\n                          gl_Position = vec4(a_position, 0, 1);\n                          v_color = normalize(a_normal) * 0.5 + 0.5;\n                      }`,\n            fragmentShader: `precision highp float;\n                        \n                        varying vec3 v_color;\n                        \n                        void main () {\n                            gl_FragColor = vec4(v_color, 1.0);\n                        }`\n        });\n\n        this._handler.addProgram(normalMapBlur);\n        this._handler.addProgram(normalMap);\n\n        //create hidden handler buffer\n        this._framebuffer = new Framebuffer(this._handler, {\n            width: this._width,\n            height: this._height,\n            useDepth: false\n        });\n\n        this._framebuffer.init();\n\n        this._normalMapVerticesTexture = this._handler.createEmptyTexture_l(this._width, this._height);\n\n        //create vertices hasharray for different grid size segments from 2^4(16) to 2^7(128)\n        for (let p = this._minTabelSize; p <= this._maxTableSize; p++) {\n\n            const gs = Math.pow(2, p);\n            const gs2 = gs / 2;\n\n            let vertices = new Float32Array((gs + 1) * (gs + 1) * 2);\n\n            for (let i = 0; i <= gs; i++) {\n                for (let j = 0; j <= gs; j++) {\n                    let ind = (i * (gs + 1) + j) * 2;\n                    vertices[ind] = -1 + j / gs2;\n                    vertices[ind + 1] = -1 + i / gs2;\n                }\n            }\n\n            this._verticesBufferArray[gs] = this._handler.createArrayBuffer(\n                vertices,\n                2,\n                vertices.length / 2\n            );\n\n            this._indexBufferArray[gs] =\n                this._planet._indexesCache[Math.log2(gs)][Math.log2(gs)][Math.log2(gs)][Math.log2(gs)][Math.log2(gs)].buffer!;\n        }\n\n        //create 2d screen square buffer\n        const positions = new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0]);\n\n        this._positionBuffer = this._handler.createArrayBuffer(positions, 2, positions.length / 2);\n    }\n\n    protected _drawNormalMapBlur(segment: Segment): boolean {\n        let normals = segment.normalMapNormals;\n        if (\n            segment.node &&\n            segment.node.getState() !== quadTree.NOTRENDERING &&\n            normals &&\n            normals.length\n        ) {\n            const size = normals.length / 3;\n            const gridSize = Math.sqrt(size) - 1;\n\n            let indBuf = this._verticesBufferArray[gridSize];\n\n            if (indBuf) {\n                if (segment.planet.terrain!.equalizeNormals) {\n                    segment._normalMapEdgeEqualize(quadTree.N);\n                    segment._normalMapEdgeEqualize(quadTree.S);\n                    segment._normalMapEdgeEqualize(quadTree.W);\n                    segment._normalMapEdgeEqualize(quadTree.E);\n                }\n\n                let outTexture = segment.normalMapTexturePtr;\n\n                const h = this._handler!;\n                const gl = h.gl!;\n\n                let _normalsBuffer = h.createArrayBuffer(normals, 3, size, gl.DYNAMIC_DRAW);\n\n                const f = this._framebuffer!;\n                let p = h.programs.normalMap;\n                let sha = p._program.attributes;\n\n                f.bindOutputTexture(this._normalMapVerticesTexture!);\n\n                p.activate();\n\n                gl.bindBuffer(gl.ARRAY_BUFFER, indBuf);\n                gl.vertexAttribPointer(sha.a_position, indBuf.itemSize, gl.FLOAT, false, 0, 0);\n\n                gl.bindBuffer(gl.ARRAY_BUFFER, _normalsBuffer);\n                gl.vertexAttribPointer(sha.a_normal, _normalsBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBufferArray[gridSize]);\n                gl.drawElements(\n                    gl.TRIANGLE_STRIP,\n                    this._indexBufferArray[gridSize].numItems,\n                    gl.UNSIGNED_INT,\n                    0\n                );\n\n                gl.deleteBuffer(_normalsBuffer);\n\n                //\n                // blur pass\n                //\n                f.bindOutputTexture(outTexture!);\n\n                p = h.programs.normalMapBlur;\n\n                p.activate();\n                gl.bindBuffer(gl.ARRAY_BUFFER, this._positionBuffer!);\n                gl.vertexAttribPointer(\n                    p._program.attributes.a_position,\n                    this._positionBuffer!.itemSize,\n                    gl.FLOAT,\n                    false,\n                    0,\n                    0\n                );\n                gl.activeTexture(gl.TEXTURE0);\n                gl.bindTexture(gl.TEXTURE_2D, this._normalMapVerticesTexture!);\n                gl.uniform1i(p._program.uniforms.s_texture, 0);\n                gl.drawArrays(gl.TRIANGLE_STRIP, 0, this._positionBuffer!.numItems);\n                return true;\n            } else {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected _drawNormalMapNoBlur(segment: Segment): boolean {\n        let normals = segment.normalMapNormals;\n        if (\n            segment.node &&\n            segment.node.getState() !== quadTree.NOTRENDERING &&\n            normals &&\n            normals.length\n        ) {\n            const size = normals.length / 3;\n            const gridSize = Math.sqrt(size) - 1;\n\n            let indBuf = this._verticesBufferArray[gridSize];\n\n            if (indBuf) {\n                if (segment.planet.terrain!.equalizeNormals) {\n                    segment._normalMapEdgeEqualize(quadTree.N);\n                    segment._normalMapEdgeEqualize(quadTree.S);\n                    segment._normalMapEdgeEqualize(quadTree.W);\n                    segment._normalMapEdgeEqualize(quadTree.E);\n                }\n\n                let outTexture = segment.normalMapTexturePtr;\n\n                const h = this._handler!;\n                const gl = h.gl!;\n\n                let _normalsBuffer = h.createArrayBuffer(normals, 3, size, gl.DYNAMIC_DRAW);\n\n                const f = this._framebuffer!;\n                const p = h.programs.normalMap;\n                const sha = p._program.attributes;\n\n                f.bindOutputTexture(outTexture!);\n\n                p.activate();\n\n                gl.bindBuffer(gl.ARRAY_BUFFER, indBuf);\n                gl.vertexAttribPointer(sha.a_position, indBuf.itemSize, gl.FLOAT, false, 0, 0);\n\n                gl.bindBuffer(gl.ARRAY_BUFFER, _normalsBuffer);\n                gl.vertexAttribPointer(sha.a_normal, _normalsBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBufferArray[gridSize]);\n                gl.drawElements(\n                    gl.TRIANGLE_STRIP,\n                    this._indexBufferArray[gridSize].numItems,\n                    gl.UNSIGNED_INT,\n                    0\n                );\n\n                gl.deleteBuffer(_normalsBuffer);\n\n                return true;\n            } else {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    protected _drawNormalMap(segment: Segment) {\n        if (segment.planet.terrain!.isBlur(segment)) {\n            return this._drawNormalMapBlur(segment);\n        } else {\n            return this._drawNormalMapNoBlur(segment);\n        }\n    }\n\n    public drawSingle(segment: Segment) {\n        const h = this._handler!;\n        const gl = h.gl!;\n\n        this._framebuffer!.activate();\n\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.DEPTH_TEST);\n        gl.disable(gl.BLEND);\n\n        if (segment.terrainReady && this._drawNormalMap(segment)) {\n            segment.normalMapReady = true;\n            segment.normalMapTexture = segment.normalMapTexturePtr;\n            segment.normalMapTextureBias[0] = 0;\n            segment.normalMapTextureBias[1] = 0;\n            segment.normalMapTextureBias[2] = 1;\n        }\n        segment._inTheQueue = false;\n\n        gl.enable(gl.DEPTH_TEST);\n        gl.enable(gl.CULL_FACE);\n        gl.enable(gl.BLEND);\n\n        this._framebuffer!.deactivate();\n    }\n\n    public frame() {\n        if (this._queue.length) {\n            const h = this._handler!;\n            const gl = h.gl!;\n\n            this._framebuffer!.activate();\n\n            gl.disable(gl.CULL_FACE);\n            gl.disable(gl.DEPTH_TEST);\n            gl.disable(gl.BLEND);\n\n            let deltaTime = 0,\n                startTime = window.performance.now();\n\n            while (this._lock.isFree() && this._queue.length && deltaTime < 0.25) {\n                const segment = this._queue.shift()!;\n                if (segment.terrainReady && this._drawNormalMap(segment)) {\n                    segment.normalMapReady = true;\n                    segment.normalMapTexture = segment.normalMapTexturePtr;\n                    segment.normalMapTextureBias[0] = 0;\n                    segment.normalMapTextureBias[1] = 0;\n                    segment.normalMapTextureBias[2] = 1;\n                }\n                segment._inTheQueue = false;\n                deltaTime = window.performance.now() - startTime;\n            }\n\n            gl.enable(gl.BLEND);\n            gl.enable(gl.DEPTH_TEST);\n            gl.enable(gl.CULL_FACE);\n\n            this._framebuffer!.deactivate();\n        }\n    }\n\n    public get queueSize(): number {\n        return this._queue.length;\n    }\n\n    public queue(segment: Segment) {\n        segment._inTheQueue = true;\n        this._queue.push(segment);\n    }\n\n    public unshift(segment: Segment) {\n        segment._inTheQueue = true;\n        this._queue.unshift(segment);\n    }\n\n    public remove(segment: Segment) {\n        //...\n    }\n\n    public clear() {\n        while (this._queue.length) {\n            let s = this._queue.pop()!;\n            s._inTheQueue = false;\n        }\n    }\n\n    /**\n     * Set activity off\n     * @public\n     */\n    public lock(key: Key) {\n        this._lock.lock(key);\n    }\n\n    /**\n     * Set activity on\n     * @public\n     */\n    public free(key: Key) {\n        this._lock.free(key);\n    }\n\n}","// import { QueueArray } from '../QueueArray.js';\nimport {EPSG4326} from \"../proj/EPSG4326\";\nimport {BaseWorker} from \"./BaseWorker\";\nimport {Segment} from \"../segment/Segment\";\nimport {Geoid} from \"../terrain/Geoid\";\n\nexport interface IPlainSegmentWorkerData {\n    plainVertices: Float64Array | null;\n    plainVerticesHigh: Float32Array | null;\n    plainVerticesLow: Float32Array | null;\n    plainNormals: Float32Array | null;\n    plainRadius: number;\n\n    normalMapNormals: Float32Array | null;\n    normalMapVertices: Float64Array | null;\n    normalMapVerticesHigh: Float32Array | null;\n    normalMapVerticesLow: Float32Array | null;\n}\n\ntype MessageEventExt = MessageEvent & {\n    data: IPlainSegmentWorkerData\n}\n\nclass PlainSegmentWorker extends BaseWorker<Segment> {\n    constructor(numWorkers: number = 2) {\n        super(numWorkers, PLAIN_SEGMENT_PROGRAM);\n    }\n\n    protected override _onMessage(e: MessageEventExt) {\n        this._source.get(e.data.id)!._plainSegmentWorkerCallback(e.data);\n\n        e.data.plainVertices = null;\n        e.data.plainVerticesHigh = null;\n        e.data.plainVerticesLow = null;\n        e.data.plainNormals = null;\n        e.data.normalMapNormals = null;\n        e.data.normalMapVertices = null;\n        e.data.normalMapVerticesHigh = null;\n        e.data.normalMapVerticesLow = null;\n\n        this._source.delete(e.data.id)\n    }\n\n    public setGeoid(geoid: Geoid) {\n\n        if (geoid.model) {\n            let m = geoid.model;\n            let model = {\n                scale: m.scale,\n                offset: m.offset,\n                width: m.width,\n                height: m.height,\n                rlonres: m.rlonres,\n                rlatres: m.rlatres,\n                i: m.i\n            };\n\n            this._workerQueue.forEach((w) => {\n                let rawfile = new Uint8Array(m.rawfile.length);\n                rawfile.set(m.rawfile);\n\n                w.postMessage({\n                        model: model,\n                        rawfile: rawfile\n                    }, [\n                        rawfile.buffer\n                    ]\n                );\n            });\n        } else {\n            this._workerQueue.forEach((w) => {\n                w.postMessage({\n                    model: null\n                });\n            });\n        }\n    }\n\n    public override make(segment: Segment) {\n        if (segment.initialized) {\n            if (this._workerQueue.length) {\n                let w = this._workerQueue.pop()!;\n\n                this._source.set(this._sourceId, segment);\n\n                let params = new Float64Array([\n                    this._sourceId,\n                    segment._projection.id === EPSG4326.id ? 1.0 : 0.0,\n                    segment.planet.terrain!.gridSizeByZoom[segment.tileZoom],\n                    segment.planet.terrain!.plainGridSize,\n                    segment._extent.southWest.lon,\n                    segment._extent.southWest.lat,\n                    segment._extent.northEast.lon,\n                    segment._extent.northEast.lat,\n                    // @ts-ignore\n                    segment.planet.ellipsoid._e2,\n                    segment.planet.ellipsoid.equatorialSize,\n                    segment.planet.ellipsoid._invRadii2.x,\n                    segment.planet.ellipsoid._invRadii2.y,\n                    segment.planet.ellipsoid._invRadii2.z,\n                    segment.planet._heightFactor\n                ]);\n\n                this._sourceId++;\n\n                w.postMessage({\n                    params: params\n                }, [\n                    params.buffer\n                ]);\n            } else {\n                this._pendingQueue.push(segment);\n            }\n        } else {\n            this.check();\n        }\n    }\n}\n\nconst PLAIN_SEGMENT_PROGRAM = `\n    'use strict';\n    \n    let model = null;\n\n    let cached_ix = null;\n    let cached_iy = null;\n    let v00 = null;\n    let v01 = null;\n    let v10 = null;\n    let v11 = null;\n    let t = null;\n\n    function rawval(ix, iy) {\n\n        if (iy < 0) {\n            iy = -iy;\n            ix += model.width / 2;\n        } else if (iy >= model.height) {\n            iy = 2 * (model.height - 1) - iy;\n            ix += model.width / 2;\n        }\n\n        if (ix < 0) {\n            ix += model.width;\n        } else if (ix >= model.width) {\n            ix -= model.width;\n        }\n\n        var k = (iy * model.width + ix) * 2 + model.i;\n\n        return (model.rawfile[k] << 8) | model.rawfile[k + 1];\n    };\n\n    function getHeightMSL(lon, lat) {\n\n        if (!model) return 0;\n\n        if (lon < 0) lon += 360.0;\n\n        var fy = (90 - lat) * model.rlatres;\n        var fx = lon * model.rlonres;\n        var iy = Math.floor(fy);\n        var ix = Math.floor(fx);\n\n        fx -= ix;\n        fy -= iy;\n\n        if (iy === (model.height - 1)) {\n            iy--;\n        }\n\n        if ((cached_ix !== ix) || (cached_iy !== iy)) {\n\n            cached_ix = ix;\n            cached_iy = iy;\n\n            v00 = rawval(ix, iy);\n            v01 = rawval(ix + 1, iy);\n            v10 = rawval(ix, iy + 1);\n            v11 = rawval(ix + 1, iy + 1);\n        }\n\n        let h = null;\n\n        var a = (1 - fx) * v00 + fx * v01;\n        var b = (1 - fx) * v10 + fx * v11;\n\n        h = (1 - fy) * a + fy * b;\n\n        return model.offset + model.scale * h;\n    };\n\n    const HALF_PI = Math.PI * 0.5;\n    const POLE = 20037508.34;\n    const PI_BY_POLE = Math.PI / POLE;\n    const INV_POLE_BY_180 = 180.0 / POLE;\n    const INV_PI_BY_180 = 180.0 / Math.PI;\n    const INV_PI_BY_180_HALF_PI = INV_PI_BY_180 * HALF_PI;\n    const RADIANS = Math.PI / 180.0;\n    const INV_PI_BY_360 = INV_PI_BY_180 * 2.0;\n\n    let E2 = 0.0,\n        A = 0.0;\n\n    let _projFunc = null;\n\n    const Vec3 = function (x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    };\n\n    var geodeticToCartesian = function (lon, lat, heightFactor, res) {\n\n        let h = getHeightMSL(lon, lat) * heightFactor;\n\n        let latrad = RADIANS * lat,\n            lonrad = RADIANS * lon;\n\n        let slt = Math.sin(latrad);\n\n        let N = A / Math.sqrt(1.0 - E2 * slt * slt);\n        let nc = (N + h) * Math.cos(latrad);       \n           \n        res.x = nc * Math.cos(lonrad);\n        res.y = nc * Math.sin(lonrad);\n        res.z = (N * (1 - E2) + h) * slt;\n    };\n\n    var geodeticToCartesianInverse = function (lon, lat, heightFactor, res){\n        geodeticToCartesian(\n            lon * INV_POLE_BY_180,\n            INV_PI_BY_360 * Math.atan(Math.exp(lat * PI_BY_POLE)) - INV_PI_BY_180_HALF_PI,\n            heightFactor,\n            res);\n    };\n\n    var v = new Vec3(0.0, 0.0, 0.0);\n    var _tempHigh = new Vec3(0.0, 0.0, 0.0);\n    var _tempLow = new Vec3(0.0, 0.0, 0.0);\n\n    var doubleToTwoFloats = function(v, high, low) {\n\n        let x = v.x, y = v.y, z = v.z;\n    \n        if (x >= 0.0) {\n            var doubleHigh = Math.floor(x / 65536.0) * 65536.0;\n            high.x = Math.fround(doubleHigh);\n            low.x = Math.fround(x - doubleHigh);\n        } else {\n            var doubleHigh = Math.floor(-x / 65536.0) * 65536.0;\n            high.x = Math.fround(-doubleHigh);\n            low.x = Math.fround(x + doubleHigh);\n        }\n\n        if (y >= 0.0) {\n            var doubleHigh = Math.floor(y / 65536.0) * 65536.0;\n            high.y = Math.fround(doubleHigh);\n            low.y = Math.fround(y - doubleHigh);\n        } else {\n            var doubleHigh = Math.floor(-y / 65536.0) * 65536.0;\n            high.y = Math.fround(-doubleHigh);\n            low.y = Math.fround(y + doubleHigh);\n        }\n\n        if (z >= 0.0) {\n            var doubleHigh = Math.floor(z / 65536.0) * 65536.0;\n            high.z = Math.fround(doubleHigh);\n            low.z = Math.fround(z - doubleHigh);\n        } else {\n            var doubleHigh = Math.floor(-z / 65536.0) * 65536.0;\n            high.z = Math.fround(-doubleHigh);\n            low.z = Math.fround(z + doubleHigh);\n        }\n    };\n\n    self.onmessage = function (msg) {\n        if(msg.data.model) {\n            model = msg.data.model;\n            model.rawfile = msg.data.rawfile;\n        } else if(msg.data.params) {\n\n            let xmin = 549755748352.0, xmax = -549755748352.0, \n                ymin = 549755748352.0, ymax = -549755748352.0, \n                zmin = 549755748352.0, zmax = -549755748352.0;\n\n            E2 = msg.data.params[8];\n            A = msg.data.params[9];\n\n            let gridSize = msg.data.params[2],\n                fgs = msg.data.params[3],\n                r2_x = msg.data.params[10],\n                r2_y = msg.data.params[11],\n                r2_z = msg.data.params[12];\n\n            let heightFactor =  msg.data.params[13];\n        \n            if(msg.data.params[1] === 0.0){\n                _projFunc = geodeticToCartesianInverse;\n            }else{\n                _projFunc = geodeticToCartesian;\n            }\n\n            let maxFgs = Math.max(fgs, gridSize);\n            let llStep = (msg.data.params[6] - msg.data.params[4]) / maxFgs;\n            let ltStep = (msg.data.params[7] - msg.data.params[5]) / maxFgs;\n\n            let esw_lon = msg.data.params[4],\n                ene_lat = msg.data.params[7];\n\n            let dg = Math.max(fgs / gridSize, 1.0),\n                gs = maxFgs + 1;\n            \n            const gsgs = gs * gs;\n\n            const gridSize3 = (gridSize + 1) * (gridSize + 1) * 3;\n\n            let plainNormals = new Float32Array(gridSize3);\n\n            let plainVertices = new Float64Array(gridSize3);\n            let plainVerticesHigh = new Float32Array(gridSize3);\n            let plainVerticesLow = new Float32Array(gridSize3);\n\n            let normalMapNormals = new Float32Array(gsgs * 3);\n\n            let normalMapVertices = new Float64Array(gsgs * 3);\n            let normalMapVerticesHigh = new Float32Array(gsgs * 3);\n            let normalMapVerticesLow = new Float32Array(gsgs * 3);\n\n            let ind = 0,\n                nmInd = 0;\n\n            for (let k = 0; k < gsgs; k++) {\n\n                let j = k % gs,\n                    i = ~~(k / gs);\n\n                _projFunc(esw_lon + j * llStep, ene_lat - i * ltStep, heightFactor, v);\n\n                let nx = v.x * r2_x, ny = v.y * r2_y, nz = v.z * r2_z;\n                let l = 1.0 / Math.sqrt(nx * nx + ny * ny + nz * nz);            \n                let nxl = nx * l,\n                    nyl = ny * l,\n                    nzl = nz * l;\n\n                doubleToTwoFloats(v, _tempHigh, _tempLow);\n\n                normalMapVertices[nmInd] = v.x;\n                normalMapVerticesHigh[nmInd] = _tempHigh.x;\n                normalMapVerticesLow[nmInd] = _tempLow.x;\n                normalMapNormals[nmInd++] = nxl;\n\n                normalMapVertices[nmInd] = v.y;\n                normalMapVerticesHigh[nmInd] = _tempHigh.y;\n                normalMapVerticesLow[nmInd] = _tempLow.y;\n                normalMapNormals[nmInd++] = nyl;\n\n                normalMapVertices[nmInd] = v.z;\n                normalMapVerticesHigh[nmInd] = _tempHigh.z;\n                normalMapVerticesLow[nmInd] = _tempLow.z;\n                normalMapNormals[nmInd++] = nzl;\n\n                if (i % dg === 0 && j % dg === 0) {\n                    plainVertices[ind] = v.x;\n                    plainVerticesHigh[ind] = _tempHigh.x;\n                    plainVerticesLow[ind] = _tempLow.x;\n                    plainNormals[ind++] = nxl;\n\n                    plainVertices[ind] = v.y;\n                    plainVerticesHigh[ind] = _tempHigh.y;\n                    plainVerticesLow[ind] = _tempLow.y;\n                    plainNormals[ind++] = nyl;\n\n                    plainVertices[ind] = v.z;\n                    plainVerticesHigh[ind] = _tempHigh.z;\n                    plainVerticesLow[ind] = _tempLow.z;\n                    plainNormals[ind++] = nzl;\n\n                    if (v.x < xmin) xmin = v.x; if (v.x > xmax) xmax = v.x;\n                    if (v.y < ymin) ymin = v.y; if (v.y > ymax) ymax = v.y;\n                    if (v.z < zmin) zmin = v.z; if (v.z > zmax) zmax = v.z;\n                }\n            }\n\n            let x = (xmax - xmin) * 0.5,\n                y = (ymax - ymin) * 0.5,\n                z = (zmax - zmin) * 0.5;\n\n            let plainRadius = Math.sqrt(x * x + y * y + z * z);\n\n            self.postMessage({\n                id: msg.data.params[0],\n                plainVertices: plainVertices,\n                plainVerticesHigh: plainVerticesHigh,\n                plainVerticesLow: plainVerticesLow,\n                plainNormals: plainNormals,\n                normalMapNormals: normalMapNormals,\n                normalMapVertices: normalMapVertices,\n                normalMapVerticesHigh: normalMapVerticesHigh,\n                normalMapVerticesLow: normalMapVerticesLow,\n                plainRadius: plainRadius\n             }, [\n                plainVertices.buffer,\n                plainVerticesHigh.buffer,\n                plainVerticesLow.buffer,\n                plainNormals.buffer,\n                normalMapNormals.buffer,\n                normalMapVertices.buffer,\n                normalMapVerticesHigh.buffer,\n                normalMapVerticesLow.buffer\n            ]);\n        }\n    }`;\n\nexport {PlainSegmentWorker};\n","import {Box} from \"../bv/Box\";\nimport {Mat4, NumberArray16} from \"../math/Mat4\";\nimport {NumberArray4} from \"../math/Vec4\";\nimport {Sphere} from \"../bv/Sphere\";\nimport {Vec3} from \"../math/Vec3\";\n\nfunction planeNormalize(plane: NumberArray4) {\n    let t = 1.0 / Math.sqrt(plane[0] * plane[0] + plane[1] * plane[1] + plane[2] * plane[2]);\n    plane[0] *= t;\n    plane[1] *= t;\n    plane[2] *= t;\n    plane[3] *= t;\n}\n\ninterface IFrustumParams {\n    cameraFrustumIndex?: number;\n    fov?: number;\n    aspect?: number,\n    near?: number;\n    far?: number;\n}\n\n/**\n * Frustum object, part of the camera object.\n * @class\n * @param {*} options\n */\nclass Frustum {\n\n    protected _f: [NumberArray4, NumberArray4, NumberArray4, NumberArray4, NumberArray4, NumberArray4];\n\n    /**\n     * Camera projection matrix.\n     * @protected\n     * @type {Mat4}\n     */\n    public projectionMatrix: Mat4;\n\n    /**\n     * Camera inverse projection matrix.\n     * @protected\n     * @type {Mat4}\n     */\n    public inverseProjectionMatrix: Mat4;\n\n    /**\n     * Product of projection and view matrices.\n     * @protected\n     * @type {Mat4}\n     */\n    public projectionViewMatrix: Mat4;\n\n    /**\n     * Inverse projectionView Matrix.\n     * @protected\n     * @type {Mat4}\n     */\n    public inverseProjectionViewMatrix: Mat4;\n\n    /**\n     * Projection frustum left value.\n     * @public\n     */\n    public left: number;\n    /**\n     * Projection frustum right value.\n     * @public\n     */\n    public right: number;\n    /**\n     * Projection frustum bottom value.\n     * @public\n     */\n    public bottom: number;\n    /**\n     * Projection frustum top value.\n     * @public\n     */\n    public top: number;\n    /**\n     * Projection frustum near value.\n     * @public\n     */\n    public near: number;\n    /**\n     * Projection frustum far value.\n     * @public\n     */\n    public far: number;\n\n    public cameraFrustumIndex: number;\n\n    public _pickingColorU: Float32Array = new Float32Array([0, 0, 0]);\n\n    constructor(options: IFrustumParams = {}) {\n\n        this._f = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n\n        this.projectionMatrix = new Mat4();\n\n        this.inverseProjectionMatrix = new Mat4();\n\n        this.projectionViewMatrix = new Mat4();\n\n        this.inverseProjectionViewMatrix = new Mat4();\n\n        this.left = 0.0;\n\n        this.right = 0.0;\n\n        this.bottom = 0.0;\n\n        this.top = 0.0;\n\n        this.near = 0.0;\n\n        this.far = 0.0;\n\n        this.cameraFrustumIndex = options.cameraFrustumIndex != undefined ? options.cameraFrustumIndex : -1;\n\n        this.setProjectionMatrix(\n            options.fov || 30.0,\n            options.aspect || 1.0,\n            options.near || 1.0,\n            options.far || 1000.0\n        );\n    }\n\n    public getRightPlane(): NumberArray4 {\n        return this._f[0];\n    }\n\n    public getLeftPlane(): NumberArray4 {\n        return this._f[1];\n    }\n\n    public getBottomPlane(): NumberArray4 {\n        return this._f[2];\n    }\n\n    public getTopPlane(): NumberArray4 {\n        return this._f[3];\n    }\n\n    public getBackwardPlane(): NumberArray4 {\n        return this._f[4];\n    }\n\n    public getForwardPlane(): NumberArray4 {\n        return this._f[5];\n    }\n\n    public getProjectionViewMatrix(): NumberArray16 {\n        return this.projectionViewMatrix._m;\n    }\n\n    public getProjectionMatrix(): NumberArray16 {\n        return this.projectionMatrix._m;\n    }\n\n    public getInverseProjectionMatrix(): NumberArray16 {\n        return this.inverseProjectionMatrix._m;\n    }\n\n    /**\n     * Sets up camera projection matrix.\n     * @public\n     * @param {number} angle - Camera's view angle.\n     * @param {number} aspect - Screen aspect ration.\n     * @param {number} near - Near camera distance.\n     * @param {number} far - Far camera distance.\n     */\n    public setProjectionMatrix(angle: number, aspect: number, near: number, far: number) {\n        this.top = near * Math.tan((angle * Math.PI) / 360);\n        this.bottom = -this.top;\n        this.right = this.top * aspect;\n        this.left = -this.right;\n        this.near = near;\n        this.far = far;\n\n        this.projectionMatrix.setPerspective(\n            this.left,\n            this.right,\n            this.bottom,\n            this.top,\n            near,\n            far\n        );\n        this.projectionMatrix.inverseTo(this.inverseProjectionMatrix);\n    }\n\n    /**\n     * Camera's projection matrix values.\n     * @public\n     * @param {Mat4} viewMatrix - View matrix.\n     */\n    public setViewMatrix(viewMatrix: Mat4) {\n        this.projectionViewMatrix = this.projectionMatrix.mul(viewMatrix);\n        this.projectionViewMatrix.inverseTo(this.inverseProjectionViewMatrix);\n\n        let m = this.projectionViewMatrix._m;\n\n        /* Right */\n        this._f[0][0] = m[3] - m[0];\n        this._f[0][1] = m[7] - m[4];\n        this._f[0][2] = m[11] - m[8];\n        this._f[0][3] = m[15] - m[12];\n        planeNormalize(this._f[0]);\n\n        /* Left */\n        this._f[1][0] = m[3] + m[0];\n        this._f[1][1] = m[7] + m[4];\n        this._f[1][2] = m[11] + m[8];\n        this._f[1][3] = m[15] + m[12];\n        planeNormalize(this._f[1]);\n\n        /* Bottom */\n        this._f[2][0] = m[3] + m[1];\n        this._f[2][1] = m[7] + m[5];\n        this._f[2][2] = m[11] + m[9];\n        this._f[2][3] = m[15] + m[13];\n        planeNormalize(this._f[2]);\n\n        /* Top */\n        this._f[3][0] = m[3] - m[1];\n        this._f[3][1] = m[7] - m[5];\n        this._f[3][2] = m[11] - m[9];\n        this._f[3][3] = m[15] - m[13];\n        planeNormalize(this._f[3]);\n\n        /* Backward */\n        this._f[4][0] = m[3] - m[2];\n        this._f[4][1] = m[7] - m[6];\n        this._f[4][2] = m[11] - m[10];\n        this._f[4][3] = m[15] - m[14];\n        planeNormalize(this._f[4]);\n\n        /* Forward */\n        this._f[5][0] = m[3] + m[2];\n        this._f[5][1] = m[7] + m[6];\n        this._f[5][2] = m[11] + m[10];\n        this._f[5][3] = m[15] + m[14];\n        planeNormalize(this._f[5]);\n    }\n\n    /**\n     * Returns true if a point in the frustum.\n     * @public\n     * @param {Vec3} point - Cartesian point.\n     * @returns {boolean} -\n     */\n    public containsPoint(point: Vec3): boolean {\n        for (let p = 0; p < 6; p++) {\n            let d = point.dotArr(this._f[p]) + this._f[p][3];\n            if (d <= 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Returns true if the frustum contains a bonding sphere, but bottom plane exclude.\n     * @public\n     * @param {Sphere} sphere - Bounding sphere.\n     * @returns {boolean} -\n     */\n    public containsSphereBottomExc(sphere: Sphere): boolean {\n        let r = -sphere.radius,\n            f = this._f;\n        if (sphere.center.dotArr(f[0]) + f[0][3] <= r) return false;\n        if (sphere.center.dotArr(f[1]) + f[1][3] <= r) return false;\n        if (sphere.center.dotArr(f[3]) + f[3][3] <= r) return false;\n        if (sphere.center.dotArr(f[4]) + f[4][3] <= r) return false;\n        if (sphere.center.dotArr(f[5]) + f[5][3] <= r) return false;\n        return true;\n    }\n\n    public containsSphereButtom(sphere: Sphere): boolean {\n        let r = -sphere.radius,\n            f = this._f;\n        if (sphere.center.dotArr(f[2]) + f[2][3] <= r)\n            return false;\n        return true;\n    }\n\n    /**\n     * Returns true if the frustum contains a bonding sphere.\n     * @public\n     * @param {Sphere} sphere - Bounding sphere.\n     * @returns {boolean} -\n     */\n    public containsSphere(sphere: Sphere): boolean {\n        let r = -sphere.radius,\n            f = this._f;\n        if (sphere.center.dotArr(f[0]) + f[0][3] <= r) return false;\n        if (sphere.center.dotArr(f[1]) + f[1][3] <= r) return false;\n        if (sphere.center.dotArr(f[2]) + f[2][3] <= r) return false;\n        if (sphere.center.dotArr(f[3]) + f[3][3] <= r) return false;\n        if (sphere.center.dotArr(f[4]) + f[4][3] <= r) return false;\n        if (sphere.center.dotArr(f[5]) + f[5][3] <= r) return false;\n        return true;\n    }\n\n    /**\n     * Returns true if the frustum contains a bonding sphere.\n     * @public\n     * @param {Vec3} center - Sphere center.\n     * @param {number} radius - Sphere radius.\n     * @returns {boolean} -\n     */\n    public containsSphere2(center: Vec3, radius: number): boolean {\n        let r = -radius;\n        if (center.dotArr(this._f[0]) + this._f[0][3] <= r) return false;\n        if (center.dotArr(this._f[1]) + this._f[1][3] <= r) return false;\n        if (center.dotArr(this._f[2]) + this._f[2][3] <= r) return false;\n        if (center.dotArr(this._f[3]) + this._f[3][3] <= r) return false;\n        if (center.dotArr(this._f[4]) + this._f[4][3] <= r) return false;\n        if (center.dotArr(this._f[5]) + this._f[5][3] <= r) return false;\n        return true;\n    }\n\n    /**\n     * Returns true if the frustum contains a bounding box.\n     * @public\n     * @param {Box} box - Bounding box.\n     * @returns {boolean} -\n     */\n    public containsBox(box: Box): boolean {\n        let result: boolean = true,\n            cout: number,\n            cin: number;\n\n        for (let i = 0; i < 6; i++) {\n            cout = 0;\n            cin = 0;\n            for (let k = 0; k < 8 && (cin === 0 || cout === 0); k++) {\n                let d = box.vertices[k].dotArr(this._f[i]) + this._f[i][3];\n                if (d < 0) {\n                    cout++;\n                } else {\n                    cin++;\n                }\n            }\n\n            if (cin === 0) {\n                return false;\n            } else if (cout > 0) {\n                result = true;\n            }\n        }\n\n        return result;\n    }\n}\n\nexport {Frustum};\n","import * as math from \"../math\";\nimport {Events, EventsHandler, createEvents} from \"../Events\";\nimport {Frustum} from \"./Frustum\";\nimport {Mat3, NumberArray9} from \"../math/Mat3\";\nimport {Mat4, NumberArray16} from \"../math/Mat4\";\nimport {Renderer} from \"../renderer/Renderer\";\nimport {Vec2, NumberArray2} from \"../math/Vec2\";\nimport {Vec3} from \"../math/Vec3\";\nimport {Vec4} from \"../math/Vec4\";\n\ntype CameraEvents = [\"viewchange\", \"moveend\"];\n\nconst EVENT_NAMES: CameraEvents = [\n    /**\n     * When camera has been updated.\n     * @event og.Camera#viewchange\n     */\n    \"viewchange\",\n\n    /**\n     * Camera is stopped.\n     * @event og.Camera#moveend\n     */\n    \"moveend\"\n];\n\nexport interface ICameraParams {\n    eye?: Vec3;\n    aspect?: number;\n    viewAngle?: number;\n    look?: Vec3;\n    up?: Vec3;\n    frustums?: NumberArray2[]\n}\n\n/**\n * Camera class.\n * @class\n * @param {Renderer} [renderer] - Renderer uses the camera instance.\n * @param {Object} [options] - Camera options:\n * @param {Object} [options.name] - Camera name.\n * @param {number} [options.viewAngle=47] - Camera angle of view. Default is 47.0\n * @param {number} [options.near=1] - Camera near plane distance. Default is 1.0\n * @param {number} [options.far=og.math.MAX] - Camera far plane distance. Default is og.math.MAX\n * @param {Vec3} [options.eye=[0,0,0]] - Camera eye position. Default (0,0,0)\n * @param {Vec3} [options.look=[0,0,0]] - Camera look position. Default (0,0,0)\n * @param {Vec3} [options.up=[0,1,0]] - Camera eye position. Default (0,1,0)\n *\n * @fires EventsHandler<CameraEvents>#viewchange\n * @fires EventsHandler<CameraEvents>#moveend\n */\nclass Camera {\n\n    /**\n     * Assigned renderer\n     * @public\n     * @type {Renderer}\n     */\n    public renderer: Renderer | null;\n\n    /**\n     * Camera events handler\n     * @public\n     * @type {Events}\n     */\n    public events: EventsHandler<CameraEvents>;\n\n    /**\n     * Camera position.\n     * @public\n     * @type {Vec3}\n     */\n    public eye: Vec3;\n\n    /**\n     * Camera RTE high position\n     * @public\n     * @type {Float32Array}\n     */\n    public eyeHigh: Float32Array;\n\n    /**\n     * Camera RTE low position\n     * @public\n     * @type {Float32Array}\n     */\n    public eyeLow: Float32Array;\n\n    /**\n     * Aspect ratio.\n     * @protected\n     * @type {Number}\n     */\n    protected _aspect: number;\n\n    /**\n     * Camera view angle in degrees\n     * @protected\n     * @type {Number}\n     */\n    protected _viewAngle: number;\n\n    /**\n     * Camera view matrix.\n     * @protected\n     * @type {Mat4}\n     */\n    protected _viewMatrix: Mat4;\n\n    /**\n     * Camera normal matrix.\n     * @protected\n     * @type {Mat3}\n     */\n    protected _normalMatrix: Mat3;\n\n    /**\n     * Camera right vector.\n     * @public\n     * @type {Vec3}\n     */\n    public _r: Vec3;\n\n    /**\n     * Camera up vector.\n     * @public\n     * @type {Vec3}\n     */\n    public _u: Vec3;\n\n    /**\n     * Camera backward vector.\n     * @public\n     * @type {Vec3}\n     */\n    public _b: Vec3;\n\n    protected _pr: Vec3;\n    protected _pu: Vec3;\n    protected _pb: Vec3;\n    protected _peye: Vec3;\n\n    public isMoving: boolean;\n\n    protected _tanViewAngle_hrad: number;\n\n    public _tanViewAngle_hradOneByHeight: number;\n\n    protected _projSizeConst: number;\n\n    public frustums: Frustum[];\n\n    public frustumColors: number[];\n\n    public FARTHEST_FRUSTUM_INDEX: number;\n\n    public currentFrustumIndex: number;\n\n    public isFirstPass: boolean;\n\n    constructor(renderer: Renderer | null, options: ICameraParams = {}) {\n        this.renderer = renderer;\n\n        this.events = createEvents<CameraEvents>(EVENT_NAMES, this);\n\n        this.eye = options.eye || new Vec3();\n\n        this.eyeHigh = new Float32Array(3);\n\n        this.eyeLow = new Float32Array(3);\n\n        this._aspect = options.aspect || 1.0;\n\n        this._viewAngle = options.viewAngle || 47.0;\n\n        this._viewMatrix = new Mat4();\n\n        this._normalMatrix = new Mat3();\n\n        this._r = new Vec3(1.0, 0.0, 0.0);\n\n        this._u = new Vec3(0.0, 1.0, 0.0);\n\n        this._b = new Vec3(0.0, 0.0, 1.0);\n\n        // Previous frame values\n        this._pr = this._r.clone();\n        this._pu = this._u.clone();\n        this._pb = this._b.clone();\n        this._peye = this.eye.clone();\n        this.isMoving = false;\n\n        this._tanViewAngle_hrad = 0.0;\n        this._tanViewAngle_hradOneByHeight = 0.0;\n\n        this.frustums = [];\n\n        this.frustumColors = [];\n\n        if (options.frustums) {\n            for (let i = 0, len = options.frustums.length; i < len; i++) {\n                let fi = options.frustums[i];\n\n                let fr = new Frustum({\n                    fov: this._viewAngle,\n                    aspect: this._aspect,\n                    near: fi[0],\n                    far: fi[1]\n                });\n\n                fr.cameraFrustumIndex = this.frustums.length;\n                this.frustums.push(fr);\n                //this.frustumColors.push.apply(this.frustumColors, fr._pickingColorU);\n                this.frustumColors.push(fr._pickingColorU[0], fr._pickingColorU[1], fr._pickingColorU[2]);\n            }\n        } else {\n            let near = 1.0,\n                far = 10000.0;\n\n            let fr = new Frustum({\n                fov: this._viewAngle,\n                aspect: this._aspect,\n                near: near,\n                far: far\n            });\n\n            fr.cameraFrustumIndex = this.frustums.length;\n            this.frustums.push(fr);\n            //this.frustumColors.push.apply(this.frustumColors, fr._pickingColorU);\n            this.frustumColors.push(fr._pickingColorU[0], fr._pickingColorU[1], fr._pickingColorU[2]);\n        }\n\n        this.FARTHEST_FRUSTUM_INDEX = this.frustums.length - 1;\n\n        this.currentFrustumIndex = 0;\n\n        this.isFirstPass = false;\n\n        this._projSizeConst = 0;\n\n        this.set(\n            options.eye || new Vec3(0.0, 0.0, 1.0),\n            options.look || new Vec3(),\n            options.up || new Vec3(0.0, 1.0, 0.0)\n        );\n    }\n\n    public checkMoveEnd() {\n        let r = this._r,\n            u = this._u,\n            b = this._b,\n            eye = this.eye;\n\n        if (this._peye.equal(eye) && this._pr.equal(r) && this._pu.equal(u) && this._pb.equal(b)) {\n            if (this.isMoving) {\n                this.events.dispatch(this.events.moveend, this);\n            }\n            this.isMoving = false;\n        } else {\n            this.isMoving = true;\n        }\n\n        this._pr.copy(r);\n        this._pu.copy(u);\n        this._pb.copy(b);\n        this._peye.copy(eye);\n    }\n\n    public bindRenderer(renderer: Renderer) {\n        this.renderer = renderer;\n        for (let i = 0; i < this.frustums.length; i++) {\n            this.renderer.assignPickingColor<Frustum>(this.frustums[i]);\n        }\n        this._aspect = this.renderer.handler.getClientAspect();\n\n        this._setProj(this._viewAngle, this._aspect);\n    }\n\n    /**\n     * Camera initialization.\n     * @public\n     * @param {Object} [options] - Camera options:\n     * @param {number} [options.viewAngle] - Camera angle of view.\n     * @param {number} [options.near] - Camera near plane distance. Default is 1.0\n     * @param {number} [options.far] - Camera far plane distance. Default is math.MAX\n     * @param {Vec3} [options.eye] - Camera eye position. Default (0,0,0)\n     * @param {Vec3} [options.look] - Camera look position. Default (0,0,0)\n     * @param {Vec3} [options.up] - Camera eye position. Default (0,1,0)\n     */\n    protected _init(options: ICameraParams) {\n\n        this._setProj(this._viewAngle, this._aspect);\n\n        this.set(\n            options.eye || new Vec3(0.0, 0.0, 1.0),\n            options.look || new Vec3(),\n            options.up || new Vec3(0.0, 1.0, 0.0)\n        );\n    }\n\n    public getUp(): Vec3 {\n        return this._u.clone();\n    }\n\n    public getDown(): Vec3 {\n        return this._u.negateTo();\n    }\n\n    public getRight(): Vec3 {\n        return this._r.clone();\n    }\n\n    public getLeft(): Vec3 {\n        return this._r.negateTo();\n    }\n\n    public getForward(): Vec3 {\n        return this._b.negateTo();\n    }\n\n    public getBackward(): Vec3 {\n        return this._b.clone();\n    }\n\n    /**\n     * Updates camera view space\n     * @public\n     * @virtual\n     */\n    public update() {\n        let u = this._r,\n            v = this._u,\n            n = this._b,\n            eye = this.eye;\n\n        Vec3.doubleToTwoFloat32Array(eye, this.eyeHigh, this.eyeLow);\n\n        this._viewMatrix.set([\n            u.x, v.x, n.x, 0.0,\n            u.y, v.y, n.y, 0.0,\n            u.z, v.z, n.z, 0.0,\n            -eye.dot(u), -eye.dot(v), -eye.dot(n), 1.0\n        ]);\n\n        // do not clean up, someday it will be using\n        //this._normalMatrix = this._viewMatrix.toMatrix3(); // this._viewMatrix.toInverseMatrix3().transposeTo();\n\n        for (let i = 0, len = this.frustums.length; i < len; i++) {\n            this.frustums[i].setViewMatrix(this._viewMatrix);\n        }\n\n        this.events.dispatch(this.events.viewchange, this);\n    }\n\n    /**\n     * Refresh camera matrices\n     * @public\n     */\n    public refresh() {\n        this._setProj(this._viewAngle, this._aspect);\n        this.update();\n    }\n\n    /**\n     * Sets aspect ratio\n     * @public\n     * @param {Number} aspect - Camera aspect ratio\n     */\n    public setAspectRatio(aspect: number) {\n        this._aspect = aspect;\n        this.refresh();\n    }\n\n    /**\n     * Returns aspect ratio\n     * @public\n     * @returns {number} - Aspect ratio\n     */\n    public getAspectRatio(): number {\n        return this._aspect;\n    }\n\n    /**\n     * Sets up camera projection\n     * @public\n     * @param {number} angle - Camera view angle\n     * @param {number} aspect - Screen aspect ratio\n     */\n    protected _setProj(angle: number, aspect: number) {\n        this._viewAngle = angle;\n        this._aspect = aspect;\n        this._tanViewAngle_hrad = Math.tan(angle * math.RADIANS_HALF);\n        this._tanViewAngle_hradOneByHeight =\n            this._tanViewAngle_hrad * this.renderer!.handler._oneByHeight;\n        let c = this.renderer!.handler.canvas!;\n        this._projSizeConst = Math.min(c.clientWidth < 512 ? 512 : c.clientWidth, c.clientHeight < 512 ? 512 : c.clientHeight) / (angle * math.RADIANS);\n        for (let i = 0, len = this.frustums.length; i < len; i++) {\n            this.frustums[i].setProjectionMatrix(\n                angle,\n                aspect,\n                this.frustums[i].near,\n                this.frustums[i].far\n            );\n        }\n    }\n\n    /**\n     * Sets camera view angle in degrees\n     * @public\n     * @param {number} angle - View angle\n     */\n    public setViewAngle(angle: number) {\n        this._viewAngle = angle;\n        this.refresh();\n    }\n\n    /**\n     * Gets camera view angle in degrees\n     * @public\n     * @returns {number} angle -\n     */\n    public getViewAngle(): number {\n        return this._viewAngle;\n    }\n\n    public get viewAngle(): number {\n        return this._viewAngle;\n    }\n\n    /**\n     * Sets camera to eye position\n     * @public\n     * @param {Vec3} eye - Camera position\n     * @param {Vec3} look - Look point\n     * @param {Vec3} up - Camera up vector\n     * @returns {Camera} - This camera\n     */\n    public set(eye: Vec3, look?: Vec3, up?: Vec3): this {\n        this.eye.x = eye.x;\n        this.eye.y = eye.y;\n        this.eye.z = eye.z;\n        look = look || this._b;\n        up = up || this._u;\n        this._b.x = eye.x - look.x;\n        this._b.y = eye.y - look.y;\n        this._b.z = eye.z - look.z;\n        this._r.copy(up.cross(this._b));\n        this._b.normalize();\n        this._r.normalize();\n        this._u.copy(this._b.cross(this._r));\n        return this;\n    }\n\n    /**\n     * Sets camera look point\n     * @public\n     * @param {Vec3} look - Look point\n     * @param {Vec3} [up] - Camera up vector otherwise camera current up vector(this._u)\n     */\n    public look(look: Vec3, up?: Vec3) {\n        this._b.set(this.eye.x - look.x, this.eye.y - look.y, this.eye.z - look.z);\n        this._r.copy((up || this._u).cross(this._b));\n        this._b.normalize();\n        this._r.normalize();\n        this._u.copy(this._b.cross(this._r));\n    }\n\n    /**\n     * Slides camera to vector d - (du, dv, dn)\n     * @public\n     * @param {number} du - delta X\n     * @param {number} dv - delta Y\n     * @param {number} dn - delta Z\n     */\n    public slide(du: number, dv: number, dn: number) {\n        this.eye.x += du * this._r.x + dv * this._u.x + dn * this._b.x;\n        this.eye.y += du * this._r.y + dv * this._u.y + dn * this._b.y;\n        this.eye.z += du * this._r.z + dv * this._u.z + dn * this._b.z;\n    }\n\n    /**\n     * Roll the camera to the angle in degrees\n     * @public\n     * @param {number} angle - Delta roll angle in degrees\n     */\n    public roll(angle: number) {\n        let cs = Math.cos(math.RADIANS * angle);\n        let sn = Math.sin(math.RADIANS * angle);\n        let t = this._r.clone();\n        this._r.set(\n            cs * t.x - sn * this._u.x,\n            cs * t.y - sn * this._u.y,\n            cs * t.z - sn * this._u.z\n        );\n        this._u.set(\n            sn * t.x + cs * this._u.x,\n            sn * t.y + cs * this._u.y,\n            sn * t.z + cs * this._u.z\n        );\n    }\n\n    /**\n     * Pitch the camera to the angle in degrees\n     * @public\n     * @param {number} angle - Delta pitch angle in degrees\n     */\n    public pitch(angle: number) {\n        let cs = Math.cos(math.RADIANS * angle);\n        let sn = Math.sin(math.RADIANS * angle);\n        let t = this._b.clone();\n        this._b.set(\n            cs * t.x - sn * this._u.x,\n            cs * t.y - sn * this._u.y,\n            cs * t.z - sn * this._u.z\n        );\n        this._u.set(\n            sn * t.x + cs * this._u.x,\n            sn * t.y + cs * this._u.y,\n            sn * t.z + cs * this._u.z\n        );\n    }\n\n    /**\n     * Yaw the camera to the angle in degrees\n     * @public\n     * @param {number} angle - Delta yaw angle in degrees\n     */\n    public yaw(angle: number) {\n        let cs = Math.cos(math.RADIANS * angle);\n        let sn = Math.sin(math.RADIANS * angle);\n        let t = this._r.clone();\n        this._r.set(\n            cs * t.x - sn * this._b.x,\n            cs * t.y - sn * this._b.y,\n            cs * t.z - sn * this._b.z\n        );\n        this._b.set(\n            sn * t.x + cs * this._b.x,\n            sn * t.y + cs * this._b.y,\n            sn * t.z + cs * this._b.z\n        );\n    }\n\n    /**\n     * Returns normal vector direction to the unprojected screen point from camera eye\n     * @public\n     * @param {number} x - Screen X coordinate\n     * @param {number} y - Screen Y coordinate\n     * @returns {Vec3} - Direction vector\n     */\n    public unproject(x: number, y: number) {\n        let c = this.renderer!.handler.canvas!,\n            w = c.width * 0.5,\n            h = c.height * 0.5;\n\n        let px = (x - w) / w,\n            py = -(y - h) / h;\n\n        let world1 = this.frustums[0].inverseProjectionViewMatrix.mulVec4(new Vec4(px, py, -1.0, 1.0)).affinity(),\n            world2 = this.frustums[0].inverseProjectionViewMatrix.mulVec4(new Vec4(px, py, 0.0, 1.0)).affinity();\n\n        return world2.subA(world1).toVec3().normalize();\n    }\n\n    /**\n     * Gets projected 3d point to the 2d screen coordinates\n     * @public\n     * @param {Vec3} v - Cartesian 3d coordinates\n     * @returns {Vec2} - Screen point coordinates\n     */\n    public project(v: Vec3): Vec2 {\n        let r = this.frustums[0].projectionViewMatrix.mulVec4(v.toVec4()),\n            c = this.renderer!.handler.canvas!;\n        return new Vec2((1 + r.x / r.w) * c.width * 0.5, (1 - r.y / r.w) * c.height * 0.5);\n    }\n\n    /**\n     * Rotates camera around center point\n     * @public\n     * @param {number} angle - Rotation angle in radians\n     * @param {boolean} [isArc] - If true camera up vector gets from current up vector every frame,\n     * otherwise up is always input parameter.\n     * @param {Vec3} [center] - Point that the camera rotates around\n     * @param {Vec3} [up] - Camera up vector\n     */\n    public rotateAround(angle: number, isArc?: boolean, center?: Vec3 | null, up?: Vec3 | null) {\n        center = center || Vec3.ZERO;\n        up = up || Vec3.UP;\n\n        let rot = new Mat4().setRotation(isArc ? this._u : up, angle);\n        let tr = new Mat4().setIdentity().translate(center);\n        let ntr = new Mat4().setIdentity().translate(center.negateTo());\n        let trm = tr.mul(rot).mul(ntr);\n\n        this.eye = trm.mulVec3(this.eye);\n        this._u = rot.mulVec3(this._u).normalize();\n        this._r = rot.mulVec3(this._r).normalize();\n        this._b = rot.mulVec3(this._b).normalize();\n    }\n\n    /**\n     * Rotates camera around center point by horizontal.\n     * @public\n     * @param {number} angle - Rotation angle in radians.\n     * @param {boolean} [isArc] - If true camera up vector gets from current up vector every frame,\n     * otherwise up is always input parameter.\n     * @param {Vec3} [center] - Point that the camera rotates around.\n     * @param {Vec3} [up] - Camera up vector.\n     */\n    public rotateHorizontal(angle: number, isArc?: boolean, center?: Vec3 | null, up?: Vec3 | null) {\n        this.rotateAround(angle, isArc, center, up);\n    }\n\n    /**\n     * Rotates camera around center point by vertical.\n     * @param {number} angle - Rotation angle in radians.\n     * @param {Vec3} [center] - Point that the camera rotates around.\n     */\n    public rotateVertical(angle: number, center?: Vec3) {\n        this.rotateAround(angle, false, center, this._r);\n    }\n\n    /**\n     * Gets 3d size factor. Uses in LOD distance calculation.\n     * @public\n     * @param {Vec3} p - Far point.\n     * @param {Vec3} r - Far point.\n     * @returns {number} - Size factor.\n     */\n    public projectedSize(p: Vec3, r: number): number {\n        return Math.atan(r / this.eye.distance(p)) * this._projSizeConst;\n    }\n\n    /**\n     * Returns model matrix.\n     * @public\n     * @returns {NumberArray16} - View matrix.\n     */\n    public getViewMatrix(): NumberArray16 {\n        return this._viewMatrix._m;\n    }\n\n    /**\n     * Returns normal matrix.\n     * @public\n     * @returns {NumberArray9} - Normal matrix.\n     */\n    public getNormalMatrix(): NumberArray9 {\n        return this._normalMatrix._m;\n    }\n\n    public setCurrentFrustum(k: number) {\n        this.currentFrustumIndex = k;\n        this.isFirstPass = k === this.FARTHEST_FRUSTUM_INDEX;\n    }\n\n    public getCurrentFrustum(): number {\n        return this.currentFrustumIndex;\n    }\n\n    public get frustum(): Frustum {\n        return this.frustums[this.currentFrustumIndex];\n    }\n\n    /**\n     * Returns projection matrix.\n     * @public\n     * @returns {Mat4} - Projection matrix.\n     */\n    public getProjectionMatrix(): NumberArray16 {\n        return this.frustum.projectionMatrix._m;\n    }\n\n    /**\n     * Returns projection and model matrix product.\n     * @public\n     * @return {Mat4} - Projection-view matrix.\n     */\n    public getProjectionViewMatrix(): NumberArray16 {\n        return this.frustum.projectionViewMatrix._m;\n    }\n\n    /**\n     * Returns inverse projection and model matrix product.\n     * @public\n     * @returns {Mat4} - Inverse projection-view matrix.\n     */\n    public getInverseProjectionViewMatrix(): NumberArray16 {\n        return this.frustum.inverseProjectionViewMatrix._m;\n    }\n\n    /**\n     * Returns inverse projection matrix.\n     * @public\n     * @returns {Mat4} - Inverse projection-view matrix.\n     */\n    public getInverseProjectionMatrix(): NumberArray16 {\n        return this.frustum.inverseProjectionMatrix._m;\n    }\n}\n\nexport {Camera};\n","import * as mercator from \"../mercator\";\nimport * as math from \"../math\";\nimport {Camera, ICameraParams} from \"./Camera\";\nimport {Key} from \"../Lock\";\nimport {LonLat} from \"../LonLat\";\nimport {Mat4} from \"../math/Mat4\";\nimport {Planet} from \"../scene/Planet\";\nimport {Quat} from \"../math/Quat\";\nimport {Ray} from \"../math/Ray\";\nimport {Vec3} from \"../math/Vec3\";\nimport {Extent} from \"../Extent\";\nimport {Segment} from \"../segment/Segment\";\n\ninterface IPlanetCameraParams extends ICameraParams {\n    minAltitude?: number;\n    maxAltitude?: number;\n}\n\ntype CameraFrame = {\n    eye: Vec3;\n    n: Vec3;\n    u: Vec3;\n    v: Vec3;\n}\n\n/**\n * Planet camera.\n * @class\n * @extends {Camera}\n * @param {Planet} planet - Planet render node.\n * @param {IPlanetCameraParams} [options] - Planet camera options:\n * @param {string} [options.name] - Camera name.\n * @param {number} [options.viewAngle] - Camera angle of view.\n * @param {number} [options.near] - Camera near plane distance. Default is 1.0\n * @param {number} [options.far] - Camera far plane distance. Default is og.math.MAX\n * @param {number} [options.minAltitude] - Minimal altitude for the camera. Default is 5\n * @param {number} [options.maxAltitude] - Maximal altitude for the camera. Default is 20000000\n * @param {Vec3} [options.eye] - Camera eye position. Default (0,0,0)\n * @param {Vec3} [options.look] - Camera look position. Default (0,0,0)\n * @param {Vec3} [options.up] - Camera eye position. Default (0,1,0)\n */\nclass PlanetCamera extends Camera {\n    /**\n     * Assigned camera's planet.\n     * @public\n     * @type {Planet}\n     */\n    public planet: Planet;\n\n    /**\n     * Minimal altitude that camera can reach over the terrain.\n     * @public\n     * @type {number}\n     */\n    public minAltitude: number;\n\n    /**\n     * Maximal altitude that camera can reach over the globe.\n     * @public\n     * @type {number}\n     */\n    public maxAltitude: number;\n\n    /**\n     * Current geographical degree position.\n     * @public\n     * @type {LonLat}\n     */\n    public _lonLat: LonLat;\n\n    /**\n     * Current geographical mercator position.\n     * @public\n     * @type {LonLat}\n     */\n    public _lonLatMerc: LonLat;\n\n    /**\n     * Current altitude.\n     * @protected\n     * @type {number}\n     */\n    protected _terrainAltitude: number;\n\n    /**\n     * Cartesian coordinates on the terrain.\n     * @protected\n     * @type {Vec3}\n     */\n    protected _terrainPoint: Vec3;\n\n    /**\n     * Quad node that camera flies over.\n     * @protected\n     * @type {Segment}\n     */\n\n    public _insideSegment: Segment | null;\n\n    public slope: number;\n\n    protected _keyLock: Key;\n    protected _framesArr: CameraFrame[];\n    protected _framesCounter: number;\n    protected _numFrames: number;\n    protected _completeCallback: Function | null;\n    protected _frameCallback: Function | null;\n\n    protected _flying: boolean;\n    protected _checkTerrainCollision: boolean;\n\n    public eyeNorm: Vec3;\n\n    constructor(planet: Planet, options: IPlanetCameraParams = {}) {\n        super(planet.renderer, {\n                ...options,\n                frustums: options.frustums || [[1, 100 + 0.075], [100, 1000 + 0.075], [1000, 1e6 + 10000], [1e6, 1e9]],\n            }\n        );\n\n        this.planet = planet;\n\n        this.minAltitude = options.minAltitude || 1;\n\n        this.maxAltitude = options.maxAltitude || 20000000;\n\n        this._lonLat = this.planet.ellipsoid.cartesianToLonLat(this.eye);\n\n        this._lonLatMerc = this._lonLat.forwardMercator();\n\n        this._terrainAltitude = this._lonLat.height;\n\n        this._terrainPoint = new Vec3();\n\n        this._insideSegment = null;\n\n        this.slope = 0;\n\n        this._keyLock = new Key();\n\n        this._framesArr = [];\n        this._framesCounter = 0;\n        this._numFrames = 50;\n        this._completeCallback = null;\n        this._frameCallback = null;\n        this._flying = false;\n        this._checkTerrainCollision = true;\n\n        this.eyeNorm = this.eye.getNormal();\n    }\n\n    public setTerrainCollisionActivity(isActive: boolean) {\n        this._checkTerrainCollision = isActive;\n    }\n\n    /**\n     * Updates camera view space.\n     * @public\n     * @virtual\n     */\n    public override update() {\n        this.events.stopPropagation();\n\n        let maxAlt = this.maxAltitude + this.planet.ellipsoid.getEquatorialSize();\n\n        if (this.eye.length() > maxAlt) {\n            this.eye.copy(this.eye.getNormal().scale(maxAlt));\n        }\n\n        super.update();\n\n        this.updateGeodeticPosition();\n\n        this.eyeNorm = this.eye.getNormal();\n        this.slope = this._b.dot(this.eyeNorm);\n\n        this.events.dispatch(this.events.viewchange, this);\n    }\n\n    public updateGeodeticPosition() {\n        this.planet.ellipsoid.cartesianToLonLatRes(this.eye, this._lonLat);\n        if (Math.abs(this._lonLat.lat) <= mercator.MAX_LAT) {\n            LonLat.forwardMercatorRes(this._lonLat, this._lonLatMerc);\n        }\n    }\n\n    /**\n     * Sets altitude over the terrain.\n     * @public\n     * @param {number} alt - Altitude over the terrain.\n     */\n    public setAltitude(alt: number) {\n\n        let t = this._terrainPoint;\n        let n = this.planet.ellipsoid.getSurfaceNormal3v(this.eye);\n\n        this.eye.x = n.x * alt + t.x;\n        this.eye.y = n.y * alt + t.y;\n        this.eye.z = n.z * alt + t.z;\n\n        this._terrainAltitude = alt;\n    }\n\n    /**\n     * Gets altitude over the terrain.\n     * @public\n     */\n    public getAltitude(): number {\n        return this._terrainAltitude;\n    }\n\n    /**\n     * Places camera to view to the geographical point.\n     * @public\n     * @param {LonLat} lonlat - New camera and camera view position.\n     * @param {LonLat} [lookLonLat] - Look up coordinates.\n     * @param {Vec3} [up] - Camera UP vector. Default (0,1,0)\n     */\n    public setLonLat(lonlat: LonLat, lookLonLat?: LonLat, up?: Vec3) {\n        this.stopFlying();\n        this._lonLat.set(lonlat.lon, lonlat.lat, lonlat.height || this._lonLat.height);\n        let el = this.planet.ellipsoid;\n        let newEye = el.lonLatToCartesian(this._lonLat);\n        let newLook = lookLonLat ? el.lonLatToCartesian(lookLonLat) : Vec3.ZERO;\n        this.set(newEye, newLook, up || Vec3.NORTH);\n        this.update();\n    }\n\n    /**\n     * Returns camera geographical position.\n     * @public\n     * @returns {LonLat}\n     */\n    public getLonLat(): LonLat {\n        return this._lonLat;\n    }\n\n    /**\n     * Returns camera height.\n     * @public\n     * @returns {number}\n     */\n    public getHeight(): number {\n        return this._lonLat.height;\n    }\n\n    /**\n     * Gets position by viewable extent.\n     * @public\n     * @param {Extent} extent - Viewable extent.\n     * @param {Number} height - Camera height\n     * @returns {Vec3}\n     */\n    public getExtentPosition(extent: Extent, height: number = 0): Vec3 {\n        let north = extent.getNorth();\n        let south = extent.getSouth();\n        let east = extent.getEast();\n        let west = extent.getWest();\n\n        if (west > east) {\n            east += 360;\n        }\n\n        let e = this.planet.ellipsoid;\n\n        let cart = new LonLat(east, north);\n        let northEast = e.lonLatToCartesian(cart);\n        cart.lat = south;\n        let southEast = e.lonLatToCartesian(cart);\n        cart.lon = west;\n        let southWest = e.lonLatToCartesian(cart);\n        cart.lat = north;\n        let northWest = e.lonLatToCartesian(cart);\n\n        let center = Vec3.sub(northEast, southWest).scale(0.5).addA(southWest);\n\n        let mag = center.length();\n        if (mag < 0.000001) {\n            cart.lon = (east + west) * 0.5;\n            cart.lat = (north + south) * 0.5;\n            center = e.lonLatToCartesian(cart);\n        }\n\n        northWest.subA(center);\n        southEast.subA(center);\n        northEast.subA(center);\n        southWest.subA(center);\n\n        let direction = center.getNormal(); // ellipsoid.getSurfaceNormal(center).negate().normalize();\n        let right = direction.cross(Vec3.NORTH).normalize();\n        let up = right.cross(direction).normalize();\n\n        let _h = Math.max(\n            Math.abs(up.dot(northWest)),\n            Math.abs(up.dot(southEast)),\n            Math.abs(up.dot(northEast)),\n            Math.abs(up.dot(southWest))\n        );\n\n        let _w = Math.max(\n            Math.abs(right.dot(northWest)),\n            Math.abs(right.dot(southEast)),\n            Math.abs(right.dot(northEast)),\n            Math.abs(right.dot(southWest))\n        );\n\n        let tanPhi = Math.tan(this._viewAngle * math.RADIANS * 0.5);\n        let tanTheta = this._aspect * tanPhi;\n        let d = Math.max(_w / tanTheta, _h / tanPhi);\n\n        center.normalize();\n        center.scale(mag + d + height);\n\n        return center;\n    }\n\n    /**\n     * View current extent.\n     * @public\n     * @param {Extent} extent - Current extent.\n     * @param {number} [height]\n     */\n    public viewExtent(extent: Extent, height?: number) {\n        this.stopFlying();\n        this.set(this.getExtentPosition(extent, height), Vec3.ZERO, Vec3.NORTH);\n        this.update();\n    }\n\n    /**\n     * Flies to the current extent.\n     * @public\n     * @param {Extent} extent - Current extent.\n     * @param {number} [height] - Destination height.\n     * @param {Vec3} [up] - Camera UP in the end of flying. Default - (0,1,0)\n     * @param {Number} [ampl] - Altitude amplitude factor.\n     * @param {Function} [completeCallback] - Callback that calls after flying when flying is finished.\n     * @param {Function} [startCallback] - Callback that calls before the flying begins.\n     * @param {Function} [frameCallback] - Each frame callback\n     */\n    public flyExtent(\n        extent: Extent,\n        height?: number,\n        up?: Vec3,\n        ampl?: number,\n        completeCallback?: Function,\n        startCallback?: Function,\n        frameCallback?: Function) {\n        this.flyCartesian(\n            this.getExtentPosition(extent, height),\n            Vec3.ZERO,\n            up,\n            ampl,\n            completeCallback,\n            startCallback,\n            frameCallback\n        );\n    }\n\n    public viewDistance(cartesian: Vec3, distance: number = 10000.0) {\n        let p0 = this.eye.add(this.getForward().scaleTo(distance));\n        let _rot = Quat.getRotationBetweenVectors(p0.getNormal(), cartesian.getNormal());\n        if (_rot.isZero()) {\n            let newPos = cartesian.add(this.getBackward().scaleTo(distance));\n            this.set(newPos, cartesian);\n        } else {\n            let newPos = cartesian.add(_rot.mulVec3(this.getBackward()).scale(distance)),\n                newUp = _rot.mulVec3(this.getUp());\n            this.set(newPos, cartesian, newUp);\n        }\n        this.update();\n    }\n\n    public flyDistance(\n        cartesian: Vec3,\n        distance: number = 10000.0,\n        ampl: number = 0.0,\n        completeCallback?: Function,\n        startCallback?: Function,\n        frameCallback?: Function\n    ) {\n        let p0 = this.eye.add(this.getForward().scaleTo(distance));\n        let _rot = Quat.getRotationBetweenVectors(p0.getNormal(), cartesian.getNormal());\n        if (_rot.isZero()) {\n            let newPos = cartesian.add(this.getBackward().scaleTo(distance));\n            this.set(newPos, cartesian);\n        } else {\n            let newPos = cartesian.add(_rot.mulVec3(this.getBackward()).scale(distance)),\n                newUp = _rot.mulVec3(this.getUp());\n            this.flyCartesian(\n                newPos,\n                cartesian,\n                newUp,\n                ampl,\n                completeCallback,\n                startCallback,\n                frameCallback\n            );\n        }\n    }\n\n    /**\n     * Flies to the cartesian coordinates.\n     * @public\n     * @param {Vec3} cartesian - Finish cartesian coordinates.\n     * @param {Vec3} [look] - Camera LOOK in the end of flying. Default - (0,0,0)\n     * @param {Vec3} [up] - Camera UP vector in the end of flying. Default - (0,1,0)\n     * @param {Number} [ampl=1.0] - Altitude amplitude factor.\n     * @param {Function} [completeCallback] - Callback that calls after flying when flying is finished.\n     * @param {Function} [startCallback] - Callback that calls before the flying begins.\n     * @param {Function} [frameCallback] - Each frame callback\n     */\n    flyCartesian(\n        cartesian: Vec3,\n        look: Vec3 | LonLat | null = Vec3.ZERO,\n        up: Vec3 | null = Vec3.NORTH,\n        ampl: number = 1.0,\n        completeCallback: Function | null = () => {\n        },\n        startCallback: Function | null = () => {\n        },\n        frameCallback: Function | null = () => {\n        }) {\n\n        this.stopFlying();\n\n        look = look || Vec3.ZERO;\n        up = up || Vec3.NORTH;\n\n        this._completeCallback = completeCallback;\n\n        this._frameCallback = frameCallback;\n\n        if (startCallback) {\n            startCallback.call(this);\n        }\n\n        if (look instanceof LonLat) {\n            look = this.planet.ellipsoid.lonLatToCartesian(look);\n        }\n\n        let ground_a = this.planet.ellipsoid.lonLatToCartesian(\n            new LonLat(this._lonLat.lon, this._lonLat.lat)\n        );\n\n        let v_a = this._u,\n            n_a = this._b;\n\n        let lonlat_b = this.planet.ellipsoid.cartesianToLonLat(cartesian);\n        let up_b = up;\n        let ground_b = this.planet.ellipsoid.lonLatToCartesian(\n            new LonLat(lonlat_b.lon, lonlat_b.lat, 0)\n        );\n        let n_b = Vec3.sub(cartesian, look as Vec3);\n        let u_b = up_b.cross(n_b);\n        n_b.normalize();\n        u_b.normalize();\n        let v_b = n_b.cross(u_b);\n\n        let an = ground_a.getNormal();\n        let bn = ground_b.getNormal();\n        let anbn = 1.0 - an.dot(bn);\n        let hM_a = ampl * math.SQRT_HALF * Math.sqrt(anbn > 0.0 ? anbn : 0.0);\n\n        let maxHeight = 6639613;\n        let currMaxHeight = Math.max(this._lonLat.height, lonlat_b.height);\n        if (currMaxHeight > maxHeight) {\n            maxHeight = currMaxHeight;\n        }\n        let max_h = currMaxHeight + 2.5 * hM_a * (maxHeight - currMaxHeight);\n        let zero = Vec3.ZERO;\n\n        // camera path and orientations calculation\n        for (let i = 0; i <= this._numFrames; i++) {\n            let d = 1 - i / this._numFrames;\n            d = d * d * (3 - 2 * d);\n            d *= d;\n\n            let g_i = ground_a.smerp(ground_b, d).normalize();\n            let ground_i = this.planet.getRayIntersectionEllipsoid(new Ray(zero, g_i));\n            let t = 1 - d;\n            let height_i =\n                this._lonLat.height * d * d * d +\n                max_h * 3 * d * d * t +\n                max_h * 3 * d * t * t +\n                lonlat_b.height * t * t * t;\n\n            let eye_i = ground_i!.addA(g_i.scale(height_i));\n            let up_i = v_a.smerp(v_b, d);\n            let look_i = Vec3.add(eye_i, n_a.smerp(n_b, d).negateTo());\n\n            let n = new Vec3(eye_i.x - look_i.x, eye_i.y - look_i.y, eye_i.z - look_i.z);\n            let u = up_i.cross(n);\n            n.normalize();\n            u.normalize();\n\n            let v = n.cross(u);\n            this._framesArr[i] = {\n                eye: eye_i,\n                n: n,\n                u: u,\n                v: v\n            };\n        }\n\n        this._framesCounter = this._numFrames;\n        this._flying = true;\n    }\n\n    /**\n     * Flies to the geo coordinates.\n     * @public\n     * @param {LonLat} lonlat - Finish coordinates.\n     * @param {Vec3 | LonLat} [look] - Camera LOOK in the end of flying. Default - (0,0,0)\n     * @param {Vec3} [up] - Camera UP vector in the end of flying. Default - (0,1,0)\n     * @param {number} [ampl] - Altitude amplitude factor.\n     * @param {Function} [completeCallback] - Callback that calls after flying when flying is finished.\n     * @param {Function} [startCallback] - Callback that calls befor the flying begins.\n     * @param {Function} [frameCallback] - each frame callback\n     */\n    flyLonLat(\n        lonlat: LonLat,\n        look?: Vec3 | LonLat,\n        up?: Vec3,\n        ampl?: number,\n        completeCallback?: Function,\n        startCallback?: Function,\n        frameCallbak?: Function\n    ) {\n        let _lonLat = new LonLat(lonlat.lon, lonlat.lat, lonlat.height || this._lonLat.height);\n        this.flyCartesian(\n            this.planet.ellipsoid.lonLatToCartesian(_lonLat),\n            look,\n            up,\n            ampl,\n            completeCallback,\n            startCallback,\n            frameCallbak\n        );\n    }\n\n    /**\n     * Breaks the flight.\n     * @public\n     */\n    stopFlying() {\n        this.planet.layerLock.free(this._keyLock);\n        this.planet.terrainLock.free(this._keyLock);\n        this.planet.normalMapCreator.free(this._keyLock);\n\n        this._flying = false;\n        this._framesArr.length = 0;\n        this._framesArr = [];\n        this._framesCounter = -1;\n        this._frameCallback = null;\n    }\n\n    /**\n     * Returns camera is flying.\n     * @public\n     * @returns {boolean}\n     */\n    isFlying() {\n        return this._flying;\n    }\n\n    /**\n     * Rotates around planet to the left.\n     * @public\n     * @param {number} angle - Rotation angle.\n     * @param {boolean} [spin] - If its true rotates around globe spin.\n     */\n    public rotateLeft(angle: number, spin: boolean) {\n        this.rotateHorizontal(angle * math.RADIANS, spin !== true, Vec3.ZERO);\n        this.update();\n    }\n\n    /**\n     * Rotates around planet to the right.\n     * @public\n     * @param {number} angle - Rotation angle.\n     * @param {boolean} [spin] - If its true rotates around globe spin.\n     */\n    public rotateRight(angle: number, spin: boolean) {\n        this.rotateHorizontal(-angle * math.RADIANS, spin !== true, Vec3.ZERO);\n        this.update();\n    }\n\n    /**\n     * Rotates around planet to the North Pole.\n     * @public\n     * @param {number} angle - Rotation angle.\n     */\n    public rotateUp(angle: number) {\n        this.rotateVertical(angle * math.RADIANS, Vec3.ZERO);\n        this.update();\n    }\n\n    /**\n     * Rotates around planet to the South Pole.\n     * @public\n     * @param {number} angle - Rotation angle.\n     */\n    public rotateDown(angle: number) {\n        this.rotateVertical(-angle * math.RADIANS, Vec3.ZERO);\n        this.update();\n    }\n\n    public override rotateVertical(angle: number, center: Vec3, minSlope: number = 0) {\n        let rot = new Mat4().setRotation(this._r, angle);\n        let tr = new Mat4().setIdentity().translate(center);\n        let ntr = new Mat4().setIdentity().translate(center.negateTo());\n        let trm = tr.mul(rot).mul(ntr);\n\n        let eye = trm.mulVec3(this.eye);\n        let u = rot.mulVec3(this._u).normalize();\n        let r = rot.mulVec3(this._r).normalize();\n        let b = rot.mulVec3(this._b).normalize();\n\n        let eyeNorm = eye.getNormal();\n        let slope = b.dot(eyeNorm);\n\n        if (minSlope) {\n            let dSlope = slope - this.slope;\n\n            if (slope < minSlope && dSlope < 0) return;\n\n            if (\n                (slope > 0.1 && u.dot(eyeNorm) > 0) ||\n                this.slope <= 0.1 ||\n                this._u.dot(this.eye.getNormal()) <= 0.0\n            ) {\n                this.eye = eye;\n                this._u = u;\n                this._r = r;\n                this._b = b;\n            }\n        } else {\n            this.eye = eye;\n            this._u = u;\n            this._r = r;\n            this._b = b;\n        }\n    }\n\n    /**\n     * Prepare camera to the frame. Used in render node frame function.\n     * @public\n     */\n    public checkFly() {\n        if (this._flying) {\n            let c = this._numFrames - this._framesCounter;\n\n            this.planet.layerLock.lock(this._keyLock);\n            this.planet.terrainLock.lock(this._keyLock);\n            this.planet.normalMapCreator.lock(this._keyLock);\n\n            this.eye = this._framesArr[c].eye;\n            this._r = this._framesArr[c].u;\n            this._u = this._framesArr[c].v;\n            this._b = this._framesArr[c].n;\n\n            if (this._frameCallback) {\n                this._frameCallback();\n            }\n\n            this.update();\n\n            this._framesCounter--;\n\n            if (this._framesCounter < 0) {\n                this.stopFlying();\n                if (this._completeCallback) {\n                    this._completeCallback();\n                    this._completeCallback = null;\n                }\n            }\n        }\n    }\n\n    public checkTerrainCollision() {\n        this._terrainAltitude = this._lonLat.height;\n        if (this._insideSegment && this._insideSegment.planet) {\n            this._terrainAltitude = this._insideSegment.getTerrainPoint(\n                this.eye,\n                this._insideSegment.getInsideLonLat(this),\n                this._terrainPoint\n            );\n            if (this._terrainAltitude < this.minAltitude && this._checkTerrainCollision) {\n                this.setAltitude(this.minAltitude);\n            }\n            return this._terrainPoint;\n        }\n    }\n\n    public getSurfaceVisibleDistance(d: number): number {\n        let R = this.planet.ellipsoid.equatorialSize;\n        return R * Math.acos(R / (R + this._lonLat.height + d));\n    }\n\n    public getHeading(): number {\n        let u = this.eye.getNormal();\n        let f = Vec3.proj_b_to_plane(\n                this.slope >= 0.97 ? this.getUp() : this.getForward(),\n                u\n            ).normalize(),\n            n = Vec3.proj_b_to_plane(Vec3.NORTH, u).normalize();\n        let res = Math.sign(u.dot(f.cross(n))) * Math.acos(f.dot(n)) * math.DEGREES;\n        if (res < 0.0) {\n            return 360.0 + res;\n        }\n        return res;\n    }\n\n    public isVisible(poi: Vec3): boolean {\n        let e = this.eye.length();\n        return this.eye.distance(poi) < Math.sqrt(e * e - this.planet.ellipsoid.equatorialSizeSqr);\n    }\n\n    // _calcOrientation() {\n    //     let qq = Quat.yRotation(this.yaw * RADIANS).mul(this._qNorthFrame).conjugate();\n    //     this.orientation = qq.mulVec3(MODEL_FORWARD).normalize();\n    //     this._uOrientation[0] = this.orientation.x;\n    //     this._uOrientation[1] = this.orientation.y;\n    //     this._uOrientation[2] = this.orientation.z;\n    // }\n    //\n    // _updatePrediction(now) {\n    //\n    //     this._qNorthFrame = Planet.getBearingNorthRotationQuat(this.eye);\n    //\n    //     let dt = (now - this._positionTime) * 0.001;\n    //     this._positionTime = now;\n    //\n    //     this._predMapPosCart = this.eye.add(this._velCartesian.scaleTo(dt));\n    // }\n}\n\nexport {PlanetCamera};\n","// import { QueueArray } from '../QueueArray.js';\n\nimport {BaseWorker} from \"./BaseWorker\";\nimport {Segment} from \"../segment/Segment\";\nimport {NumberArray6} from \"../bv/Sphere\";\n\ninterface TerrainInfo {\n    segment: Segment;\n    elevations: Float32Array;\n}\n\nexport interface ITerrainWorkerData {\n    id: number;\n    normalMapNormals: Float32Array | null;\n    normalMapVertices: Float64Array | null;\n    normalMapVerticesHigh: Float32Array | null;\n    normalMapVerticesLow: Float32Array | null;\n    terrainVertices: Float64Array | null;\n    terrainVerticesHigh: Float32Array | null;\n    terrainVerticesLow: Float32Array | null;\n    noDataVertices: Uint8Array | null;\n    bounds: NumberArray6;\n}\n\ntype MessageEventExt = MessageEvent & {\n    data: ITerrainWorkerData\n}\n\nclass TerrainWorker extends BaseWorker<TerrainInfo> {\n    constructor(numWorkers: number = 2) {\n        super(numWorkers, TERRAIN_PROGRAM);\n    }\n\n    protected override _onMessage(e: MessageEventExt) {\n        this._source.get(e.data.id)!.segment._terrainWorkerCallback(e.data);\n        this._source.delete(e.data.id);\n\n        e.data.normalMapNormals = null;\n        e.data.normalMapVertices = null;\n        e.data.normalMapVerticesHigh = null;\n        e.data.normalMapVerticesLow = null;\n        e.data.terrainVertices = null;\n        e.data.terrainVerticesHigh = null;\n        e.data.terrainVerticesLow = null;\n    }\n\n    public override make(info: TerrainInfo) {\n        if (info.segment.plainReady && info.segment.terrainIsLoading) {\n\n            if (this._workerQueue.length) {\n\n                const w = this._workerQueue.pop()!;\n\n                this._source.set(this._sourceId, info);\n\n                let segment = info.segment;\n\n                w.postMessage({\n                    'elevations': info.elevations,\n                    'this_plainVertices': segment.plainVertices,\n                    'this_plainNormals': segment.plainNormals,\n                    'this_normalMapVertices': segment.normalMapVertices,\n                    'this_normalMapNormals': segment.normalMapNormals,\n                    'heightFactor': segment.planet._heightFactor,\n                    'gridSize': segment.planet.terrain!.gridSizeByZoom[segment.tileZoom],\n                    'noDataValues': segment.planet.terrain!.noDataValues,\n                    'id': this._sourceId\n                }, [\n                    info.elevations.buffer,\n                    segment.plainVertices!.buffer,\n                    segment.plainNormals!.buffer,\n                    segment.normalMapVertices!.buffer,\n                    segment.normalMapNormals!.buffer\n                ]);\n\n                this._sourceId++;\n\n            } else {\n                this._pendingQueue.push(info);\n            }\n        } else {\n            this.check();\n        }\n    }\n}\n\nconst TERRAIN_PROGRAM =\n    `'use strict';\n    //\n    //Terrain worker\n    //\n\n    function binarySearchFast(arr, x) {\n        let start = 0,\n            end = arr.length - 1;\n        while (start <= end) {\n            let k = Math.floor((start + end) * 0.5); \n            if (arr[k] === x)\n                return k;\n            else if (arr[k] < x)\n                start = k + 1;\n            else\n                end = k - 1;\n        }\n        return -1;\n    };\n\n    function checkNoDataValue(noDataValues, value) {\n        return binarySearchFast(noDataValues, value) !== -1;\n    };\n\n\n    var Vec3 = function(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    };\n\n    var doubleToTwoFloats = function(v, high, low) {\n\n        let x = v.x, y = v.y, z = v.z;\n    \n        if (x >= 0.0) {\n            var doubleHigh = Math.floor(x / 65536.0) * 65536.0;\n            high.x = Math.fround(doubleHigh);\n            low.x = Math.fround(x - doubleHigh);\n        } else {\n            var doubleHigh = Math.floor(-x / 65536.0) * 65536.0;\n            high.x = Math.fround(-doubleHigh);\n            low.x = Math.fround(x + doubleHigh);\n        }\n\n        if (y >= 0.0) {\n            var doubleHigh = Math.floor(y / 65536.0) * 65536.0;\n            high.y = Math.fround(doubleHigh);\n            low.y = Math.fround(y - doubleHigh);\n        } else {\n            var doubleHigh = Math.floor(-y / 65536.0) * 65536.0;\n            high.y = Math.fround(-doubleHigh);\n            low.y = Math.fround(y + doubleHigh);\n        }\n\n        if (z >= 0.0) {\n            var doubleHigh = Math.floor(z / 65536.0) * 65536.0;\n            high.z = Math.fround(doubleHigh);\n            low.z = Math.fround(z - doubleHigh);\n        } else {\n            var doubleHigh = Math.floor(-z / 65536.0) * 65536.0;\n            high.z = Math.fround(-doubleHigh);\n            low.z = Math.fround(z + doubleHigh);\n        }\n    };\n\n    Vec3.prototype.sub = function(v) {\n        return new Vec3(this.x - v.x, this.y - v.y, this.z - v.z);\n    };\n\n    Vec3.prototype.add = function(v) {\n        return new Vec3(this.x + v.x, this.y + v.y, this.z + v.z);\n    };\n\n    Vec3.prototype.cross = function(v) {\n        return new Vec3(\n            this.y * v.z - this.z * v.y,\n            this.z * v.x - this.x * v.z,\n            this.x * v.y - this.y * v.x\n        );\n    };\n\n    Vec3.prototype.normalize = function(v) {\n        var x = this.x, y = this.y, z = this.z;\n        var length = 1.0 / Math.sqrt(x * x + y * y + z * z);\n        this.x = x * length;\n        this.y = y * length;\n        this.z = z * length;\n        return this;\n    };\n\n    Vec3.prototype.distance = function(v) {\n        return this.sub(v).length();\n    };\n\n    Vec3.prototype.length = function () {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    };\n\n    var blerp = function(x, y, fQ11, fQ21, fQ12, fQ22) {\n        return (fQ11 * (1.0 - x) * (1.0 - y) + fQ21 * x * (1.0 - y) + fQ12 * (1.0 - x) * y + fQ22 * x * y);\n    };\n    \n    var slice = function (t, h1, h0) {\n      return t * (h1 - h0);\n    };\n\n    var _tempVec = new Vec3(0.0, 0.0, 0.0);\n\n    var _tempHigh = new Vec3(0.0, 0.0, 0.0),\n        _tempLow = new Vec3(0.0, 0.0, 0.0);\n\n    self.onmessage = function (e) {\n        var elevations = e.data.elevations,\n            this_plainVertices = e.data.this_plainVertices,\n            this_plainNormals = e.data.this_plainNormals,\n            this_normalMapVertices = e.data.this_normalMapVertices,\n            this_normalMapNormals = e.data.this_normalMapNormals,\n            heightFactor =  e.data.heightFactor,\n            gridSize = e.data.gridSize,\n            noDataValues = e.data.noDataValues,\n            id = e.data.id;\n        \n        var xmin = 549755748352.0, xmax = -549755748352.0, \n            ymin = 549755748352.0, ymax = -549755748352.0, \n            zmin = 549755748352.0, zmax = -549755748352.0;\n\n        const fileGridSize = Math.sqrt(elevations.length) - 1;\n\n        const fileGridSize_one = fileGridSize + 1;\n        const fileGridSize_one_x2 = fileGridSize_one * fileGridSize_one;\n        const tgs = gridSize;\n        const dg = fileGridSize / tgs;\n        const gs = tgs + 1;\n        const hf = heightFactor;\n\n        var nmvInd = 0,\n            vInd = 0,\n            noDataInd = 0;\n\n        var gsgs3 = gs * gs * 3;\n\n        var terrainVertices = new Float64Array(gsgs3),\n            terrainVerticesHigh = new Float32Array(gsgs3),\n            terrainVerticesLow = new Float32Array(gsgs3),\n            noDataVertices = new Uint8Array(gs * gs);\n\n        var normalMapNormals,\n            normalMapVertices,\n            normalMapVerticesHigh,\n            normalMapVerticesLow;\n\n        var nv = this_normalMapVertices,\n            nn = this_normalMapNormals;\n\n        if (fileGridSize >= tgs) {\n\n            normalMapNormals = new Float32Array(fileGridSize_one_x2 * 3);\n            normalMapVertices = new Float64Array(fileGridSize_one_x2 * 3);\n            normalMapVerticesHigh = new Float32Array(fileGridSize_one_x2 * 3);\n            normalMapVerticesLow = new Float32Array(fileGridSize_one_x2 * 3);\n\n            for (let k = 0; k < fileGridSize_one_x2; k++) {\n\n                var j = k % fileGridSize_one,\n                    i = ~~(k / fileGridSize_one);\n\n                //\n                // V0\n                //\n                var hInd0 = k;\n                var vInd0 = hInd0 * 3;\n                var currElv = elevations[hInd0];\n                if(checkNoDataValue(noDataValues, currElv)) {\n                    currElv = 0.0;\n                }\n                var h0 = hf * currElv;\n                var v0 = new Vec3(nv[vInd0] + h0 * nn[vInd0], nv[vInd0 + 1] + h0 * nn[vInd0 + 1], nv[vInd0 + 2] + h0 * nn[vInd0 + 2]);\n                                \n                doubleToTwoFloats(v0, _tempHigh, _tempLow);\n\n                normalMapVertices[vInd0] = v0.x;\n                normalMapVertices[vInd0 + 1] = v0.y;\n                normalMapVertices[vInd0 + 2] = v0.z;\n\n                normalMapVerticesHigh[vInd0] = _tempHigh.x;\n                normalMapVerticesHigh[vInd0 + 1] = _tempHigh.y;\n                normalMapVerticesHigh[vInd0 + 2] = _tempHigh.z;\n\n                normalMapVerticesLow[vInd0] = _tempLow.x;\n                normalMapVerticesLow[vInd0 + 1] = _tempLow.y;\n                normalMapVerticesLow[vInd0 + 2] = _tempLow.z;\n\n                //\n                // The vertex goes into screen buffer\n                if (i % dg === 0 && j % dg === 0) {\n\n                    let currVert = new Vec3(nv[vInd0], nv[vInd0 + 1], nv[vInd0 + 2]);\n                    let nextVert = new Vec3(nv[vInd0 + 3], nv[vInd0 + 4], nv[vInd0 + 5]);\n\n                    let nextElv =  elevations[hInd0 + 1];\n                    if(checkNoDataValue(noDataValues, nextElv)) {\n                        nextElv = 0.0;\n                    }\n                    \n                    let eps = false;\n                    if(noDataValues.length === 0){\n                        let step = currVert.distance(nextVert);\n                        let deltaElv = Math.abs(currElv - nextElv);\n                        eps = ((deltaElv / step) > 10.0) || (currElv < -5000);\n                    }\n\n                    if(eps){\n                        noDataVertices[noDataInd] = 1;\n                    } else {\n                        noDataVertices[noDataInd] = 0;\n                        if (v0.x < xmin) xmin = v0.x; if (v0.x > xmax) xmax = v0.x;\n                        if (v0.y < ymin) ymin = v0.y; if (v0.y > ymax) ymax = v0.y;\n                        if (v0.z < zmin) zmin = v0.z; if (v0.z > zmax) zmax = v0.z;\n                    }\n\n                    terrainVerticesHigh[vInd] = _tempHigh.x;\n                    terrainVerticesLow[vInd] = _tempLow.x;\n                    terrainVertices[vInd++] = v0.x;\n\n                    terrainVerticesHigh[vInd] = _tempHigh.y;\n                    terrainVerticesLow[vInd] = _tempLow.y;\n                    terrainVertices[vInd++] = v0.y;\n\n                    terrainVerticesHigh[vInd] = _tempHigh.z;\n                    terrainVerticesLow[vInd] = _tempLow.z;\n                    terrainVertices[vInd++] = v0.z;\n\n                    noDataInd++;\n                }\n\n                if (i !== fileGridSize && j !== fileGridSize) {\n\n                    //\n                    //  V1\n                    //\n                    var hInd1 = k + 1;\n                    var vInd1 = hInd1 * 3;\n                    var elv = elevations[hInd1];\n                    if(checkNoDataValue(noDataValues, elv)) {\n                        elv = 0.0;\n                    }\n                    var h1 = hf * elv;\n                    var v1 = new Vec3(nv[vInd1] + h1 * nn[vInd1], nv[vInd1 + 1] + h1 * nn[vInd1 + 1], nv[vInd1 + 2] + h1 * nn[vInd1 + 2]);\n\n                    doubleToTwoFloats(v1, _tempHigh, _tempLow);\n\n                    normalMapVertices[vInd1] = v1.x;\n                    normalMapVertices[vInd1 + 1] = v1.y;\n                    normalMapVertices[vInd1 + 2] = v1.z;\n\n                    normalMapVerticesHigh[vInd1] = _tempHigh.x;\n                    normalMapVerticesHigh[vInd1 + 1] = _tempHigh.y;\n                    normalMapVerticesHigh[vInd1 + 2] = _tempHigh.z;\n\n                    normalMapVerticesLow[vInd1] = _tempLow.x;\n                    normalMapVerticesLow[vInd1 + 1] = _tempLow.y;\n                    normalMapVerticesLow[vInd1 + 2] = _tempLow.z;\n\n                    //\n                    //  V2\n                    //\n                    var hInd2 = k + fileGridSize_one;\n                    var vInd2 = hInd2 * 3;\n                    var elv = elevations[hInd2];\n                    if(checkNoDataValue(noDataValues, elv)) {\n                        elv = 0.0;\n                    }\n                    var h2 = hf * elv;\n                    var v2 = new Vec3(nv[vInd2] + h2 * nn[vInd2], nv[vInd2 + 1] + h2 * nn[vInd2 + 1], nv[vInd2 + 2] + h2 * nn[vInd2 + 2]);\n\n                    doubleToTwoFloats(v2, _tempHigh, _tempLow);\n\n                    normalMapVertices[vInd2] = v2.x;\n                    normalMapVertices[vInd2 + 1] = v2.y;\n                    normalMapVertices[vInd2 + 2] = v2.z;\n\n                    normalMapVerticesHigh[vInd2] = _tempHigh.x;\n                    normalMapVerticesHigh[vInd2 + 1] = _tempHigh.y;\n                    normalMapVerticesHigh[vInd2 + 2] = _tempHigh.z;\n\n                    normalMapVerticesLow[vInd2] = _tempLow.x;\n                    normalMapVerticesLow[vInd2 + 1] = _tempLow.y;\n                    normalMapVerticesLow[vInd2 + 2] = _tempLow.z;\n\n                    //\n                    //  V3\n                    //\n                    var hInd3 = k + fileGridSize_one + 1;\n                    var vInd3 = hInd3 * 3;\n                    var elv = elevations[hInd3];\n                    if(checkNoDataValue(noDataValues, elv)) {\n                        elv = 0.0;\n                    }\n                    var h3 = hf * elv;\n                    var v3 = new Vec3(nv[vInd3] + h3 * nn[vInd3], nv[vInd3 + 1] + h3 * nn[vInd3 + 1], nv[vInd3 + 2] + h3 * nn[vInd3 + 2]);\n\n                    doubleToTwoFloats(v3, _tempHigh, _tempLow);\n\n                    normalMapVertices[vInd3] = v3.x;\n                    normalMapVertices[vInd3 + 1] = v3.y;\n                    normalMapVertices[vInd3 + 2] = v3.z;\n\n                    normalMapVerticesHigh[vInd3] = _tempHigh.x;\n                    normalMapVerticesHigh[vInd3 + 1] = _tempHigh.y;\n                    normalMapVerticesHigh[vInd3 + 2] = _tempHigh.z;\n\n                    normalMapVerticesLow[vInd3] = _tempLow.x;\n                    normalMapVerticesLow[vInd3 + 1] = _tempLow.y;\n                    normalMapVerticesLow[vInd3 + 2] = _tempLow.z;\n\n                    //\n                    // Normal\n                    //\n                    var e10 = v1.sub(v0),\n                        e20 = v2.sub(v0),\n                        e30 = v3.sub(v0);\n                    var sw = e20.cross(e30).normalize();\n                    var ne = e30.cross(e10).normalize();\n                    var n0 = ne.add(sw).normalize();\n\n                    normalMapNormals[vInd0] += n0.x;\n                    normalMapNormals[vInd0 + 1] += n0.y;\n                    normalMapNormals[vInd0 + 2] += n0.z;\n\n                    normalMapNormals[vInd1] += ne.x;\n                    normalMapNormals[vInd1 + 1] += ne.y;\n                    normalMapNormals[vInd1 + 2] += ne.z;\n\n                    normalMapNormals[vInd2] += sw.x;\n                    normalMapNormals[vInd2 + 1] += sw.y;\n                    normalMapNormals[vInd2 + 2] += sw.z;\n\n                    normalMapNormals[vInd3] += n0.x;\n                    normalMapNormals[vInd3 + 1] += n0.y;\n                    normalMapNormals[vInd3 + 2] += n0.z;\n                }\n            }\n\n        } else {\n\n            normalMapNormals = new Float32Array(gsgs3);\n            normalMapVertices = new Float64Array(gsgs3);\n            normalMapVerticesHigh = new Float32Array(gsgs3);\n            normalMapVerticesLow = new Float32Array(gsgs3);\n            normalMapNormals = new Float32Array(gsgs3);\n\n            var oneSize = tgs / fileGridSize;\n            var h, inside_i, inside_j, v_i, v_j;\n            var gsgs = gsgs3 / 3;\n            var fgsOne = fileGridSize + 1;\n\n            for(let i = 0; i < gsgs; i++) {\n                let ii = Math.floor(i / gs),\n                    ij = i % gs;\n              \n                let qii = ii % oneSize,\n                    qij = ij % oneSize;\n\n                let hlt_ind = Math.floor(ii / oneSize) * fgsOne + Math.floor(ij / oneSize);\n\n                if (ij === tgs) {\n                    hlt_ind -= 1;\n                    qij = oneSize;\n                }\n\n                if (ii === tgs) {\n                    hlt_ind -= fgsOne;\n                    qii = oneSize;\n                }\n\n                let hrt_ind = hlt_ind + 1,\n                    hlb_ind = hlt_ind + fgsOne,\n                    hrb_ind = hlb_ind + 1;\n\n                let h_lt = elevations[hlt_ind],\n                    h_rt = elevations[hrt_ind],\n                    h_lb = elevations[hlb_ind],\n                    h_rb = elevations[hrb_ind];\n\n                if(checkNoDataValue(noDataValues, h_lt)) {\n                    h_lt = 0.0;\n                }\n\n                if(checkNoDataValue(noDataValues, h_rt)) {\n                    h_rt = 0.0;\n                }\n\n                if(checkNoDataValue(noDataValues, h_lb)) {\n                    h_lb = 0.0;\n                }\n\n                if(checkNoDataValue(noDataValues, h_rb)) {\n                    h_rb = 0.0;\n                }\n\n                let hi = blerp(qij / oneSize, qii / oneSize, h_lt, h_rt, h_lb, h_rb);\n\n                let i3 = i * 3;\n\n                _tempVec.x = this_plainVertices[i3] + hi * this_plainNormals[i3],\n                _tempVec.y = this_plainVertices[i3 + 1] + hi * this_plainNormals[i3 + 1],\n                _tempVec.z = this_plainVertices[i3 + 2] + hi * this_plainNormals[i3 + 2];\n\n                doubleToTwoFloats(_tempVec, _tempHigh, _tempLow);\n\n                terrainVertices[i3] = _tempVec.x;\n                terrainVertices[i3 + 1] = _tempVec.y;\n                terrainVertices[i3 + 2] = _tempVec.z;\n\n                terrainVerticesHigh[i3] = _tempHigh.x;\n                terrainVerticesHigh[i3 + 1] = _tempHigh.y;\n                terrainVerticesHigh[i3 + 2] = _tempHigh.z;\n\n                terrainVerticesLow[i3] = _tempLow.x;\n                terrainVerticesLow[i3 + 1] = _tempLow.y;\n                terrainVerticesLow[i3 + 2] = _tempLow.z;\n\n                if (_tempVec.x < xmin) xmin = _tempVec.x; if (_tempVec.x > xmax) xmax = _tempVec.x;\n                if (_tempVec.y < ymin) ymin = _tempVec.y; if (_tempVec.y > ymax) ymax = _tempVec.y;\n                if (_tempVec.z < zmin) zmin = _tempVec.z; if (_tempVec.z > zmax) zmax = _tempVec.z;\n            }\n\n            normalMapVertices.set(terrainVertices);\n            normalMapVerticesHigh.set(terrainVerticesHigh);\n            normalMapVerticesLow.set(terrainVerticesLow);\n\n            for (let k = 0; k < gsgs; k++) {\n\n                var j = k % gs,\n                    i = ~~(k / gs);\n\n                if (i !== tgs && j !== tgs) {\n                    var v0ind = k * 3,\n                        v1ind = v0ind + 3,\n                        v2ind = v0ind + gs * 3,\n                        v3ind = v2ind + 3;\n\n\n                    var v0 = new Vec3(terrainVertices[v0ind], terrainVertices[v0ind + 1], terrainVertices[v0ind + 2]),\n                        v1 = new Vec3(terrainVertices[v1ind], terrainVertices[v1ind + 1], terrainVertices[v1ind + 2]),\n                        v2 = new Vec3(terrainVertices[v2ind], terrainVertices[v2ind + 1], terrainVertices[v2ind + 2]),\n                        v3 = new Vec3(terrainVertices[v3ind], terrainVertices[v3ind + 1], terrainVertices[v3ind + 2]);\n\n                    var e10 = v1.sub(v0).normalize(),\n                        e20 = v2.sub(v0).normalize(),\n                        e30 = v3.sub(v0).normalize();\n\n                    var sw = e20.cross(e30).normalize();\n                    var ne = e30.cross(e10).normalize();\n                    var n0 = ne.add(sw).normalize();\n\n                    normalMapNormals[v0ind] += n0.x;\n                    normalMapNormals[v0ind + 1] += n0.y;\n                    normalMapNormals[v0ind + 2] += n0.z;\n\n                    normalMapNormals[v1ind] += ne.x;\n                    normalMapNormals[v1ind + 1] += ne.y;\n                    normalMapNormals[v1ind + 2] += ne.z;\n\n                    normalMapNormals[v2ind] += sw.x;\n                    normalMapNormals[v2ind + 1] += sw.y;\n                    normalMapNormals[v2ind + 2] += sw.z;\n\n                    normalMapNormals[v3ind] += n0.x;\n                    normalMapNormals[v3ind + 1] += n0.y;\n                    normalMapNormals[v3ind + 2] += n0.z;\n                }\n            }\n        }\n\n        self.postMessage({\n                id: id,\n                normalMapNormals: normalMapNormals,\n                normalMapVertices: normalMapVertices,\n                normalMapVerticesHigh: normalMapVerticesHigh,\n                normalMapVerticesLow: normalMapVerticesLow,\n                terrainVertices: terrainVertices,\n                terrainVerticesHigh: terrainVerticesHigh,\n                terrainVerticesLow: terrainVerticesLow,\n                noDataVertices: noDataVertices,\n                //bounds: [xmin, xmax, ymin, ymax, zmin, zmax]\n                bounds: [xmin, ymin, zmin, xmax, ymax, zmax]\n             }, [\n                    normalMapNormals.buffer, \n                    normalMapVertices.buffer, \n                    normalMapVerticesHigh.buffer, \n                    normalMapVerticesLow.buffer, \n                    terrainVertices.buffer,\n                    terrainVerticesHigh.buffer,\n                    terrainVerticesLow.buffer,\n                    noDataVertices.buffer\n            ]);\n    }`;\n\nexport {TerrainWorker};\n","import {doubleToTwoFloats2} from '../math/coder';\nimport {Framebuffer} from '../webgl/Framebuffer';\nimport {Handler} from \"../webgl/Handler\";\nimport {Material} from \"../layer/Material\";\nimport {Program} from '../webgl/Program';\nimport {Planet} from \"../scene/Planet\";\nimport {RENDERING} from '../quadTree/quadTree';\nimport {Vector} from \"../layer/Vector\";\n\nlet tempArr = new Float32Array(2);\n\nconst MAX_FRAME_TIME = 25.0;\n\nexport class VectorTileCreator {\n    protected _width: number;\n    protected _height: number;\n    protected _planet: Planet;\n    protected _framebuffer: Framebuffer | null;\n    protected _queue: Material[];\n    protected _handler: Handler | null;\n\n    constructor(planet: Planet, width: number = 512, height: number = 512) {\n        this._width = width;\n        this._height = height;\n        this._planet = planet;\n        this._framebuffer = null;\n        this._queue = [];\n        this._handler = null;\n    }\n\n    public init() {\n\n        this._handler = this._planet.renderer!.handler;\n\n        //Line\n        if (!this._handler.programs.vectorTileLineRasterization) {\n            this._handler.addProgram(new Program(\"vectorTileLineRasterization\", {\n                uniforms: {\n                    'viewport': \"vec2\",\n                    'thicknessOutline': \"float\",\n                    'alpha': \"float\",\n                    'extentParamsHigh': \"vec4\",\n                    'extentParamsLow': \"vec4\"\n                },\n                attributes: {\n                    'prevHigh': \"vec2\",\n                    'currentHigh': \"vec2\",\n                    'nextHigh': \"vec2\",\n\n                    'prevLow': \"vec2\",\n                    'currentLow': \"vec2\",\n                    'nextLow': \"vec2\",\n\n                    'order': \"float\",\n                    'color': \"vec4\",\n                    'thickness': \"float\"\n                },\n                vertexShader:\n                    `attribute vec2 prevHigh;\n                attribute vec2 currentHigh;\n                attribute vec2 nextHigh;\n\n                attribute vec2 prevLow;\n                attribute vec2 currentLow;\n                attribute vec2 nextLow;\n\n                attribute float order;\n                attribute float thickness;\n                attribute vec4 color;\n                uniform float thicknessOutline;\n                uniform vec2 viewport;\n                uniform vec4 extentParamsHigh;\n                uniform vec4 extentParamsLow;\n                varying vec4 vColor;\n                \n                vec2 proj(vec2 coordHigh, vec2 coordLow) {\n                    vec2 highDiff = coordHigh - extentParamsHigh.xy;\n                    vec2 lowDiff = coordLow - extentParamsLow.xy;\n                    return vec2(-1.0 + (highDiff + lowDiff) * extentParamsHigh.zw) * vec2(1.0, -1.0);\n                }\n                \n                void main(){\n                    vColor = color;\n\n                    vec2 vNext = proj(nextHigh, nextLow),\n                         vCurrent = proj(currentHigh, currentLow),\n                         vPrev = proj(prevHigh, prevLow);\n\n                    vec2 _next = vNext;\n                    vec2 _prev = vPrev;\n                    vec2 _current = vCurrent;\n\n                    if(_prev == _current){\n                        if(_next == _current){\n                            _next = _current + vec2(1.0, 0.0);\n                            _prev = _current - _next;\n                        }else{\n                            _prev = _current + normalize(_current - _next);\n                        }\n                    }\n\n                    if(_next == _current){\n                        _next = _current + normalize(_current - _prev);\n                    }\n\n                    vec2 sNext = _next;\n                    vec2 sCurrent = _current;\n                    vec2 sPrev = _prev;\n                    \n                    vec2 dirNext = normalize(sNext - sCurrent);\n                    vec2 dirPrev = normalize(sPrev - sCurrent);\n                    float dotNP = dot(dirNext, dirPrev);\n                    \n                    vec2 normalNext = normalize(vec2(-dirNext.y, dirNext.x));\n                    vec2 normalPrev = normalize(vec2(dirPrev.y, -dirPrev.x));\n                    vec2 d = (thickness + thicknessOutline) * 0.5 * sign(order) / viewport;\n                    \n                    vec2 m;\n                    if(dotNP >= 0.99991){\n                        m = sCurrent - normalPrev * d;\n                    }else{\n                        vec2 dir = normalPrev + normalNext;\n                        m = sCurrent + dir * d / (dirNext.x * dir.y - dirNext.y * dir.x);\n                        \n                        if( dotNP > 0.5 && dot(dirNext + dirPrev, m - sCurrent) < 0.0 ){\n                            float occw = order * sign(dirNext.x * dirPrev.y - dirNext.y * dirPrev.x);\n                            if(occw == -1.0){\n                                m = sCurrent + normalPrev * d;\n                            }else if(occw == 1.0){\n                                m = sCurrent + normalNext * d;\n                            }else if(occw == -2.0){\n                                m = sCurrent + normalNext * d;\n                            }else if(occw == 2.0){\n                                m = sCurrent + normalPrev * d;\n                            }\n                        }else if(distance(sCurrent, m) > min(distance(sCurrent, sNext), distance(sCurrent, sPrev))){\n                            m = sCurrent + normalNext * d;\n                        }\n                    }\n                    gl_Position = vec4(m.x, m.y, 0.0, 1.0);\n                }`,\n                fragmentShader: `precision highp float;\n                uniform float alpha;\n                varying vec4 vColor;\n                void main() {\n                    gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n                }`\n            }));\n        }\n\n        //Polygon\n        if (!this._handler.programs.vectorTilePolygonRasterization) {\n            this._handler.addProgram(new Program(\"vectorTilePolygonRasterization\", {\n                uniforms: {\n                    'extentParamsHigh': \"vec4\",\n                    'extentParamsLow': \"vec4\"\n                },\n                attributes: {\n                    'coordinatesHigh': \"vec2\",\n                    'coordinatesLow': \"vec2\",\n                    'colors': \"vec4\"\n                },\n                vertexShader:\n                    `attribute vec2 coordinatesHigh;\n                attribute vec2 coordinatesLow; \n                attribute vec4 colors; \n                uniform vec4 extentParamsHigh; \n                uniform vec4 extentParamsLow; \n                varying vec4 color;\n\n                vec2 proj(vec2 coordHigh, vec2 coordLow) {\n                    vec2 highDiff = coordHigh - extentParamsHigh.xy;\n                    vec2 lowDiff = coordLow - extentParamsLow.xy;\n                    return vec2(-1.0 + (highDiff + lowDiff) * extentParamsHigh.zw) * vec2(1.0, -1.0);\n                }\n\n                void main() { \n                    color = colors;\n                    gl_Position = vec4(proj(coordinatesHigh, coordinatesLow), 0.0, 1.0); \n                }`,\n                fragmentShader:\n                    `precision highp float;\n                varying vec4 color;\n                void main () {  \n                    gl_FragColor = color; \n                }`\n            }));\n        }\n\n        this._framebuffer = new Framebuffer(this._handler, {\n            width: this._width,\n            height: this._height,\n            useDepth: false\n        });\n\n        this._framebuffer.init();\n    }\n\n    public frame() {\n        if (this._planet.layerLock.isFree() && this._queue.length) {\n            let h = this._handler!,\n                gl = h.gl!;\n\n            gl.disable(gl.CULL_FACE);\n            gl.disable(gl.DEPTH_TEST);\n\n            let hLine = h.programs.vectorTileLineRasterization,\n                hPoly = h.programs.vectorTilePolygonRasterization;\n\n            let _w = this._width,\n                _h = this._height,\n                width = _w,\n                height = _h,\n                _w2 = width << 1,\n                _h2 = height << 1;\n\n            // var prevLayerId = -1;\n\n            let extentParamsHigh = new Float32Array(4);\n            let extentParamsLow = new Float32Array(4);\n\n            let f = this._framebuffer!.activate();\n\n            let deltaTime = 0,\n                startTime = window.performance.now();\n\n            while (this._queue.length && deltaTime < MAX_FRAME_TIME) {\n                let material = this._queue.shift()!;\n                if (material.isLoading && material.segment.node.getState() === RENDERING) {\n                    let pickingEnabled = material.layer._pickingEnabled;\n\n                    if (material.segment.tileZoom < 4) {\n                        width = _w2;\n                        height = _h2;\n                    } else {\n                        width = _w;\n                        height = _h;\n                    }\n\n                    let texture = material._updateTexture || h.createEmptyTexture_l(width, height);\n                    let pickingMask = pickingEnabled ? material._updatePickingMask || h.createEmptyTexture_n(width, height) : null;\n\n                    material.applyTexture(texture, pickingMask);\n\n                    f.setSize(width, height);\n\n                    f.bindOutputTexture(texture!);\n\n                    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n                    gl.clear(gl.COLOR_BUFFER_BIT);\n\n                    let extent = material.segment.getExtentMerc();\n\n                    doubleToTwoFloats2(extent.southWest.lon, tempArr);\n                    extentParamsHigh[0] = tempArr[0];\n                    extentParamsLow[0] = tempArr[1];\n\n                    doubleToTwoFloats2(extent.southWest.lat, tempArr);\n                    extentParamsHigh[1] = tempArr[0];\n                    extentParamsLow[1] = tempArr[1];\n\n                    extentParamsHigh[2] = 2.0 / extent.getWidth();\n                    extentParamsHigh[3] = 2.0 / extent.getHeight();\n\n                    hPoly.activate();\n                    let sh = hPoly._program;\n                    let sha = sh.attributes,\n                        shu = sh.uniforms;\n\n                    let geomHandler = (material.layer as Vector)._geometryHandler;\n\n                    //=========================================\n                    //Polygon rendering\n                    //=========================================\n                    gl.uniform4fv(shu.extentParamsHigh, extentParamsHigh);\n                    gl.uniform4fv(shu.extentParamsLow, extentParamsLow);\n\n                    gl.bindBuffer(gl.ARRAY_BUFFER, geomHandler._polyVerticesHighBufferMerc!);\n                    gl.vertexAttribPointer(sha.coordinatesHigh, geomHandler._polyVerticesHighBufferMerc!.itemSize, gl.FLOAT, false, 0, 0);\n\n                    gl.bindBuffer(gl.ARRAY_BUFFER, geomHandler._polyVerticesLowBufferMerc!);\n                    gl.vertexAttribPointer(sha.coordinatesLow, geomHandler._polyVerticesLowBufferMerc!.itemSize, gl.FLOAT, false, 0, 0);\n\n                    gl.bindBuffer(gl.ARRAY_BUFFER, geomHandler._polyColorsBuffer!);\n                    gl.vertexAttribPointer(sha.colors, geomHandler._polyColorsBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n                    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, geomHandler._polyIndexesBuffer!);\n\n                    gl.drawElements(gl.TRIANGLES, geomHandler._polyIndexesBuffer!.numItems, gl.UNSIGNED_INT, 0);\n\n                    //Polygon picking PASS\n                    if (pickingEnabled) {\n                        f.bindOutputTexture(pickingMask!);\n\n                        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n                        gl.clear(gl.COLOR_BUFFER_BIT);\n\n                        gl.bindBuffer(gl.ARRAY_BUFFER, geomHandler._polyPickingColorsBuffer!);\n                        gl.vertexAttribPointer(sha.colors, geomHandler._polyPickingColorsBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n                        gl.drawElements(gl.TRIANGLES, geomHandler._polyIndexesBuffer!.numItems, gl.UNSIGNED_INT, 0);\n                    }\n\n                    //=========================================\n                    //Strokes and linestrings rendering\n                    //=========================================\n                    f.bindOutputTexture(texture!);\n\n                    hLine.activate();\n                    sh = hLine._program;\n                    sha = sh.attributes;\n                    shu = sh.uniforms;\n\n                    gl.uniform2fv(shu.viewport, [width, height]);\n\n                    gl.uniform4fv(shu.extentParamsHigh, extentParamsHigh);\n                    gl.uniform4fv(shu.extentParamsLow, extentParamsLow);\n\n                    //vertex\n                    let mb = geomHandler._lineVerticesHighBufferMerc!;\n                    gl.bindBuffer(gl.ARRAY_BUFFER, mb);\n\n                    gl.vertexAttribPointer(sha.prevHigh, mb.itemSize, gl.FLOAT, false, 8, 0);\n                    gl.vertexAttribPointer(sha.currentHigh, mb.itemSize, gl.FLOAT, false, 8, 32);\n                    gl.vertexAttribPointer(sha.nextHigh, mb.itemSize, gl.FLOAT, false, 8, 64);\n\n                    mb = geomHandler._lineVerticesLowBufferMerc!;\n                    gl.bindBuffer(gl.ARRAY_BUFFER, mb);\n\n                    gl.vertexAttribPointer(sha.prevLow, mb.itemSize, gl.FLOAT, false, 8, 0);\n                    gl.vertexAttribPointer(sha.currentLow, mb.itemSize, gl.FLOAT, false, 8, 32);\n                    gl.vertexAttribPointer(sha.nextLow, mb.itemSize, gl.FLOAT, false, 8, 64);\n\n                    //order\n                    gl.bindBuffer(gl.ARRAY_BUFFER, geomHandler._lineOrdersBuffer!);\n                    gl.vertexAttribPointer(sha.order, geomHandler._lineOrdersBuffer!.itemSize, gl.FLOAT, false, 4, 0);\n\n                    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, geomHandler._lineIndexesBuffer!);\n\n                    //PASS - stroke\n                    gl.bindBuffer(gl.ARRAY_BUFFER, geomHandler._lineStrokesBuffer!);\n                    gl.vertexAttribPointer(sha.thickness, geomHandler._lineStrokesBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n                    gl.bindBuffer(gl.ARRAY_BUFFER, geomHandler._lineStrokeColorsBuffer!);\n                    gl.vertexAttribPointer(sha.color, geomHandler._lineStrokeColorsBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n                    //Antialias pass\n                    gl.uniform1f(shu.thicknessOutline, 2);\n                    gl.uniform1f(shu.alpha, 0.54);\n                    gl.drawElements(gl.TRIANGLE_STRIP, geomHandler._lineIndexesBuffer!.numItems, gl.UNSIGNED_INT, 0);\n                    //\n                    //Aliased pass\n                    gl.uniform1f(shu.thicknessOutline, 1);\n                    gl.uniform1f(shu.alpha, 1.0);\n                    gl.drawElements(gl.TRIANGLE_STRIP, geomHandler._lineIndexesBuffer!.numItems, gl.UNSIGNED_INT, 0);\n\n                    //PASS - inside line\n                    gl.bindBuffer(gl.ARRAY_BUFFER, geomHandler._lineThicknessBuffer!);\n                    gl.vertexAttribPointer(sha.thickness, geomHandler._lineThicknessBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n                    gl.bindBuffer(gl.ARRAY_BUFFER, geomHandler._lineColorsBuffer!);\n                    gl.vertexAttribPointer(sha.color, geomHandler._lineColorsBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n\n                    //Antialias pass\n                    gl.uniform1f(shu.thicknessOutline, 2);\n                    gl.uniform1f(shu.alpha, 0.54);\n                    gl.drawElements(gl.TRIANGLE_STRIP, geomHandler._lineIndexesBuffer!.numItems, gl.UNSIGNED_INT, 0);\n                    //\n                    //Aliased pass\n                    gl.uniform1f(shu.thicknessOutline, 1);\n                    gl.uniform1f(shu.alpha, 1.0);\n                    gl.drawElements(gl.TRIANGLE_STRIP, geomHandler._lineIndexesBuffer!.numItems, gl.UNSIGNED_INT, 0);\n\n                    if (pickingEnabled) {\n                        f.bindOutputTexture(pickingMask!);\n                        gl.uniform1f(shu.thicknessOutline, 8);\n                        gl.bindBuffer(gl.ARRAY_BUFFER, geomHandler._linePickingColorsBuffer!);\n                        gl.vertexAttribPointer(sha.color, geomHandler._linePickingColorsBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n                        gl.drawElements(gl.TRIANGLE_STRIP, geomHandler._lineIndexesBuffer!.numItems, gl.UNSIGNED_INT, 0);\n                    }\n                } else {\n                    material.isLoading = false;\n                }\n\n                deltaTime = window.performance.now() - startTime;\n            }\n\n            gl.enable(gl.DEPTH_TEST);\n            gl.enable(gl.CULL_FACE);\n\n            f.deactivate();\n        }\n    }\n\n    public add(material: Material) {\n        this._queue.push(material);\n    }\n\n    public remove(material: Material) {\n        //...\n    }\n\n    public get queueSize(): number {\n        return this._queue.length;\n    }\n}\n","import {LonLat} from \"../LonLat\";\nimport {Quat} from \"../math/Quat\";\nimport {Vec3} from \"../math/Vec3\";\nimport {DEGREES, EPS1, EPS12, EPS15, RADIANS, zeroTwoPI} from \"../math\";\n\nexport interface IInverseResult {\n    distance: number;\n    initialAzimuth: number;\n    finalAzimuth: number;\n}\n\nexport interface IDirectResult {\n    destination: LonLat;\n    finalAzimuth: number;\n}\n\n/**\n * Class represents a plant ellipsoid.\n * @class\n * @param {number} equatorialSize - Equatorial ellipsoid size.\n * @param {number} polarSize - Polar ellipsoid size.\n */\nclass Ellipsoid {\n\n    /**\n     * Equatorial size\n     * @type {number}\n     * @protected\n     */\n    protected _a: number;\n\n    /**\n     * Polar size\n     * @type {number}\n     * @protected\n     */\n    protected _b: number;\n    protected _flattening: number;\n    protected _f: number;\n    protected _a2: number;\n    protected _b2: number;\n    protected _e: number;\n    protected _e2: number;\n    protected _e22: number;\n    protected _k: number;\n    protected _k2: number;\n    protected _radii: Vec3;\n    protected _radii2: Vec3;\n    protected _invRadii: Vec3;\n    public _invRadii2: Vec3;\n\n    constructor(equatorialSize: number = 1, polarSize: number = 1) {\n        this._a = equatorialSize;\n        this._b = polarSize;\n        this._flattening = (equatorialSize - polarSize) / equatorialSize;\n        this._f = 1 / this._flattening;\n\n        this._a2 = equatorialSize * equatorialSize;\n        this._b2 = polarSize * polarSize;\n\n        const qa2b2 = Math.sqrt(this._a2 - this._b2);\n\n        this._e = qa2b2 / equatorialSize;\n        this._e2 = this._e * this._e;\n        this._e22 = this._e2 * this._e2;\n\n        this._k = qa2b2 / polarSize;\n        this._k2 = this._k * this._k;\n\n        this._radii = new Vec3(equatorialSize, equatorialSize, polarSize);\n        this._radii2 = new Vec3(this._a2, this._a2, this._b2);\n        this._invRadii = new Vec3(1.0 / equatorialSize, 1.0 / equatorialSize, 1.0 / polarSize);\n        this._invRadii2 = new Vec3(1.0 / this._a2, 1.0 / this._a2, 1.0 / this._b2);\n    }\n\n    /**\n     * Returns the distance travelling from ‘this’ point to destination point along a rhumb line.\n     * @param   {LonLat} startLonLat coordinates.\n     * @param   {LonLat} endLonLat coordinates\n     * @returns {number} Distance in m between this point and destination point (same units as radius).\n     */\n    public rhumbDistanceTo(startLonLat: LonLat, endLonLat: LonLat): number {\n        const f1 = startLonLat.lat * RADIANS;\n        const f2 = endLonLat.lat * RADIANS;\n        const df = f2 - f1;\n        let d = Math.abs(endLonLat.lon - startLonLat.lon) * RADIANS;\n        if (Math.abs(d) > Math.PI) d = d > 0 ? -(2 * Math.PI - d) : (2 * Math.PI + d);\n        const dd = Math.log(Math.tan(f2 / 2 + Math.PI / 4) / Math.tan(f1 / 2 + Math.PI / 4));\n        const q = Math.abs(dd) > 10e-12 ? df / dd : Math.cos(f1);\n        const t = Math.sqrt(df * df + q * q * d * d); // angular distance in radians\n        return t * this._a;\n    }\n\n    /**\n     * Returns the point at given fraction between two points on the great circle.\n     * @param   {LonLat} lonLat1 - Longitude/Latitude of source point.\n     * @param   {LonLat} lonLat2 - Longitude/Latitude of destination point.\n     * @param   {number} fraction - Fraction between the two points (0 = source point, 1 = destination point).\n     * @returns {LonLat} Intermediate point between points.\n     */\n    public getIntermediatePointOnGreatCircle(lonLat1: LonLat, lonLat2: LonLat, fraction: number): LonLat {\n        if (fraction == 0) return lonLat1.clone();\n        if (fraction == 1) return lonLat2.clone();\n        const inverse = this.inverse(lonLat1, lonLat2);\n        const dist = inverse.distance;\n        const azimuth = inverse.initialAzimuth;\n        return isNaN(azimuth) ? lonLat1 : this.getGreatCircleDestination(lonLat1, azimuth, dist * fraction);\n    }\n\n    /**\n     * REMOVE ASAP after\n     * @param lonLat1\n     * @param lonLat2\n     * @returns {number}\n     */\n    static getBearing(lonLat1: LonLat, lonLat2: LonLat): number {\n        let f1 = lonLat1.lat * RADIANS,\n            l1 = lonLat1.lon * RADIANS;\n        let f2 = lonLat2.lat * RADIANS,\n            l2 = lonLat2.lon * RADIANS;\n        let y = Math.sin(l2 - l1) * Math.cos(f2);\n        let x = Math.cos(f1) * Math.sin(f2) - Math.sin(f1) * Math.cos(f2) * Math.cos(l2 - l1);\n        return Math.atan2(y, x) * DEGREES;\n    }\n\n    public getFlattening(): number {\n        return this._flattening;\n    }\n\n    /**\n     * Gets ellipsoid equatorial size.\n     * @public\n     * @returns {number} -\n     */\n    public getEquatorialSize(): number {\n        return this._a;\n    }\n\n    public get equatorialSize(): number {\n        return this._a;\n    }\n\n    public get equatorialSizeSqr(): number {\n        return this._a2;\n    }\n\n    /**\n     * Gets ellipsoid polar size.\n     * @public\n     * @returns {number} -\n     */\n    public getPolarSize(): number {\n        return this._b;\n    }\n\n    public get polarSize(): number {\n        return this._b;\n    }\n\n    public get polarSizeSqr(): number {\n        return this._b2;\n    }\n\n    /**\n     * Calculate cartesian coordinates by its ECEF geodetic coordinates.\n     * @public\n     * @param {LonLat} lonlat - Geodetic coordinates.\n     * @returns {Vec3} -\n     */\n    public lonLatToCartesian(lonlat: LonLat): Vec3 {\n        return this.geodeticToCartesian(lonlat.lon, lonlat.lat, lonlat.height);\n    }\n\n    /**\n     * Calculate cartesian coordinates by its ECEF geodetic coordinates.\n     * @public\n     * @param {LonLat} lonlat - Geodetic coordinates.\n     * @param {Vec3} res - Output variable reference.\n     * @returns {Vec3} -\n     */\n    public lonLatToCartesianRes(lonlat: LonLat, res: Vec3): Vec3 {\n        return this.geodeticToCartesian(lonlat.lon, lonlat.lat, lonlat.height, res);\n    }\n\n    /**\n     * Gets cartesian ECEF from Wgs84 geodetic coordinates.\n     * @public\n     * @param {Number} lon - Longitude.\n     * @param {Number} lat - Latitude.\n     * @param {Number} height - Height.\n     * @param {Vec3} res - Output result variable.\n     * @returns {Vec3} -\n     */\n    public geodeticToCartesian(lon: number, lat: number, height: number = 0, res: Vec3 = new Vec3()): Vec3 {\n        let latrad = RADIANS * lat,\n            lonrad = RADIANS * lon;\n\n        let slt = Math.sin(latrad);\n\n        let N = this._a / Math.sqrt(1 - this._e2 * slt * slt);\n        let nc = (N + height) * Math.cos(latrad);\n\n        res.x = nc * Math.cos(lonrad);\n        res.y = nc * Math.sin(lonrad);\n        res.z = (N * (1 - this._e2) + height) * slt;\n\n        return res;\n    }\n\n    /**\n     * Gets Wgs84 geodetic coordinates from cartesian ECEF.\n     * @public\n     * @param {Vec3} p - Cartesian coordinates.\n     * @returns {LonLat} -\n     */\n    public projToSurface(p: Vec3): Vec3 {\n\n        let pX = p.x || 0.0,\n            pY = p.y || 0.0,\n            pZ = p.z || 0.0;\n\n        let length = Math.sqrt(pX * pX + pY * pY + pZ * pZ);\n\n        if (length === 0) {\n            return this.lonLatToCartesian(new LonLat());\n        }\n\n        let invRadii2X = this._invRadii2.x,\n            invRadii2Y = this._invRadii2.y,\n            invRadii2Z = this._invRadii2.z;\n\n        let x2 = pX * pX * invRadii2X,\n            y2 = pY * pY * invRadii2Y,\n            z2 = pZ * pZ * invRadii2Z;\n\n        let norm = x2 + y2 + z2;\n        let ratio = Math.sqrt(1.0 / norm);\n        let first = p.scaleTo(ratio);\n\n        if (norm < EPS1) {\n            return !Number.isFinite(ratio) ? new Vec3() : first\n        }\n\n        let lambda = ((1.0 - ratio) * length) / first.mulA(this._invRadii2).length();\n\n        let m_X = 0.0, m_Y = 0.0, m_Z = 0.0;\n\n        do {\n            m_X = 1.0 / (1.0 + lambda * invRadii2X);\n            m_Y = 1.0 / (1.0 + lambda * invRadii2Y);\n            m_Z = 1.0 / (1.0 + lambda * invRadii2Z);\n\n            let m_X2 = m_X * m_X,\n                m_Y2 = m_Y * m_Y,\n                m_Z2 = m_Z * m_Z;\n\n            let func = x2 * m_X2 + y2 * m_Y2 + z2 * m_Z2 - 1.0;\n\n            if (Math.abs(func) < EPS12) {\n                break;\n            }\n\n            let m_X3 = m_X2 * m_X,\n                m_Y3 = m_Y2 * m_Y,\n                m_Z3 = m_Z2 * m_Z;\n\n            lambda += 0.5 * func / (x2 * m_X3 * invRadii2X + y2 * m_Y3 * invRadii2Y + z2 * m_Z3 * invRadii2Z);\n\n        } while (true); // eslint-disable-line\n\n        return new Vec3(pX * m_X, pY * m_Y, pZ * m_Z);\n    }\n\n    /**\n     * Converts 3d cartesian coordinates to geodetic\n     * @param {Vec3} cart - Cartesian coordinates\n     * @returns {LonLat} - Geodetic coordinates\n     */\n    public cartesianToLonLat(cart: Vec3): LonLat {\n        return this.cartesianToLonLatRes(cart);\n    }\n\n    /**\n     * Converts 3d cartesian coordinates to geodetic\n     * @param {Vec3} cart - Cartesian coordinates\n     * @param {LonLat} res - Link geodetic coordinates variable\n     * @returns {LonLat} - Geodetic coordinates\n     */\n    public cartesianToLonLatRes(cart: Vec3, res: LonLat = new LonLat()): LonLat {\n        let p = this.projToSurface(cart);\n        let n = this.getSurfaceNormal3v(p),\n            h = cart.sub(p);\n\n        res.lon = Math.atan2(n.y, n.x) * DEGREES;\n        res.lat = Math.asin(n.z) * DEGREES;\n        res.height = Math.sign(h.dot(cart)) * h.length();\n\n        return res;\n    }\n\n    /**\n     * Gets ellipsoid surface normal.\n     * @public\n     * @param {Vec3} coord - Spatial coordinates.\n     * @return {Vec3} -\n     */\n    public getSurfaceNormal3v(coord: Vec3): Vec3 {\n        let r2 = this._invRadii2;\n        let nx = coord.x * r2.x,\n            ny = coord.y * r2.y,\n            nz = coord.z * r2.z;\n        let l = 1.0 / Math.sqrt(nx * nx + ny * ny + nz * nz);\n        return new Vec3(nx * l, ny * l, nz * l);\n    }\n\n    public getGreatCircleDistance(lonLat1: LonLat, lonLat2: LonLat): number {\n        return this.inverse(lonLat1, lonLat2).distance;\n    }\n\n    /**\n     * Calculates the destination point given start point lat / lon, azimuth(deg) and distance (m).\n     * Source: http://movable-type.co.uk/scripts/latlong-vincenty-direct.html and optimized / cleaned up by Mathias Bynens <http://mathiasbynens.be/>\n     * Based on the Vincenty direct formula by T. Vincenty, “Direct and Inverse Solutions of Geodesics on the Ellipsoid with application of nested equations”, Survey Review, vol XXII no 176, 1975 <http://www.ngs.noaa.gov/PUBS_LIB/inverse.pdf>\n     * @param {LonLat} lonLat - Origin coordinates\n     * @param {number} azimuth - View azimuth in degrees\n     * @param {number} dist - Distance to the destination point coordinates in meters\n     * @returns {LonLat} - Destination point coordinates\n     */\n    public getGreatCircleDestination(lonLat: LonLat, azimuth: number, dist: number): LonLat {\n        return this.direct(lonLat, azimuth, dist).destination;\n    }\n\n    public inverse(lonLat1: LonLat, lonLat2: LonLat): IInverseResult {\n\n        let a = this._a, b = this._b, f = this._flattening;\n\n        const fi1 = lonLat1.lat * RADIANS, lambda1 = lonLat1.lon * RADIANS;\n        const fi2 = lonLat2.lat * RADIANS, lambda2 = lonLat2.lon * RADIANS;\n\n        const L = lambda2 - lambda1; // L = difference in longitude, U = reduced latitude, defined by tan U = (1-f)·tanφ.\n        const tanU1 = (1 - f) * Math.tan(fi1), cosU1 = 1 / Math.sqrt((1 + tanU1 * tanU1)), sinU1 = tanU1 * cosU1;\n        const tanU2 = (1 - f) * Math.tan(fi2), cosU2 = 1 / Math.sqrt((1 + tanU2 * tanU2)), sinU2 = tanU2 * cosU2;\n\n        const antipodal = Math.abs(L) > Math.PI / 2 || Math.abs(fi2 - fi1) > Math.PI / 2;\n\n        let lmb = L, sinLmb = null, cosLmb = null; // lmb - difference in longitude on an auxiliary sphere\n        let s = antipodal ? Math.PI : 0, sin_s = 0, cos_s = antipodal ? -1 : 1, sinSqs = null; // s - angular distance lonLat1 lonLat2 on the sphere\n        let cos2sm = 1;                      // sm - angular distance on the sphere from the equator to the midpoint of the line\n        let cosSqa = 1;                      // a - azimuth of the geodesic at the equator\n\n        let lmb_ = null, iterations = 0;\n        do {\n            sinLmb = Math.sin(lmb);\n            cosLmb = Math.cos(lmb);\n            sinSqs = (cosU2 * sinLmb) ** 2 + (cosU1 * sinU2 - sinU1 * cosU2 * cosLmb) ** 2;\n            if (Math.abs(sinSqs) < 1e-24) break;  // co-incident/antipodal points (σ < ≈0.006mm)\n            sin_s = Math.sqrt(sinSqs);\n            cos_s = sinU1 * sinU2 + cosU1 * cosU2 * cosLmb;\n            s = Math.atan2(sin_s, cos_s);\n            const sin_a = cosU1 * cosU2 * sinLmb / sin_s;\n            cosSqa = 1 - sin_a * sin_a;\n            cos2sm = (cosSqa != 0) ? (cos_s - 2 * sinU1 * sinU2 / cosSqa) : 0; // on equatorial line cos²α = 0 (§6)\n            const C = f / 16 * cosSqa * (4 + f * (4 - 3 * cosSqa));\n            lmb_ = lmb;\n            lmb = L + (1 - C) * f * sin_a * (s + C * sin_s * (cos2sm + C * cos_s * (-1 + 2 * cos2sm * cos2sm)));\n        } while (Math.abs(lmb - lmb_) > EPS12 && ++iterations < 1000);\n\n        const uSq = cosSqa * (a * a - b * b) / (b * b);\n        const A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n        const B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n        const ds = B * sin_s * (cos2sm + B / 4 * (cos_s * (-1 + 2 * cos2sm * cos2sm) - B / 6 * cos2sm * (-3 + 4 * sin_s * sin_s) * (-3 + 4 * cos2sm * cos2sm)));\n\n        const dist = b * A * (s - ds); // s = length of the geodesic\n\n        // note special handling of exactly antipodal points where sin²σ = 0 (due to discontinuity\n        // atan2(0, 0) = 0 but atan2(ε, 0) = π/2 / 90°) - in which case bearing is always meridional,\n        // due north (or due south!)\n        // α = azimuths of the geodesic; α2 the direction P₁ P₂ produced\n        const a1 = Math.abs(sinSqs) < Number.EPSILON ? 0 : Math.atan2(cosU2 * sinLmb, cosU1 * sinU2 - sinU1 * cosU2 * cosLmb);\n        const a2 = Math.abs(sinSqs) < Number.EPSILON ? Math.PI : Math.atan2(cosU1 * sinLmb, -sinU1 * cosU2 + cosU1 * sinU2 * cosLmb);\n\n        return {\n            distance: dist,\n            initialAzimuth: Math.abs(dist) < Number.EPSILON ? NaN : zeroTwoPI(a1) * DEGREES,\n            finalAzimuth: Math.abs(dist) < Number.EPSILON ? NaN : zeroTwoPI(a2) * DEGREES\n        };\n    }\n\n    /**\n     * Calculates the destination point given start point lat / lon, azimuth(deg) and distance (m).\n     * Source: http://movable-type.co.uk/scripts/latlong-vincenty-direct.html and optimized / cleaned up by Mathias Bynens <http://mathiasbynens.be/>\n     * Based on the Vincenty direct formula by T. Vincenty, “Direct and Inverse Solutions of Geodesics on the Ellipsoid with application of nested equations”, Survey Review, vol XXII no 176, 1975 <http://www.ngs.noaa.gov/PUBS_LIB/inverse.pdf>\n     * @param {LonLat} lonLat - Origin coordinates\n     * @param {number} azimuth - View azimuth in degrees\n     * @param {number} dist - Distance to the destination point coordinates in meters\n     * @returns {LonLat} - Destination point coordinates\n     */\n    public direct(lonLat: LonLat, azimuth: number, dist: number): IDirectResult {\n\n        let lon1 = lonLat.lon,\n            lat1 = lonLat.lat;\n\n        let a = this._a,\n            b = this._b,\n            f = this._flattening,\n            s = dist,\n            alpha1 = azimuth * RADIANS,\n            sinAlpha1 = Math.sin(alpha1),\n            cosAlpha1 = Math.cos(alpha1),\n            tanU1 = (1 - f) * Math.tan(lat1 * RADIANS),\n            cosU1 = 1 / Math.sqrt(1 + tanU1 * tanU1),\n            sinU1 = tanU1 * cosU1,\n            sigma1 = Math.atan2(tanU1, cosAlpha1),\n            sinAlpha = cosU1 * sinAlpha1,\n            cosSqAlpha = 1 - sinAlpha * sinAlpha,\n            uSq = (cosSqAlpha * (a * a - b * b)) / (b * b),\n            A = 1 + (uSq / 16384) * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq))),\n            B = (uSq / 1024) * (256 + uSq * (-128 + uSq * (74 - 47 * uSq))),\n            sigma = s / (b * A),\n            sigmaP = 2 * Math.PI;\n\n        let cos2SigmaM = 0,\n            sinSigma = 0,\n            cosSigma = 0,\n            deltaSigma = 0;\n\n        while (Math.abs(sigma - sigmaP) > 1e-12) {\n            cos2SigmaM = Math.cos(2 * sigma1 + sigma);\n            sinSigma = Math.sin(sigma);\n            cosSigma = Math.cos(sigma);\n            deltaSigma = B * sinSigma *\n                (cos2SigmaM + (B / 4) *\n                    (\n                        cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM) -\n                        (B / 6) * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)\n                    ));\n            sigmaP = sigma;\n            sigma = s / (b * A) + deltaSigma;\n        }\n\n        let tmp = sinU1 * sinSigma - cosU1 * cosSigma * cosAlpha1,\n            lat2 = Math.atan2(\n                sinU1 * cosSigma + cosU1 * sinSigma * cosAlpha1,\n                (1 - f) * Math.sqrt(sinAlpha * sinAlpha + tmp * tmp)\n            ),\n            lambda = Math.atan2(\n                sinSigma * sinAlpha1,\n                cosU1 * cosSigma - sinU1 * sinSigma * cosAlpha1\n            ),\n            C = (f / 16.0) * cosSqAlpha * (4.0 + f * (4.0 - 3.0 * cosSqAlpha)),\n            L = lambda - (1.0 - C) * f * sinAlpha * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1.0 + 2.0 * cos2SigmaM * cos2SigmaM))),\n            revAz = Math.atan2(sinAlpha, -tmp);\n\n        return {\n            destination: new LonLat(lon1 + L * DEGREES, lat2 * DEGREES),\n            finalAzimuth: revAz * DEGREES\n        };\n    }\n\n\n    /**\n     * Returns cartesian coordinates of the intersection of a ray and an ellipsoid.\n     * If the ray doesn't hit ellipsoid returns null.\n     * @public\n     * @param {Vec3} origin - Ray origin point.\n     * @param {Vec3} direction - Ray direction.\n     * @returns {Vec3} -\n     */\n    public hitRay(origin: Vec3, direction: Vec3): Vec3 | undefined {\n        let q = this._invRadii.mul(origin);\n        let w = this._invRadii.mul(direction);\n\n        let q2 = q.dot(q);\n        let qw = q.dot(w);\n\n        let difference, w2, product, discriminant, temp;\n\n        if (q2 > 1.0) {\n            // Outside ellipsoid.\n            if (qw >= 0.0) {\n                // Looking outward or tangent (0 intersections).\n                return undefined;\n            }\n\n            // qw < 0.0.\n            var qw2 = qw * qw;\n            difference = q2 - 1.0; // Positively valued.\n            w2 = w.dot(w);\n            product = w2 * difference;\n\n            let eps = Math.abs(qw2 - product);\n\n            if (eps > EPS15 && qw2 < product) {\n                // Imaginary roots (0 intersections).\n                return undefined;\n            } else if (qw2 > product) {\n                // Distinct roots (2 intersections).\n                discriminant = qw * qw - product;\n                temp = -qw + Math.sqrt(discriminant); // Avoid cancellation.\n                var root0 = temp / w2;\n                var root1 = difference / temp;\n                if (root0 < root1) {\n                    return origin.add(direction.scaleTo(root0));\n                }\n                return origin.add(direction.scaleTo(root1));\n            } else {\n                // qw2 == product.  Repeated roots (2 intersections).\n                var root = Math.sqrt(difference / w2);\n                return origin.add(direction.scaleTo(root));\n            }\n        } else if (q2 < 1.0) {\n            // Inside ellipsoid (2 intersections).\n            difference = q2 - 1.0; // Negatively valued.\n            w2 = w.dot(w);\n            product = w2 * difference; // Negatively valued.\n            discriminant = qw * qw - product;\n            temp = -qw + Math.sqrt(discriminant); // Positively valued.\n            return origin.add(direction.scaleTo(temp / w2));\n        } else {\n            // q2 == 1.0. On ellipsoid.\n            if (qw < 0.0) {\n                // Looking inward.\n                w2 = w.dot(w);\n                return origin.add(direction.scaleTo(-qw / w2));\n            }\n            // qw >= 0.0.  Looking outward or tangent.\n            // return undefined\n        }\n    }\n\n    public getNorthFrameRotation(cartesian: Vec3): Quat {\n        let n = this.getSurfaceNormal3v(cartesian);\n        let t = Vec3.proj_b_to_plane(Vec3.NORTH, n);\n        return Quat.getLookRotation(t, n);\n    }\n\n    /**\n     * @todo this is not precise function, needs to be replaced or removed\n     * @param lonLat1\n     * @param bearing\n     * @param distance\n     * @returns {LonLat}\n     */\n    public getBearingDestination(lonLat1: LonLat, bearing: number = 0.0, distance: number = 0): LonLat {\n        bearing = bearing * RADIANS;\n        var nlon = ((lonLat1.lon + 540) % 360) - 180;\n        var f1 = lonLat1.lat * RADIANS,\n            l1 = nlon * RADIANS;\n        var dR = distance / this._a;\n        var f2 = Math.asin(\n            Math.sin(f1) * Math.cos(dR) + Math.cos(f1) * Math.sin(dR) * Math.cos(bearing)\n        );\n        return new LonLat(\n            (l1 +\n                Math.atan2(\n                    Math.sin(bearing) * Math.sin(dR) * Math.cos(f1),\n                    Math.cos(dR) - Math.sin(f1) * Math.sin(f2)\n                )) *\n            DEGREES,\n            f2 * DEGREES\n        );\n    }\n\n    /**\n     * Returns the point at given fraction between two points on the great circle.\n     * @param   {LonLat} lonLat1 - Longitude/Latitude of source point.\n     * @param   {LonLat} lonLat2 - Longitude/Latitude of destination point.\n     * @param   {number} fraction - Fraction between the two points (0 = source point, 1 = destination point).\n     * @returns {LonLat} Intermediate point between points.\n     */\n    static getIntermediatePointOnGreatCircle(lonLat1: LonLat, lonLat2: LonLat, fraction: number): LonLat {\n        var f1 = lonLat1.lat * RADIANS,\n            l1 = lonLat1.lon * RADIANS;\n        var f2 = lonLat2.lat * RADIANS,\n            l2 = lonLat2.lon * RADIANS;\n\n        var sinf1 = Math.sin(f1),\n            cosf1 = Math.cos(f1),\n            sinl1 = Math.sin(l1),\n            cosl1 = Math.cos(l1);\n        var sinf2 = Math.sin(f2),\n            cosf2 = Math.cos(f2),\n            sinl2 = Math.sin(l2),\n            cosl2 = Math.cos(l2);\n\n        var df = f2 - f1,\n            dl = l2 - l1;\n        var a =\n            Math.sin(df / 2) * Math.sin(df / 2) +\n            Math.cos(f1) * Math.cos(f2) * Math.sin(dl / 2) * Math.sin(dl / 2);\n        var d = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n        var A = Math.sin((1 - fraction) * d) / Math.sin(d);\n        var B = Math.sin(fraction * d) / Math.sin(d);\n\n        var x = A * cosf1 * cosl1 + B * cosf2 * cosl2;\n        var y = A * cosf1 * sinl1 + B * cosf2 * sinl2;\n        var z = A * sinf1 + B * sinf2;\n\n        var f3 = Math.atan2(z, Math.sqrt(x * x + y * y));\n        var l3 = Math.atan2(y, x);\n\n        return new LonLat(((l3 * DEGREES + 540) % 360) - 180, f3 * DEGREES);\n    }\n\n    static getRhumbBearing(lonLat1: LonLat, lonLat2: LonLat): number {\n        var dLon = (lonLat2.lon - lonLat1.lon) * RADIANS;\n        var dPhi = Math.log(\n            Math.tan((lonLat2.lat * RADIANS) / 2 + Math.PI / 4) /\n            Math.tan((lonLat1.lat * RADIANS) / 2 + Math.PI / 4)\n        );\n        if (Math.abs(dLon) > Math.PI) {\n            if (dLon > 0) {\n                dLon = (2 * Math.PI - dLon) * -1;\n            } else {\n                dLon = 2 * Math.PI + dLon;\n            }\n        }\n        return (Math.atan2(dLon, dPhi) * DEGREES + 360) % 360;\n    }\n}\n\nexport {Ellipsoid};\n","import {Ellipsoid} from \"./Ellipsoid\";\n\n/**\n * WGS84 ellipsoid object.\n * @type {Ellipsoid}\n */\nexport const wgs84 = new Ellipsoid(6378137.0, 6356752.3142451793); // Equitorial Radius (m), Polar Radius (m)\n","import * as math from \"../math\";\nimport * as segmentHelper from \"../segment/segmentHelper\";\nimport * as shaders from \"../shaders/drawnode\";\nimport * as utils from \"../utils/shared\";\nimport {Atmosphere} from \"../control/Atmosphere\";\nimport {Control} from \"../control/Control\";\nimport {createColorRGB, isUndef} from \"../utils/shared\";\nimport {createEvents, EventsHandler} from \"../Events\";\nimport {decodeFloatFromRGBAArr} from \"../math/coder\";\nimport {EarthQuadTreeStrategy} from \"../quadTree/EarthQuadTreeStrategy\";\nimport {EmptyTerrain} from \"../terrain/EmptyTerrain\";\nimport {Extent} from \"../Extent\";\nimport {Entity} from \"../entity/Entity\";\nimport {Ellipsoid} from \"../ellipsoid/Ellipsoid\";\nimport {EntityCollection} from \"../entity/EntityCollection\";\nimport {Geoid, GeoidModel} from \"../terrain/Geoid\";\nimport {GeoImageCreator} from \"../utils/GeoImageCreator\";\nimport {IBaseInputState} from \"../renderer/RendererEvents\";\nimport {Key, Lock} from \"../Lock\";\nimport {Layer} from \"../layer/Layer\";\nimport {Loader} from \"../utils/Loader\";\nimport {LonLat} from \"../LonLat\";\nimport {Node} from \"../quadTree/Node\";\nimport {NormalMapCreator} from \"../utils/NormalMapCreator\";\nimport {PlainSegmentWorker} from \"../utils/PlainSegmentWorker\";\nimport {PlanetCamera} from \"../camera/PlanetCamera\";\nimport {Quat} from \"../math/Quat\";\nimport {QuadTreeStrategy} from \"../quadTree/QuadTreeStrategy\";\nimport {Ray} from \"../math/Ray\";\nimport {RenderNode} from \"./RenderNode\";\nimport {SimpleSkyBackground} from \"../control/SimpleSkyBackground\";\nimport {Sun} from \"../control/Sun\";\nimport {TerrainWorker} from \"../utils/TerrainWorker\";\nimport {Vec2, Vec3, Vec4, NumberArray2, NumberArray3, NumberArray4} from \"../math/index\";\nimport {Vector} from \"../layer/Vector\";\nimport {VectorTileCreator} from \"../utils/VectorTileCreator\";\nimport {wgs84} from \"../ellipsoid/wgs84\";\nimport {WebGLBufferExt, WebGLTextureExt, IDefaultTextureParams} from \"../webgl/Handler\";\n\nexport interface IPlanetParams {\n    name?: string;\n    ellipsoid?: Ellipsoid;\n    minAltitude?: number;\n    maxAltitude?: number;\n    frustums?: NumberArray2[];\n    maxEqualZoomAltitude?: number;\n    minEqualZoomAltitude?: number;\n    minEqualZoomCameraSlope?: number;\n    quadTreeStrategyPrototype?: typeof QuadTreeStrategy;\n    ambient?: string | NumberArray3 | Vec3;\n    diffuse?: string | NumberArray3 | Vec3;\n    specular?: string | NumberArray3 | Vec3;\n    shininess?: number;\n    nightTextureSrc?: string | null;\n    specularTextureSrc?: string | null;\n    maxGridSize?: number;\n    maxLoadingRequests?: number;\n    atmosphereEnabled?: boolean;\n}\n\nexport type PlanetEventsList = [\n    \"draw\",\n    \"layeradd\",\n    \"baselayerchange\",\n    \"layerremove\",\n    \"layervisibilitychange\",\n    \"rendercompleted\",\n    \"terraincompleted\",\n    \"layerloadend\"\n];\n\nconst CUR_LOD_SIZE = 250; //px\nconst MIN_LOD_SIZE = 312; //px\nconst MAX_LOD_SIZE = 190; //px\n\nlet _tempPickingPix_ = new Uint8Array(4);\nlet _tempDepthColor_ = new Uint8Array(4);\n\nconst DEPTH_DISTANCE = 11;//m\n\n/**\n * Maximum created nodes count. The more nodes count the more memory usage.\n * @const\n * @type {number}\n * @default\n */\nconst MAX_NODES = 200;\n\nconst HORIZON_TANGENT = 0.81;\n\ntype IndexBufferCacheData = { buffer: WebGLBufferExt | null };\n\n/**\n * Main class for rendering planet\n * @class\n * @extends {RenderNode}\n * @param {string} [options.name=\"Earth\"] - Planet name(Earth by default)\n * @param {Ellipsoid} [options.ellipsoid] - Planet ellipsoid(WGS84 by default)\n * @param {Number} [options.maxGridSize=128] - Segment maximal grid size\n * @param {Number} [options.maxEqualZoomAltitude=15000000.0] - Maximal altitude since segments on the screen become the same zoom level\n * @param {Number} [options.minEqualZoomAltitude=10000.0] - Minimal altitude since segments on the screen become the same zoom level\n * @param {Number} [options.minEqualZoomCameraSlope=0.8] - Minimal camera slope above te globe where segments on the screen become the same zoom level\n *\n * @fires EventsHandler<PlanetEventList>#draw\n * @fires EventsHandler<PlanetEventList>#layeradd\n * @fires EventsHandler<PlanetEventList>#baselayerchange\n * @fires EventsHandler<PlanetEventList>#layerremove\n * @fires EventsHandler<PlanetEventList>#layervisibilitychange\n * @fires EventsHandler<PlanetEventList>#geoimageadd\n */\nexport class Planet extends RenderNode {\n\n    public events: EventsHandler<PlanetEventsList>;\n\n    /**\n     * @public\n     * @type {Ellipsoid}\n     */\n    public ellipsoid: Ellipsoid;\n\n    /**\n     * @public\n     * @override\n     * @type {Boolean}\n     */\n    public override lightEnabled: boolean;\n\n    /**\n     * Squared ellipsoid radius.\n     * @public\n     * @type {number}\n     */\n    public _planetRadius2: number;\n\n    /**\n     * Layers array.\n     * @public\n     * @type {Array.<Layer>}\n     */\n    public _layers: Layer[];\n\n    /**\n     * Flag to trigger layer update in a next frame\n     * @type {boolean}\n     * @protected\n     */\n    protected _updateLayer: boolean;\n\n    /**\n     * Current visible imagery tile layers array.\n     * @public\n     * @type {Array.<Layer>}\n     */\n    public visibleTileLayers: Layer[];\n\n    /**\n     * Current visible vector layers array.\n     * @protected\n     * @type {Array.<Layer>}\n     */\n    protected visibleVectorLayers: Layer[];\n\n    protected _visibleTileLayerSlices: Layer[][];\n\n    /**\n     * Vector layers visible nodes with collections.\n     * @protected\n     * @type {Array.<EntityCollection>}\n     */\n    protected _frustumEntityCollections: EntityCollection[];\n\n    /**\n     * There is only one base layer on the globe when layer.isBaseLayer is true.\n     * @public\n     * @type {Layer}\n     */\n    public baseLayer: Layer | null;\n\n    /**\n     * Terrain provider.\n     * @public\n     * @type {EmptyTerrain}\n     */\n    public terrain: EmptyTerrain | null;\n\n    /**\n     * Camera is this.renderer.activeCamera pointer.\n     * @public\n     * @type {PlanetCamera}\n     */\n    public camera: PlanetCamera;\n\n    public maxEqualZoomAltitude: number;\n    public minEqualZoomAltitude: number;\n    public minEqualZoomCameraSlope: number;\n\n    /**\n     * Screen mouse pointer projected to planet cartesian position.\n     * @public\n     * @type {Vec3}\n     */\n    public mousePositionOnEarth: Vec3;\n\n    public emptyTexture: WebGLTextureExt | null;\n    public transparentTexture: WebGLTextureExt | null;\n    public defaultTexture: WebGLTextureExt | null;\n\n    /**\n     * Current visible minimal zoom index planet segment.\n     * @public\n     * @type {number}\n     */\n    public minCurrZoom: number;\n\n    /**\n     * Current visible maximal zoom index planet segment.\n     * @public\n     * @type {number}\n     */\n    public maxCurrZoom: number;\n\n    public _viewExtent: Extent;\n\n    protected _initialViewExtent: Extent | null;\n\n    public _createdNodesCount: number;\n\n    /**\n     * Planet's segments collected for rendering frame.\n     * @public\n     * @type {Node}\n     */\n    public _renderedNodes: Node[];\n\n    public _renderedNodesInFrustum: Node[][];\n\n    /**\n     * Current visible mercator segments tree nodes array.\n     * @public\n     * @type {Node}\n     *\n     * @todo\n     * _visibleNodes, _visibleNodesNorth and _visibleNodesSouth should\n     * be replaced to strategy and Vector layer reworked in collecting methods.\n     * _visibleNodes, and _visibleNodesNorth and South are used in Vector\n     * layer only, for entity terrain collision\n     *\n     */\n    public _visibleNodes: Record<number, Node>;\n\n    /**\n     * Current visible north pole nodes tree nodes array.\n     * @public\n     * @type {Node}\n     * @todo\n     */\n    public _visibleNodesNorth: Record<number, Node>;\n\n    /**\n     * Current visible south pole nodes tree nodes array.\n     * @public\n     * @type {Node}\n     * @todo\n     */\n    public _visibleNodesSouth: Record<number, Node>;\n\n    /**\n     * Layers activity lock.\n     * @public\n     * @type {Lock}\n     */\n    public layerLock: Lock;\n\n    /**\n     * Terrain providers activity lock.\n     * @public\n     * @type {Lock}\n     */\n    public terrainLock: Lock;\n\n    /**\n     * Height scale factor. 1 - is normal elevation scale.\n     * @public\n     * @type {number}\n     */\n    public _heightFactor: number;\n\n    /**\n     * Precomputed indexes array for different grid size segments.\n     * @protected\n     * @type {Array.<Array.<number>>}\n     */\n    public _indexesCache: IndexBufferCacheData[][][][][];\n\n    protected _indexesCacheToRemove: IndexBufferCacheData[];\n    public _indexesCacheToRemoveCounter: number;\n\n    /**\n     * Precomputed texture coordinates buffers for different grid size segments.\n     * @public\n     * @type {Array.<Array.<number>>}\n     */\n    public _textureCoordsBufferCache: WebGLBufferExt[];\n\n    public quadTreeStrategy: QuadTreeStrategy;\n\n    /**\n     * Night glowing gl texture.\n     * @protected\n     */\n    protected _nightTexture: WebGLTextureExt | null;\n\n    /**\n     * Specular mask gl texture.\n     * @protected\n     */\n    protected _specularTexture: WebGLTextureExt | null;\n\n\n    public _ambient: Float32Array;\n    public _diffuse: Float32Array;\n    public _specular: Float32Array;\n\n    protected _maxGridSize: number;\n\n    /**\n     * Segment multiple textures size.(4 - convenient value for the most devices)\n     * @const\n     * @public\n     */\n    public SLICE_SIZE: number;\n    public SLICE_SIZE_4: number;\n    public SLICE_SIZE_3: number;\n\n    /**\n     * Level of details of visible segments.\n     * @protected\n     * @type {number}\n     */\n    protected _lodSize: number;\n    protected _curLodSize: number;\n    protected _minLodSize: number;\n    public _maxLodSize: number;\n\n    public _pickingColorArr: Float32Array;\n    public _samplerArr: Int32Array;\n    public _pickingMaskArr: Int32Array;\n\n    /**\n     * GeoImage creator.\n     * @public\n     * @type{GeoImageCreator}\n     */\n    public _geoImageCreator: GeoImageCreator;\n\n    /**\n     * VectorTileCreator creator.\n     * @public\n     * @type{VectorTileCreator}\n     */\n    public _vectorTileCreator: VectorTileCreator;\n\n    /**\n     * NormalMapCreator creator.\n     * @public\n     * @type{NormalMapCreator}\n     */\n    public _normalMapCreator: NormalMapCreator;\n\n    public _terrainWorker: TerrainWorker;\n\n    public _plainSegmentWorker: PlainSegmentWorker;\n\n    public _tileLoader: Loader<Layer>;\n\n    protected _memKey: Key;\n\n    public _distBeforeMemClear: number;\n\n    protected _prevCamEye: Vec3;\n\n    protected _initialized: boolean;\n\n    protected always: any[];\n\n    public _renderCompleted: boolean\n    public _renderCompletedActivated: boolean;\n\n    public _terrainCompleted: boolean;\n    public _terrainCompletedActivated: boolean;\n\n    protected _collectRenderNodesIsActive: boolean;\n\n    /**\n     * Night texture brightness coefficient\n     * @type {number}\n     */\n    public nightTextureCoefficient: number;\n\n    protected _renderScreenNodesPASS: Function;\n\n    protected _atmosphereEnabled: boolean;\n    protected _atmosphereMaxMinOpacity: Float32Array;\n\n    public solidTextureOne: WebGLTextureExt | null;\n    public solidTextureTwo: WebGLTextureExt | null;\n\n    protected _skipPreRender: boolean;\n\n    protected _nightTextureSrc: string | null;\n    protected _specularTextureSrc: string | null;\n\n    constructor(options: IPlanetParams = {}) {\n        super(options.name);\n\n        this.ellipsoid = options.ellipsoid || wgs84;\n\n        this.lightEnabled = true;\n\n        this._planetRadius2 = this.ellipsoid.getPolarSize() * this.ellipsoid.getPolarSize();\n\n        this._layers = [];\n\n        this._updateLayer = false;\n\n        this.visibleTileLayers = [];\n\n        this.visibleVectorLayers = [];\n\n        this._visibleTileLayerSlices = [];\n\n        this._frustumEntityCollections = [];\n\n        this.baseLayer = null;\n\n        this.terrain = null;\n\n        this.camera = new PlanetCamera(this, {\n            frustums: options.frustums,\n            eye: new Vec3(25000000, 0, 0),\n            look: Vec3.ZERO,\n            up: Vec3.NORTH,\n            minAltitude: options.minAltitude,\n            maxAltitude: options.maxAltitude\n        });\n\n        this.maxEqualZoomAltitude = options.maxEqualZoomAltitude || 15000000.0;\n        this.minEqualZoomAltitude = options.minEqualZoomAltitude || 10000.0;\n        this.minEqualZoomCameraSlope = options.minEqualZoomCameraSlope || 0.8;\n\n        this.mousePositionOnEarth = new Vec3();\n\n        this.emptyTexture = null;\n        this.transparentTexture = null;\n        this.defaultTexture = null;\n\n        this.minCurrZoom = math.MAX;\n\n        this.maxCurrZoom = math.MIN;\n\n        this._viewExtent = new Extent(new LonLat(180, 180), new LonLat(-180, -180));\n\n        this._skipPreRender = false;\n\n        this._initialViewExtent = null;\n\n        this._createdNodesCount = 0;\n\n        this._renderedNodes = [];\n        this._renderedNodesInFrustum = [];\n\n        this._visibleNodes = {};\n\n        this._visibleNodesNorth = {};\n\n        this._visibleNodesSouth = {};\n\n        this.layerLock = new Lock();\n\n        this.terrainLock = new Lock();\n\n        this._heightFactor = 1.0;\n\n        this._indexesCache = [];\n        this._indexesCacheToRemove = [];\n        this._indexesCacheToRemoveCounter = 0;\n\n        this._textureCoordsBufferCache = [];\n\n        this.quadTreeStrategy = options.quadTreeStrategyPrototype ? new options.quadTreeStrategyPrototype(this) : new EarthQuadTreeStrategy(this);\n\n        this._nightTexture = null;\n\n        this._specularTexture = null;\n\n        let a = utils.createColorRGB(options.ambient, new Vec3(0.2, 0.2, 0.3));\n        let d = utils.createColorRGB(options.diffuse, new Vec3(1.0, 1.0, 1.0));\n        let s = utils.createColorRGB(options.specular, new Vec3(0.00063, 0.00055, 0.00032));\n        let shininess = options.shininess || 18.0;\n\n        this._ambient = new Float32Array([a.x, a.y, a.z]);\n        this._diffuse = new Float32Array([d.x, d.y, d.z]);\n        this._specular = new Float32Array([s.x, s.y, s.z, shininess]);\n\n        this._maxGridSize = Math.log2(options.maxGridSize || 256);\n\n        this.SLICE_SIZE = 4;\n        this.SLICE_SIZE_4 = this.SLICE_SIZE * 4;\n        this.SLICE_SIZE_3 = this.SLICE_SIZE * 3;\n\n        this._lodSize = CUR_LOD_SIZE;\n        this._curLodSize = CUR_LOD_SIZE;\n        this._minLodSize = MIN_LOD_SIZE;\n        this._maxLodSize = MAX_LOD_SIZE;\n\n        this._pickingColorArr = new Float32Array(this.SLICE_SIZE_4);\n        this._samplerArr = new Int32Array(this.SLICE_SIZE);\n        this._pickingMaskArr = new Int32Array(this.SLICE_SIZE);\n\n        this._geoImageCreator = new GeoImageCreator(this);\n\n        this._vectorTileCreator = new VectorTileCreator(this);\n\n        this._normalMapCreator = new NormalMapCreator(this);\n\n        this._terrainWorker = new TerrainWorker(3);\n\n        this._plainSegmentWorker = new PlainSegmentWorker(3);\n\n        this._tileLoader = new Loader(options.maxLoadingRequests || 12);\n\n        this._memKey = new Key();\n\n        this.events = createEvents<PlanetEventsList>(PLANET_EVENTS);\n\n        this._distBeforeMemClear = 0.0;\n\n        this._prevCamEye = new Vec3();\n\n        this._initialized = false;\n\n        this.always = [];\n\n        this._renderCompleted = false;\n        this._renderCompletedActivated = false;\n\n        this._terrainCompleted = false;\n        this._terrainCompletedActivated = false;\n        this._collectRenderNodesIsActive = true;\n\n        this.nightTextureCoefficient = 2.0;\n\n        this._renderScreenNodesPASS = this._renderScreenNodesPASSNoAtmos;\n\n        this._atmosphereEnabled = options.atmosphereEnabled || false;\n        this._atmosphereMaxMinOpacity = new Float32Array([1.0, 0.41]);\n\n        this.solidTextureOne = null;\n        this.solidTextureTwo = null;\n\n        this._nightTextureSrc = options.nightTextureSrc || null;\n        this._specularTextureSrc = options.specularTextureSrc || null;\n    }\n\n    public get maxGridSize(): number {\n        return this._maxGridSize;\n    }\n\n    public getNorthFrameRotation(cartesian: Vec3): Quat {\n        return this.ellipsoid.getNorthFrameRotation(cartesian);\n    }\n\n    public set atmosphereMaxOpacity(opacity: number) {\n        this._atmosphereMaxMinOpacity[0] = opacity;\n    }\n\n    public get atmosphereMaxOpacity(): number {\n        return this._atmosphereMaxMinOpacity[0];\n    }\n\n    public set atmosphereMinOpacity(opacity: number) {\n        this._atmosphereMaxMinOpacity[1] = opacity;\n    }\n\n    public get atmosphereMinOpacity(): number {\n        return this._atmosphereMaxMinOpacity[1];\n    }\n\n    public set atmosphereEnabled(enabled: boolean) {\n        if (enabled != this._atmosphereEnabled) {\n            this._atmosphereEnabled = enabled;\n            this._initializeAtmosphere();\n        }\n    }\n\n    public get atmosphereEnabled(): boolean {\n        return this._atmosphereEnabled;\n    }\n\n    public set diffuse(rgb: string | NumberArray3 | Vec3) {\n        let vec = createColorRGB(rgb);\n        this._diffuse = new Float32Array(vec.toArray());\n    }\n\n    public set ambient(rgb: string | NumberArray3 | Vec3) {\n        let vec = createColorRGB(rgb);\n        this._ambient = new Float32Array(vec.toArray());\n    }\n\n    public set specular(rgb: string | NumberArray3 | Vec3) {\n        let vec = createColorRGB(rgb);\n        this._specular = new Float32Array([vec.x, vec.y, vec.y, this._specular[3]]);\n    }\n\n    public set shininess(v: number) {\n        this._specular[3] = v;\n    }\n\n    public get normalMapCreator(): NormalMapCreator {\n        return this._normalMapCreator;\n    }\n\n    public get layers(): Layer[] {\n        return [...this._layers];\n    }\n\n    /**\n     * @todo: remove after tests\n     * Get the collection of layers associated with this planet.\n     * @return {Array.<Layer>} Layers array.\n     * @public\n     */\n    public getLayers(): Layer[] {\n        return this.layers;\n    }\n\n\n    public get sunPos(): Vec3 {\n        return (this.renderer!.controls.sun as Sun).sunlight.getPosition();\n    }\n\n    /**\n     * Add the given control to the renderer of the planet scene.\n     * @param {Control} control - Control.\n     */\n    public addControl(control: Control) {\n        control.planet = this;\n        control.addTo(this.renderer!);\n    }\n\n    public get lodSize(): number {\n        return this._lodSize;\n    }\n\n    public setLodSize(currentLodSize: number, minLodSize?: number, maxLodSize?: number) {\n        this._maxLodSize = maxLodSize || this._maxLodSize;\n        this._minLodSize = minLodSize || this._minLodSize;\n        this._curLodSize = currentLodSize;\n        this._renderCompletedActivated = false;\n        this._terrainCompletedActivated = false;\n    }\n\n    /**\n     * Add the given controls array to the renderer of the planet.\n     * @param {Array.<Control>} cArr - Control array.\n     */\n    public addControls(cArr: Control[]) {\n        for (let i = 0; i < cArr.length; i++) {\n            this.addControl(cArr[i]);\n        }\n    }\n\n    /**\n     * Return layer by it name\n     * @param {string} name - Name of the layer. og.Layer.prototype.name\n     * @public\n     * @returns {Layer} -\n     */\n    public getLayerByName(name: string): Layer | undefined {\n        for (let i = 0, len = this._layers.length; i < len; i++) {\n            if (name === this._layers[i].name) {\n                return this._layers[i];\n            }\n        }\n    }\n\n    /**\n     * Adds layer to the planet.\n     * @param {Layer} layer - Layer object.\n     * @public\n     */\n    public addLayer(layer: Layer) {\n        layer.addTo(this);\n    }\n\n    /**\n     * Dispatch layer visibility changing event.\n     * @param {Layer} layer - Changed layer.\n     * @public\n     */\n    public _onLayerVisibilityChanged(layer: Layer) {\n        this.events.dispatch(this.events.layervisibilitychange, layer);\n    }\n\n    /**\n     * Adds the given layers array to the planet.\n     * @param {Array.<Layer>} layers - Layers array.\n     * @public\n     */\n    public addLayers(layers: Layer[]) {\n        for (let i = 0, len = layers.length; i < len; i++) {\n            this.addLayer(layers[i]);\n        }\n    }\n\n    /**\n     * Removes the given layer from the planet.\n     * @param {Layer} layer - Layer to remove.\n     * @public\n     */\n    public removeLayer(layer: Layer) {\n        layer.remove();\n    }\n\n    /**\n     *\n     * @public\n     * @param {Layer} layer - Material layer.\n     */\n    public _clearLayerMaterial(layer: Layer) {\n        this.quadTreeStrategy.clearLayerMaterial(layer);\n    }\n\n    /**\n     * Sets base layer coverage to the planet.\n     * @param {Layer} layer - Layer object.\n     * @public\n     */\n    public setBaseLayer(layer: Layer) {\n        if (this.baseLayer) {\n            if (!this.baseLayer.isEqual(layer)) {\n                this.baseLayer.setVisibility(false);\n                this.baseLayer = layer;\n                layer.setVisibility(true);\n                this.events.dispatch(this.events.baselayerchange, layer);\n            }\n        } else {\n            this.baseLayer = layer;\n            this.baseLayer.setVisibility(true);\n            this.events.dispatch(this.events.baselayerchange, layer);\n        }\n    }\n\n    /**\n     * Sets elevation scale. 1.0 is default.\n     * @param {number} factor - Elevation scale.\n     */\n    public setHeightFactor(factor: number) {\n        this._renderCompletedActivated = false;\n        this._terrainCompletedActivated = false;\n\n        if (this._heightFactor !== factor) {\n            this._heightFactor = factor;\n            this.quadTreeStrategy.destroyBranches();\n            this._clearRenderedNodeList();\n            this._clearRenderNodesInFrustum();\n        }\n    }\n\n    /**\n     * Gets elevation scale.\n     * @returns {number} Terrain elevation scale\n     */\n    public getHeightFactor(): number {\n        return this._heightFactor;\n    }\n\n    /**\n     * Sets terrain provider\n     * @public\n     * @param {EmptyTerrain} terrain - Terrain provider.\n     */\n    public setTerrain(terrain: EmptyTerrain) {\n        this._renderCompletedActivated = false;\n        this._terrainCompletedActivated = false;\n\n        if (this._initialized) {\n            this.memClear();\n        }\n\n        if (this.terrain) {\n            this.terrain.abortLoading();\n            this.terrain.clearCache();\n            this.terrain._planet = null;\n        }\n\n        this.terrain = terrain;\n        this.terrain._planet = this;\n\n        this.quadTreeStrategy.destroyBranches();\n\n        if (terrain._geoid.model) {\n            this._plainSegmentWorker.setGeoid(terrain.getGeoid());\n            terrain._isReady = true;\n        } else {\n            Geoid.loadModel(terrain.geoid.src)\n                .then((m: GeoidModel | null) => {\n                    terrain.geoid.setModel(m);\n                    this._plainSegmentWorker.setGeoid(terrain.getGeoid());\n                    terrain._isReady = true;\n                })\n                .catch((err) => {\n                    console.warn(err);\n                });\n        }\n    }\n\n    protected _initializeAtmosphere() {\n        let h = this.renderer!.handler;\n        h.removeProgram(\"drawnode_screen_wl\");\n\n        if (this._atmosphereEnabled) {\n\n            this._renderScreenNodesPASS = this._renderScreenNodesPASSAtmos;\n\n            if (h.isWebGl2()) {\n                h.addProgram(shaders.drawnode_screen_wl_webgl2Atmos(), true);\n            } else {\n                h.addProgram(shaders.drawnode_screen_wl_webgl1NoAtmos(), true);\n            }\n\n            if (!this.renderer!.controls.Atmosphere) {\n                this.addControl(new Atmosphere());\n            } else {\n                this.renderer!.controls.Atmosphere.activate();\n            }\n\n            if (this.renderer!.controls.SimpleSkyBackground) {\n                this.renderer!.controls.SimpleSkyBackground.deactivate();\n            }\n\n        } else {\n\n            this._renderScreenNodesPASS = this._renderScreenNodesPASSNoAtmos;\n\n            if (this.renderer!.controls.Atmosphere) {\n                this.renderer!.controls.Atmosphere.deactivate();\n            }\n\n            if (!this.renderer!.controls.SimpleSkyBackground) {\n                this.addControl(new SimpleSkyBackground());\n            } else {\n                this.renderer!.controls.SimpleSkyBackground.activate();\n            }\n\n            if (h.isWebGl2()) {\n                h.addProgram(shaders.drawnode_screen_wl_webgl2NoAtmos(), true);\n            } else {\n                h.addProgram(shaders.drawnode_screen_wl_webgl1NoAtmos(), true);\n            }\n        }\n    }\n\n    protected _initializeShaders() {\n        let h = this.renderer!.handler;\n\n        h.addProgram(shaders.drawnode_screen_nl(), true);\n        h.addProgram(shaders.drawnode_colorPicking(), true);\n        h.addProgram(shaders.drawnode_depth(), true);\n        h.addProgram(shaders.drawnode_heightPicking(), true);\n\n        this.renderer!.addPickingCallback(this, this._renderColorPickingFramebufferPASS);\n        this.renderer!.addDepthCallback(this, this._renderDepthFramebufferPASS);\n        this.renderer!.addDistanceCallback(this, this._renderDistanceFramebufferPASS);\n    }\n\n    protected _onLayerLoadend(layer: Layer) {\n        this.events.dispatch(this.events.layerloadend, layer);\n    }\n\n    public override init() {\n\n        this._tileLoader.events.on(\"layerloadend\", this._onLayerLoadend, this);\n\n        // Initialization indexes table\n        segmentHelper.getInstance().setMaxGridSize(this._maxGridSize);\n\n        const TABLESIZE = this._maxGridSize;\n\n        let kk = 0;\n        // Initialization indexes buffers cache. It takes about 120mb RAM!\n        for (let i = 0; i <= TABLESIZE; i++) {\n            !this._indexesCache[i] && (this._indexesCache[i] = new Array(TABLESIZE));\n            for (let j = 0; j <= TABLESIZE; j++) {\n                !this._indexesCache[i][j] && (this._indexesCache[i][j] = new Array(TABLESIZE));\n                for (let k = 0; k <= TABLESIZE; k++) {\n                    !this._indexesCache[i][j][k] && (this._indexesCache[i][j][k] = new Array(TABLESIZE));\n                    for (let m = 0; m <= TABLESIZE; m++) {\n                        !this._indexesCache[i][j][k][m] && (this._indexesCache[i][j][k][m] = new Array(TABLESIZE));\n                        for (let q = 0; q <= TABLESIZE; q++) {\n\n                            let ptr: IndexBufferCacheData = {\n                                buffer: null\n                            };\n\n                            if (i >= 1 && i === j && i === k && i === m && i === q) {\n                                let indexes = segmentHelper.getInstance().createSegmentIndexes(i, [j, k, m, q]);\n                                ptr.buffer = this.renderer!.handler.createElementArrayBuffer(indexes, 1);\n                            } else {\n                                this._indexesCacheToRemove[kk++] = ptr;\n                            }\n\n                            this._indexesCache[i][j][k][m][q] = ptr;\n                        }\n                    }\n                }\n            }\n        }\n\n        this.renderer!.events.on(\"resize\", () => {\n            this._renderCompletedActivated = false;\n            this._terrainCompletedActivated = false;\n        });\n\n        // Initialize texture coordinates buffer pool\n        this._textureCoordsBufferCache = [];\n\n        let texCoordCache = segmentHelper.getInstance().initTextureCoordsTable(TABLESIZE + 1);\n\n        for (let i = 0; i <= TABLESIZE; i++) {\n            this._textureCoordsBufferCache[i] = this.renderer!.handler.createArrayBuffer(texCoordCache[i], 2, ((1 << i) + 1) * ((1 << i) + 1));\n        }\n\n        // creating empty textures\n        this.renderer!.handler.createDefaultTexture(null, (t: WebGLTextureExt) => {\n            this.solidTextureOne = t;\n            this.solidTextureTwo = t;\n        });\n\n        this.transparentTexture = this.renderer!.handler.transparentTexture;\n\n        this._renderedNodesInFrustum = new Array(this.camera.frustums.length);\n        for (let i = 0, len = this._renderedNodesInFrustum.length; i < len; i++) {\n            this._renderedNodesInFrustum[i] = [];\n        }\n\n        // Creating quad trees nodes\n        this.quadTreeStrategy.init();\n\n        this.drawMode = this.renderer!.handler.gl!.TRIANGLE_STRIP;\n\n        // Applying shaders\n        this._initializeShaders();\n\n        this._initializeAtmosphere();\n\n        this._updateVisibleLayers();\n\n        this.renderer!.addPickingCallback(this, this._frustumEntityCollectionPickingCallback);\n\n        // loading Earth night glowing texture\n        if (this._nightTextureSrc) {\n\n            let img = new Image();\n            img.onload = () => {\n                this._nightTexture = this.renderer!.handler.createTextureDefault(img)!;\n                this._nightTexture.default = true;\n            };\n            img.src = this._nightTextureSrc;\n\n            // createImageBitmap(NIGHT).then((e: ImageBitmap) => {\n            //     this._nightTexture = this.renderer!.handler!.createTextureDefault(e);\n            // });\n        }\n\n        // load water specular mask\n        if (this._specularTextureSrc) {\n            let img = new Image();\n            img.onload = () => {\n                this._specularTexture = this.renderer!.handler.createTextureDefault(img)!;\n                this._specularTexture.default = true;\n            };\n            img.src = this._specularTextureSrc;\n\n            // createImageBitmap(SPECULAR).then((e: ImageBitmap) => {\n            //     this._specularTexture = this.renderer!.handler!.createTexture_l(e);\n            // });\n        }\n\n        this._geoImageCreator.init();\n\n        this._vectorTileCreator.init();\n\n        this._normalMapCreator.init();\n\n        this.renderer!.events.on(\"draw\", this._globalPreDraw, this, -100);\n\n        // Loading first nodes for better viewing if you have started on a lower altitude.\n        this._preRender();\n\n        this.renderer!.events.on(\"postdraw\", () => {\n            this._checkRendercompleted();\n        });\n\n        this.initLayers();\n\n        this._initialized = true;\n\n        //\n        // after init\n        //\n        if (this._initialViewExtent) {\n            this.viewExtent(this._initialViewExtent);\n        }\n\n        this.renderer!.activeCamera = this.camera;\n        this.camera.bindRenderer(this.renderer!);\n        this.camera.update();\n    }\n\n    public initLayers() {\n        let temp = [...this._layers];\n        for (let i = 0; i < temp.length; i++) {\n            this.removeLayer(temp[i]);\n            this.addLayer(temp[i]);\n        }\n    }\n\n    protected _clearIndexesCache() {\n        this._indexesCacheToRemoveCounter = 0;\n        let c = this._indexesCacheToRemove,\n            gl = this.renderer!.handler.gl!;\n        for (let i = 0, len = c.length; i < len; i++) {\n            let ci = c[i];\n            gl.deleteBuffer(ci.buffer as WebGLBuffer);\n            ci.buffer = null;\n        }\n    }\n\n    protected _preRender() {\n        this.quadTreeStrategy.preRender();\n        this._preLoad();\n    }\n\n    protected _preLoad() {\n        this._clearRenderedNodeList();\n        this._skipPreRender = false;\n        this.quadTreeStrategy.preLoad();\n    }\n\n    /**\n     * Creates default textures first for the North Pole and whole globe and second for the South Pole.\n     * @public\n     * @param{IDefaultTextureParams} param0 -\n     * @param{IDefaultTextureParams} param1 -\n     */\n    public createDefaultTextures(param0: IDefaultTextureParams, param1: IDefaultTextureParams) {\n        this.renderer!.handler.gl!.deleteTexture(this.solidTextureOne!);\n        this.renderer!.handler.gl!.deleteTexture(this.solidTextureTwo!);\n        this.renderer!.handler.createDefaultTexture(param0, (texture: WebGLTextureExt) => {\n            this.solidTextureOne = texture;\n        });\n        this.renderer!.handler.createDefaultTexture(param1, (texture: WebGLTextureExt) => {\n            this.solidTextureTwo = texture;\n        });\n    }\n\n    protected _getLayerAttributionHTML(layer: Layer) {\n        return `<div class=\"og-attribution__layer\">${layer.getAttribution()}</div>`;\n    }\n\n    /**\n     * Updates attribution lists\n     * @public\n     */\n    public updateAttributionsList() {\n        let html = \"\";\n        for (let i = 0, len = this._layers.length; i < len; i++) {\n            let li = this._layers[i];\n            if (li.getVisibility()) {\n                if (li.getAttribution().length) {\n                    html += this._getLayerAttributionHTML(li);\n                }\n            }\n        }\n        this._applyAttribution(html)\n    }\n\n    public updateVisibleLayers() {\n        this._updateLayer = true;\n    }\n\n    protected _updateVisibleLayers() {\n        this.visibleTileLayers = [];\n        this.visibleTileLayers.length = 0;\n\n        this.visibleVectorLayers = [];\n        this.visibleVectorLayers.length = 0;\n\n        let html = \"\";\n        for (let i = 0, len = this._layers.length; i < len; i++) {\n            let li = this._layers[i];\n            if (li.getVisibility()) {\n                if (li.isBaseLayer()) {\n                    this.createDefaultTextures(li._defaultTextures[0]!, li._defaultTextures[1]!);\n                    this.baseLayer = li;\n                }\n\n                if (li.hasImageryTiles()) {\n                    this.visibleTileLayers.push(li);\n                }\n\n                if (li.isVector) {\n                    this.visibleVectorLayers.push(li);\n                }\n\n                if (li.getAttribution().length) {\n                    html += this._getLayerAttributionHTML(li);\n                }\n\n            } else if (li._fading && li._fadingOpacity > 0) {\n                if (li.hasImageryTiles()) {\n                    this.visibleTileLayers.push(li);\n                }\n\n                if (li.isVector) {\n                    this.visibleVectorLayers.push(li);\n                }\n            }\n        }\n\n        this._applyAttribution(html);\n\n        this._sortLayers();\n    }\n\n    /**\n     * Apply to render list of layer attributions\n     * @protected\n     */\n    protected _applyAttribution(html: string) {\n        if (this.renderer && this.renderer.div) {\n            if (html.length) {\n                if (this.renderer.div.attributions!.innerHTML !== html) {\n                    this.renderer.div.attributions!.innerHTML = html;\n                }\n            } else {\n                this.renderer.div.attributions!.innerHTML = \"\";\n            }\n        }\n    }\n\n    /**\n     * Sort visible layer - preparing for rendering.\n     * @protected\n     */\n    protected _sortLayers() {\n\n        this.visibleVectorLayers.sort((a, b) => (a.getZIndex() - b.getZIndex()) || (a.getHeight() - b.getHeight()));\n\n        this._visibleTileLayerSlices = [];\n        this._visibleTileLayerSlices.length = 0;\n\n        if (this.visibleTileLayers.length) {\n            this.visibleTileLayers.sort((a, b) => (a.getHeight() - b.getHeight()) || (a.getZIndex() - b.getZIndex()));\n\n            let k = -1;\n            let currHeight = this.visibleTileLayers[0].getHeight();\n            for (let i = 0, len = this.visibleTileLayers.length; i < len; i++) {\n                if (i % this.SLICE_SIZE === 0 || this.visibleTileLayers[i].getHeight() !== currHeight) {\n                    k++;\n                    this._visibleTileLayerSlices[k] = [];\n                    currHeight = this.visibleTileLayers[i].getHeight();\n                }\n                this._visibleTileLayerSlices[k].push(this.visibleTileLayers[i]);\n            }\n        }\n    }\n\n    protected _clearRenderedNodeList() {\n        this._renderedNodes.length = 0;\n        this._renderedNodes = [];\n    }\n\n    protected _clearRenderNodesInFrustum() {\n        for (let i = 0, len = this._renderedNodesInFrustum.length; i < len; i++) {\n            this._renderedNodesInFrustum[i].length = 0;\n            this._renderedNodesInFrustum[i] = [];\n        }\n    }\n\n    /**\n     * Collects visible quad nodes.\n     * @protected\n     */\n    protected _collectRenderNodes() {\n        let cam = this.camera;\n        this._lodSize = math.lerp(cam.slope < 0.0 ? 0.0 : cam.slope, this._curLodSize, this._minLodSize);\n\n        cam._insideSegment = null;\n\n        // clear first\n        this._clearRenderedNodeList();\n        this._clearRenderNodesInFrustum();\n\n        this._viewExtent.southWest.set(180, 180);\n        this._viewExtent.northEast.set(-180, -180);\n\n        this._visibleNodes = {};\n        this._visibleNodesNorth = {};\n        this._visibleNodesSouth = {};\n\n        this.minCurrZoom = math.MAX;\n        this.maxCurrZoom = math.MIN;\n\n        this.quadTreeStrategy.collectRenderNodes();\n\n        if (cam.slope > this.minEqualZoomCameraSlope && cam._lonLat.height < this.maxEqualZoomAltitude && cam._lonLat.height > this.minEqualZoomAltitude) {\n\n            this.minCurrZoom = this.maxCurrZoom;\n\n            let temp = this._renderedNodes, rf = this._renderedNodesInFrustum, temp2 = [];\n\n            this._clearRenderNodesInFrustum();\n            this._renderedNodes = [];\n\n            for (let i = 0, len = temp.length; i < len; i++) {\n                let ri = temp[i];\n                let ht = ri.segment.centerNormal.dot(cam._b);\n                if (ri.segment.tileZoom === this.maxCurrZoom || ht < HORIZON_TANGENT) {\n                    this._renderedNodes.push(ri);\n                    let k = 0, inFrustum = ri.inFrustum;\n                    while (inFrustum) {\n                        if (inFrustum & 1) {\n                            rf[k].push(ri);\n                        }\n                        k++;\n                        inFrustum >>= 1;\n                    }\n                } else {\n                    temp2.push(ri);\n                }\n            }\n\n            for (let i = 0, len = temp2.length; i < len; i++) {\n                temp2[i].renderTree(cam, this.maxCurrZoom, null);\n            }\n        }\n    }\n\n    protected _globalPreDraw() {\n        let cam = this.camera;\n\n        // Might be it's better to replace it in setTerrain,\n        // but we have to be sure that setTerrain exists with renderer insttance\n        this.renderer!.__useDistanceFramebuffer__ = !this.terrain!.isEmpty;\n\n        this._distBeforeMemClear += this._prevCamEye.distance(cam.eye);\n        this._prevCamEye.copy(cam.eye);\n        cam.checkFly();\n\n        // free memory\n        if (this._createdNodesCount > MAX_NODES && this._distBeforeMemClear > 1000.0) {\n            this.terrain!.clearCache();\n            this.memClear();\n        }\n\n        if (this._indexesCacheToRemoveCounter > 600) {\n            this._clearIndexesCache();\n        }\n    }\n\n    /**\n     * Render node callback.\n     * @public\n     */\n    public override preFrame() {\n\n        if (this._updateLayer) {\n            this._updateLayer = false;\n            this._updateVisibleLayers();\n        }\n\n        if (this.camera.isFirstPass) {\n            this.camera.update();\n\n            if (this._skipPreRender && this._collectRenderNodesIsActive) {\n                this._collectRenderNodes();\n            }\n\n            this._skipPreRender = true;\n\n            this.transformLights();\n\n            // creates terrain normal maps\n            this._normalMapCreator.frame();\n\n            // Creating geoImages textures.\n            this._geoImageCreator.frame();\n\n            // Vector tiles rasterization\n            this._vectorTileCreator.frame();\n\n            this.camera.checkTerrainCollision();\n            this.camera.update();\n\n            // Here is the planet node dispatches a draw event before\n            // rendering begins, and we have got render nodes.\n            this.events.dispatch(this.events.draw, this);\n\n            // Collect entity collections from vector layers\n            this._collectVectorLayerCollections();\n        }\n\n        this.drawEntityCollections(this._frustumEntityCollections);\n    }\n\n    /**\n     * Render node callback.\n     * @public\n     * @override\n     */\n    public override frame() {\n        this._renderScreenNodesPASS();\n    }\n\n    protected _checkRendercompleted() {\n        if (this._renderCompleted) {\n            if (!this._renderCompletedActivated) {\n                this._renderCompletedActivated = true;\n                this.events.dispatch(this.events.rendercompleted, true);\n            }\n        } else {\n            this._renderCompletedActivated = false;\n        }\n        this._renderCompleted = true;\n\n        if (this._terrainCompleted) {\n            if (!this._terrainCompletedActivated) {\n                this._terrainCompletedActivated = true;\n                this.events.dispatch(this.events.terraincompleted, true);\n            }\n        } else {\n            this._terrainCompletedActivated = false;\n        }\n\n        this._terrainCompleted = true;\n    }\n\n    public lockQuadTree() {\n        this._collectRenderNodesIsActive = false;\n        this.camera.setTerrainCollisionActivity(false);\n    }\n\n    public unlockQuadTree() {\n        this._collectRenderNodesIsActive = true;\n        this.camera.setTerrainCollisionActivity(true);\n    }\n\n    protected _renderScreenNodesPASSNoAtmos() {\n\n        let sh, shu;\n        let renderer = this.renderer!;\n        let h = renderer.handler;\n        let gl = h.gl!;\n        let cam = (renderer.activeCamera as PlanetCamera)!;\n        let firstPass = cam.isFirstPass;\n        let frustumIndex = cam.currentFrustumIndex;\n\n        gl.enable(gl.CULL_FACE);\n\n        renderer.enableBlendOneSrcAlpha();\n\n        if (this.lightEnabled) {\n            h.programs.drawnode_screen_wl.activate();\n            sh = h.programs.drawnode_screen_wl._program;\n            shu = sh.uniforms;\n\n            gl.uniform3fv(shu.lightsPositions, this._lightsPositions);\n            gl.uniformMatrix4fv(shu.viewMatrix, false, cam.getViewMatrix());\n            gl.uniformMatrix4fv(shu.projectionMatrix, false, cam.getProjectionMatrix());\n\n            if (this.baseLayer) {\n                gl.uniform3fv(shu.diffuse, this.baseLayer._diffuse || this._diffuse);\n                gl.uniform3fv(shu.ambient, this.baseLayer._ambient || this._ambient);\n                gl.uniform4fv(shu.specular, this.baseLayer._specular || this._specular);\n                gl.uniform1f(shu.nightTextureCoefficient, this.baseLayer.nightTextureCoefficient || this.nightTextureCoefficient);\n            } else {\n                gl.uniform3fv(shu.diffuse, this._diffuse);\n                gl.uniform3fv(shu.ambient, this._ambient);\n                gl.uniform4fv(shu.specular, this._specular);\n                gl.uniform1f(shu.nightTextureCoefficient, this.nightTextureCoefficient);\n            }\n\n            //\n            // Night and specular\n            //\n            gl.activeTexture(gl.TEXTURE0 + this.SLICE_SIZE);\n            gl.bindTexture(gl.TEXTURE_2D, this._nightTexture as WebGLTextureExt || this.transparentTexture as WebGLTextureExt);\n            gl.uniform1i(shu.nightTexture, this.SLICE_SIZE);\n\n            gl.activeTexture(gl.TEXTURE0 + this.SLICE_SIZE + 1);\n            gl.bindTexture(gl.TEXTURE_2D, this._specularTexture as WebGLTextureExt || this.transparentTexture as WebGLTexture);\n            gl.uniform1i(shu.specularTexture, this.SLICE_SIZE + 1);\n\n            gl.uniform1f(shu.camHeight, cam.getHeight());\n\n        } else {\n            h.programs.drawnode_screen_nl.activate();\n            sh = h.programs.drawnode_screen_nl._program;\n            shu = sh.uniforms;\n            gl.uniformMatrix4fv(shu.viewMatrix, false, cam.getViewMatrix());\n            gl.uniformMatrix4fv(shu.projectionMatrix, false, cam.getProjectionMatrix());\n        }\n\n        gl.uniform3fv(shu.eyePositionHigh, cam.eyeHigh);\n        gl.uniform3fv(shu.eyePositionLow, cam.eyeLow);\n\n        //\n        // drawing planet nodes\n        //\n        let rn = this._renderedNodesInFrustum[frustumIndex],\n            sl = this._visibleTileLayerSlices;\n\n        if (sl.length) {\n            let sli = sl[0];\n            for (let i = sli.length - 1; i >= 0; --i) {\n                let li = sli[i];\n                if (li._fading && firstPass && li._refreshFadingOpacity()) {\n                    sli.splice(i, 1);\n                }\n            }\n        }\n\n        let isEq = this.terrain!.equalizeVertices;\n        let i = rn.length;\n        while (i--) {\n            let s = rn[i].segment;\n            isEq && s.equalize();\n            s.readyToEngage && s.engage();\n            s.screenRendering(sh, sl[0], 0);\n        }\n\n        gl.enable(gl.POLYGON_OFFSET_FILL);\n        //gl.disable(gl.CULL_FACE);\n        for (let j = 1, len = sl.length; j < len; j++) {\n            let slj = sl[j];\n            for (i = slj.length - 1; i >= 0; --i) {\n                let li = slj[i];\n                if (li._fading && firstPass && li._refreshFadingOpacity()) {\n                    slj.splice(i, 1);\n                }\n            }\n\n            gl.polygonOffset(0, -j);\n            i = rn.length;\n            while (i--) {\n                rn[i].segment.screenRendering(sh, sl[j], j, this.transparentTexture, true);\n            }\n        }\n        //gl.enable(gl.CULL_FACE);\n        gl.disable(gl.POLYGON_OFFSET_FILL);\n    }\n\n    protected _renderScreenNodesPASSAtmos() {\n\n        let sh, shu;\n        let renderer = this.renderer!;\n        let h = renderer.handler;\n        let gl = h.gl!;\n        let cam = (renderer.activeCamera as PlanetCamera)!;\n        let firstPass = cam.isFirstPass;\n        let frustumIndex = cam.currentFrustumIndex;\n\n        gl.enable(gl.CULL_FACE);\n\n        renderer.enableBlendOneSrcAlpha();\n\n        if (this.lightEnabled) {\n            h.programs.drawnode_screen_wl.activate();\n            sh = h.programs.drawnode_screen_wl._program;\n            shu = sh.uniforms;\n\n            gl.uniform3fv(shu.lightsPositions, this._lightsPositions);\n            gl.uniformMatrix4fv(shu.viewMatrix, false, cam.getViewMatrix());\n            gl.uniformMatrix4fv(shu.projectionMatrix, false, cam.getProjectionMatrix());\n\n            if (this.baseLayer) {\n                gl.uniform3fv(shu.diffuse, this.baseLayer._diffuse || this._diffuse);\n                gl.uniform3fv(shu.ambient, this.baseLayer._ambient || this._ambient);\n                gl.uniform4fv(shu.specular, this.baseLayer._specular || this._specular);\n                gl.uniform1f(shu.nightTextureCoefficient, this.baseLayer.nightTextureCoefficient || this.nightTextureCoefficient);\n            } else {\n                gl.uniform3fv(shu.diffuse, this._diffuse);\n                gl.uniform3fv(shu.ambient, this._ambient);\n                gl.uniform4fv(shu.specular, this._specular);\n                gl.uniform1f(shu.nightTextureCoefficient, this.nightTextureCoefficient);\n            }\n\n            gl.uniform2fv(shu.maxMinOpacity, this._atmosphereMaxMinOpacity);\n\n            //\n            // Night and specular\n            //\n            gl.activeTexture(gl.TEXTURE0 + this.SLICE_SIZE);\n            gl.bindTexture(gl.TEXTURE_2D, this._nightTexture as WebGLTexture || this.transparentTexture as WebGLTexture);\n            gl.uniform1i(shu.nightTexture, this.SLICE_SIZE);\n\n            gl.activeTexture(gl.TEXTURE0 + this.SLICE_SIZE + 1);\n            gl.bindTexture(gl.TEXTURE_2D, this._specularTexture as WebGLTexture || this.transparentTexture as WebGLTexture);\n            gl.uniform1i(shu.specularTexture, this.SLICE_SIZE + 1);\n\n            //\n            // atmos precomputed textures\n            //\n            gl.activeTexture(gl.TEXTURE0 + this.SLICE_SIZE + 4);\n            gl.bindTexture(gl.TEXTURE_2D, (renderer.controls.Atmosphere as Atmosphere)._transmittanceBuffer!.textures[0]);\n            gl.uniform1i(shu.transmittanceTexture, this.SLICE_SIZE + 4);\n\n            gl.activeTexture(gl.TEXTURE0 + this.SLICE_SIZE + 5);\n            gl.bindTexture(gl.TEXTURE_2D, (renderer.controls.Atmosphere as Atmosphere)._scatteringBuffer!.textures[0]);\n            gl.uniform1i(shu.scatteringTexture, this.SLICE_SIZE + 5);\n\n            gl.uniform1f(shu.camHeight, cam.getHeight());\n\n        } else {\n            h.programs.drawnode_screen_nl.activate();\n            sh = h.programs.drawnode_screen_nl._program;\n            shu = sh.uniforms;\n            gl.uniformMatrix4fv(shu.viewMatrix, false, cam.getViewMatrix());\n            gl.uniformMatrix4fv(shu.projectionMatrix, false, cam.getProjectionMatrix());\n        }\n\n        gl.uniform3fv(shu.eyePositionHigh, cam.eyeHigh);\n        gl.uniform3fv(shu.eyePositionLow, cam.eyeLow);\n\n        //\n        // drawing planet nodes\n        //\n        let rn = this._renderedNodesInFrustum[frustumIndex],\n            sl = this._visibleTileLayerSlices;\n\n        if (sl.length) {\n            let sli = sl[0];\n            for (let i = sli.length - 1; i >= 0; --i) {\n                let li = sli[i];\n                if (li._fading && firstPass && li._refreshFadingOpacity()) {\n                    sli.splice(i, 1);\n                }\n            }\n        }\n\n        let isEq = this.terrain!.equalizeVertices;\n        let i = rn.length;\n        while (i--) {\n            let s = rn[i].segment;\n            isEq && s.equalize();\n            s.readyToEngage && s.engage();\n            s.screenRendering(sh, sl[0], 0);\n        }\n\n        gl.enable(gl.POLYGON_OFFSET_FILL);\n        for (let j = 1, len = sl.length; j < len; j++) {\n            let slj = sl[j];\n            for (i = slj.length - 1; i >= 0; --i) {\n                let li = slj[i];\n                if (li._fading && firstPass && li._refreshFadingOpacity()) {\n                    slj.splice(i, 1);\n                }\n            }\n\n            gl.polygonOffset(0, -j);\n            i = rn.length;\n            while (i--) {\n                rn[i].segment.screenRendering(sh, sl[j], j, this.transparentTexture, true);\n            }\n        }\n        gl.disable(gl.POLYGON_OFFSET_FILL);\n    }\n\n    protected _renderDistanceFramebufferPASS() {\n        if (!this.terrain!.isEmpty) {\n\n            let sh;\n            let renderer = this.renderer!;\n            let h = renderer.handler;\n            let gl = h.gl!;\n            let cam = (renderer.activeCamera as PlanetCamera)!;\n\n            h.programs.drawnode_heightPicking.activate();\n            sh = h.programs.drawnode_heightPicking._program;\n            let shu = sh.uniforms;\n\n            gl.uniformMatrix4fv(shu.viewMatrix, false, cam.getViewMatrix());\n            gl.uniformMatrix4fv(shu.projectionMatrix, false, cam.getProjectionMatrix());\n\n            gl.uniform3fv(shu.eyePositionHigh, cam.eyeHigh);\n            gl.uniform3fv(shu.eyePositionLow, cam.eyeLow);\n\n            // drawing planet nodes\n            let rn = this._renderedNodesInFrustum[cam.currentFrustumIndex];\n            let sl = this._visibleTileLayerSlices;\n\n            let i = rn.length;\n            while (i--) {\n                rn[i].segment.heightPickingRendering(sh, sl[0]);\n            }\n        }\n    }\n\n    protected _renderColorPickingFramebufferPASS() {\n        let sh;\n        let renderer = this.renderer!;\n        let h = renderer.handler;\n        let gl = h.gl!;\n        h.programs.drawnode_colorPicking.activate();\n        sh = h.programs.drawnode_colorPicking._program;\n        let shu = sh.uniforms;\n        let cam = renderer.activeCamera!;\n\n        // Special blend\n        // gl.enable(gl.BLEND);\n        // gl.blendEquation(gl.FUNC_ADD);\n        // gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n        gl.enable(gl.CULL_FACE);\n\n        gl.uniformMatrix4fv(shu.viewMatrix, false, cam.getViewMatrix());\n        gl.uniformMatrix4fv(shu.projectionMatrix, false, cam.getProjectionMatrix());\n\n        gl.uniform3fv(shu.eyePositionHigh, cam.eyeHigh);\n        gl.uniform3fv(shu.eyePositionLow, cam.eyeLow);\n\n        // drawing planet nodes\n        let rn = this._renderedNodesInFrustum[cam.getCurrentFrustum()];\n        let sl = this._visibleTileLayerSlices;\n\n        let i = rn.length;\n        while (i--) {\n            rn[i].segment.colorPickingRendering(sh, sl[0], 0);\n        }\n\n        gl.enable(gl.POLYGON_OFFSET_FILL);\n        for (let j = 1, len = sl.length; j < len; j++) {\n            i = rn.length;\n            gl.polygonOffset(0, -j);\n            while (i--) {\n                rn[i].segment.colorPickingRendering(sh, sl[j], j, this.transparentTexture, true);\n            }\n        }\n        gl.disable(gl.POLYGON_OFFSET_FILL);\n    }\n\n    protected _renderDepthFramebufferPASS() {\n        let sh;\n        let renderer = this.renderer!;\n        let h = renderer.handler;\n        let gl = h.gl!;\n        h.programs.drawnode_depth.activate();\n        sh = h.programs.drawnode_depth._program;\n        let shu = sh.uniforms;\n        let cam = renderer.activeCamera!;\n\n        gl.disable(gl.BLEND);\n        gl.disable(gl.POLYGON_OFFSET_FILL);\n\n        gl.uniformMatrix4fv(shu.viewMatrix, false, cam.getViewMatrix());\n        gl.uniformMatrix4fv(shu.projectionMatrix, false, cam.getProjectionMatrix());\n\n        gl.uniform3fv(shu.eyePositionHigh, cam.eyeHigh);\n        gl.uniform3fv(shu.eyePositionLow, cam.eyeLow);\n\n        gl.uniform3fv(shu.frustumPickingColor, cam.frustum._pickingColorU);\n\n        // drawing planet nodes\n        let rn = this._renderedNodesInFrustum[cam.getCurrentFrustum()],\n            sl = this._visibleTileLayerSlices;\n\n        let i = rn.length;\n        while (i--) {\n            rn[i].segment.depthRendering(sh, sl[0]);\n        }\n\n        gl.enable(gl.BLEND);\n    }\n\n    protected _collectVectorLayerCollections() {\n        this._frustumEntityCollections.length = 0;\n        this._frustumEntityCollections = [];\n\n        let i = this.visibleVectorLayers.length;\n        while (i--) {\n            let vi = this.visibleVectorLayers[i] as Vector;\n\n            if (vi._fading && vi._refreshFadingOpacity()) {\n                this.visibleVectorLayers.splice(i, 1);\n            }\n\n            vi.collectVisibleCollections(this._frustumEntityCollections);\n            vi.update();\n        }\n    }\n\n    protected _frustumEntityCollectionPickingCallback() {\n        this.drawPickingEntityCollections(this._frustumEntityCollections);\n    }\n\n    /**\n     * Starts clear memory thread.\n     * @public\n     */\n    public memClear() {\n        this._distBeforeMemClear = 0;\n\n        this.camera._insideSegment = null;\n\n        this.layerLock.lock(this._memKey);\n        this.terrainLock.lock(this._memKey);\n        this._normalMapCreator.lock(this._memKey);\n\n        this._normalMapCreator.clear();\n        this.terrain!.abortLoading();\n        this._tileLoader.abortAll();\n\n        this.quadTreeStrategy.clear();\n        this.layerLock.free(this._memKey);\n        this.terrainLock.free(this._memKey);\n        this._normalMapCreator.free(this._memKey);\n\n        this._createdNodesCount = 0;\n    }\n\n    /**\n     * Returns ray vector hit ellipsoid coordinates.\n     * If the ray doesn't hit ellipsoid it returns 'undefined'.\n     * @public\n     * @param {Ray} ray - Ray.\n     * @returns {Vec3 | undefined} -\n     */\n    public getRayIntersectionEllipsoid(ray: Ray): Vec3 | undefined {\n        return this.ellipsoid.hitRay(ray.origin, ray.direction);\n    }\n\n    /**\n     * Project screen coordinates to the planet ellipsoid.\n     * @public\n     * @param {Vec2 | IBaseInputState } px - Screen coordinates.\n     * @returns {Vec3 | undefined} - Cartesian coordinates.\n     */\n    public getCartesianFromPixelEllipsoid(px: Vec2 | IBaseInputState): Vec3 | undefined {\n        let cam = this.renderer!.activeCamera!;\n        return this.ellipsoid.hitRay(cam.eye, cam.unproject(px.x, px.y));\n    }\n\n    /**\n     * Project screen coordinates to the planet ellipsoid.\n     * @public\n     * @param {Vec2 | IBaseInputState} px - Screen coordinates.\n     * @returns {LonLat | undefined} - Geodetic coordinates.\n     */\n    public getLonLatFromPixelEllipsoid(px: Vec2): LonLat | undefined {\n        let coords = this.getCartesianFromPixelEllipsoid(px);\n        if (coords) {\n            return this.ellipsoid.cartesianToLonLat(coords);\n        }\n    }\n\n    /**\n     * Returns mouse position cartesian coordinates on the current terrain.\n     * @public\n     * @returns {Vec3 | undefined} -\n     */\n    public getCartesianFromMouseTerrain(): Vec3 | undefined {\n        let ms = this.renderer!.events.mouseState;\n        let distance = this.getDistanceFromPixel(ms);\n        if (distance) {\n            return ms.direction.scaleTo(distance).addA(this.renderer!.activeCamera!.eye);\n        }\n    }\n\n    /**\n     * Returns screen coordinates cartesian coordinates on the current terrain.\n     * position or null if input coordinates is outside the planet.\n     * @public\n     * @param {Vec2} px - Pixel screen 2d coordinates.\n     * @returns {Vec3 | undefined} -\n     */\n    public getCartesianFromPixelTerrain(px: Vec2 | IBaseInputState): Vec3 | undefined {\n        let distance = this.getDistanceFromPixel(px);\n        if (distance) {\n            let direction = (px as IBaseInputState).direction || this.renderer!.activeCamera!.unproject(px.x, px.y);\n            return direction.scaleTo(distance).addA(this.renderer!.activeCamera!.eye);\n        }\n    }\n\n    /**\n     * Returns geodetic coordinates on the current terrain planet by its screen coordinates.\n     * position or null if input coordinates is outside the planet.\n     * @public\n     * @param {Vec2 | IBaseInputState} px - Pixel screen 2d coordinates.\n     * @returns {LonLat | undefined} -\n     */\n    public getLonLatFromPixelTerrain(px: Vec2 | IBaseInputState): LonLat | undefined {\n        let coords = this.getCartesianFromPixelTerrain(px);\n        if (coords) {\n            return this.ellipsoid.cartesianToLonLat(coords);\n        }\n    }\n\n    /**\n     * Project cartesian coordinates to screen space.\n     * @public\n     * @param {Vec3} coords - Cartesian coordinates.\n     * @returns {Vec2} - Screen coordinates.\n     */\n    public getPixelFromCartesian(coords: Vec3): Vec2 {\n        return this.renderer!.activeCamera!.project(coords);\n    }\n\n    /**\n     * Project geodetic coordinates to screen space.\n     * @public\n     * @param {LonLat} lonlat - Geodetic coordinates.\n     * @returns {Vec2 | undefined} - Screen coordinates.\n     */\n    public getPixelFromLonLat(lonlat: LonLat): Vec2 | undefined {\n        let coords = this.ellipsoid.lonLatToCartesian(lonlat);\n        if (coords) {\n            return this.renderer!.activeCamera!.project(coords);\n        }\n    }\n\n    /**\n     * Returns distance from an active (screen) camera to the planet ellipsoid.\n     * @public\n     * @param {Vec2} px - Screen coordinates.\n     * @returns {number} -\n     */\n    public getDistanceFromPixelEllipsoid(px: Vec2 | IBaseInputState): number | undefined {\n        let coords = this.getCartesianFromPixelEllipsoid(px);\n        if (coords) {\n            return coords.distance(this.renderer!.activeCamera!.eye);\n        }\n    }\n\n    /**\n     * Returns distance from active (screen) camera to the planet terrain by screen coordinates.\n     * @public\n     * @param {Vec2 | IBaseInputState} px - Screen coordinates.\n     * @returns {number | undefined} -\n     */\n    public getDistanceFromPixel(px: Vec2 | IBaseInputState): number {\n        if (this.terrain!.isEmpty) {\n            return this.getDistanceFromPixelEllipsoid(px) || 0;\n        } else {\n\n            let r = this.renderer!;\n            let cnv = r.handler!.canvas!;\n\n            let spx = px.x / cnv.width;\n            let spy = (cnv.height - px.y) / cnv.height;\n\n            _tempPickingPix_[0] = _tempPickingPix_[1] = _tempPickingPix_[2] = 0.0;\n\n            let dist = 0;\n\n            r.readDistanceColor(spx, spy, _tempPickingPix_);\n\n            dist = decodeFloatFromRGBAArr(_tempPickingPix_);\n\n            if (!(_tempPickingPix_[0] || _tempPickingPix_[1] || _tempPickingPix_[2])) {\n                dist = this.getDistanceFromPixelEllipsoid(px) || 0;\n            } else if (dist < DEPTH_DISTANCE) {\n                r.screenDepthFramebuffer!.activate();\n\n                //if (r.screenDepthFramebuffer.isComplete()) {\n                r.screenDepthFramebuffer!.readPixels(_tempDepthColor_, spx, spy);\n                let screenPos = new Vec4(spx * 2.0 - 1.0, spy * 2.0 - 1.0, (_tempDepthColor_[0] / 255.0) * 2.0 - 1.0, 1.0 * 2.0 - 1.0);\n                let viewPosition = this.camera.frustums[0].inverseProjectionMatrix.mulVec4(screenPos);\n                let dir = (px as IBaseInputState).direction || r.activeCamera!.unproject(px.x, px.y);\n                dist = -(viewPosition.z / viewPosition.w) / dir.dot(r.activeCamera!.getForward());\n                //}\n\n                r.screenDepthFramebuffer!.deactivate();\n            }\n            return dist;\n        }\n    }\n\n    /**\n     * Sets camera to the planet geographical extent.\n     * @public\n     * @param {Extent} extent - Geographical extent.\n     */\n    public viewExtent(extent: Extent) {\n        if (this.camera) {\n            this.camera.viewExtent(extent);\n        } else {\n            this._initialViewExtent = extent;\n        }\n    }\n\n    /**\n     * Fits camera position for the view extent.\n     * @public\n     * @param {Array.<number>} extentArr - Geographical extent array, (exactly 4 entries)\n     * where index 0 - southwest longitude, 1 - latitude southwest, 2 - longitude northeast, 3 - latitude northeast.\n     */\n    public viewExtentArr(extentArr: NumberArray4) {\n        this.viewExtent(new Extent(new LonLat(extentArr[0], extentArr[1]), new LonLat(extentArr[2], extentArr[3])));\n    }\n\n    /**\n     * Gets current camera view extent.\n     * @public\n     * @returns {Extent} -\n     */\n    public getViewExtent(): Extent {\n        return this._viewExtent;\n    }\n\n    /**\n     * Sets camera to the planet geographical position.\n     * @public\n     * @param {LonLat} lonlat - Camera position.\n     * @param {LonLat} [lookLonLat] - Viewpoint.\n     * @param {Vec3} [up] - Camera up vector.\n     */\n    public viewLonLat(lonlat: LonLat, lookLonLat?: LonLat, up?: Vec3) {\n        this.camera.setLonLat(lonlat, lookLonLat, up);\n    }\n\n    /**\n     * Fly active camera to the view extent.\n     * @public\n     * @param {Extent} extent - Geographical extent.\n     * @param {Number} [height] - Height on the end of the flight route.\n     * @param {Vec3} [up] - Camera UP vector on the end of a flying.\n     * @param {Number} [ampl] - Altitude amplitude factor.\n     * @param {Function} [startCallback] - Callback that calls before the flying begins.\n     * @param {Function} [completeCallback] - Callback that calls after flying when flying is finished.\n     */\n    public flyExtent(\n        extent: Extent,\n        height?: number,\n        up?: Vec3,\n        ampl?: number,\n        completeCallback?: Function,\n        startCallback?: Function\n    ) {\n        this.camera.flyExtent(extent, height, up, ampl, completeCallback, startCallback);\n    }\n\n    /**\n     * Fly camera to the point.\n     * @public\n     * @param {Vec3} cartesian - Point coordinates.\n     * @param {Vec3} [look] - Camera \"look at\" point.\n     * @param {Vec3} [up] - Camera UP vector on the end of a flying.\n     * @param {Number} [ampl] - Altitude amplitude factor.\n     * @param {Function} [completeCallback] - Call the function in the end of flight\n     * @param {Function} [startCallback] - Call the function in the beginning\n     * @param {Function} [frameCallback] - Each frame callback\n     */\n    public flyCartesian(\n        cartesian: Vec3,\n        look?: Vec3 | null,\n        up?: Vec3 | null,\n        ampl?: number,\n        completeCallback?: Function | null,\n        startCallback?: Function | null,\n        frameCallback?: Function | null\n    ) {\n        this.camera.flyCartesian(cartesian, look, up, ampl, completeCallback, startCallback, frameCallback);\n    }\n\n    /**\n     * Fly camera to the geodetic position.\n     * @public\n     * @param {LonLat} lonlat - Fly geographical coordinates.\n     * @param {Vec3 | LonLat} [look] - Camera viewpoint in the end of the flight.\n     * @param {Vec3} [up] - Camera UP vector on the end of a flying.\n     * @param {Number} [ampl] - Altitude amplitude factor.\n     * @param [completeCallback]\n     * @param [startCallback]\n     * @param [frameCallback]\n     */\n    public flyLonLat(\n        lonlat: LonLat,\n        look?: Vec3 | LonLat,\n        up?: Vec3,\n        ampl?: number,\n        completeCallback?: Function,\n        startCallback?: Function,\n        frameCallback?: Function\n    ) {\n        this.camera.flyLonLat(lonlat, look, up, ampl, completeCallback, startCallback, frameCallback);\n    }\n\n    /**\n     * Stop current flight.\n     * @public\n     */\n    public stopFlying() {\n        this.camera.stopFlying();\n    }\n\n    public override updateBillboardsTexCoords() {\n        for (let i = 0; i < this.entityCollections.length; i++) {\n            this.entityCollections[i].billboardHandler.refreshTexCoordsArr();\n        }\n\n        let readyCollections: Record<number, boolean> = {};\n        for (let i = 0; i < this._layers.length; i++) {\n            let li = this._layers[i];\n            if (li instanceof Vector) {\n                (li as Vector).each(function (e: Entity) {\n                    if (e._entityCollection && !readyCollections[e._entityCollection.id]) {\n                        e._entityCollection.billboardHandler.refreshTexCoordsArr();\n                        readyCollections[e._entityCollection.id] = true;\n                    }\n                });\n            }\n        }\n    }\n\n    public getEntityTerrainPoint(entity: Entity, res: Vec3) {\n        let n = this._renderedNodes, i = n.length;\n        while (i--) {\n            if (n[i].segment.isEntityInside(entity)) {\n                return n[i].segment.getEntityTerrainPoint(entity, res);\n            }\n        }\n    }\n\n    public async getHeightDefault(lonLat: LonLat): Promise<number> {\n        return new Promise<number>((resolve: (alt: number) => void) => {\n            if (this.terrain) {\n                this.terrain.getHeightAsync(lonLat.clone(), (alt: number) => {\n                    resolve(alt);\n                });\n            } else {\n                resolve(0);\n            }\n        });\n    }\n\n    public async getHeightAboveELL(lonLat: LonLat): Promise<number> {\n        return new Promise<number>((resolve: (alt: number) => void) => {\n            if (this.terrain) {\n                this.terrain.getHeightAsync(lonLat.clone(), (alt: number) => {\n                    resolve(alt + this.terrain!.geoid.getHeightLonLat(lonLat));\n                });\n            } else {\n                resolve(0);\n            }\n        });\n    }\n\n    public override onremove() {\n        this.memClear();\n        this.quadTreeStrategy.destroyBranches();\n        this._renderedNodes = [];\n    }\n}\n\nconst PLANET_EVENTS: PlanetEventsList = [\n    /**\n     * Triggered before globe frame begins to render.\n     * @event og.scene.Planet#draw\n     */\n    \"draw\",\n\n    /**\n     * Triggered when layer has added to the planet.\n     * @event og.scene.Planet#layeradd\n     */\n    \"layeradd\",\n\n    /**\n     * Triggered when base layer changed.\n     * @event og.scene.Planet#baselayerchange\n     */\n    \"baselayerchange\",\n\n    /**\n     * Triggered when layer has removed from the planet.\n     * @event og.scene.Planet#layerremove\n     */\n    \"layerremove\",\n\n    /**\n     * Triggered when some layer visibility changed.\n     * @event og.scene.Planet#layervisibilitychange\n     */\n    \"layervisibilitychange\",\n\n    /**\n     * Triggered when all data is loaded\n     * @event og.scene.Planet#rendercompleted\n     */\n    \"rendercompleted\",\n\n    /**\n     * Triggered when all data is loaded\n     * @event og.scene.Planet#terraincompleted\n     */\n    \"terraincompleted\",\n\n    /**\n     * Triggered when layer data is laded\n     * @event og.scene.Planet#terraincompleted\n     */\n    \"layerloadend\"\n];\n\n","import * as shaders from '../shaders/skybox';\nimport {RenderNode} from './RenderNode';\nimport {WebGLBufferExt, WebGLTextureExt, Texture3DParams} from \"../webgl/Handler\";\n\nclass SkyBox extends RenderNode {\n\n    public params: Texture3DParams;\n    public vertexPositionBuffer: WebGLBufferExt | null;\n    public texture: WebGLTextureExt | null;\n\n    constructor(params: Texture3DParams) {\n        super(\"skybox\");\n        this.params = params;\n        this.vertexPositionBuffer = null;\n        this.texture = null;\n    }\n\n    static createDefault(RESOURCES_URL: string) {\n        return new SkyBox({\n            nx: RESOURCES_URL + \"skybox/gal/_nx.jpg\",\n            px: RESOURCES_URL + \"skybox/gal/_px.jpg\",\n            py: RESOURCES_URL + \"skybox/gal/_py.jpg\",\n            ny: RESOURCES_URL + \"skybox/gal/_ny.jpg\",\n            pz: RESOURCES_URL + \"skybox/gal/_pz.jpg\",\n            nz: RESOURCES_URL + \"skybox/gal/_nz.jpg\"\n        });\n    }\n\n    public override init() {\n        this.renderer!.handler!.addProgram(shaders.skybox(), true);\n        this.texture = this.renderer!.handler.loadCubeMapTexture(this.params);\n        this._createBuffers();\n        this.drawMode = this.renderer!.handler.gl!.TRIANGLES;\n    }\n\n    public override frame() {\n        let h = this.renderer!.handler;\n        let gl = h.gl!;\n        let cam = this.renderer!.activeCamera!;\n        gl.disable(gl.DEPTH_TEST);\n\n        h.programs.skybox.activate();\n        let sh = h.programs.skybox._program;\n        let shu = sh.uniforms;\n        gl.uniformMatrix4fv(shu.projectionViewMatrix, false, cam.getProjectionViewMatrix());\n        gl.uniform3fv(shu.pos, cam.eye.toArray());\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.texture!);\n        gl.uniform1i(shu.uSampler, 0);\n        let buf = this.vertexPositionBuffer!;\n        gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n        gl.vertexAttribPointer(sh.attributes.aVertexPosition, buf.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.drawArrays(this.drawMode, 0, buf.numItems);\n        gl.enable(gl.DEPTH_TEST);\n    }\n\n    protected _createBuffers() {\n\n        const vertices = new Float32Array([\n            -100000000.0, 100000000.0, -100000000.0,\n            -100000000.0, -100000000.0, -100000000.0,\n            100000000.0, -100000000.0, -100000000.0,\n            100000000.0, -100000000.0, -100000000.0,\n            100000000.0, 100000000.0, -100000000.0,\n            -100000000.0, 100000000.0, -100000000.0,\n\n            -100000000.0, -100000000.0, 100000000.0,\n            -100000000.0, -100000000.0, -100000000.0,\n            -100000000.0, 100000000.0, -100000000.0,\n            -100000000.0, 100000000.0, -100000000.0,\n            -100000000.0, 100000000.0, 100000000.0,\n            -100000000.0, -100000000.0, 100000000.0,\n\n            100000000.0, -100000000.0, -100000000.0,\n            100000000.0, -100000000.0, 100000000.0,\n            100000000.0, 100000000.0, 100000000.0,\n            100000000.0, 100000000.0, 100000000.0,\n            100000000.0, 100000000.0, -100000000.0,\n            100000000.0, -100000000.0, -100000000.0,\n\n            -100000000.0, -100000000.0, 100000000.0,\n            -100000000.0, 100000000.0, 100000000.0,\n            100000000.0, 100000000.0, 100000000.0,\n            100000000.0, 100000000.0, 100000000.0,\n            100000000.0, -100000000.0, 100000000.0,\n            -100000000.0, -100000000.0, 100000000.0,\n\n            -100000000.0, 100000000.0, -100000000.0,\n            100000000.0, 100000000.0, -100000000.0,\n            100000000.0, 100000000.0, 100000000.0,\n            100000000.0, 100000000.0, 100000000.0,\n            -100000000.0, 100000000.0, 100000000.0,\n            -100000000.0, 100000000.0, -100000000.0,\n\n            -100000000.0, -100000000.0, -100000000.0,\n            -100000000.0, -100000000.0, 100000000.0,\n            100000000.0, -100000000.0, -100000000.0,\n            100000000.0, -100000000.0, -100000000.0,\n            -100000000.0, -100000000.0, 100000000.0,\n            100000000.0, -100000000.0, 100000000.0\n        ]);\n\n        this.vertexPositionBuffer = this.renderer!.handler.createArrayBuffer(vertices, 3, vertices.length / 3);\n    }\n}\n\nexport {SkyBox};\n","import {Program} from '../webgl/Program';\nimport {types} from '../webgl/types';\n\nexport function skybox(): Program {\n    return new Program(\"skybox\", {\n        uniforms: {\n            projectionViewMatrix: {type: types.MAT4},\n            uSampler: {type: types.SAMPLERCUBE},\n            pos: {type: types.VEC3}\n        },\n        attributes: {\n            aVertexPosition: {type: types.VEC3, enableArray: true}\n        },\n        vertexShader:\n            `attribute vec3 aVertexPosition;\n            uniform mat4 projectionViewMatrix;\n            uniform vec3 pos;\n            varying vec3 vTextureCoord;\n            void main(void) {\n                vTextureCoord = aVertexPosition;\n                gl_Position = projectionViewMatrix * vec4(aVertexPosition + pos, 1.0);\n            }`,\n        fragmentShader:\n            `precision lowp float;\n            varying vec3 vTextureCoord;\n            uniform samplerCube uSampler;\n            void main(void) {\n                gl_FragColor = textureCube(uSampler, vTextureCoord);\n            }`\n    });\n}","import {Program} from '../webgl/Program';\nimport {RenderNode} from './RenderNode';\nimport {WebGLBufferExt} from \"../webgl/Handler\";\n\nclass Axes extends RenderNode {\n\n    public size: number;\n    public axesBuffer: WebGLBufferExt | null;\n    public axesColorBuffer: WebGLBufferExt | null;\n\n    constructor(size: number = 100) {\n        super(\"Axes\");\n\n        this.size = size;\n        this.axesBuffer = null;\n        this.axesColorBuffer = null;\n    }\n\n    public override init() {\n        this.createAxesBuffer(this.size);\n        this.drawMode = this.renderer!.handler.gl!.LINES;\n        this.renderer!.handler.addProgram(new Program(\"axesShader\", {\n            uniforms: {\n                projectionViewMatrix: 'mat4'\n            },\n            attributes: {\n                aVertexPosition: 'vec3',\n                aVertexColor: 'vec4'\n            },\n            vertexShader:\n                `attribute vec3 aVertexPosition;\n            attribute vec4 aVertexColor;\n            uniform mat4 projectionViewMatrix;\n            varying vec4 vColor;\n            void main(void) {\n                gl_Position = projectionViewMatrix * vec4(aVertexPosition, 1.0);\n                vColor = aVertexColor;\n            }`,\n            fragmentShader:\n                `precision highp float;\n            varying vec4 vColor;\n            void main(void) {\n                gl_FragColor = vColor;\n            }`\n        }));\n    }\n\n    public override frame() {\n\n        this.renderer!.handler.programs.axesShader.activate().set({\n            projectionViewMatrix: this.renderer!.activeCamera!.getProjectionViewMatrix(),\n            aVertexPosition: this.axesBuffer,\n            aVertexColor: this.axesColorBuffer\n        });\n\n        this.renderer!.handler.programs.axesShader.drawArrays(this.drawMode, this.axesBuffer!.numItems);\n    }\n\n    public createAxesBuffer(gridSize: number) {\n\n        const vertices = [\n            0.0, 0.0, 0.0, gridSize - 1, 0.0, 0.0, // x - R\n            0.0, 0.0, 0.0, 0.0, gridSize - 1, 0.0, // y - B  \n            0.0, 0.0, 0.0, 0.0, 0.0, gridSize - 1  // z - G\n        ];\n\n        const colors = [\n            1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0,   // x - R\n            0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0,   // y - B\n            0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0    // z - G\n        ];\n\n        this.axesBuffer = this.renderer!.handler.createArrayBuffer(new Float32Array(vertices), 3, 6);\n        this.axesColorBuffer = this.renderer!.handler.createArrayBuffer(new Float32Array(colors), 4, 6);\n    }\n}\n\nexport {Axes};\n","import {binarySearchFast, TypedArray} from \"../utils/shared\";\nimport {Geoid} from \"./Geoid\";\nimport {LonLat} from \"../LonLat\";\nimport {Planet} from \"../scene/Planet\";\nimport {Segment} from \"../segment/Segment\";\n\nexport interface IEmptyTerrainParams {\n    equalizeVertices?: boolean;\n    name?: string;\n    minZoom?: number;\n    maxZoom?: number;\n    maxNativeZoom?: number;\n    geoidSrc?: string;\n    geoid?: Geoid;\n    gridSizeByZoom?: number[]\n}\n\n/**\n * Class represents terrain provider without elevation data.\n * @param {IEmptyTerrainParams} [options] - Provider options:\n * @param {string} [options.name=\"empty\"] - Provider name.\n * @param {boolean} [options.equalizeVertices] -\n * @param {number} [options.minZoom=2] - Minimal visible zoom index when terrain handler works.\n * @param {number} [options.minZoom=50] - Maximal visible zoom index when terrain handler works.\n * @param {number} [options.maxNativeZoom=19] - Maximal available terrain zoom level.\n * @param {Array.<number>} [options.gridSizeByZoom] - Array of segment triangulation grid sizes where array index agreed to the segment zoom index.\n * @param {Array.<number>} [gridSizeByZoom] - Array of values, where each value corresponds to the size of a tile(or segment) on the globe. Each value must be power of two.\n * @param {Geoid} [options.geoid] -\n * @param {string} [options.geoidSrc] -\n */\nclass EmptyTerrain {\n\n    static __counter__: number = 0;\n\n    /**\n     * Uniq identifier.\n     * @public\n     * @type {number}\n     */\n    public __id: number;\n\n    public equalizeVertices: boolean;\n\n    public equalizeNormals: boolean;\n\n    public isEmpty: boolean;\n\n    /**\n     * Provider name is \"empty\"\n     * @public\n     * @type {string}\n     */\n    public name: string;\n\n    /**\n     * Minimal z-index value for segment elevation data handling.\n     * @public\n     * @type {number}\n     */\n    public minZoom: number;\n\n    /**\n     * Maximal z-index value for segment elevation data handling.\n     * @public\n     * @type {number}\n     */\n    public maxZoom: number;\n\n    public noDataValues: number[];\n\n    /**\n     * Maximal existent available zoom\n     * @type {number}\n     */\n    public maxNativeZoom: number;\n\n    /**\n     * @public\n     * @type {Array.<number>}\n     */\n    public gridSizeByZoom: number[];\n\n    public _maxNodeZoom: number;\n\n    /**\n     * Elevation grid size. Current is 2x2 is the smallest grid size.\n     * @public\n     * @type {number}\n     */\n    public plainGridSize: number;\n\n    /**\n     * Planet scene.\n     * @public\n     * @type {Planet}\n     */\n    public _planet: Planet | null;\n\n    public _geoid: Geoid;\n\n    public _isReady: boolean;\n\n    constructor(options: IEmptyTerrainParams = {}) {\n\n        this.__id = EmptyTerrain.__counter__++;\n\n        this.equalizeVertices = options.equalizeVertices || false;\n\n        this.equalizeNormals = false;\n\n        this.isEmpty = true;\n\n        this.name = options.name || \"empty\";\n\n        this.minZoom = options.minZoom || 2;\n\n        this.maxZoom = options.maxZoom || 19;\n\n        this.maxNativeZoom = options.maxNativeZoom || this.maxZoom;\n\n        this.gridSizeByZoom = options.gridSizeByZoom || [\n            64, 32, 16, 8, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2\n        ];\n\n        this._maxNodeZoom = this.gridSizeByZoom.length - 1;\n\n        this.plainGridSize = 2;\n\n        this.noDataValues = [];\n\n        this._planet = null;\n\n        this._geoid = options.geoid || new Geoid({\n            src: options.geoidSrc || null\n        });\n\n        this._isReady = false;\n\n        // const _ellToAltFn = [\n        //     (lon, lat, alt, callback) => callback(alt),\n        //     (lon, lat, alt, callback) => callback(alt - this._geoid.getHeight(lon, lat)),\n        //     (lon, lat, alt, callback) => {\n\n        //         let x = mercator.getTileX(lon, zoom),\n        //             y = mercator.getTileY(lat, zoom);\n\n        //         let mslAlt = alt - this._geoid.getHeight(lon, lat);\n\n        //         if (true) {\n\n        //         } else {\n\n        //         }\n\n        //         return callback(mslAlt);\n        //     },\n        // ];\n    }\n\n    public get isIdle(): boolean {\n        return true;\n    }\n\n    public isEqual(obj: this): boolean {\n        return obj.__id === this.__id;\n    }\n\n    static checkNoDataValue(noDataValues: number[] | TypedArray, value: number): boolean {\n        return binarySearchFast(noDataValues, value) !== -1;\n    }\n\n    public isBlur(segment?: Segment): boolean {\n        return false;\n    }\n\n    public set maxNodeZoom(val: number) {\n        if (val > this.gridSizeByZoom.length - 1) {\n            val = this.gridSizeByZoom.length - 1;\n        }\n        this._maxNodeZoom = val;\n    }\n\n    public get maxNodeZoom(): number {\n        return this._maxNodeZoom;\n    }\n\n    public set geoid(geoid: Geoid) {\n        this._geoid = geoid;\n    }\n\n    public get geoid(): Geoid {\n        return this._geoid;\n    }\n\n    public getGeoid(): Geoid {\n        return this._geoid;\n    }\n\n    /**\n     * Loads or creates segment elevation data.\n     * @public\n     * @param {Segment} segment - Segment to create elevation data.\n     */\n    public handleSegmentTerrain(segment: Segment) {\n        segment.terrainIsLoading = false;\n        segment.terrainReady = true;\n        segment.terrainExists = true;\n    }\n\n    public isReady(): boolean {\n        return this._isReady;\n    }\n\n    public abortLoading() {\n    }\n\n    public clearCache() {\n    }\n\n    public getHeightAsync(lonLat: LonLat, callback: (height: number) => void): boolean {\n        callback(0);\n        return true;\n    }\n\n    public loadTerrain(segment: Segment, forceLoading: boolean = false) {\n\n    }\n}\n\nexport {EmptyTerrain};","import * as mercator from \"../mercator\";\nimport {createEvents, EventsHandler} from \"../Events\";\nimport {createExtent, stringTemplate, TypedArray} from \"../utils/shared\";\nimport {EPSG3857} from \"../proj/EPSG3857\";\nimport {EmptyTerrain, IEmptyTerrainParams} from \"./EmptyTerrain\";\nimport {Extent} from \"../Extent\";\nimport {Layer} from \"../layer/Layer\";\nimport {IResponse, Loader} from \"../utils/Loader\";\nimport {LonLat} from \"../LonLat\";\nimport {NOTRENDERING} from \"../quadTree/quadTree\";\nimport {Segment} from \"../segment/Segment\";\n// import { QueueArray } from '../QueueArray';\nimport {Ray} from \"../math/Ray\";\nimport {Vec3} from \"../math/Vec3\";\n\nexport interface IGlobusTerrainParams extends IEmptyTerrainParams {\n    subdomains?: string[];\n    url?: string;\n    extent?: Extent | [[number, number], [number, number]];\n    urlRewrite?: UrlRewriteFunc;\n    noDataValues?: number[];\n    plainGridSize?: number;\n}\n\ntype TileData = {\n    heights: number[] | TypedArray | null,\n    extent: Extent | null\n}\n\ntype UrlRewriteFunc = (segment: Segment, url: string) => string;\n\n/**\n * Class that loads segment elevation data, converts it to the array and passes it to the planet segment.\n * @class\n * @extends {GlobusTerrain}\n * @param {string} [name=\"\"] - Terrain provider name.\n * @param {IGlobusTerrainParams} [options] - Provider options:\n * @param {number} [options.minZoom=3] - Minimal visible zoom index when terrain handler works.\n * @param {number} [options.minZoom=14] - Maximal visible zoom index when terrain handler works.\n * @param {number} [options.minNativeZoom=14] - Maximal available terrain zoom level.\n * @param {string} [options.url=\"//openglobus.org/heights/srtm3/{z}/{y}/{x}.ddm\"] - Terrain source path url template. Default is openglobus ddm elevation file.\n * @param {Array.<number>} [options.gridSizeByZoom] - Array of segment triangulation grid sizes where array index agreed to the segment zoom index.\n * @param {number} [options.plainGridSize=32] - Elevation grid size. Default is 32x32. Must be power of two.\n * @param {string} [options.responseType=\"arraybuffer\"] - Response type.\n * @param {number} [options.MAX_LOADING_TILES] - Maximum at one time loading tiles.\n * @param {Array.<number>} [gridSizeByZoom] - Array of values, where each value corresponds to the size of a tile(or segment) on the globe. Each value must be power of two.\n *\n * @fires GlobusTerrainEvents#load\n * @fires GlobusTerrainEvents#loadend\n */\nclass GlobusTerrain extends EmptyTerrain {\n\n    public events: GlobusTerrainEvents;\n\n    protected _s: string[];\n\n    protected _requestCount: number;\n\n    protected _requestsPeerSubdomain: number;\n\n    /**\n     * Terrain source path url template.\n     * @protected\n     * @type {string}\n     */\n    protected url: string;\n\n    protected _extent: Extent;\n\n    protected _dataType: string;\n\n    protected _elevationCache: Record<string, TileData>;\n\n    protected _fetchCache: Record<string, Promise<any>>;\n\n    protected _loader: Loader<GlobusTerrain>;\n\n    /**\n     * Rewrites elevation storage url query.\n     * @protected\n     * @type {Function} -\n     */\n    protected _urlRewriteCallback: UrlRewriteFunc | null;\n\n\n    constructor(name: string = \"\", options: IGlobusTerrainParams = {}) {\n\n        super({\n            geoidSrc: \"//openglobus.org/geoid/egm84-30.pgm\",\n            maxNativeZoom: options.maxNativeZoom || 14,\n            ...options\n        });\n\n        this._s = options.subdomains || [\"a\", \"b\", \"c\"];\n\n        this.events = createEvents(GLOBUSTERRAIN_EVENTS, this);\n\n        this._requestCount = 0;\n\n        this._requestsPeerSubdomain = 4;\n\n        this.isEmpty = false;\n\n        this.equalizeNormals = true;\n\n        this.name = name || \"openglobus\";\n\n        this.url = options.url || \"//{s}.srtm3.openglobus.org/{z}/{y}/{x}.ddm\";\n\n        this.gridSizeByZoom = options.gridSizeByZoom || [\n            64, 32, 32, 16, 16, 8, 8, 8, 8, 16, 16, 16, 16, 32, 32, 16, 8, 4, 2, 2, 2, 2, 2, 2\n        ];\n\n        this.noDataValues = options.noDataValues || [];\n\n        this.plainGridSize = options.plainGridSize || 32;\n\n        this._extent = createExtent(options.extent, new Extent(new LonLat(-180.0, -90.0), new LonLat(180.0, 90.0)));\n\n        this._dataType = \"arrayBuffer\";\n\n        this._maxNodeZoom = this.gridSizeByZoom.length - 1;\n\n        this._elevationCache = {};\n\n        this._fetchCache = {};\n\n        this._loader = new Loader<GlobusTerrain>();\n\n        this._urlRewriteCallback = options.urlRewrite || null;\n    }\n\n    public get loader(): Loader<GlobusTerrain> {\n        return this._loader;\n    }\n\n    public override clearCache() {\n        for (let c in this._elevationCache) {\n            this._elevationCache[c].heights = null;\n            this._elevationCache[c].extent = null;\n            delete this._elevationCache[c];\n        }\n        //@ts-ignore\n        this._elevationCache = null;\n        this._elevationCache = {};\n\n        for (let c in this._fetchCache) {\n            //@ts-ignore\n            this._fetchCache[c] = null;\n            delete this._fetchCache[c];\n        }\n        //@ts-ignore\n        this._fetchCache = null;\n        this._fetchCache = {};\n    }\n\n    public override isBlur(segment: Segment): boolean {\n        return segment.tileZoom >= 6;\n    }\n\n    public override getHeightAsync(lonLat: LonLat, callback: (h: number) => void, zoom?: number, firstAttempt?: boolean): boolean {\n        if (!lonLat || lonLat.lat > mercator.MAX_LAT || lonLat.lat < mercator.MIN_LAT) {\n            callback(0);\n            return true;\n        }\n\n        firstAttempt = firstAttempt != undefined ? firstAttempt : true;\n\n        let z = zoom || this.maxZoom,\n            z2 = Math.pow(2, z),\n            size = mercator.POLE2 / z2,\n            merc = mercator.forward(lonLat),\n            x = Math.floor((mercator.POLE + merc.lon) / size),\n            y = Math.floor((mercator.POLE - merc.lat) / size);\n\n        let tileIndex = Layer.getTileIndex(x, y, z);\n\n        let cache = this._elevationCache[tileIndex];\n\n        if (cache) {\n            if (cache.heights) {\n                callback(this._getGroundHeightMerc(merc, cache));\n            } else {\n                callback(0);\n            }\n            return true;\n        } else {\n            if (!this._fetchCache[tileIndex]) {\n                let url = this._buildURL(x, y, z);\n                this._fetchCache[tileIndex] = this._loader.fetch({\n                    src: url,\n                    type: this._dataType\n                });\n            }\n\n            this._fetchCache[tileIndex].then((response: IResponse) => {\n\n                let extent = mercator.getTileExtent(x, y, z);\n\n                if (response.status === \"ready\") {\n                    let cache: TileData = {\n                        heights: this._createHeights(response.data, tileIndex, x, y, z, extent),\n                        extent: extent\n                    };\n                    this._elevationCache[tileIndex] = cache;\n                    callback(this._getGroundHeightMerc(merc, cache));\n\n                } else if (response.status === \"error\") {\n                    if (firstAttempt && z > this.maxNativeZoom) {\n                        firstAttempt = false;\n                        this.getHeightAsync(lonLat, callback, this.maxNativeZoom, false);\n                        return;\n                    }\n\n                    this._elevationCache[tileIndex] = {\n                        heights: null,\n                        extent: extent\n                    };\n\n                    callback(0);\n\n                } else {\n                    // @ts-ignore\n                    this._fetchCache[tileIndex] = null;\n                    delete this._fetchCache[tileIndex];\n                }\n            });\n        }\n\n        return false;\n    }\n\n    public getTileCache(lonLat: LonLat, z: number): TileData | undefined {\n        if (!lonLat || lonLat.lat > mercator.MAX_LAT || lonLat.lat < mercator.MIN_LAT) {\n            return;\n        }\n\n        let z2 = Math.pow(2, z),\n            size = mercator.POLE2 / z2,\n            merc = mercator.forward(lonLat),\n            x = Math.floor((mercator.POLE + merc.lon) / size),\n            y = Math.floor((mercator.POLE - merc.lat) / size);\n\n        let tileIndex = Layer.getTileIndex(x, y, z);\n\n        return this._elevationCache[tileIndex];\n    }\n\n    protected _getGroundHeightMerc(merc: LonLat, tileData: TileData): number {\n        if (!(tileData.extent && tileData.heights)) {\n            return 0;\n        }\n\n        let w = tileData.extent.getWidth(),\n            gs = Math.sqrt(tileData.heights.length);\n\n        let size = w / (gs - 1);\n\n        /*\n        v2-----------v3\n        |            |\n        |            |\n        |            |\n        v0-----------v1\n        */\n\n        let i = gs - Math.ceil((merc.lat - tileData.extent.southWest.lat) / size) - 1,\n            j = Math.floor((merc.lon - tileData.extent.southWest.lon) / size);\n\n        let v0Ind = (i + 1) * gs + j,\n            v1Ind = v0Ind + 1,\n            v2Ind = i * gs + j,\n            v3Ind = v2Ind + 1;\n\n        let h0 = tileData.heights[v0Ind],\n            h1 = tileData.heights[v1Ind],\n            h2 = tileData.heights[v2Ind],\n            h3 = tileData.heights[v3Ind];\n\n        let v0 = new Vec3(tileData.extent.southWest.lon + size * j, h0, tileData.extent.northEast.lat - size * i - size),\n            v1 = new Vec3(v0.x + size, h1, v0.z),\n            v2 = new Vec3(v0.x, h2, v0.z + size),\n            v3 = new Vec3(v0.x + size, h3, v0.z + size);\n\n        let xyz = new Vec3(merc.lon, 100000.0, merc.lat),\n            ray = new Ray(xyz, new Vec3(0, -1, 0));\n\n        let res = new Vec3();\n        let d = ray.hitTriangle(v0, v1, v2, res);\n\n        if (d === Ray.INSIDE) {\n            return res.y;\n        }\n\n        d = ray.hitTriangle(v1, v3, v2, res);\n        if (d === Ray.INSIDE) {\n            return res.y;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Stop loading.\n     * @public\n     */\n    public override abortLoading() {\n        this._loader.abortAll();\n    }\n\n    /**\n     * Sets terrain data url template.\n     * @public\n     * @param {string} url - Url template.\n     * @example <caption>Default openglobus url template:</caption>:\n     * \"http://earth3.openglobus.org/{z}/{y}/{x}.ddm\"\n     */\n    public setUrl(url: string) {\n        this.url = url;\n    }\n\n    /**\n     * Sets provider name.\n     * @public\n     * @param {string} name - Name.\n     */\n    public setName(name: string) {\n        this.name = name;\n    }\n\n    public isReadyToLoad(segment: Segment): boolean {\n        return segment._projection.equal(EPSG3857) && this._extent.overlaps(segment.getExtentLonLat());\n    }\n\n    /**\n     * Starts to load segment elevation data.\n     * @public\n     * @param {Segment} segment - Segment that wants a terrain data.\n     * @param {boolean} [forceLoading] -\n     */\n    public override loadTerrain(segment: Segment, forceLoading: boolean = false) {\n\n        if (this._planet!.terrainLock.isFree()) {\n\n            segment.terrainReady = false;\n            segment.terrainIsLoading = true;\n\n            if (this.isReadyToLoad(segment)) {\n\n                let cache = this._elevationCache[segment.tileIndex];\n\n                if (cache) {\n                    this._applyElevationsData(segment, cache.heights);\n                } else {\n                    this._loader.load({\n                            sender: this,\n                            src: this._getHTTPRequestString(segment),\n                            segment: segment,\n                            type: this._dataType,\n                            filter: () => (segment.plainReady && segment.node.getState() !== NOTRENDERING) || forceLoading\n                        }, (response: IResponse) => {\n\n                            if (response.status === \"ready\") {\n\n                                let heights = this._createHeights(\n                                    response.data,\n                                    segment.tileIndex,\n                                    segment.tileX, segment.tileY, segment.tileZoom,\n                                    segment.getExtent(),\n                                    segment.tileZoom === this.maxZoom\n                                );\n\n                                this._elevationCache[segment.tileIndex] = {\n                                    heights: heights,\n                                    extent: segment.getExtent()\n                                };\n\n                                this._applyElevationsData(segment, heights);\n\n                            } else if (response.status === \"abort\") {\n                                segment.terrainIsLoading = false;\n                            } else if (response.status === \"error\") {\n                                this._applyElevationsData(segment, null);\n                            } else {\n                                segment.terrainIsLoading = false;\n                            }\n                        }\n                    );\n                }\n            } else {\n                segment.elevationsNotExists();\n            }\n        } else {\n            segment.terrainIsLoading = false;\n        }\n    }\n\n    protected _getSubdomain(): string {\n        this._requestCount++;\n        return this._s[Math.floor(this._requestCount % (this._requestsPeerSubdomain * this._s.length) / this._requestsPeerSubdomain)];\n    }\n\n    public _buildURL(x: number, y: number, z: number): string {\n        return stringTemplate(this.url, {\n            s: this._getSubdomain(),\n            x: x.toString(),\n            y: y.toString(),\n            z: z.toString()\n        });\n    }\n\n    /**\n     * Creates default query url string.\n     * @protected\n     * @param {Segment} segment -\n     * @returns {string} -\n     */\n    protected _createUrl(segment: Segment): string {\n        return this._buildURL(segment.tileX, segment.tileY, segment.tileZoom);\n    }\n\n    /**\n     * Returns actual url query string.\n     * @protected\n     * @param {Segment} segment - Segment that loads image data.\n     * @returns {string} - Url string.\n     */\n    protected _getHTTPRequestString(segment: Segment): string {\n        return this._urlRewriteCallback ? this._urlRewriteCallback(segment, this.url) : this._createUrl(segment);\n    }\n\n    /**\n     * Sets url rewrite callback, used for custom url rewriting for every tile loading.\n     * @public\n     * @param {UrlRewriteFunc} ur - The callback that returns tile custom created url.\n     */\n    public setUrlRewriteCallback(ur: UrlRewriteFunc) {\n        this._urlRewriteCallback = ur;\n    }\n\n    /**\n     * Converts loaded data to segment elevation data type(column major elevation data array in meters)\n     * @public\n     * @returns {Array.<number>} -\n     */\n    protected _createHeights(data: any, tileIndex?: string, x?: number, y?: number, z?: number, extent?: Extent, isMaxZoom?: boolean): TypedArray | number[] {\n        return new Float32Array(data);\n    }\n\n    /**\n     * @protected\n     */\n    protected _applyElevationsData(segment: Segment, elevations: number[] | TypedArray | null) {\n        if (segment) {\n            let e = this.events.load!;\n            if (e.handlers.length) {\n                this.events.dispatch(e, {\n                    elevations: elevations,\n                    segment: segment\n                });\n            }\n            segment.applyTerrain(elevations);\n        }\n    }\n}\n\ntype GlobusTerrainEventsList = [\n    \"load\",\n    \"loadend\"\n];\n\ntype GlobusTerrainEvents = EventsHandler<GlobusTerrainEventsList>;\n\nconst GLOBUSTERRAIN_EVENTS: GlobusTerrainEventsList = [\n    /**\n     * Triggered when current elevation tile has loaded but before rendering.\n     * @event og.terrain.GlobusTerrain#load\n     */\n    \"load\",\n\n    /**\n     * Triggered when all elevation tiles have loaded or loading has stopped.\n     * @event og.terrain.GlobusTerrain#loadend\n     */\n    \"loadend\"\n];\n\n\nexport {GlobusTerrain};","import * as mercator from \"../mercator\";\nimport {Layer, ILayerParams, LayerEventsList} from \"./Layer\";\nimport {RENDERING} from \"../quadTree/quadTree\";\nimport {Segment} from \"../segment/Segment\";\nimport {stringTemplate} from \"../utils/shared\";\nimport {EventsHandler} from \"../Events\";\nimport {Material} from \"./Material\";\nimport {NumberArray4} from \"../math/Vec4\";\nimport {IResponse} from \"../utils/Loader\";\n\nexport interface IXYZParams extends ILayerParams {\n    url?: string;\n    subdomains?: string[];\n    minNativeZoom?: number;\n    maxNativeZoom?: number;\n    urlRewrite?: Function;\n}\n\ntype XYZEventsList = [\n    \"load\",\n    \"loadend\"\n];\n\ntype XYZEventsType = EventsHandler<XYZEventsList> & EventsHandler<LayerEventsList>;\n\n/**\n * Represents an imagery tiles source provider.\n * @class\n * @extends {Layer}\n * @param {string} name - Layer name.\n * @param {IXYZParams} options:\n * @param {number} [options.opacity=1.0] - Layer opacity.\n * @param {Array.<string>} [options.subdomains=['a','b','c']] - Subdomains of the tile service.\n * @param {number} [options.minZoom=0] - Minimal visibility zoom level.\n * @param {number} [options.maxZoom=0] - Maximal visibility zoom level.\n * @param {number} [options.minNativeZoom=0] - Minimal available zoom level.\n * @param {number} [options.maxNativeZoom=19] - Maximal available zoom level.\n * @param {string} [options.attribution] - Layer attribution that displayed in the attribution area on the screen.\n * @param {boolean} [options.isBaseLayer=false] - Base layer flag.\n * @param {boolean} [options.visibility=true] - Layer visibility.\n * @param {string} [options.crossOrigin=true] - If true, all tiles will have their crossOrigin attribute set to ''.\n * @param {string} options.url - Tile url source template(see example below).\n * @param {string} options.textureFilter - texture gl filter. NEAREST, LINEAR, MIPMAP, ANISOTROPIC.\n * @param {Function} options.urlRewrite - Url rewrite function.\n *\n * @fires EventsHandler<XYZEventsList>#load\n * @fires EventsHandler<XYZEventsList>#loadend\n *\n * @example <caption>Creates OpenStreetMap base tile layer</caption>\n * new og.layer.XYZ(\"OpenStreetMap\", {\n *     isBaseLayer: true,\n *     url: \"http://b.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n *     visibility: true,\n *     attribution: 'Data @ <a href=\"http://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"http://www.openstreetmap.org/copyright\">ODbL</a>'\n * });\n */\nexport class XYZ extends Layer {\n\n    public override events: XYZEventsType;\n\n    /**\n     * Tile url source template.\n     * @public\n     * @type {string}\n     */\n    public url: string;\n\n    /**\n     * @protected\n     */\n    protected _s: string[];\n\n    /**\n     * Minimal native zoom level when tiles are available.\n     * @public\n     * @type {number}\n     */\n    public minNativeZoom: number;\n\n    /**\n     * Maximal native zoom level when tiles are available.\n     * @public\n     * @type {number}\n     */\n    public maxNativeZoom: number;\n\n    /**\n     * Rewrites imagery tile url query.\n     * @private\n     * @callback og.layer.XYZ~_urlRewriteCallback\n     * @param {Segment} segment - Segment to load.\n     * @param {string} url - Created url.\n     * @returns {string} - Url query string.\n     */\n    protected _urlRewriteCallback: Function | null;\n\n    protected _requestsPeerSubdomains: number;\n\n    protected _requestCount: number;\n\n    constructor(name: string | null, options: IXYZParams = {}) {\n        super(name, options);\n\n        //@ts-ignore\n        this.events = this.events.registerNames(XYZ_EVENTS);\n\n        this.url = options.url || \"\";\n\n        this._s = options.subdomains || [\"a\", \"b\", \"c\"];\n\n        this.minNativeZoom = options.minNativeZoom || 0;\n\n        this.maxNativeZoom = options.maxNativeZoom || 19;\n\n        this._urlRewriteCallback = options.urlRewrite || null;\n\n        this._requestsPeerSubdomains = 4;\n\n        this._requestCount = 0;\n    }\n\n    /**\n     * @warning Use XYZ.isIdle in requestAnimationFrame(after setVisibility)\n     */\n    public override get isIdle(): boolean {\n        return super.isIdle && this._planet!._tileLoader.getRequestCounter(this) === 0;\n    }\n\n    public override get instanceName(): string {\n        return \"XYZ\";\n    }\n\n    /**\n     * Abort loading tiles.\n     * @public\n     */\n    public override abortLoading() {\n        if (this._planet) {\n            this._planet._tileLoader.abort(this);\n        }\n    }\n\n    /**\n     * Sets layer visibility.\n     * @public\n     * @param {boolean} visibility - Layer visibility.\n     */\n    public override setVisibility(visibility: boolean) {\n        if (visibility !== this._visibility) {\n            super.setVisibility(visibility);\n            if (!visibility) {\n                this.abortLoading();\n            }\n        }\n    }\n\n    public override remove(): this {\n        this.abortLoading();\n        super.remove();\n        return this;\n    }\n\n    /**\n     * Sets imagery tiles url source template.\n     * @public\n     * @param {string} url - Url template.\n     * @example\n     * http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\n     * where {z}, {x} and {y} - replaces by current tile values, {s} - random domain.\n     */\n    public setUrl(url: string) {\n        this.url = url;\n    }\n\n    public _checkSegment(segment: Segment) {\n        return segment._projection.id === this._planet!.quadTreeStrategy.projection.id;// EPSG4326.id;// EPSG3857.id;\n    }\n\n    /**\n     * Start to load tile material.\n     * @public\n     * @virtual\n     * @param {Material} material - Loads current material.\n     * @param {boolean} [forceLoading=false] -\n     */\n    public override loadMaterial(material: Material, forceLoading: boolean = false) {\n\n        let seg = material.segment;\n\n        if (this._isBaseLayer) {\n            material.texture = seg.getDefaultTexture();\n        } else {\n            material.texture = seg.planet.transparentTexture;\n        }\n\n        // Q: Maybe we should change \"<2\" to material.segment.tileZoom < (material.layer.minZoom + 1)\n        if (this._planet!.layerLock.isFree() || material.segment.tileZoom < 2) {\n            material.isReady = false;\n            material.isLoading = true;\n\n            if (this._checkSegment(seg)) {\n                material.loadingAttempts++;\n\n                this._planet!._tileLoader.load({\n                        sender: this,\n                        src: this._getHTTPRequestString(material.segment),\n                        type: \"imageBitmap\",\n                        filter: () => (seg.initialized && seg.node.getState() === RENDERING) || forceLoading,\n                        options: {}\n                    },\n                    (response: IResponse) => {\n                        if (response.status === \"ready\") {\n                            if (material.isLoading) {\n                                let e = this.events.load!;\n                                if (e.handlers.length) {\n                                    this.events.dispatch(e, material);\n                                }\n                                material.applyImage(response.data);\n                                response.data = null;\n                            }\n                        } else if (response.status === \"abort\") {\n                            material.isLoading = false;\n                        } else if (response.status === \"error\") {\n                            if (material.isLoading) {\n                                material.textureNotExists();\n                            }\n                        }\n                    }\n                    //,this.__id\n                );\n            } else {\n                material.textureNotExists();\n            }\n        }\n    }\n\n    /**\n     * Creates query url.\n     * @protected\n     * @virtual\n     * @param {Segment} segment - Creates specific url for current segment.\n     * @returns {string} - Returns url string.\n     */\n    protected _createUrl(segment: Segment): string {\n        return stringTemplate(this.url, {\n            s: this._getSubdomain(),\n            x: segment.tileX.toString(),\n            y: segment.tileY.toString(),\n            z: segment.tileZoom.toString()\n        });\n    }\n\n    protected _getSubdomain(): string {\n        this._requestCount++;\n        return this._s[Math.floor(this._requestCount % (this._requestsPeerSubdomains * this._s.length) / this._requestsPeerSubdomains)];\n    }\n\n    /**\n     * Returns actual url query string.\n     * @protected\n     * @param {Segment} segment - Segment that loads image data.\n     * @returns {string} - Url string.\n     */\n    protected _getHTTPRequestString(segment: Segment) {\n        return this._urlRewriteCallback ? this._urlRewriteCallback(segment, this.url) : this._createUrl(segment);\n    }\n\n    /**\n     * Sets url rewrite callback, used for custom url rewriting for every tile loading.\n     * @public\n     * @param {Function} ur - The callback that returns tile custom created url.\n     */\n    public setUrlRewriteCallback(ur: Function) {\n        this._urlRewriteCallback = ur;\n    }\n\n    public override applyMaterial(material: Material, forceLoading: boolean = false): NumberArray4 {\n        if (material.isReady) {\n            return material.texOffset;\n        } else if (material.segment.tileZoom < this.minNativeZoom) {\n            material.textureNotExists();\n        } else {\n\n            let segment = material.segment,\n                pn = segment.node,\n                notEmpty = false;\n\n            let mId = this.__id;\n            let psegm = material;\n            while (pn.parentNode) {\n                pn = pn.parentNode;\n                psegm = pn.segment.materials[mId];\n                if (psegm && psegm.textureExists) {\n                    notEmpty = true;\n                    break;\n                }\n            }\n\n            if (segment.passReady) {\n                let maxNativeZoom = (material.layer as XYZ).maxNativeZoom;\n                if (pn.segment.tileZoom === maxNativeZoom) {\n                    material.textureNotExists();\n                } else if (material.segment.tileZoom <= maxNativeZoom) {\n                    !material.isLoading && !material.isReady && this.loadMaterial(material, forceLoading);\n                } else {\n                    let pn = segment.node;\n                    while (pn.segment.tileZoom > (material.layer as XYZ).maxNativeZoom) {\n                        pn = pn.parentNode!;\n                    }\n                    let pnm = pn.segment.materials[material.layer.__id];\n                    if (pnm) {\n                        !pnm.isLoading && !pnm.isReady && this.loadMaterial(pnm, true);\n                    } else {\n                        pnm = pn.segment.materials[material.layer.__id] = material.layer.createMaterial(\n                            pn.segment\n                        );\n                        this.loadMaterial(pnm, true);\n                    }\n                }\n            }\n\n            if (notEmpty) {\n                material.appliedNode = pn;\n                material.appliedNodeId = pn.nodeId;\n                material.texture = psegm.texture;\n                let dZ2 = 1.0 / (2 << (segment.tileZoom - pn.segment.tileZoom - 1));\n                material.texOffset[0] = segment.tileX * dZ2 - pn.segment.tileX;\n                material.texOffset[1] = segment.tileY * dZ2 - pn.segment.tileY;\n                material.texOffset[2] = dZ2;\n                material.texOffset[3] = dZ2;\n            } else {\n                material.texture = segment.planet.transparentTexture;\n                material.texOffset[0] = 0.0;\n                material.texOffset[1] = 0.0;\n                material.texOffset[2] = 1.0;\n                material.texOffset[3] = 1.0;\n            }\n        }\n\n        return material.texOffset;\n    }\n\n    public override clearMaterial(material: Material) {\n        if (material.isReady && material.textureExists) {\n            !material.texture!.default && material.segment.handler.gl!.deleteTexture(material.texture!);\n            material.texture = null;\n        }\n\n        material.isReady = false;\n        material.textureExists = false;\n        material.isLoading = false;\n    }\n\n    /**\n     * @protected\n     */\n    protected override _correctFullExtent() {\n        let e = this._extent,\n            em = this._extentMerc;\n        let ENLARGE_MERCATOR_LON = mercator.POLE + 50000;\n        let ENLARGE_MERCATOR_LAT = mercator.POLE + 50000;\n        if (e.northEast.lat === 90.0) {\n            em.northEast.lat = ENLARGE_MERCATOR_LAT;\n        }\n        if (e.northEast.lon === 180.0) {\n            em.northEast.lon = ENLARGE_MERCATOR_LON;\n        }\n        if (e.southWest.lat === -90.0) {\n            em.southWest.lat = -ENLARGE_MERCATOR_LAT;\n        }\n        if (e.southWest.lon === -180.0) {\n            em.southWest.lon = -ENLARGE_MERCATOR_LON;\n        }\n\n        if (e.northEast.lat >= mercator.MAX_LAT) {\n            e.northEast.lat = mercator.MAX_LAT;\n        }\n\n        if (e.northEast.lat <= mercator.MIN_LAT) {\n            e.northEast.lat = mercator.MIN_LAT;\n        }\n    }\n}\n\nconst XYZ_EVENTS: XYZEventsList = [\n    /**\n     * Triggered when current tile image has loaded before rendering.\n     * @event #load\n     */\n    \"load\",\n\n    /**\n     * Triggered when all tiles have loaded or loading has stopped.\n     * @event #loadend\n     */\n    \"loadend\"\n];\n","import * as mercator from \"../mercator\";\nimport {Extent} from \"../Extent\";\nimport {LonLat} from \"../LonLat\";\nimport {Segment} from \"../segment/Segment\";\nimport {XYZ, IXYZParams} from \"./XYZ\";\n\ninterface IWMSParams extends IXYZParams {\n    extra?: any;\n    layers: string;\n    imageWidth?: number;\n    imageHeight?: number;\n    version?: string;\n}\n\n/**\n * Used to display WMS services as tile layers on the globe.\n * @class\n * @extends {XYZ}\n * @param {string} name - Layer name.\n * @param {Object} options - Options:\n * @param {number} [options.opacity=1.0] - Layer opacity.\n * @param {number} [options.minZoom=0] - Minimal visibility zoom level.\n * @param {number} [options.maxZoom=0] - Maximal visibility zoom level.\n * @param {string} [options.attribution] - Layer attribution that displayed in the attribution area on the screen.\n * @param {boolean} [options.isBaseLayer=false] - Base layer flag.\n * @param {boolean} [options.visibility=true] - Layer visibility.\n * @param {string} options.url - WMS url source.\n * @param {number} [options.width=256] - Tile width.\n * @param {number} [options.height=256] - Tile height.\n * @param {string} options.layers - WMS layers string.\n * @param {string} [options.version=\"1.1.1\"] - WMS version.\n * @param {Object} extra  - Extra parameters (by WMS reference or by WMS service vendors) to pass to WMS service.\n * @example:\n * new og.layer.WMS(\"USA States\", {\n *     isBaseLayer: false,\n *     url: \"http://openglobus.org/geoserver/\",\n *     layers: \"topp:states\",\n *     opacity: 0.5,\n *     zIndex: 50,\n *     attribution: 'USA states - geoserver WMS example',\n *     version: \"1.1.1\",\n *     visibility: false }, {\n *     transparent: true,\n *     sld: \"style.sld\"}\n * );\n */\nclass WMS extends XYZ {\n\n    protected _extra: string;\n\n    /**\n     * WMS layers string.\n     * @public\n     * @type {string}\n     */\n    public layers: string;\n\n    /**\n     * WMS tile width.\n     * @public\n     * @type {number}\n     */\n    public imageWidth: number;\n\n    /**\n     * WMS tile height.\n     * @public\n     * @type {number}\n     */\n    public imageHeight: number;\n\n    protected _getBbox: (extent: Extent) => string;\n\n    protected _version: string;\n\n    constructor(name: string | null, options: IWMSParams) {\n        super(name, options);\n\n        this._extra = new URLSearchParams(options.extra).toString();\n\n        if (!options.extent) {\n            this.setExtent(new Extent(new LonLat(-180.0, -90), new LonLat(180.0, 90)));\n        }\n\n        this.layers = options.layers;\n\n        /**\n         * WMS tile width.\n         * @public\n         * @type {number}\n         */\n        this.imageWidth = options.imageWidth || 256;\n\n        /**\n         * WMS tile height.\n         * @public\n         * @type {number}\n         */\n        this.imageHeight = options.imageHeight || 256;\n\n        this._getBbox = WMS.get_bbox_v1_1_1;\n\n        this._version = \"\";\n\n        this.setVersion(options.version);\n    }\n\n    static createRequestUrl(\n        url: string,\n        layers: string,\n        format: string = \"image/png\",\n        version: string = \"1.1.1\",\n        request: string = \"GetMap\",\n        srs: string,\n        bbox: string,\n        width: number = 256,\n        height: number = 256,\n        extra?: string\n    ): string {\n        return `${url}/?LAYERS=${layers}&FORMAT=${format}&SERVICE=WMS&VERSION=${version}&REQUEST=${request}&SRS=${srs}&BBOX=${bbox}&WIDTH=${width}&HEIGHT=${height}` + (extra ? `&${extra}` : \"\");\n    }\n\n    static get_bbox_v1_1_1(extent: Extent): string {\n        return `${extent.getWest()},${extent.getSouth()},${extent.getEast()},${extent.getNorth()}`;\n    }\n\n    static get_bbox_v1_3_0(extent: Extent): string {\n        return `${extent.getSouth()},${extent.getWest()},${extent.getNorth()},${extent.getEast()}`;\n    }\n\n    public override _checkSegment(segment: Segment) {\n        return true;\n    }\n\n    public override get instanceName(): string {\n        return \"WMS\";\n    }\n\n    protected override _createUrl(segment: Segment): string {\n        return WMS.createRequestUrl(\n            this.url,\n            this.layers,\n            \"image/png\",\n            this._version,\n            \"GetMap\",\n            segment._projection.code,\n            this._getBbox(segment.getExtent()),\n            this.imageWidth,\n            this.imageHeight,\n            this._extra\n        );\n    }\n\n    public setVersion(version?: string) {\n        if (version) {\n            this._version = version;\n        } else {\n            this._version = \"1.1.1\";\n        }\n\n        if (this._version === \"1.1.1\") {\n            this._getBbox = WMS.get_bbox_v1_1_1;\n        } else if (version === \"1.3.0\") {\n            this._getBbox = WMS.get_bbox_v1_3_0;\n        }\n    }\n\n    public override _correctFullExtent() {\n        const e = this._extent;\n        const em = this._extentMerc;\n\n        const ENLARGE_MERCATOR_LON = mercator.POLE + 50000;\n        const ENLARGE_MERCATOR_LAT = mercator.POLE + 50000;\n\n        if (e.northEast.lat === 90.0) {\n            em.northEast.lat = ENLARGE_MERCATOR_LAT;\n        }\n\n        if (e.northEast.lon === 180.0) {\n            em.northEast.lon = ENLARGE_MERCATOR_LON;\n        }\n\n        if (e.southWest.lat === -90.0) {\n            em.southWest.lat = -ENLARGE_MERCATOR_LAT;\n        }\n\n        if (e.southWest.lon === -180.0) {\n            em.southWest.lon = -ENLARGE_MERCATOR_LON;\n        }\n    }\n}\n\nexport {WMS};\n\n","import {getTileExtent} from \"../mercator\";\nimport {GlobusTerrain, IGlobusTerrainParams} from \"./GlobusTerrain\";\nimport {Layer} from \"../layer/Layer\";\nimport {WMS} from \"../layer/WMS\";\nimport {isPowerOfTwo, nextHighestPowerOfTwo} from \"../math\";\nimport {Segment} from \"../segment/Segment\";\nimport {Extent} from \"../Extent\";\nimport {TypedArray} from \"../utils/shared\";\n\ninterface IBilTerrainParams extends IGlobusTerrainParams {\n    layers?: string;\n    imageSize?: number;\n}\n\nclass BilTerrain extends GlobusTerrain {\n\n    protected _format: string;\n\n    protected _layers: string;\n\n    protected _imageSize: number;\n\n    constructor(options: IBilTerrainParams = {}) {\n        super(\"BilTerrain\", options);\n\n        this.equalizeVertices = true;\n\n        this.equalizeNormals = true;\n\n        this.minZoom = options.minZoom || 2;\n\n        this.maxZoom = options.maxZoom || 14;\n\n        this.noDataValues = options.noDataValues || [-9999, 32767];\n\n        this.url = options.url || \"\";\n\n        this._format = \"application/bil16\";\n\n        this._layers = options.layers || \"\";\n\n        this._imageSize = options.imageSize || 256;\n\n        this.plainGridSize = options.plainGridSize != undefined\n            ? options.plainGridSize\n            : isPowerOfTwo(this._imageSize) ? this._imageSize / 2 : nextHighestPowerOfTwo(this._imageSize) / 2;\n\n        this._dataType = \"arrayBuffer\";\n    }\n\n    public override isBlur(segment: Segment): boolean {\n        return segment.tileZoom >= 18;\n    }\n\n    protected override _createUrl(segment: Segment): string {\n        return WMS.createRequestUrl(\n            this.url,\n            this._layers,\n            this._format,\n            \"1.1.1\",\n            \"GetMap\",\n            segment._projection.code,\n            WMS.get_bbox_v1_1_1(segment.getExtent()),\n            this._imageSize,\n            this._imageSize\n        );\n    }\n\n    protected override _createHeights(data: number[], tileIndex: string, tileX: number, tileY: number, tileZoom: number, extent: Extent, preventChildren: boolean): TypedArray | number[] {\n\n        let bil16 = new Int16Array(data);\n\n        //\n        //Non-power of two images\n        //\n        if (!isPowerOfTwo(this._imageSize)) {\n            let outCurrenElevations = new Float32Array(bil16.length);\n            //TODO: optimize\n            extractElevationTilesNonPowerOfTwo(bil16, outCurrenElevations);\n            return outCurrenElevations;\n        }\n\n        let elevationsSize = (this.plainGridSize + 1) * (this.plainGridSize + 1);\n\n        let d = 4;\n\n        let outChildrenElevations = new Array(d);\n\n        for (let i = 0; i < d; i++) {\n            outChildrenElevations[i] = [];\n            for (let j = 0; j < d; j++) {\n                outChildrenElevations[i][j] = new Float32Array(elevationsSize);\n            }\n        }\n\n        let outCurrenElevations = new Float32Array(elevationsSize);\n\n        extractElevationTiles(bil16, this.noDataValues, outCurrenElevations, outChildrenElevations);\n\n        this._elevationCache[tileIndex] = {\n            heights: outCurrenElevations,\n            extent: extent\n        };\n\n        let dd = this._imageSize / this.plainGridSize;\n\n        for (let i = 0; i < dd; i++) {\n            for (let j = 0; j < dd; j++) {\n                let x = tileX * 2 + j,\n                    y = tileY * 2 + i,\n                    z = tileZoom + 1;\n                let tileIndex = Layer.getTileIndex(x, y, z);\n                this._elevationCache[tileIndex] = {\n                    heights: outChildrenElevations[i][j],\n                    extent: getTileExtent(x, y, z)\n                };\n            }\n        }\n\n        return outCurrenElevations;\n    }\n}\n\nfunction extractElevationTilesNonPowerOfTwo(data: number[] | TypedArray, outCurrenElevations: number[] | TypedArray) {\n    for (let i = 0, len = outCurrenElevations.length; i < len; i++) {\n        outCurrenElevations[i] = data[i];\n    }\n}\n\nfunction extractElevationTiles(data: number[] | TypedArray, noDataValues: number[] | TypedArray, outCurrenElevations: number[] | TypedArray, outChildrenElevations: number[][][] | TypedArray[][]) {\n    let destSize = Math.sqrt(outCurrenElevations.length) - 1;\n    let destSizeOne = destSize + 1;\n    let sourceSize = Math.sqrt(data.length);\n    let dt = sourceSize / destSize;\n\n    let rightHeight = 0,\n        bottomHeight = 0;\n\n    for (let k = 0, currIndex = 0, sourceDataLength = data.length; k < sourceDataLength; k++) {\n        let height = data[k];\n\n        let isNoDataCurrent = BilTerrain.checkNoDataValue(noDataValues, height),\n            isNoDataRight = false,\n            isNoDataBottom = false;\n\n        let i = Math.floor(k / sourceSize),\n            j = k % sourceSize;\n\n        let tileX = Math.floor(j / destSize),\n            tileY = Math.floor(i / destSize);\n\n        let destArr = outChildrenElevations[tileY][tileX];\n\n        let ii = i % destSize,\n            jj = j % destSize;\n\n        let destIndex = (ii + tileY) * destSizeOne + jj + tileX;\n\n        destArr[destIndex] = height;\n\n        if ((i + tileY) % dt === 0 && (j + tileX) % dt === 0) {\n            outCurrenElevations[currIndex++] = height;\n        }\n\n        if ((j + 1) % destSize === 0 && j !== sourceSize - 1) {\n            //current tile\n            rightHeight = data[k];\n\n            isNoDataRight = BilTerrain.checkNoDataValue(noDataValues, rightHeight);\n\n            let middleHeight = height;\n            if (!(isNoDataCurrent || isNoDataRight)) {\n                middleHeight = (height + rightHeight) * 0.5;\n            }\n\n            destIndex = (ii + tileY) * destSizeOne + jj + 1;\n            destArr[destIndex] = middleHeight;\n\n            if ((i + tileY) % dt === 0) {\n                outCurrenElevations[currIndex++] = middleHeight;\n            }\n\n            //next right tile\n            let rightindex = (ii + tileY) * destSizeOne + ((jj + 1) % destSize);\n            outChildrenElevations[tileY][tileX + 1][rightindex] = middleHeight;\n        }\n\n        if ((i + 1) % destSize === 0 && i !== sourceSize - 1) {\n            //current tile\n            bottomHeight = data[k + sourceSize];\n\n            isNoDataBottom = BilTerrain.checkNoDataValue(noDataValues, bottomHeight);\n\n            let middleHeight = height;\n\n            if (!(isNoDataCurrent || isNoDataBottom)) {\n                middleHeight = (height + bottomHeight) * 0.5;\n            }\n\n            destIndex = (ii + 1) * destSizeOne + jj + tileX;\n            destArr[destIndex] = middleHeight;\n\n            if ((j + tileX) % dt === 0) {\n                outCurrenElevations[currIndex++] = middleHeight;\n            }\n\n            //next bottom tile\n            let bottomindex = ((ii + 1) % destSize) * destSizeOne + jj + tileX;\n            outChildrenElevations[tileY + 1][tileX][bottomindex] = middleHeight;\n        }\n\n        if (\n            (j + 1) % destSize === 0 &&\n            j !== sourceSize - 1 &&\n            (i + 1) % destSize === 0 &&\n            i !== sourceSize - 1\n        ) {\n            //current tile\n            let rightBottomHeight = data[k + sourceSize + 1];\n\n            let isNoDataRightBottom = BilTerrain.checkNoDataValue(noDataValues, rightBottomHeight);\n\n            let middleHeight = height;\n\n            if (!(isNoDataCurrent || isNoDataRight || isNoDataBottom || isNoDataRightBottom)) {\n                middleHeight = (height + rightHeight + bottomHeight + rightBottomHeight) * 0.25;\n            }\n\n            destIndex = (ii + 1) * destSizeOne + (jj + 1);\n            destArr[destIndex] = middleHeight;\n\n            outCurrenElevations[currIndex++] = middleHeight;\n\n            //next right tile\n            let rightindex = (ii + 1) * destSizeOne;\n            outChildrenElevations[tileY][tileX + 1][rightindex] = middleHeight;\n\n            //next bottom tile\n            let bottomindex = destSize;\n            outChildrenElevations[tileY + 1][tileX][bottomindex] = middleHeight;\n\n            //next right bottom tile\n            let rightBottomindex = 0;\n            outChildrenElevations[tileY + 1][tileX + 1][rightBottomindex] = middleHeight;\n        }\n    }\n}\n\nexport {BilTerrain};\n","import * as mercator from \"../mercator\";\nimport {Extent} from \"../Extent\";\nimport {getTileExtent} from \"../mercator\";\nimport {GlobusTerrain, IGlobusTerrainParams} from \"./GlobusTerrain\";\nimport {isPowerOfTwo} from \"../math\";\nimport {Layer} from \"../layer/Layer\";\nimport {LonLat} from \"../LonLat\";\nimport {Segment} from \"../segment/Segment\";\nimport {TypedArray} from \"../utils/shared\";\nimport {IResponse} from \"../utils/Loader\";\n\ninterface IMapboxTerrainParams extends IGlobusTerrainParams {\n    equalizeNormals?: boolean;\n    key?: string;\n    imageSize?: number;\n}\n\n/**\n * The key doesn't work; just an example!\n */\nconst KEY = \"pk.eyJ1IjoiZm94bXVsZGVyODMiLCJhIjoiY2pqYmR3dG5oM2Z1bzNrczJqYm5pODhuNSJ9.Y4DRmEPhb-XSlCR9CAXACQ\";\n\nconst rgb2Height = (r: number, g: number, b: number): number => {\n    return -10000 + 0.1 * (r * 256 * 256 + g * 256 + b);\n};\n\nclass MapboxTerrain extends GlobusTerrain {\n\n    protected _imageSize: number;\n\n    protected _ctx: CanvasRenderingContext2D;\n\n    protected _imageDataCache: Record<string, Uint8ClampedArray>;\n\n    constructor(name: string | null, options: IMapboxTerrainParams = {}) {\n        super(name || \"MapboxTerrain\", {\n            equalizeVertices: options.equalizeVertices != undefined ? options.equalizeVertices : true,\n            maxZoom: options.maxZoom || 17,\n            ...options\n        });\n\n        this.equalizeNormals = options.equalizeNormals || false;\n\n        this.gridSizeByZoom = options.gridSizeByZoom || [\n            64, 32, 16, 8, 8, 8, 8, 16, 16, 16, 16, 16, 32, 16, 32, 16, 32, 16, 32, 16, 8, 4\n        ];\n\n        this.url = options.url != undefined\n            ? options.url\n            : `//api.mapbox.com/v4/mapbox.terrain-rgb/{z}/{x}/{y}.pngraw?access_token=${options.key || KEY}`;\n\n        this.noDataValues = options.noDataValues || [-65537, -10000];\n\n        this.plainGridSize = options.plainGridSize || 128;\n\n        this._dataType = \"imageBitmap\";\n\n        this._imageSize = options.imageSize || 256;\n\n        this._ctx = this._createTemporalCanvas(this._imageSize);\n\n        this._imageDataCache = {};\n    }\n\n    public override isBlur(segment: Segment): boolean {\n        return segment.tileZoom >= 16;\n    }\n\n    protected _createTemporalCanvas(size: number): CanvasRenderingContext2D {\n        let canvas = document.createElement(\"canvas\");\n        canvas.width = size;\n        canvas.height = size;\n        return canvas.getContext(\"2d\", {\n            willReadFrequently: true\n        })!;\n    }\n\n    protected override _createHeights(data: HTMLImageElement | ImageBitmap, tileIndex: string, tileX: number, tileY: number, tileZoom: number, extent: Extent, preventChildren: boolean): TypedArray | number[] {\n\n        this._ctx.clearRect(0, 0, this._imageSize, this._imageSize);\n        this._ctx.drawImage(data, 0, 0);\n        let rgbaData = this._ctx.getImageData(0, 0, this._imageSize, this._imageSize).data;\n\n        const SIZE = data.width;\n\n        //\n        //Non-power of two images\n        //\n        if (!isPowerOfTwo(this._imageSize) && SIZE === this._imageSize) {\n            let outCurrenElevations = new Float32Array(SIZE * SIZE);\n            extractElevationTilesMapboxNonPowerOfTwo(rgbaData, outCurrenElevations);\n            return outCurrenElevations;\n        }\n\n        if (this._imageSize === this.plainGridSize) {\n            let elevationsSize = (this.plainGridSize + 1) * (this.plainGridSize + 1);\n            let outCurrenElevations = new Float32Array(elevationsSize);\n            for (let k = 0, len = this._imageSize * this._imageSize; k < len; k++) {\n                let j = k % this._imageSize,\n                    i = Math.floor(k / this._imageSize);\n                let fromInd4 = k * 4;\n                let h = rgb2Height(rgbaData[fromInd4], rgbaData[fromInd4 + 1], rgbaData[fromInd4 + 2]);\n                outCurrenElevations[i * (this._imageSize + 1) + j] = h;\n            }\n\n            for (let i = 0, len = this._imageSize; i < len; i++) {\n                let j = this._imageSize - 1;\n                let fromInd4 = (i * this._imageSize + j) * 4;\n                let h = rgb2Height(rgbaData[fromInd4], rgbaData[fromInd4 + 1], rgbaData[fromInd4 + 2]);\n                outCurrenElevations[i * (this._imageSize + 1) + this._imageSize] = h;\n            }\n\n            for (let j = 0, len = this._imageSize; j < len; j++) {\n                let i = this._imageSize - 1;\n                let fromInd4 = (i * this._imageSize + j) * 4;\n                let h = rgb2Height(rgbaData[fromInd4], rgbaData[fromInd4 + 1], rgbaData[fromInd4 + 2]);\n                outCurrenElevations[this._imageSize * (this._imageSize + 1) + j] = h;\n            }\n\n            let h = rgb2Height(rgbaData[rgbaData.length - 4], rgbaData[rgbaData.length - 3], rgbaData[rgbaData.length - 2]);\n            outCurrenElevations[outCurrenElevations.length - 1] = h;\n\n            return outCurrenElevations;\n        }\n\n        //\n        // Power of two images\n        //\n        let elevationsSize = (this.plainGridSize + 1) * (this.plainGridSize + 1);\n\n        let d = SIZE / this.plainGridSize;\n\n        let outCurrenElevations = new Float32Array(elevationsSize);\n        let outChildrenElevations = new Array(d);\n\n        for (let i = 0; i < d; i++) {\n            outChildrenElevations[i] = [];\n            for (let j = 0; j < d; j++) {\n                outChildrenElevations[i][j] = new Float32Array(elevationsSize);\n            }\n        }\n\n        if (preventChildren) {\n            extractElevationTilesMapboxNoChildren(rgbaData, this.noDataValues, outCurrenElevations);\n        } else {\n            extractElevationTilesMapbox(\n                rgbaData,\n                this.noDataValues,\n                outCurrenElevations,\n                outChildrenElevations\n            );\n        }\n\n        this._elevationCache[tileIndex] = {\n            heights: outCurrenElevations,\n            extent: extent//segment.getExtent()\n        };\n\n        if (!preventChildren) {\n            for (let i = 0; i < d; i++) {\n                for (let j = 0; j < d; j++) {\n                    let x = tileX * 2 + j,\n                        y = tileY * 2 + i,\n                        z = tileZoom + 1;\n                    let tileIndex = Layer.getTileIndex(x, y, z);\n                    this._elevationCache[tileIndex] = {\n                        heights: outChildrenElevations[i][j],\n                        extent: getTileExtent(x, y, z)\n                    };\n                }\n            }\n        }\n\n        return outCurrenElevations;\n    }\n\n    public override getHeightAsync(lonLat: LonLat, callback: (h: number) => void, zoom?: number): boolean {\n        if (!lonLat || lonLat.lat > mercator.MAX_LAT || lonLat.lat < mercator.MIN_LAT) {\n            callback(0);\n            return true;\n        }\n\n        let z = zoom || this.maxZoom,\n            size = mercator.POLE2 / Math.pow(2, z),\n            merc = mercator.forward(lonLat),\n            x = Math.floor((mercator.POLE + merc.lon) / size),\n            y = Math.floor((mercator.POLE - merc.lat) / size);\n\n        let tileIndex = Layer.getTileIndex(x, y, z),\n            extent = mercator.getTileExtent(x, y, z);\n\n        let sizeImgW = extent.getWidth() / (this._imageSize - 1),\n            sizeImgH = extent.getHeight() / (this._imageSize - 1);\n\n        let i = this._imageSize - Math.ceil((merc.lat - extent.southWest.lat) / sizeImgH) - 1,\n            j = Math.floor((merc.lon - extent.southWest.lon) / sizeImgW);\n        let index = (i * this._imageSize + j) * 4;\n\n        if (this._imageDataCache[tileIndex]) {\n            let data = this._imageDataCache[tileIndex];\n            callback(rgb2Height(data[index], data[index + 1], data[index + 2]));\n            return true;\n        }\n\n        if (!this._fetchCache[tileIndex]) {\n            let url = this._buildURL(x, y, z);\n            this._fetchCache[tileIndex] = this._loader.fetch({\n                src: url,\n                type: this._dataType\n            });\n        }\n\n        this._fetchCache[tileIndex].then((response: IResponse) => {\n            if (response.status === \"ready\") {\n                this._ctx.clearRect(0, 0, this._imageSize, this._imageSize);\n                this._ctx.drawImage(response.data, 0, 0);\n                let data = this._ctx.getImageData(0, 0, 256, 256).data;\n                this._imageDataCache[tileIndex] = data;\n                callback(rgb2Height(data[index], data[index + 1], data[index + 2]));\n            } else if (response.status === \"error\") {\n                callback(0);\n            } else {\n                //@ts-ignore\n                this._fetchCache[tileIndex] = null;\n                delete this._fetchCache[tileIndex];\n            }\n        });\n\n        return false;\n    }\n}\n\nfunction extractElevationTilesMapboxNonPowerOfTwo(rgbaData: number[] | TypedArray, outCurrenElevations: number[] | TypedArray) {\n    for (let i = 0, len = outCurrenElevations.length; i < len; i++) {\n        let i4 = i * 4;\n        outCurrenElevations[i] = rgb2Height(rgbaData[i4], rgbaData[i4 + 1], rgbaData[i4 + 2]);\n    }\n}\n\nfunction extractElevationTilesMapbox(\n    rgbaData: number[] | TypedArray,\n    noDataValues: number[] | TypedArray,\n    outCurrenElevations: number[] | TypedArray,\n    outChildrenElevations: number[][][] | TypedArray[][]\n) {\n    let destSize = Math.sqrt(outCurrenElevations.length) - 1;\n    let destSizeOne = destSize + 1;\n    let sourceSize = Math.sqrt(rgbaData.length / 4);\n    let dt = sourceSize / destSize;\n\n    let rightHeight = 0,\n        bottomHeight = 0,\n        sourceSize4 = 0;\n\n    for (\n        let k = 0, currIndex = 0, sourceDataLength = rgbaData.length / 4;\n        k < sourceDataLength;\n        k++\n    ) {\n        let k4 = k * 4;\n\n        let height = rgb2Height(rgbaData[k4], rgbaData[k4 + 1], rgbaData[k4 + 2]);\n\n        let isNoDataCurrent = MapboxTerrain.checkNoDataValue(noDataValues, height),\n            isNoDataRight = false,\n            isNoDataBottom = false;\n\n        let i = Math.floor(k / sourceSize),\n            j = k % sourceSize;\n\n        let tileX = Math.floor(j / destSize),\n            tileY = Math.floor(i / destSize);\n\n        let destArr = outChildrenElevations[tileY][tileX];\n\n        let ii = i % destSize,\n            jj = j % destSize;\n\n        let destIndex = (ii + tileY) * destSizeOne + jj + tileX;\n\n        destArr[destIndex] = height;\n\n        if ((i + tileY) % dt === 0 && (j + tileX) % dt === 0) {\n            outCurrenElevations[currIndex++] = height;\n        }\n\n        if ((j + 1) % destSize === 0 && j !== sourceSize - 1) {\n            //current tile\n            rightHeight = rgb2Height(rgbaData[k4 + 4], rgbaData[k4 + 5], rgbaData[k4 + 6]);\n\n            isNoDataRight = MapboxTerrain.checkNoDataValue(noDataValues, rightHeight);\n\n            let middleHeight = height;\n\n            if (!(isNoDataCurrent || isNoDataRight)) {\n                middleHeight = (height + rightHeight) * 0.5;\n            }\n\n            destIndex = (ii + tileY) * destSizeOne + jj + 1;\n            destArr[destIndex] = middleHeight;\n\n            if ((i + tileY) % dt === 0) {\n                outCurrenElevations[currIndex++] = middleHeight;\n            }\n\n            //next right tile\n            let rightindex = (ii + tileY) * destSizeOne + ((jj + 1) % destSize);\n            outChildrenElevations[tileY][tileX + 1][rightindex] = middleHeight;\n        }\n\n        if ((i + 1) % destSize === 0 && i !== sourceSize - 1) {\n            //current tile\n            sourceSize4 = sourceSize * 4;\n\n            bottomHeight = rgb2Height(rgbaData[k4 + sourceSize4], rgbaData[k4 + sourceSize4 + 1], rgbaData[k4 + sourceSize4 + 2]);\n\n            isNoDataBottom = MapboxTerrain.checkNoDataValue(noDataValues, bottomHeight);\n\n            let middleHeight = (height + bottomHeight) * 0.5;\n\n            if (!(isNoDataCurrent || isNoDataBottom)) {\n                middleHeight = (height + bottomHeight) * 0.5;\n            }\n\n            destIndex = (ii + 1) * destSizeOne + jj + tileX;\n            destArr[destIndex] = middleHeight;\n\n            if ((j + tileX) % dt === 0) {\n                outCurrenElevations[currIndex++] = middleHeight;\n            }\n\n            //next bottom tile\n            let bottomindex = ((ii + 1) % destSize) * destSizeOne + jj + tileX;\n            outChildrenElevations[tileY + 1][tileX][bottomindex] = middleHeight;\n        }\n\n        if (\n            (j + 1) % destSize === 0 && j !== sourceSize - 1 &&\n            (i + 1) % destSize === 0 && i !== sourceSize - 1\n        ) {\n            //current tile\n            let rightBottomHeight = rgb2Height(rgbaData[k4 + sourceSize4 + 4], rgbaData[k4 + sourceSize4 + 5], rgbaData[k4 + sourceSize4 + 6]);\n\n            let isNoDataRightBottom = MapboxTerrain.checkNoDataValue(noDataValues, rightBottomHeight);\n\n            let middleHeight = height;\n\n            if (!(isNoDataCurrent || isNoDataRight || isNoDataBottom || isNoDataRightBottom)) {\n                middleHeight = (height + rightHeight + bottomHeight + rightBottomHeight) * 0.25;\n            }\n\n            destIndex = (ii + 1) * destSizeOne + (jj + 1);\n            destArr[destIndex] = middleHeight;\n\n            outCurrenElevations[currIndex++] = middleHeight;\n\n            //next right tile\n            let rightindex = (ii + 1) * destSizeOne;\n            outChildrenElevations[tileY][tileX + 1][rightindex] = middleHeight;\n\n            //next bottom tile\n            let bottomindex = destSize;\n            outChildrenElevations[tileY + 1][tileX][bottomindex] = middleHeight;\n\n            //next right bottom tile\n            let rightBottomindex = 0;\n            outChildrenElevations[tileY + 1][tileX + 1][rightBottomindex] = middleHeight;\n        }\n    }\n}\n\nfunction extractElevationTilesMapboxNoChildren(\n    rgbaData: number[] | TypedArray,\n    noDataValues: number[] | TypedArray,\n    outCurrenElevations: number[] | TypedArray\n) {\n    let destSize = Math.sqrt(outCurrenElevations.length) - 1;\n    let sourceSize = Math.sqrt(rgbaData.length / 4);\n    let dt = sourceSize / destSize;\n\n    let rightHeight = 0,\n        bottomHeight = 0,\n        sourceSize4 = 0;\n\n    for (\n        let k = 0, currIndex = 0, sourceDataLength = rgbaData.length / 4;\n        k < sourceDataLength;\n        k++\n    ) {\n        let k4 = k * 4;\n\n        let height = rgb2Height(rgbaData[k4], rgbaData[k4 + 1], rgbaData[k4 + 2]);\n\n        let isNoDataCurrent = MapboxTerrain.checkNoDataValue(noDataValues, height),\n            isNoDataRight = false,\n            isNoDataBottom = false;\n\n        let i = Math.floor(k / sourceSize),\n            j = k % sourceSize;\n\n        let tileX = Math.floor(j / destSize),\n            tileY = Math.floor(i / destSize);\n\n        if ((i + tileY) % dt === 0 && (j + tileX) % dt === 0) {\n            outCurrenElevations[currIndex++] = height;\n        }\n\n        if ((j + 1) % destSize === 0 && j !== sourceSize - 1) {\n            //current tile\n            rightHeight = rgb2Height(rgbaData[k4 + 4], rgbaData[k4 + 5], rgbaData[k4 + 6]);\n\n            isNoDataRight = MapboxTerrain.checkNoDataValue(noDataValues, rightHeight);\n\n            let middleHeight = height;\n\n            if (!(isNoDataCurrent || isNoDataRight)) {\n                middleHeight = (height + rightHeight) * 0.5;\n            }\n\n            if ((i + tileY) % dt === 0) {\n                outCurrenElevations[currIndex++] = middleHeight;\n            }\n        }\n\n        if ((i + 1) % destSize === 0 && i !== sourceSize - 1) {\n            //current tile\n            sourceSize4 = sourceSize * 4;\n\n            bottomHeight = rgb2Height(rgbaData[k4 + sourceSize4], rgbaData[k4 + sourceSize4 + 1], rgbaData[k4 + sourceSize4 + 2]);\n\n            isNoDataBottom = MapboxTerrain.checkNoDataValue(noDataValues, bottomHeight);\n\n            let middleHeight = (height + bottomHeight) * 0.5;\n\n            if (!(isNoDataCurrent || isNoDataBottom)) {\n                middleHeight = (height + bottomHeight) * 0.5;\n            }\n\n            if ((j + tileX) % dt === 0) {\n                outCurrenElevations[currIndex++] = middleHeight;\n            }\n        }\n\n        if (\n            (j + 1) % destSize === 0 && j !== sourceSize - 1 &&\n            (i + 1) % destSize === 0 && i !== sourceSize - 1\n        ) {\n            //current tile\n            let rightBottomHeight = rgb2Height(rgbaData[k4 + sourceSize4 + 4], rgbaData[k4 + sourceSize4 + 5], rgbaData[k4 + sourceSize4 + 6]);\n\n            let isNoDataRightBottom = MapboxTerrain.checkNoDataValue(\n                noDataValues,\n                rightBottomHeight\n            );\n\n            let middleHeight = height;\n\n            if (!(isNoDataCurrent || isNoDataRight || isNoDataBottom || isNoDataRightBottom)) {\n                middleHeight = (height + rightHeight + bottomHeight + rightBottomHeight) * 0.25;\n            }\n\n            outCurrenElevations[currIndex++] = middleHeight;\n        }\n    }\n}\n\nexport {MapboxTerrain};\n","import {nextHighestPowerOfTwo} from \"../math\";\nimport {BaseGeoImage, IBaseGeoImageParams} from \"./BaseGeoImage\";\nimport {isImageLoaded} from \"../utils/shared\";\nimport {Material} from \"./Material\";\n\ninterface IGeoImageParams extends IBaseGeoImageParams {\n    image?: HTMLImageElement | HTMLCanvasElement | ImageBitmap;\n    src?: string;\n}\n\n/**\n * Used to load and display a single image over specific corner coordinates on the globe.\n * @class\n * @extends {BaseGeoImage}\n */\nclass GeoImage extends BaseGeoImage {\n    /**\n     * Image object.\n     * @protected\n     * @type {HTMLImageElement | HTMLCanvasElement | ImageBitmap}\n     */\n    protected _image: HTMLImageElement | HTMLCanvasElement | ImageBitmap | null;\n\n    /**\n     * Image source url path.\n     * @protected\n     * @type {string}\n     */\n    protected _src: string | null;\n\n    protected _onLoad_: ((this: HTMLImageElement, ev: Event) => void) | null;\n\n    constructor(name: string | null, options: IGeoImageParams = {}) {\n        super(name, options);\n        this._image = options.image || null;\n        this._src = options.src || null;\n        this._onLoad_ = null;\n    }\n\n    public override get instanceName(): string {\n        return \"GeoImage\";\n    }\n\n    public override abortLoading() {\n        if (this._image instanceof HTMLImageElement) {\n            this._image.src = \"\";\n        }\n    }\n\n    /**\n     * Sets image source url path.\n     * @public\n     * @param {string} srs - Image url path.\n     */\n    public setSrc(src: string) {\n        this._planet && this._planet._geoImageCreator.remove(this);\n        this._src = src;\n        this._sourceReady = false;\n        this._sourceCreated = false;\n        this._image = new Image();\n        this._onLoad_ = this._onLoad.bind(this);\n        this._image.addEventListener(\"load\", this._onLoad_);\n        this._image.src = src;\n    }\n\n    /**\n     * Sets image object.\n     * @public\n     * @param {Image} image - Image object.\n     */\n    public setImage(image: HTMLImageElement) {\n        this._planet && this._planet._geoImageCreator.remove(this);\n        this._sourceCreated = false;\n        this._sourceReady = false;\n        this._image = image;\n        this._src = image.src;\n        if (isImageLoaded(this._image)) {\n            this._applyImage(this._image);\n        } else {\n            this._onLoad_ = this._onLoad.bind(this);\n            this._image.addEventListener(\"load\", this._onLoad_);\n        }\n    }\n\n    /**\n     * Creates source gl texture.\n     * @virtual\n     * @protected\n     */\n    protected override _createSourceTexture() {\n        if (!this._sourceCreated && this._image) {\n            this._sourceTexture = this._planet!.renderer!.handler.createTexture_l(this._image);\n            this._sourceCreated = true;\n        }\n    }\n\n    protected _onLoad(ev: Event) {\n        this._applyImage(this._image);\n        if (this._image instanceof HTMLImageElement) {\n            this._image.removeEventListener(\"load\", this._onLoad_!);\n        }\n        this._onLoad_ = null;\n    }\n\n    protected _applyImage(img: HTMLImageElement | HTMLCanvasElement | ImageBitmap | null) {\n        if (img) {\n            this._frameWidth = nextHighestPowerOfTwo(img.width * 2, 4096);\n            this._frameHeight = nextHighestPowerOfTwo(img.height * 3, 4096);\n            this._sourceReady = true;\n            if (this._planet) {\n                this._planet._geoImageCreator.add(this);\n            }\n        }\n    }\n\n\n    /**\n     * Loads planet segment material. In this case - GeoImage source image.\n     * @public\n     * @param {Material} material - GeoImage planet material.\n     */\n    public override loadMaterial(material: Material) {\n        material.isLoading = true;\n        this._creationProceeding = true;\n        if (!this._sourceReady && this._src) {\n            if (this._image) {\n                if (this._image instanceof HTMLImageElement) {\n                    if (isImageLoaded(this._image)) {\n                        this._applyImage(this._image);\n                    } else {\n                        this._onLoad_ = this._onLoad.bind(this);\n                        this._image.addEventListener(\"load\", this._onLoad_);\n                    }\n                }\n            } else {\n                this._image = new Image();\n                this._onLoad_ = this._onLoad.bind(this);\n                this._image.addEventListener(\"load\", this._onLoad_);\n                this._image.src = this._src;\n            }\n        } else if (this._planet) {\n            this._planet._geoImageCreator.add(this);\n        }\n    }\n\n    /**\n     * @public\n     * @param {Material} material - GeoImage material.\n     */\n    public override abortMaterialLoading(material: Material) {\n        if (this._image && this._image instanceof HTMLImageElement) {\n            this._image.src = \"\";\n        }\n        this._creationProceeding = false;\n        material.isLoading = false;\n        material.isReady = false;\n    }\n}\n\nexport {GeoImage};\n","import {BaseGeoImage, IBaseGeoImageParams} from './BaseGeoImage';\nimport {Material} from \"../layer/Material\";\nimport {nextHighestPowerOfTwo} from '../math';\nimport {WebGLTextureExt} from \"../webgl/Handler\";\n\ninterface IGeoTexture2dParams extends IBaseGeoImageParams {\n    texture?: WebGLTextureExt;\n    frameWidth?: number;\n    frameHeight?: number;\n}\n\nclass GeoTexture2d extends BaseGeoImage {\n    constructor(name: string | null, options: IGeoTexture2dParams = {}) {\n        super(name, options);\n\n        this._sourceTexture = options.texture || null;\n\n        if (options.texture) {\n            this._sourceReady = true;\n            this._sourceCreated = true;\n        }\n\n        this._frameWidth = options.frameWidth != undefined ? nextHighestPowerOfTwo(options.frameWidth!) : 256;\n        this._frameHeight = options.frameHeight != undefined ? nextHighestPowerOfTwo(options.frameHeight!) : 256;\n\n        this._animate = true;\n    }\n\n    public override get instanceName(): string {\n        return \"GeoTexture2d\";\n    }\n\n    public override loadMaterial(material: Material) {\n        this._planet!._geoImageCreator.add(this);\n    }\n\n    public bindTexture(texture: WebGLTextureExt) {\n        this._sourceReady = true;\n        this._sourceCreated = true;\n        this._sourceTexture = texture;\n    }\n\n    public setSize(width: number, height: number) {\n        this._frameWidth = width;\n        this._frameHeight = height;\n        this._frameCreated = false;\n    }\n\n    public override abortMaterialLoading(material: Material) {\n        this._creationProceeding = false;\n        material.isLoading = false;\n        material.isReady = false;\n    }\n}\n\nexport {GeoTexture2d};\n","import {BaseGeoImage, IBaseGeoImageParams} from \"./BaseGeoImage\";\nimport {Material} from \"./Material\";\n\ninterface IGeoVideoParams extends IBaseGeoImageParams {\n    videoElement?: HTMLVideoElement;\n    src?: string;\n}\n\n/**\n * Used to load and display a video stream by specific corners coordinates on the globe.\n * @class\n * @extends {BaseGeoImage}\n */\nclass GeoVideo extends BaseGeoImage {\n\n    /**\n     * HTML5 video element object.\n     * @protected\n     * @type {HTMLVideoElement}\n     */\n    protected _video: HTMLVideoElement | null;\n\n    /**\n     * Video source url path.\n     * @protected\n     * @type {string}\n     */\n    protected _src: string | null;\n\n    constructor(name: string | null, options: IGeoVideoParams = {}) {\n        super(name, options);\n\n        this._animate = true;\n\n        this._video = options.videoElement || null;\n\n        this._src = options.src || null;\n    }\n\n    public override get instanceName(): string {\n        return \"GeoVideo\";\n    }\n\n    /**\n     * Sets video source url path.\n     * @public\n     * @param {string} src - Video url path.\n     */\n    public setSrc(src: string) {\n        this._planet && this._planet._geoImageCreator.remove(this);\n        this._src = src;\n        this._sourceReady = false;\n    }\n\n    /**\n     * Sets HTML5 video object.\n     * @public\n     * @param {HTMLVideoElement} video - HTML5 video element object.\n     */\n    public setVideoElement(video: HTMLVideoElement) {\n        this._planet && this._planet._geoImageCreator.remove(this);\n        this._video = video;\n        this._src = video.src;\n        this._sourceReady = false;\n    }\n\n    /**\n     * Sets layer visibility.\n     * @public\n     * @param {boolean} visibility - Layer visibility.\n     */\n    public override setVisibility(visibility: boolean) {\n        if (visibility != this._visibility) {\n            super.setVisibility(visibility);\n            if (this._planet) {\n                if (visibility) {\n                    this._sourceReady && this._planet._geoImageCreator.add(this);\n                    this._video && this._video.play();\n                } else {\n                    this._sourceReady && this._planet._geoImageCreator.remove(this);\n                    this._video && this._video.pause();\n                }\n            }\n        }\n    }\n\n    /**\n     * Creates or refresh source video GL texture.\n     * @virtual\n     * @protected\n     */\n    protected override _createSourceTexture() {\n        let gl = this._planet!.renderer!.handler.gl!;\n        if (this._sourceCreated) {\n            gl.bindTexture(gl.TEXTURE_2D, this._sourceTexture!);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._video!);\n        } else {\n            this._sourceTexture = this._planet!.renderer!.handler.createTexture_n_webgl1(this._video!);\n            this._sourceCreated = true;\n        }\n    }\n\n    /**\n     * @private\n     */\n    protected _onCanPlay(video: HTMLVideoElement) {\n        this._frameWidth = video.videoWidth;\n        this._frameHeight = video.videoHeight;\n        video.width = video.videoWidth;\n        video.height = video.videoHeight;\n        video.play();\n        this._sourceReady = true;\n        this._planet!._geoImageCreator.add(this);\n    }\n\n    protected _onError(video: HTMLVideoElement) {\n        let err = \"unknown error\";\n        switch (video.error!.code) {\n            case 1:\n                err = \"video loading aborted\";\n                break;\n            case 2:\n                err = \"network loading error\";\n                break;\n            case 3:\n                err = \"video decoding failed / corrupted data or unsupported codec\";\n                break;\n            case 4:\n                err = \"video not supported\";\n                break;\n        }\n        console.warn(`Error: ${err} error-code=${video.error!.code})`);\n    }\n\n    /**\n     * Loads planet segment material. In this case - GeoImage source video.\n     * @public\n     * @param {Material} material - GeoImage planet material.\n     */\n    public override loadMaterial(material: Material) {\n        material.isLoading = true;\n        this._creationProceeding = true;\n        if (!this._sourceReady && this._src) {\n            if (this._video) {\n                if (this._video.readyState === this._video.HAVE_ENOUGH_DATA) {\n                    this._onCanPlay(this._video);\n                } else if (this._video.src) {\n                    let that = this;\n                    this._video.addEventListener(\"canplay\", function (e: Event) {\n                        that._onCanPlay(this);\n                    });\n                }\n            } else {\n                this._video = document.createElement(\"video\");\n                this._video.crossOrigin = \"Anonymous\";\n                let that = this;\n                this._video.addEventListener(\"canplay\", function () {\n                    that._onCanPlay(this);\n                });\n                this._video.addEventListener(\"error\", function () {\n                    that._onError(this);\n                });\n            }\n            this._video.autoplay = true;\n            this._video.loop = true;\n            this._video.src = this._src;\n            this._video.muted = true;\n            this._video.setAttribute(\"playsinline\", \"true\");\n            this._video.setAttribute(\"webkit-playsinline\", \"true\");\n        } else {\n            this._planet!._geoImageCreator.add(this);\n        }\n    }\n\n    /**\n     * @virtual\n     * @param {Material} material - GeoImage material.\n     */\n    public override abortMaterialLoading(material: Material) {\n        this._video && (this._video.src = \"\");\n        this._creationProceeding = false;\n        material.isLoading = false;\n        material.isReady = false;\n    }\n}\n\nexport {GeoVideo};\n","import {Billboard, IBillboardParams} from \"../entity/Billboard\";\nimport {Entity} from \"../entity/Entity\";\nimport {Extent} from \"../Extent\";\nimport {LonLat} from \"../LonLat\";\nimport {Vector, IVectorParams} from \"./Vector\";\nimport {NumberArray3} from \"../math/Vec3\";\n\ninterface IKMLParams extends IVectorParams {\n    color?: string;\n    billboard?: IBillboardParams;\n}\n\n/**\n * Layer to render KMLs files\n * @class\n * @extends {Vector}\n * @param {string} name\n * @param {*} [options]\n */\nexport class KML extends Vector {\n\n    protected _color: string;\n    protected _billboard: IBillboardParams;\n\n    constructor(name: string, options: IKMLParams = {}) {\n        super(name, options);\n        this._billboard = options.billboard || {\n            src: \"https://openglobus.org/examples/billboards/carrot.png\"\n        };\n\n        this._color = options.color || \"#6689db\";\n    }\n\n    public override get instanceName() {\n        return \"KML\";\n    }\n\n    protected _extractCoordonatesFromKml(xmlDoc: XMLDocument) {\n        const raw = Array.from(xmlDoc.getElementsByTagName(\"coordinates\"));\n        const rawText = raw.map(item => item.textContent!.trim());\n        const coordinates = rawText.map(item =>\n            item\n                .replace(/\\n/g, \" \")\n                .replace(/\\t/g, \" \")\n                .replace(/ +/g, \" \")\n                .split(\" \")\n                .map((co) => co.split(\",\").map(parseFloat))\n        );\n        return coordinates;\n    }\n\n    protected _AGBRtoRGBA(agbr: string): string | undefined {\n        if (!agbr || agbr.length != 8) return;\n\n        const a = parseInt(agbr.slice(0, 2), 16) / 255;\n        const b = parseInt(agbr.slice(2, 4), 16);\n        const g = parseInt(agbr.slice(4, 6), 16);\n        const r = parseInt(agbr.slice(6, 8), 16);\n\n        return `rgba(${r},${g},${b},${a})`;\n    }\n\n    /**\n     * @protected\n     returns array of longitude, latitude, altitude (altitude optional)\n     */\n    protected _parseKMLcoordinates(coords: Element): number[][] {\n        const coordinates = coords.innerHTML.trim()\n            .replace(/\\n/g, ' ')\n            .replace(/\\t/g, ' ')\n            .replace(/ +/g, ' ')\n            .split(\" \")\n            .map((co) => co.split(\",\").map(parseFloat))\n\n        return coordinates;\n    }\n\n    protected _kmlPlacemarkToEntity(placemark: Element | undefined | null, extent: Extent): Entity | undefined {\n        if (!placemark) return;\n\n        const nameTags: Element[] = Array.from(placemark.getElementsByTagName(\"name\"))\n        const name: string = nameTags && nameTags.length > 0 ? nameTags[0].innerHTML.trim() : '';\n\n        const {iconHeading, iconURL, iconColor, lineWidth, lineColor} = this._extractStyle(placemark);\n\n        // TODO handle MultiGeometry\n\n        const lonLats: LonLat[] = [];\n        for (const coord of placemark.getElementsByTagName(\"coordinates\")) {\n            const coordinates = this._parseKMLcoordinates(coord) || [[0, 0, 0]]\n\n            for (const lonlatalt of coordinates) {\n                const [lon, lat, alt] = lonlatalt\n\n                lonLats.push(new LonLat(lon, lat, alt));\n\n                if (lon < extent.southWest.lon) extent.southWest.lon = lon;\n                if (lat < extent.southWest.lat) extent.southWest.lat = lat;\n                if (lon > extent.northEast.lon) extent.northEast.lon = lon;\n                if (lat > extent.northEast.lat) extent.northEast.lat = lat;\n            }\n        }\n\n        if (lonLats.length === 1) {\n            const hdgrad = iconHeading * 0.01745329; // radians\n\n            return new Entity({\n                name,\n                lonlat: lonLats[0],\n                billboard: {\n                    src: iconURL,\n                    size: [24, 24],\n                    color: iconColor,\n                    rotation: hdgrad\n                },\n                properties: {\n                    color: iconColor,\n                    heading: iconHeading\n                }\n            });\n\n        } else {\n            return new Entity({\n                polyline: {\n                    pathLonLat: [lonLats],\n                    thickness: lineWidth,\n                    color: lineColor,\n                    isClosed: false\n                }\n            });\n        }\n    }\n\n    protected _extractStyle(placemark: Element): any {\n        let iconColor;\n        let iconHeading;\n        let iconURL;\n        let lineColor;\n        let lineWidth;\n\n        const style = placemark.getElementsByTagName(\"Style\")[0];\n        if (style) {\n            let iconstyle = style.getElementsByTagName(\"IconStyle\")[0];\n            if (iconstyle) {\n                let color = iconstyle.getElementsByTagName(\"color\")[0];\n                if (color)\n                    iconColor = this._AGBRtoRGBA(color.innerHTML.trim());\n\n                let heading = iconstyle.getElementsByTagName(\"heading\")[0];\n                if (heading) {\n                    const hdg = parseFloat(heading.innerHTML.trim());\n                    if (hdg >= 0 && hdg <= 360)\n                        iconHeading = hdg % 360;\n                }\n\n                let icon = iconstyle.getElementsByTagName(\"Icon\")[0];\n                if (icon) {\n                    let href = icon.getElementsByTagName(\"href\")[0];\n                    if (href) {\n                        iconURL = href.innerHTML.trim();\n                    }\n                }\n            }\n\n            let linestyle = style.getElementsByTagName(\"LineStyle\")[0];\n            if (linestyle) {\n                let color = linestyle.getElementsByTagName(\"color\")[0];\n                if (color)\n                    lineColor = this._AGBRtoRGBA(color.innerHTML.trim());\n                let width = linestyle.getElementsByTagName(\"width\")[0];\n                if (width !== undefined)\n                    lineWidth = parseFloat(width.innerHTML.trim());\n            }\n        }\n\n        if (!iconColor) iconColor = \"#FFFFFF\"\n        if (!iconHeading) iconHeading = 0\n        if (!iconURL) iconURL = \"https://openglobus.org/examples/billboards/carrot.png\"\n\n        if (!lineColor) lineColor = \"#FFFFFF\"\n        if (!lineWidth) lineWidth = 1\n\n        return {iconHeading, iconURL, iconColor, lineWidth, lineColor};\n    }\n\n    protected _parseKML(xml: XMLDocument, extent: Extent, entities?: Entity[]): Entity[] {\n        if (!entities)\n            entities = [];\n\n        if (xml.documentElement.nodeName !== \"kml\")\n            return entities;\n\n        for (const placemark of xml.getElementsByTagName(\"Placemark\")) {\n            const entity = this._kmlPlacemarkToEntity(placemark, extent);\n            if (entity) entities.push(entity);\n        }\n\n        return entities;\n    }\n\n    protected _convertKMLintoEntities(xml: XMLDocument): any {\n        const extent = new Extent(new LonLat(180.0, 90.0), new LonLat(-180.0, -90.0));\n        const entities = this._parseKML(xml, extent);\n\n        return {entities, extent}\n    }\n\n    /**\n     * Creates billboards or polylines from array of lonlat.\n     * @protected\n     * @param {Array} coordonates\n     * @param {string} color\n     * @returns {any}\n     */\n    protected _convertCoordonatesIntoEntities(coordinates: number[][][][], color: string, billboard?: IBillboardParams): any {\n        const extent = new Extent(new LonLat(180.0, 90.0), new LonLat(-180.0, -90.0));\n        const addToExtent = (c: number[]) => {\n            const lon = c[0],\n                lat = c[1];\n            if (lon < extent.southWest.lon) extent.southWest.lon = lon;\n            if (lat < extent.southWest.lat) extent.southWest.lat = lat;\n            if (lon > extent.northEast.lon) extent.northEast.lon = lon;\n            if (lat > extent.northEast.lat) extent.northEast.lat = lat;\n        };\n        const _pathes: number[][][] = [];\n\n        coordinates.forEach((kmlFile: number[][][]) => kmlFile.forEach((p: number[][]) => _pathes.push(p)));\n\n        const entities = _pathes.map((path) => {\n            if (path.length === 1) {\n                const lonlat = path[0] as NumberArray3;\n                const _entity = new Entity({lonlat, billboard});\n                addToExtent(lonlat);\n                return _entity;\n            } else if (path.length > 1) {\n                const pathLonLat = path.map((item: number[]) => {\n                    addToExtent(item);\n                    return new LonLat(item[0], item[1], item[2]);\n                });\n                const _entity = new Entity({\n                    polyline: {pathLonLat: [pathLonLat], thickness: 3, color, isClosed: false}\n                });\n                return _entity;\n            }\n        });\n        return {entities, extent};\n    }\n\n    /**\n     * @protected\n     * @returns {Document}\n     */\n    protected _getXmlContent(file: Blob): Promise<XMLDocument> {\n        return new Promise((resolve) => {\n            const fileReader = new FileReader();\n            fileReader.onload = async (i) =>\n                resolve(new DOMParser().parseFromString(i.target!.result as string, \"text/xml\"));\n            fileReader.readAsText(file);\n        });\n    }\n\n    protected _expandExtents(extent1: Extent | null | undefined, extent2: Extent): Extent {\n        if (!extent1) return extent2;\n        if (extent2.southWest.lon < extent1.southWest.lon)\n            extent1.southWest.lon = extent2.southWest.lon;\n        if (extent2.southWest.lat < extent1.southWest.lat)\n            extent1.southWest.lat = extent2.southWest.lat;\n        if (extent2.northEast.lon > extent1.northEast.lon)\n            extent1.northEast.lon = extent2.northEast.lon;\n        if (extent2.northEast.lat > extent1.northEast.lat)\n            extent1.northEast.lat = extent2.northEast.lat;\n        return extent1;\n    }\n\n    /**\n     * @public\n     * @param {File[]} kmls\n     * @param {string} [color]\n     * @param {Billboard} [billboard]\n     * @returns {Promise<{entities: Entity[], extent: Extent}>}\n     */\n    public async addKmlFromFiles(kmls: Blob[], color?: string, billboard?: IBillboardParams) {\n        if (!Array.isArray(kmls)) return null\n        const kmlObjs = await Promise.all(kmls.map(this._getXmlContent));\n        const coordonates = kmlObjs.map(this._extractCoordonatesFromKml);\n        const {entities, extent} = this._convertCoordonatesIntoEntities(\n            coordonates,\n            color || this._color,\n            billboard || this._billboard\n        );\n        this._extent = this._expandExtents(this._extent, extent);\n        entities.forEach(this.add.bind(this));\n        return {entities, extent};\n    }\n\n    /**\n     * @param {string} color\n     * @public\n     */\n    public setColor(color: string) {\n        this._color = color;\n        this._billboard.color = color;\n    }\n\n    protected _getKmlFromUrl(url: string): Promise<Document> {\n        return new Promise<Document>((resolve, reject) => {\n            const request = new XMLHttpRequest();\n            request.open(\"GET\", url, true);\n            request.responseType = \"document\";\n            request.overrideMimeType(\"text/xml\");\n            request.onload = () => {\n                if (request.readyState === request.DONE && request.status === 200) {\n                    resolve(request.responseXML!);\n                } else {\n                    reject(new Error(\"no valid kml file\"));\n                }\n            };\n            request.send();\n        });\n    }\n\n    /**\n     * @public\n     * @param {string} url - Url of the KML to display. './myFile.kml' or 'http://mySite/myFile.kml' for example.\n     * @param {string} [color]\n     * @param {Billboard} [billboard]\n     * @returns {Promise<{entities: Entity[], extent: Extent}>}\n     */\n    public async addKmlFromUrl(url: string, color?: string, billboard?: Billboard | IBillboardParams): Promise<any> {\n        const kml = await this._getKmlFromUrl(url);\n        /*\n                const coordonates = this._extractCoordonatesFromKml(kml);\n                const { entities, extent } = this._convertCoordonatesIntoEntities(\n                    [coordonates],\n                    color || this._color,\n                    billboard || this._billboard\n                );\n        */\n        const {entities, extent} = this._convertKMLintoEntities(kml);\n\n        this._extent = this._expandExtents(this._extent, extent);\n\n        entities.forEach(this.add.bind(this));\n\n        return {entities, extent};\n    }\n}\n","import * as jd from \"./astro/jd\";\nimport {EventsHandler, createEvents} from \"./Events\";\nimport {JulianDate} from \"./astro/jd\";\nimport {Handler} from \"./webgl/Handler\";\n\ntype ClockEventsList = [\"tick\", \"end\", \"start\", \"stop\"];\n\nconst CLOCK_EVENTS: ClockEventsList = [\"tick\", \"end\", \"start\", \"stop\"];\n\nexport interface IClockParams {\n    name?: string;\n    startDate?: JulianDate;\n    endDate?: JulianDate;\n    currentDate?: JulianDate;\n    multiplier?: number;\n}\n\n/**\n * Class represents application timer that stores custom current julian datetime, and time speed multiplier.\n * @class\n * @param {Object} [params] - Clock parameters:\n * @param {JulianDate} [params.startDate=0.0] - Julian start date.\n * @param {JulianDate} [params.endDate=0.0] - Julian end date.\n * @param {JulianDate} [params.currentDate] - Julian current date. Default: current date.\n * @param {number} [params.multiplier=1.0] - Time speed multiplier.\n */\nclass Clock {\n    static __counter__: number = 0;\n    protected __id: number;\n    public __handler: Handler | null = null;\n\n    /**\n     * Clock events.\n     * @public\n     * @type {EventsHandler<ClockEventsList>}\n     */\n    public events: EventsHandler<ClockEventsList>;\n\n    /**\n     * Clock name.\n     * @public\n     * @type {string}\n     */\n    public name: string;\n\n    /**\n     * Start julian date clock loop.\n     * @public\n     * @type {JulianDate}\n     */\n    public startDate: JulianDate;\n\n    /**\n     * End julian date clock loop.\n     * @public\n     * @type {JulianDate}\n     */\n    public endDate: JulianDate;\n\n    /**\n     * Current julian datetime.\n     * @public\n     * @type {JulianDate}\n     */\n    public currentDate: JulianDate;\n\n    /**\n     * Animation frame delta time.\n     * @public\n     * @readonly\n     * @type {number}\n     */\n    public deltaTicks: number;\n\n    /**\n     * Timer activity.\n     * @public\n     * @type {boolean}\n     */\n    public active: boolean = true;\n\n    /**\n     * Timer speed multiplier.\n     * @protected\n     * @type {number}\n     */\n    protected _multiplier: number;\n    protected _running: number;\n    protected _intervalDelay: number;\n    protected _intervalStart: number;\n    protected _intervalCallback: Function | null;\n\n\n    constructor(params: IClockParams = {}) {\n\n\n        this.__id = Clock.__counter__++;\n\n        this.events = createEvents<ClockEventsList>(CLOCK_EVENTS, this);\n\n        this.name = params.name || \"\";\n\n        this.startDate = params.startDate || 0;\n\n        this.endDate = params.endDate || 0;\n\n        let currentDate = params.currentDate || jd.DateToUTC(new Date());\n        if (params.startDate && currentDate < params.startDate) {\n            currentDate = params.startDate;\n        }\n        if (params.endDate && currentDate > params.endDate) {\n            currentDate = params.endDate;\n        }\n\n        this.currentDate = currentDate;\n\n        this._multiplier = params.multiplier !== undefined ? params.multiplier : 1.0;\n        this._running = 1;\n\n        this.deltaTicks = 0;\n\n        this.active = true;\n\n        this._intervalDelay = 0;\n        this._intervalStart = 0;\n        this._intervalCallback = null;\n    }\n\n    public clearInterval() {\n        this._intervalDelay = 0;\n        this._intervalStart = 0;\n        this._intervalCallback = null;\n    }\n\n    public setInterval(delay: number, callback: Function) {\n        this._intervalStart = this.currentDate;\n        this._intervalDelay = delay * jd.ONE_BY_MILLISECONDS_PER_DAY;\n        this._intervalCallback = callback;\n    }\n\n    /**\n     * Sets current clock datetime.\n     * @public\n     * @param {Object} date - JavaScript Date object.\n     */\n    public setDate(date: Date) {\n        let d = jd.DateToUTC(date);\n        if (this.startDate && d < this.startDate) {\n            d = this.startDate;\n        }\n        if (this.endDate && d > this.endDate) {\n            d = this.endDate;\n        }\n        this.currentDate = d;\n    }\n\n    /**\n     * Returns current application date.\n     * @public\n     * @returns {Date} - Current date.\n     */\n    public getDate(): Date {\n        return jd.UTCtoDate(this.currentDate);\n    }\n\n    public reset() {\n        if (this.startDate) {\n            this.currentDate = this.startDate;\n        }\n    }\n\n    public tick(dt: number) {\n        let m = this._multiplier * this._running;\n        this.deltaTicks = dt * m\n        if (this.active) {\n            let cd = jd.addMilliseconds(this.currentDate, this.deltaTicks);\n            if (m > 0) {\n                if (this.endDate && cd > this.endDate) {\n                    this.currentDate = this.startDate;\n                    this.events.dispatch(this.events.end, this);\n                } else {\n                    this.currentDate = cd;\n                }\n            } else {\n                if (this.startDate && cd < this.startDate) {\n                    this.currentDate = this.endDate;\n                    this.events.dispatch(this.events.end, this);\n                } else {\n                    this.currentDate = cd;\n                }\n            }\n\n            if (this._intervalCallback) {\n                if (this.currentDate - this._intervalStart >= this._intervalDelay) {\n                    this._intervalStart = this.currentDate;\n                    this._intervalCallback(this);\n                }\n            }\n\n            this.events.dispatch(this.events.tick, this);\n        }\n    }\n\n    /**\n     * @public\n     * @param {Clock} clock - Clock instance to compare.\n     * @returns {boolean} - Returns true if a clock is the same instance.\n     */\n    public isEqual(clock: Clock) {\n        return this.__id === clock.__id;\n    }\n\n    public start() {\n        if (this._running === 0) {\n            this._running = 1;\n            this.events.dispatch(this.events.start, this);\n        }\n    }\n\n    public get multiplier(): number {\n        return this._multiplier;\n    }\n\n    public set multiplier(value: number) {\n        this._multiplier = value;\n    }\n\n    public stop() {\n        if (this._running === 1) {\n            this._running = 0;\n            this.events.dispatch(this.events.stop, this);\n        }\n    }\n}\n\nexport {Clock};\n","import {Handler, WebGLBufferExt} from \"./Handler\";\nimport {Program} from \"./Program\";\n\n/**\n * This is shader program controller that used by handler object to access the shader\n * program capabilities, like switching program during the rendering.\n * Get access to the program from ...handler.programs.<program name> etc.\n * @class\n * @param {Handler} handler - Handler.\n * @param {Program} program - Shader program.\n */\nexport class ProgramController {\n\n    /**\n     * Handler.\n     * @protected\n     * @type {Handler}\n     */\n    protected _handler: Handler;\n\n    /**\n     * Shader program.\n     * @public\n     * @type {Program}\n     */\n    public _program: Program;\n\n    /**\n     * Program current frame activation flag.\n     * @public\n     * @type {boolean}\n     */\n    public _activated: boolean;\n\n    constructor(handler: Handler, program: Program) {\n        this._program = program;\n        this._handler = handler;\n        this._activated = false;\n    }\n\n    /**\n     * Lazy create program call.\n     * @public\n     */\n    public initialize() {\n        if (this._handler.gl) {\n            this._program.createProgram(this._handler.gl);\n        }\n    }\n\n    /**\n     * Returns controller's shader program.\n     * @public\n     * @return {Program} -\n     */\n    public getProgram(): Program {\n        return this._program;\n    }\n\n    /**\n     * Activates current shader program.\n     * @public\n     * @returns {ProgramController} -\n     */\n    public activate(): this {\n        if (!this._activated) {\n            this._handler.activeProgram!.deactivate();\n            this._handler.activeProgram = this;\n            let p = this._program;\n            this._activated = true;\n            p.enableAttribArrays();\n            p.use();\n        }\n        return this;\n    }\n\n    /**\n     * Remove program from handler\n     * @public\n     */\n    public remove() {\n        let p = this._handler.programs;\n        if (p[this._program.name]) {\n            if (this._activated) {\n                this.deactivate();\n            }\n            this._program.delete();\n            delete p[this._program.name];\n        }\n    }\n\n    /**\n     * Deactivate shader program. This is not necessary while activate function used.\n     * @public\n     */\n    public deactivate() {\n        this._program.disableAttribArrays();\n        this._activated = false;\n    }\n\n    /**\n     * Returns program activity.\n     * @public\n     * @return {boolean} -\n     */\n    public isActive(): boolean {\n        return this._activated;\n    }\n\n    /**\n     * Sets program uniforms and attributes values and return controller instance.\n     * @public\n     * @param {Record<string, any>} params - Object with variable name and value like { value: 12, someArray:[1,2,3], uSampler: texture,... }\n     * @return {ProgramController} -\n     */\n    public set(params: Record<string, any>) {\n        this.activate();\n        this._program.set(params);\n        return this;\n    }\n\n    /**\n     * Draw index buffer with this program.\n     * @public\n     * @param {number} mode - Gl draw mode\n     * @param {WebGLBuffer} buffer - Buffer to draw.\n     * @return {ProgramController} Returns current shader controller instance.\n     */\n    public drawIndexBuffer(mode: number, buffer: WebGLBufferExt): ProgramController {\n        this._program.drawIndexBuffer(mode, buffer);\n        return this;\n    }\n\n    /**\n     * Calls Gl drawArray function.\n     * @param {number} mode - Gl draw mode.\n     * @param {number} numItems - draw items count.\n     * @return {ProgramController} Returns current shader controller instance.\n     */\n    public drawArrays(mode: number, numItems: number): ProgramController {\n        this._program.drawArrays(mode, numItems);\n        return this;\n    }\n}\n","class Node<T> {\n\n    public next: Node<T> | null;\n    public prev: Node<T> | null;\n    public data: T | null;\n\n    constructor() {\n        this.next = null;\n        this.prev = null;\n        this.data = null;\n    }\n}\n\n/**\n * @class Stack<T>\n * @param {number} [size=256] - Stack size\n */\nclass Stack<T> {\n\n    protected _current: Node<T>;\n    protected _head: Node<T>;\n\n    constructor(size: number = 256) {\n        this._current = new Node<T>();\n        this._head = this._current;\n\n        for (let i = 0; i < size; i++) {\n            let n = new Node<T>();\n            n.prev = this._current;\n            this._current.next = n;\n            this._current = n;\n        }\n        this._current = this._head;\n    }\n\n    public current(): Node<T> {\n        return this._current;\n    }\n\n    public push(data: T) {\n        this._current = this._current.next!;\n        this._current.data = data;\n    }\n\n    public pop(): T | null {\n        let res = this._current.data;\n        //this._current.data = null;\n        this._current = this._current.prev!;\n        return res;\n    }\n\n    public popPrev(): T | null {\n        this._current = this._current.prev!;\n        return this._current.data;\n    }\n}\n\nexport {Stack};\n","import {BaseFramebuffer} from \"./BaseFramebuffer\";\nimport {Clock} from \"../Clock\";\nimport {cons} from \"../cons\";\nimport {EventsHandler, createEvents} from \"../Events\";\nimport {getUrlParam, isEmpty, TypedArray} from \"../utils/shared\";\nimport {ImageCanvas} from \"../ImageCanvas\";\nimport {NumberArray2, Vec2} from \"../math/Vec2\";\nimport {ProgramController} from \"./ProgramController\";\nimport {Program} from \"./Program\";\nimport {Stack} from \"../Stack\";\n\nexport type WebGLContextExt = { type: string } & WebGL2RenderingContext;\nexport type WebGLBufferExt = { numItems: number; itemSize: number } & WebGLBuffer;\nexport type WebGLTextureExt = { default?: boolean } & WebGLTexture;\nexport type ImageSource = HTMLCanvasElement | ImageBitmap | ImageData | HTMLImageElement | HTMLVideoElement;\ntype CreateTextureFunc = (image: ImageSource, internalFormat?: number, texture?: WebGLTextureExt) => WebGLTextureExt | null;\n\nexport interface IHandlerParameters {\n    anisotropy?: number;\n    width?: number;\n    height?: number;\n    pixelRatio?: number;\n    context?: {\n        stencil?: boolean;\n        alpha?: boolean;\n        antialias?: boolean;\n        premultipliedAlpha?: boolean;\n    },\n    extensions?: string[];\n    autoActivate?: boolean;\n}\n\nexport interface Texture3DParams {\n    nx: string,\n    px: string,\n    py: string,\n    ny: string,\n    pz: string,\n    nz: string\n}\n\nexport interface IDefaultTextureParams {\n    color?: string;\n    url?: string;\n}\n\nconst vendorPrefixes = [\"\", \"WEBKIT_\", \"MOZ_\"];\nconst CONTEXT_TYPE = [\"webgl2\", \"webgl\"];\n\n// Maximal mipmap levels\nconst MAX_LEVELS = 2;\n\n/**\n * A WebGL handler for accessing low-level WebGL capabilities.\n * @class\n * @param {string | HTMLCanvasElement} canvasTarget - Canvas element target.\n * or undefined creates hidden canvas and handler becomes hidden.\n * @param {Object} [params] - Handler options:\n * @param {number} [params.anisotropy] - Anisotropy filter degree. 8 is default.\n * @param {number} [params.width] - Hidden handler width. 256 is default.\n * @param {number} [params.height] - Hidden handler height. 256 is default.\n * @param {Array.<string>} [params.extensions] - Additional WebGL extension list. Available by default: EXT_texture_filter_anisotropic.\n */\nclass Handler {\n\n    /**\n     * Events.\n     * @public\n     * @type {EventsHandler<[\"visibilitychange\", \"resize\"]>}\n     */\n    public events: EventsHandler<[\"visibilitychange\", \"resize\"]>;\n\n    /**\n     * Application default timer.\n     * @public\n     * @type {Clock}\n     */\n    public defaultClock: Clock;\n\n    /**\n     * Custom timers.\n     * @protected\n     * @type{Clock[]}\n     */\n    protected _clocks: Clock[];\n\n    /**\n     * Draw frame time in milliseconds.\n     * @public\n     * @type {number}\n     */\n    public deltaTime: number;\n\n    /**\n     * WebGL rendering canvas element.\n     * @public\n     * @type {HTMLCanvasElement | null}\n     */\n    public canvas: HTMLCanvasElement | null;\n\n    /**\n     * WebGL context.\n     * @public\n     * @type {WebGLContextExt | null}\n     */\n    public gl: WebGLContextExt | null;\n\n    /**\n     * Shader program controller list.\n     * @public\n     * @type {Record<string, ProgramController>}\n     */\n    public programs: Record<string, ProgramController>;\n\n    /**\n     * Current active shader program controller.\n     * @public\n     * @type {ProgramController}\n     */\n    public activeProgram: ProgramController | null;\n\n    /**\n     * Handler parameters.\n     * @private\n     * @type {Object}\n     */\n    protected _params: {\n        anisotropy: number;\n        width: number;\n        height: number;\n        pixelRatio: number;\n        context: {\n            stencil?: boolean;\n            alpha?: boolean;\n            antialias?: boolean;\n            premultipliedAlpha?: boolean;\n        };\n        extensions: string[];\n    };\n\n    public _oneByHeight: number;\n\n    /**\n     * Current WebGL extensions. Becomes here after context initialization.\n     * @public\n     * @type {Record<string, any>}\n     */\n    public extensions: Record<string, any>;\n\n    /**\n     * HTML Canvas target.\n     * @private\n     * @type {string | HTMLCanvasElement | undefined}\n     */\n    protected _canvasTarget: string | HTMLCanvasElement | undefined;\n\n    protected _lastAnimationFrameTime: number;\n\n    protected _initialized: boolean;\n\n    /**\n     * Animation frame function assigned from outside(Ex. from Renderer).\n     * @private\n     * @type {Function}\n     */\n    protected _frameCallback: Function;\n\n    protected _canvasSize: NumberArray2;\n\n    public transparentTexture: WebGLTextureExt | null;\n\n    public defaultTexture: WebGLTextureExt | null;\n\n    public framebufferStack = new Stack<BaseFramebuffer>();\n\n    public createTexture: Record<string, CreateTextureFunc>;\n\n    public createTextureDefault: CreateTextureFunc;\n\n    public ONCANVASRESIZE: Function | null;\n\n    public createTexture_n: CreateTextureFunc;\n    public createTexture_l: CreateTextureFunc;\n    public createTexture_mm: CreateTextureFunc;\n    public createTexture_a: CreateTextureFunc;\n\n    public intersectionObserver?: IntersectionObserver;\n    public resizeObserver?: ResizeObserver;\n\n    protected _requestAnimationFrameId: number = 0;\n\n    constructor(canvasTarget: string | HTMLCanvasElement | undefined, params: IHandlerParameters = {}) {\n\n        this.events = createEvents<[\"visibilitychange\", \"resize\"]>([\"visibilitychange\", \"resize\"]);\n\n        this.defaultClock = new Clock();\n\n        this._clocks = [];\n\n        this.deltaTime = 0;\n\n        this.canvas = null;\n\n        this.gl = null;\n\n        this.programs = {};\n\n        this.activeProgram = null;\n\n        this._canvasSize = [0, 0];\n\n        this._params = {\n            anisotropy: params.anisotropy || 4,\n            width: params.width || 256,\n            height: params.height || 256,\n            pixelRatio: getUrlParam('og_dpi') || params.pixelRatio || 1.0,\n            extensions: params.extensions || [],\n            context: params.context || {}\n        }\n\n        this._oneByHeight = 1.0 / (this._params.height * this._params.pixelRatio);\n\n        this.extensions = {};\n\n        this._canvasTarget = canvasTarget;\n\n        this._lastAnimationFrameTime = 0;\n\n        this._initialized = false;\n\n        this._frameCallback = function () {\n        };\n\n        this.transparentTexture = null;\n\n        this.defaultTexture = null;\n\n        this.framebufferStack = new Stack();\n\n        this.createTexture_n = this.createTexture_n_webgl2.bind(this);\n        this.createTexture_l = this.createTexture_l_webgl2.bind(this);\n        this.createTexture_mm = this.createTexture_mm_webgl2.bind(this);\n        this.createTexture_a = this.createTexture_a_webgl2.bind(this);\n\n        this.createTexture = {\n            \"NEAREST\": this.createTexture_n,\n            \"LINEAR\": this.createTexture_l,\n            \"MIPMAP\": this.createTexture_mm,\n            \"ANISOTROPIC\": this.createTexture_a\n        };\n\n        this.createTextureDefault = this.createTexture_n;\n\n        this.ONCANVASRESIZE = null;\n\n        this._createCanvas();\n\n        if (params.autoActivate || isEmpty(params.autoActivate)) {\n            this.initialize();\n        }\n    }\n\n    public isInitialized(): boolean {\n        return this._initialized;\n    }\n\n    protected _createCanvas() {\n        if (this._canvasTarget) {\n            if (this._canvasTarget instanceof HTMLElement) {\n                this.canvas = this._canvasTarget;\n            } else {\n                this.canvas = (document.getElementById(this._canvasTarget) || document.querySelector(this._canvasTarget)) as HTMLCanvasElement;\n            }\n        } else {\n            this.canvas = document.createElement(\"canvas\");\n            this.canvas.width = this._params.width;\n            this.canvas.height = this._params.height;\n        }\n    }\n\n    /**\n     * The return value is null if the extension is not supported, or an extension object otherwise.\n     * @param {WebGLRenderingContext | WebGL2RenderingContext | null} gl - WebGl context pointer.\n     * @param {string} name - Extension name.\n     * @returns {any} -\n     */\n    static getExtension(gl: WebGLRenderingContext | WebGL2RenderingContext | null, name: string): any | undefined {\n\n        if (!gl) return;\n\n        let i, ext;\n        for (i in vendorPrefixes) {\n            ext = gl.getExtension(vendorPrefixes[i] + name);\n            if (ext) {\n                return ext;\n            }\n        }\n    }\n\n    /**\n     * Returns a drawing context on the canvas, or null if the context identifier is not supported.\n     * @param {HTMLCanvasElement} canvas - HTML canvas object.\n     * @param {any} [contextAttributes] - See canvas.getContext contextAttributes.\n     * @returns {WebGLContextExt | null} -\n     */\n    static getContext(canvas: HTMLCanvasElement, contextAttributes?: any): WebGLContextExt | null {\n        let ctx: WebGLContextExt | null = null;\n\n        try {\n            let urlParams = new URLSearchParams(location.search);\n            let ver = urlParams.get('og_ver');\n            if (ver) {\n                ctx = canvas.getContext(ver, contextAttributes) as WebGLContextExt;\n                if (ctx) {\n                    ctx.type = ver;\n                }\n            } else {\n                for (let i = 0; i < CONTEXT_TYPE.length; i++) {\n                    ctx = canvas.getContext(CONTEXT_TYPE[i], contextAttributes) as WebGLContextExt;\n                    if (ctx) {\n                        ctx.type = CONTEXT_TYPE[i];\n                        break;\n                    }\n                }\n            }\n        } catch (ex) {\n            cons.logErr(\"exception during the GL context initialization\");\n        }\n\n        if (!ctx) {\n            cons.logErr(\"could not initialise WebGL\");\n        }\n\n        return ctx;\n    }\n\n    /**\n     * Sets animation frame function.\n     * @public\n     * @param {Function} callback - Frame callback.\n     */\n    public setFrameCallback(callback: Function) {\n        callback && (this._frameCallback = callback);\n    }\n\n    /**\n     * Creates empty texture.\n     * @public\n     * @param {number} [width=1] - Specifies the width of the texture image.\n     * @param {number} [height=1] - Specifies the width of the texture image.\n     * @param {string} [filter=\"NEAREST\"] - Specifies GL_TEXTURE_MIN(MAX)_FILTER texture value.\n     * @param {string} [internalFormat=\"RGBA\"] - Specifies the color components in the texture.\n     * @param {string} [format=\"RGBA\"] - Specifies the format of the texel data.\n     * @param {string} [type=\"UNSIGNED_BYTE\"] - Specifies the data type of the texel data.\n     * @param {number} [level=0] - Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.\n     * @returns {WebGLTexture | null} - WebGL texture object.\n     */\n    public createEmptyTexture2DExt(\n        width: number = 1,\n        height: number = 1,\n        filter: string = \"NEAREST\",\n        internalFormat: string = \"RGBA\",\n        format: string = \"RGBA\",\n        type: string = \"UNSIGNED_BYTE\",\n        level: number = 0\n    ): WebGLTexture | null {\n\n        let gl = this.gl!;\n\n        let texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        //gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        gl.texImage2D(\n            gl.TEXTURE_2D,\n            level,\n            (gl as any)[internalFormat.toUpperCase()],\n            width,\n            height,\n            0,\n            (gl as any)[format.toUpperCase()],\n            (gl as any)[type.toUpperCase()],\n            null!\n        );\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, (gl as any)[filter.toUpperCase()]);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, (gl as any)[filter.toUpperCase()]);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null!);\n\n        return texture;\n    }\n\n    /**\n     * Creates Empty NEAREST filtered texture.\n     * @public\n     * @param {number} width - Empty texture width.\n     * @param {number} height - Empty texture height.\n     * @param {number} [internalFormat]\n     * @returns {WebGLTexture | null} - WebGL texture object.\n     */\n    public createEmptyTexture_n(\n        width: number,\n        height: number,\n        internalFormat?: number): WebGLTexture | null {\n\n        let gl = this.gl!;\n\n        let texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        //gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            internalFormat || gl.RGBA,\n            width,\n            height,\n            0,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            null!\n        );\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null!);\n\n        return texture;\n    }\n\n    /**\n     * Creates empty LINEAR filtered texture.\n     * @public\n     * @param {number} width - Empty texture width.\n     * @param {number} height - Empty texture height.\n     * @param {number} [internalFormat]\n     * @returns {WebGLTexture | null} - WebGL texture object.\n     */\n    public createEmptyTexture_l(\n        width: number,\n        height: number,\n        internalFormat?: number): WebGLTexture | null {\n\n        let gl = this.gl!;\n\n        let texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        //gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat || gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null!);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null!);\n\n        return texture;\n    }\n\n    /**\n     * Creates NEAREST filter texture.\n     * @public\n     * @param {HTMLCanvasElement | Image} image - Image or Canvas object.\n     * @param {number} [internalFormat]\n     * @param {WebGLTexture | null} [texture=null]\n     * @returns {WebGLTexture | null} - WebGL texture object.\n     */\n    public createTexture_n_webgl1(\n        image: ImageSource,\n        internalFormat?: number,\n        texture: WebGLTexture | null = null): WebGLTexture | null {\n\n        let gl = this.gl!;\n\n        texture = texture || gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        //gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat || gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null!);\n\n        return texture;\n    }\n\n    /**\n     * Creates LINEAR filter texture.\n     * @public\n     * @param {ImageSource} image - Image or Canvas object.\n     * @param {number} [internalFormat]\n     * @param {WebGLTexture | null} [texture]\n     * @returns {WebGLTexture | null} - WebGL texture object.\n     */\n    public createTexture_l_webgl1(\n        image: ImageSource,\n        internalFormat?: number,\n        texture: WebGLTexture | null = null): WebGLTexture | null {\n\n        let gl = this.gl!;\n\n        texture = texture || gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat || gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null!);\n\n        return texture;\n    }\n\n    /**\n     * Creates MIPMAP filter texture.\n     * @public\n     * @param {ImageSource} image - Image or Canvas object.\n     * @param {number} [internalFormat]\n     * @param {WebGLTexture | null} [texture]\n     * @returns {WebGLTexture | null} - WebGL texture object.\n     */\n    public createTexture_mm_webgl1(\n        image: ImageSource,\n        internalFormat?: number,\n        texture: WebGLTexture | null = null): WebGLTexture | null {\n\n        let gl = this.gl!;\n\n        texture = texture || gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        //gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat || gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        gl.generateMipmap(gl.TEXTURE_2D);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null!);\n\n        return texture;\n    }\n\n    /**\n     * Creates ANISOTROPY filter texture.\n     * @public\n     * @param {ImageSource} image - Image or Canvas object.\n     * @param {number} [internalFormat]\n     * @param {WebGLTexture | null} [texture]\n     * @returns {WebGLTexture | null} - WebGL texture object.\n     */\n    public createTexture_a_webgl1(\n        image: ImageSource,\n        internalFormat?: number,\n        texture: WebGLTexture | null = null): WebGLTexture | null {\n\n        let gl = this.gl!;\n\n        texture = texture || gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        //gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat || gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        gl.generateMipmap(gl.TEXTURE_2D);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n        gl.texParameterf(gl.TEXTURE_2D, this.extensions.EXT_texture_filter_anisotropic.TEXTURE_MAX_ANISOTROPY_EXT, this._params.anisotropy);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null!);\n\n        return texture;\n    }\n\n    /**\n     * Creates NEAREST filter texture.\n     * @public\n     * @param {ImageSource} image - Image or Canvas object.\n     * @param {number} [internalFormat]\n     * @param {WebGLTexture | null} [texture]\n     * @returns {WebGLTexture | null} - WebGL texture object.\n     */\n    public createTexture_n_webgl2(\n        image: ImageSource,\n        internalFormat?: number,\n        texture: WebGLTexture | null = null): WebGLTexture | null {\n\n        let gl = this.gl!;\n\n        texture = texture || gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        //gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        //gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, internalFormat || gl.RGBA8, image.width, image.height);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null!);\n\n        return texture;\n    }\n\n    /**\n     * Creates LINEAR filter texture.\n     * @public\n     * @param {ImageSource} image - Image or Canvas object.\n     * @param {number} [internalFormat]\n     * @param {WebGLTexture | null} [texture]\n     * @returns {WebGLTexture | null} - WebGL texture object.\n     */\n    public createTexture_l_webgl2(\n        image: ImageSource,\n        internalFormat?: number,\n        texture: WebGLTexture | null = null): WebGLTexture | null {\n\n        let gl = this.gl!;\n\n        texture = texture || gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        //gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        //gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        gl.texStorage2D(gl.TEXTURE_2D, 1, internalFormat || gl.RGBA8, image.width, image.height);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null!);\n\n        return texture;\n    }\n\n    /**\n     * Creates MIPMAP filter texture.\n     * @public\n     * @param {ImageSource} image - Image or Canvas object.\n     * @param {number} [internalFormat]\n     * @param {WebGLTexture | null} [texture]\n     * @returns {WebGLTexture | null} - WebGL texture object.\n     */\n    public createTexture_mm_webgl2(\n        image: ImageSource,\n        internalFormat?: number,\n        texture: WebGLTexture | null = null): WebGLTexture | null {\n\n        let gl = this.gl!;\n\n        texture = texture || gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        //gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        gl.texStorage2D(gl.TEXTURE_2D, MAX_LEVELS, internalFormat || gl.RGBA8, image.width, image.height);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        gl.generateMipmap(gl.TEXTURE_2D);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null!);\n\n        return texture;\n    }\n\n    /**\n     * Creates ANISOTROPY filter texture.\n     * @public\n     * @param {ImageSource} image - Image or Canvas object.\n     * @param {number} [internalFormat]\n     * @param {WebGLTexture | null} [texture]\n     * @returns {WebGLTexture | null} - WebGL texture object.\n     */\n    public createTexture_a_webgl2(\n        image: ImageSource,\n        internalFormat?: number,\n        texture: WebGLTexture | null = null): WebGLTexture | null {\n\n        let gl = this.gl!;\n\n        texture = texture || gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        //gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n        //gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n        gl.texStorage2D(gl.TEXTURE_2D, MAX_LEVELS, internalFormat || gl.RGBA8, image.width, image.height);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        gl.generateMipmap(gl.TEXTURE_2D);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\n        gl.texParameterf(gl.TEXTURE_2D, this.extensions.EXT_texture_filter_anisotropic.TEXTURE_MAX_ANISOTROPY_EXT, this._params.anisotropy);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null!);\n        return texture;\n    }\n\n    /**\n     * Creates cube texture.\n     * @public\n     * @param {Texture3DParams} params - Face image urls:\n     * @param {string} params.px - Positive X or right image url.\n     * @param {string} params.nx - Negative X or left image url.\n     * @param {string} params.py - Positive Y or up image url.\n     * @param {string} params.ny - Negative Y or bottom image url.\n     * @param {string} params.pz - Positive Z or face image url.\n     * @param {string} params.nz - Negative Z or back image url.\n     * @returns {WebGLTexture | null} - WebGL texture object.\n     */\n    public loadCubeMapTexture(params: Texture3DParams): WebGLTexture | null {\n\n        let gl = this.gl!;\n\n        let texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n        let faces: [string, number][] = [\n            [params.px, gl.TEXTURE_CUBE_MAP_POSITIVE_X],\n            [params.nx, gl.TEXTURE_CUBE_MAP_NEGATIVE_X],\n            [params.py, gl.TEXTURE_CUBE_MAP_POSITIVE_Y],\n            [params.ny, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y],\n            [params.pz, gl.TEXTURE_CUBE_MAP_POSITIVE_Z],\n            [params.nz, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n        ];\n\n        let imageCanvas = new ImageCanvas();\n        imageCanvas.fillEmpty();\n        let emptyImage = imageCanvas.getImage();\n\n        for (let i = 0; i < faces.length; i++) {\n            let face = faces[i][1];\n            gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n            //gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n            gl.texImage2D(face, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, emptyImage);\n        }\n\n        for (let i = 0; i < faces.length; i++) {\n            let face = faces[i][1];\n            let image = new Image();\n            image.crossOrigin = \"\";\n            image.onload = (function (texture: WebGLTexture | null, face: number, image: HTMLImageElement) {\n                return function () {\n                    if (gl && texture) {\n                        gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n                        //gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n                        gl.texImage2D(face, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n                    }\n                };\n            })(texture, face, image);\n\n            image.src = faces[i][0];\n        }\n        return texture;\n    }\n\n    /**\n     * Adds shader program to the handler.\n     * @public\n     * @param {Program} program - Shader program.\n     * @param {boolean} [notActivate] - If it's true program will not compile.\n     * @return {Program} -\n     */\n    public addProgram(program: Program, notActivate: boolean = false): Program {\n        if (!this.programs[program.name]) {\n            let sc = new ProgramController(this, program);\n            this.programs[program.name] = sc;\n            this._initProgramController(sc);\n            if (notActivate) {\n                sc._activated = false;\n            }\n        } else {\n            console.warn(`Shader program: \"${program.name}\" already exists.`);\n        }\n        return program;\n    }\n\n    /**\n     * Removes shader program from handler.\n     * @public\n     * @param {string} name - Shader program name.\n     */\n    public removeProgram(name: string) {\n        this.programs[name] && this.programs[name].remove();\n    }\n\n    /**\n     * Adds shader programs to the handler.\n     * @public\n     * @param {Array.<Program>} programsArr - Shader program array.\n     */\n    public addPrograms(programsArr: Program[]) {\n        for (let i = 0; i < programsArr.length; i++) {\n            this.addProgram(programsArr[i]);\n        }\n    }\n\n    /**\n     * Used in addProgram\n     * @protected\n     * @param {ProgramController} sc - Program controller\n     */\n    protected _initProgramController(sc: ProgramController) {\n        if (this._initialized) {\n            sc.initialize();\n            if (!this.activeProgram) {\n                this.activeProgram = sc;\n                sc.activate();\n            } else {\n                sc.deactivate();\n                this.activeProgram._program.enableAttribArrays();\n                this.activeProgram._program.use();\n            }\n        }\n    }\n\n    /**\n     * Used in init function.\n     * @private\n     */\n    protected _initPrograms() {\n        for (let p in this.programs) {\n            this._initProgramController(this.programs[p]);\n        }\n    }\n\n    /**\n     * Initialize additional WebGL extensions.\n     * @public\n     * @param {string} extensionStr - Extension name.\n     * @param {boolean} showLog - Show logging.\n     * @return {any} -\n     */\n    public initializeExtension(extensionStr: string, showLog: boolean = false): any {\n        if (!(this.extensions && this.extensions[extensionStr])) {\n            let ext = Handler.getExtension(this.gl, extensionStr);\n            if (ext) {\n                this.extensions[extensionStr] = ext;\n            } else if (showLog) {\n                console.warn(\n                    \"og.webgl.Handler: extension '\" + extensionStr + \"' doesn't initialize.\"\n                );\n            }\n        }\n        return this.extensions && this.extensions[extensionStr];\n    }\n\n    /**\n     * Main function that initialize handler.\n     * @public\n     */\n    public initialize() {\n\n        if (this._initialized) return;\n\n        if (!this.canvas) return;\n\n        this.gl = Handler.getContext(this.canvas, this._params.context);\n\n        if (!this.gl) return;\n\n        this._initialized = true;\n\n        /** Sets default extensions */\n        this._params.extensions.push(\"EXT_texture_filter_anisotropic\");\n\n        if (this.gl.type === \"webgl\") {\n            this._params.extensions.push(\"OES_standard_derivatives\");\n            this._params.extensions.push(\"OES_element_index_uint\");\n            this._params.extensions.push(\"WEBGL_depth_texture\");\n            this._params.extensions.push(\"ANGLE_instanced_arrays\");\n            //this._params.extensions.push(\"WEBGL_draw_buffers\");\n            //this._params.extensions.push(\"EXT_frag_depth\");\n        } else {\n            this._params.extensions.push(\"EXT_color_buffer_float\");\n            this._params.extensions.push(\"OES_texture_float_linear\");\n            //this._params.extensions.push(\"WEBGL_draw_buffers\");\n        }\n\n        let i = this._params.extensions.length;\n        while (i--) {\n            this.initializeExtension(this._params.extensions[i], true);\n        }\n\n        if (this.gl.type === \"webgl\") {\n            this.createTexture_n = this.createTexture_n_webgl1.bind(this);\n            this.createTexture_l = this.createTexture_l_webgl1.bind(this);\n            this.createTexture_mm = this.createTexture_mm_webgl1.bind(this);\n            this.createTexture_a = this.createTexture_a_webgl1.bind(this);\n        } else {\n            this.createTexture_n = this.createTexture_n_webgl2.bind(this);\n            this.createTexture_l = this.createTexture_l_webgl2.bind(this);\n            this.createTexture_mm = this.createTexture_mm_webgl2.bind(this);\n            this.createTexture_a = this.createTexture_a_webgl2.bind(this);\n        }\n\n        this.createTexture[\"NEAREST\"] = this.createTexture_n;\n        this.createTexture[\"LINEAR\"] = this.createTexture_l;\n        this.createTexture[\"MIPMAP\"] = this.createTexture_mm;\n        this.createTexture[\"ANISOTROPIC\"] = this.createTexture_a;\n\n        if (!this.extensions.EXT_texture_filter_anisotropic) {\n            this.createTextureDefault = this.createTexture_mm;\n        } else {\n            this.createTextureDefault = this.createTexture_a;\n        }\n\n        /** Initializing shaders and rendering parameters*/\n        this._initPrograms();\n        this._setDefaults();\n\n        this.intersectionObserver = new IntersectionObserver((entries) => {\n            this._toggleVisibilityChange(entries[0].isIntersecting);\n        }, {threshold: 0});\n\n        this.intersectionObserver.observe(this.canvas);\n\n        this.resizeObserver = new ResizeObserver(entries => {\n            this._toggleVisibilityChange(entries[0].contentRect.width !== 0 && entries[0].contentRect.height !== 0);\n        });\n\n        this.resizeObserver.observe(this.canvas);\n\n        document.addEventListener(\"visibilitychange\", () => {\n            this._toggleVisibilityChange(document.visibilityState === 'visible');\n        });\n    }\n\n    protected _toggleVisibilityChange(visibility: boolean) {\n        if (visibility) {\n            this.start();\n            this.ONCANVASRESIZE && this.ONCANVASRESIZE();\n            this.events.dispatch(this.events.visibilitychange, true);\n        } else {\n            this.events.dispatch(this.events.visibilitychange, false);\n            this.stop();\n        }\n    }\n\n    /**\n     * Sets default gl render parameters. Used in init function.\n     * @protected\n     */\n    protected _setDefaults() {\n\n        let gl = this.gl;\n\n        if (!gl) return;\n        if (!this.canvas) return;\n\n        gl.depthFunc(gl.LESS);\n        gl.enable(gl.DEPTH_TEST);\n        this.setSize(\n            this.canvas.clientWidth || this._params.width,\n            this.canvas.clientHeight || this._params.height\n        );\n        gl.frontFace(gl.CCW);\n        gl.cullFace(gl.BACK);\n        gl.enable(gl.CULL_FACE);\n        gl.disable(gl.BLEND);\n        this.createDefaultTexture({color: \"rgba(0,0,0,0.0)\"}, (t: WebGLTextureExt) => {\n            this.transparentTexture = t;\n        });\n        this.createDefaultTexture({color: \"rgba(255, 255, 255, 1.0)\"}, (t: WebGLTextureExt) => {\n            this.defaultTexture = t;\n        });\n    }\n\n    public getCanvasSize(): NumberArray2 {\n        return this._canvasSize;\n    }\n\n    /**\n     * Creates STREAM_DRAW ARRAY buffer.\n     * @public\n     * @param {number} itemSize - Array item size.\n     * @param {number} numItems - Items quantity.\n     * @param {number} [usage=STATIC_DRAW] - Parameter of the bufferData call can be one of STATIC_DRAW, DYNAMIC_DRAW, or STREAM_DRAW.\n     * @param {number} [bytes=4] -\n     * @return {WebGLBufferExt} -\n     */\n    public createStreamArrayBuffer(itemSize: number, numItems: number, usage?: number, bytes: number = 4): WebGLBufferExt {\n        let gl = this.gl!;\n        let buffer: WebGLBufferExt = gl.createBuffer() as WebGLBufferExt;\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(\n            gl.ARRAY_BUFFER,\n            numItems * itemSize * bytes,\n            usage || gl.STREAM_DRAW\n        );\n        gl.bindBuffer(gl.ARRAY_BUFFER, null!);\n        buffer.itemSize = itemSize;\n        buffer.numItems = numItems;\n        return buffer;\n    }\n\n    /**\n     * Sets stream buffer.\n     * @public\n     * @param {WebGLBufferExt} buffer -\n     * @param {TypedArray} array -\n     * @param {number} [offset=0] -\n     * @return {WebGLBufferExt} -\n     */\n    public setStreamArrayBuffer(buffer: WebGLBufferExt, array: TypedArray, offset: number = 0): WebGLBufferExt {\n        let gl = this.gl!;\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferSubData(gl.ARRAY_BUFFER, offset, array);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null!);\n        return buffer;\n    }\n\n    /**\n     * Creates ARRAY buffer.\n     * @public\n     * @param {TypedArray} array - Input array.\n     * @param {number} itemSize - Array item size.\n     * @param {number} numItems - Items quantity.\n     * @param {number} [usage=STATIC_DRAW] - Parameter of the bufferData call can be one of STATIC_DRAW, DYNAMIC_DRAW, or STREAM_DRAW.\n     * @return {WebGLBufferExt} -\n     */\n    public createArrayBuffer(array: TypedArray, itemSize: number, numItems: number, usage?: number): WebGLBufferExt {\n        let gl = this.gl!;\n        let buffer: WebGLBufferExt = gl.createBuffer() as WebGLBufferExt;\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, array, usage || gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null!);\n        buffer.itemSize = itemSize;\n        buffer.numItems = numItems;\n        return buffer;\n    }\n\n    /**\n     * Creates ARRAY buffer specific length.\n     * @public\n     * @param {number} size -\n     * @param {number} [usage=STATIC_DRAW] - Parameter of the bufferData call can be one of STATIC_DRAW, DYNAMIC_DRAW, or STREAM_DRAW.\n     * @return {WebGLBufferExt} -\n     */\n    public createArrayBufferLength(size: number, usage?: number): WebGLBufferExt {\n        let gl = this.gl!;\n        let buffer: WebGLBufferExt = gl.createBuffer() as WebGLBufferExt;\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, size, usage || gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null!);\n        buffer.itemSize = 1;\n        buffer.numItems = size;\n        return buffer;\n    }\n\n    /**\n     * Creates ELEMENT ARRAY buffer.\n     * @public\n     * @param {TypedArray} array - Input array.\n     * @param {number} itemSize - Array item size.\n     * @param {number} numItems - Items quantity.\n     * @param {number} [usage=STATIC_DRAW] - Parameter of the bufferData call can be one of STATIC_DRAW, DYNAMIC_DRAW, or STREAM_DRAW.\n     * @return {Object} -\n     */\n    public createElementArrayBuffer(array: TypedArray, itemSize: number, numItems?: number, usage?: number): WebGLBufferExt {\n        let gl = this.gl!;\n        let buffer = gl.createBuffer() as WebGLBufferExt;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, array, usage || gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null!);\n        buffer.itemSize = itemSize;\n        buffer.numItems = numItems || array.length;\n        return buffer;\n    }\n\n    /**\n     * Sets handler canvas size.\n     * @public\n     * @param {number} w - Canvas width.\n     * @param {number} h - Canvas height.\n     */\n    public setSize(w: number, h: number) {\n        this._params.width = w;\n        this._params.height = h;\n        if (this.canvas) {\n            this.canvas.width = w * this._params.pixelRatio;\n            this.canvas.height = h * this._params.pixelRatio;\n\n            this._canvasSize[0] = this.canvas.width;\n            this._canvasSize[1] = this.canvas.height;\n\n            this._oneByHeight = 1.0 / this.canvas.height;\n\n            this.gl && this.gl.viewport(0, 0, w, h);\n            this.ONCANVASRESIZE && this.ONCANVASRESIZE(this.canvas);\n            this.events.dispatch(this.events.resize, this);\n        }\n    }\n\n    public get pixelRatio(): number {\n        return this._params.pixelRatio;\n    }\n\n    public set pixelRatio(pr: number) {\n        this._params.pixelRatio = pr;\n        this.setSize(this._params.width, this._params.height);\n    }\n\n    /**\n     * Returns context screen width.\n     * @public\n     * @returns {number} -\n     */\n    public getWidth(): number {\n        return this.canvas ? this.canvas.width : 0;\n    }\n\n    /**\n     * Returns context screen height.\n     * @public\n     * @returns {number} -\n     */\n    public getHeight(): number {\n        return this.canvas ? this.canvas.height : 0;\n    }\n\n    /**\n     * Returns canvas aspect ratio.\n     * @public\n     * @returns {number} -\n     */\n    public getClientAspect(): number {\n        return this.canvas ? this.canvas.clientWidth / this.canvas.clientHeight : 0;\n    }\n\n    /**\n     * Returns canvas center coordinates.\n     * @public\n     * @returns {number} -\n     */\n    public getCenter(): Vec2 {\n        let c = this.canvas;\n        return c ? new Vec2(Math.round(c.width * 0.5), Math.round(c.height * 0.5)) : new Vec2();\n    }\n\n    /**\n     * Draw single frame.\n     * @public\n     */\n    public drawFrame() {\n        /** Calculating frame time */\n        let now = window.performance.now();\n        this.deltaTime = now - this._lastAnimationFrameTime;\n        this._lastAnimationFrameTime = now;\n\n        this.defaultClock.tick(this.deltaTime);\n\n        for (let i = 0; i < this._clocks.length; i++) {\n            this._clocks[i].tick(this.deltaTime);\n        }\n\n        /** Canvas resize checking */\n        let canvas = this.canvas!;\n\n        if (Math.floor(canvas.clientWidth * this._params.pixelRatio) !== canvas.width || Math.floor(canvas.clientHeight * this._params.pixelRatio) !== canvas.height) {\n            if (canvas.clientWidth === 0 || canvas.clientHeight === 0) {\n                this.stop();\n            } else if (!document.hidden) {\n                this.start();\n                this.setSize(canvas.clientWidth, canvas.clientHeight);\n            }\n        }\n\n        /** Draw frame */\n        this._frameCallback();\n    }\n\n    /**\n     * Clearing gl frame.\n     * @public\n     */\n    public clearFrame() {\n        let gl = this.gl!;\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    }\n\n    /**\n     * Starts animation loop.\n     * @public\n     */\n    public start() {\n        if (!this._requestAnimationFrameId && this._initialized) {\n            this._animationFrameCallback();\n        }\n    }\n\n    public stop() {\n        if (this._requestAnimationFrameId) {\n            window.cancelAnimationFrame(this._requestAnimationFrameId);\n            this._requestAnimationFrameId = 0;\n        }\n    }\n\n    public isStopped(): boolean {\n        return !this._requestAnimationFrameId;\n    }\n\n    /**\n     * Check is gl context type equals webgl2\n     * @public\n     */\n    public isWebGl2(): boolean {\n        return this.gl ? this.gl.type === \"webgl2\" : false;\n    }\n\n    /**\n     * Make animation.\n     * @protected\n     */\n    protected _animationFrameCallback() {\n        this._requestAnimationFrameId = window.requestAnimationFrame(() => {\n            this.drawFrame();\n            this._requestAnimationFrameId && this._animationFrameCallback();\n        });\n    }\n\n    /**\n     * Creates default texture object\n     * @public\n     * @param {IDefaultTextureParams | null} params - Texture parameters:\n     * @param {(texture: WebGLTextureExt) => void} [success] - Creation callback\n     */\n    public createDefaultTexture(params: IDefaultTextureParams | null, success: (texture: WebGLTextureExt) => void) {\n\n        let imgCnv;\n        let texture;\n\n        if (params && params.color) {\n            imgCnv = new ImageCanvas(2, 2);\n            imgCnv.fillColor(params.color);\n            texture = this.createTexture_n(imgCnv.getCanvas())!;\n            texture.default = true;\n            success(texture);\n        } else if (params && params.url) {\n            let img = new Image();\n            let that = this;\n            img.onload = function () {\n                texture = that.createTextureDefault(img)!;\n                texture.default = true;\n                success(texture);\n            };\n            img.src = params.url;\n        } else {\n            imgCnv = new ImageCanvas(2, 2);\n            imgCnv.fillColor(\"#C5C5C5\");\n            texture = this.createTexture_n(imgCnv.getCanvas())!;\n            texture.default = true;\n            success(texture);\n        }\n    }\n\n    public deleteTexture(texture: WebGLTextureExt | null | undefined) {\n        if (texture && !texture.default) {\n            this.gl!.deleteTexture(texture);\n        }\n    }\n\n    /**\n     * @public\n     */\n    public destroy() {\n\n        this.resizeObserver?.disconnect();\n        this.intersectionObserver?.disconnect();\n\n        this.stop();\n\n        //\n        // Dispose shaders\n        //\n        for (let p in this.programs) {\n            this.removeProgram(p);\n        }\n\n        //\n        // Clear WebGL context\n        //\n        let gl = this.gl;\n\n        if (gl) {\n            gl.deleteTexture(this.transparentTexture as WebGLTexture);\n            this.transparentTexture = null;\n\n            gl.deleteTexture(this.defaultTexture as WebGLTexture);\n            this.defaultTexture = null;\n\n            this.framebufferStack = new Stack();\n\n            //\n            // Clear attrib pointers\n            //\n            let numAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n            let tmp = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, tmp);\n            for (let ii = 0; ii < numAttribs; ++ii) {\n                gl.disableVertexAttribArray(ii);\n                gl.vertexAttribPointer(ii, 4, gl.FLOAT, false, 0, 0);\n                gl.vertexAttrib1f(ii, 0);\n            }\n            gl.deleteBuffer(tmp);\n\n            //\n            // Clear all possible textures\n            //\n            let numTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n            for (let ii = 0; ii < numTextureUnits; ++ii) {\n                gl.activeTexture(gl.TEXTURE0 + ii);\n                gl.bindTexture(gl.TEXTURE_CUBE_MAP, null!);\n                gl.bindTexture(gl.TEXTURE_2D, null!);\n            }\n\n            //\n            // Hard reset\n            //\n            gl.activeTexture(gl.TEXTURE0);\n            gl.useProgram(null!);\n            gl.bindBuffer(gl.ARRAY_BUFFER, null!);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null!);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null!);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, null!);\n            gl.disable(gl.BLEND);\n            gl.disable(gl.CULL_FACE);\n            gl.disable(gl.DEPTH_TEST);\n            gl.disable(gl.DITHER);\n            gl.disable(gl.SCISSOR_TEST);\n            gl.blendColor(0, 0, 0, 0);\n            gl.blendEquation(gl.FUNC_ADD);\n            gl.blendFunc(gl.ONE, gl.ZERO);\n            gl.clearColor(0, 0, 0, 0);\n            gl.clearDepth(1);\n            gl.clearStencil(-1);\n        }\n\n        //\n        // Destroy canvas\n        //\n        if (this.canvas) {\n            if (this.canvas.parentNode) {\n                this.canvas.parentNode.removeChild(this.canvas);\n            }\n            this.canvas.width = 1;\n            this.canvas.height = 1;\n            this.canvas = null;\n        }\n\n        this.gl = null;\n\n        this._initialized = false;\n    }\n\n    public addClock(clock: Clock) {\n        if (!clock.__handler) {\n            clock.__handler = this;\n            this._clocks.push(clock);\n        }\n    }\n\n    public addClocks(clockArr: Clock[]) {\n        for (let i = 0; i < clockArr.length; i++) {\n            this.addClock(clockArr[i]);\n        }\n    }\n\n    public removeClock(clock: Clock) {\n        if (clock.__handler) {\n            let c = this._clocks;\n            let i = c.length;\n            while (i--) {\n                if (c[i].isEqual(clock)) {\n                    clock.__handler = null;\n                    c.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n\n    // var loadTextureData = function(textureName, callback) {\n    //     const xhr = new XMLHttpRequest();\n    //     xhr.open('GET', textureName);\n    //     xhr.responseType = 'arraybuffer';\n    //     xhr.onload = (event) => {\n    //         const data = new DataView(xhr.response);\n    //         const array =\n    //             new Float32Array(data.byteLength / Float32Array.BYTES_PER_ELEMENT);\n    //         for (let i = 0; i < array.length; ++i) {\n    //             array[i] = data.getFloat32(i * Float32Array.BYTES_PER_ELEMENT, true);\n    //         }\n    //         callback(array);\n    //     };\n    //     xhr.send();\n    // }\n\n    // loadTextureData('transmittance.dat', (data) => {\n    //\n    //     let gl = this.renderer.handler.gl;\n    //\n    //     const texture = gl.createTexture();\n    //     gl.activeTexture(gl.TEXTURE0);\n    //     gl.bindTexture(gl.TEXTURE_2D, texture);\n    //     gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    //     gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    //     gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    //     gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    //     gl.texImage2D(gl.TEXTURE_2D, 0, gl.getExtension('OES_texture_float_linear') ? gl.RGBA32F : gl.RGBA16F,\n    //         TRANSMITTANCE_TEXTURE_WIDTH, TRANSMITTANCE_TEXTURE_HEIGHT, 0, gl.RGBA,\n    //         gl.FLOAT, data);\n    //\n    //     this.transmittanceTextureBrn = texture;\n    // });\n}\n\nexport {Handler};\n","import {BaseFramebuffer, IBaseFramebufferParams} from \"./BaseFramebuffer\";\nimport {Handler} from \"./Handler\";\n\ninterface IMultisampleParams extends IBaseFramebufferParams {\n    msaa?: number;\n    internalFormat?: string;\n}\n\n/**\n * Class represents multisample framebuffer.\n * @class\n * @param {Handler} handler - WebGL handler.\n * @param {Object} [options] - Framebuffer options:\n */\nexport class Multisample extends BaseFramebuffer {\n    protected _internalFormat: string;\n\n    protected _msaa: number;\n\n    protected _glFilter: number;\n\n    public renderbuffers: WebGLRenderbuffer[];\n\n    constructor(handler: Handler, options: IMultisampleParams = {}) {\n\n        super(handler, options);\n\n        this._internalFormat = options.internalFormat ? options.internalFormat.toUpperCase() : \"RGBA8\";\n\n        this._msaa = options.msaa != undefined ? options.msaa : 4;\n\n        this._glFilter = 0;\n\n        this.renderbuffers = new Array(this._size);\n    }\n\n    public override destroy() {\n        let gl = this.handler.gl;\n\n        if (!gl) return;\n\n        for (let i = 0; i < this.renderbuffers.length; i++) {\n            gl.deleteRenderbuffer(this.renderbuffers[i]);\n        }\n        this.renderbuffers = new Array(this._size);\n\n        gl.deleteFramebuffer(this._fbo);\n        gl.deleteRenderbuffer(this._depthRenderbuffer);\n\n        this._depthRenderbuffer = null;\n        this._fbo = null;\n\n        this._active = false;\n    }\n\n    /**\n     * Framebuffer initialization.\n     * @public\n     */\n    public override init() {\n        let gl = this.handler.gl;\n\n        if (!gl) return;\n\n        this._glFilter = (gl as any)[this._filter];\n\n        this._fbo = gl.createFramebuffer();\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\n\n        let colorAttachments = [];\n        for (let i = 0; i < this.renderbuffers.length; i++) {\n            let rb = gl.createRenderbuffer();\n            gl.bindRenderbuffer(gl.RENDERBUFFER, rb);\n\n            if (this._msaa > 0) {\n                gl.renderbufferStorageMultisample(\n                    gl.RENDERBUFFER,\n                    this._msaa,\n                    (gl as any)[this._internalFormat],\n                    this._width,\n                    this._height\n                );\n            } else {\n                gl.renderbufferStorage(\n                    gl.RENDERBUFFER,\n                    (gl as any)[this._internalFormat],\n                    this._width,\n                    this._height\n                );\n            }\n\n            gl.framebufferRenderbuffer(\n                gl.FRAMEBUFFER,\n                gl.COLOR_ATTACHMENT0 + i,\n                gl.RENDERBUFFER,\n                rb\n            );\n            colorAttachments.push(gl.COLOR_ATTACHMENT0 + i);\n            this.renderbuffers[i] = rb!;\n            gl.bindRenderbuffer(gl.RENDERBUFFER, null!);\n        }\n        gl.drawBuffers(colorAttachments);\n\n        if (this._useDepth) {\n            this._depthRenderbuffer = gl.createRenderbuffer();\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this._depthRenderbuffer);\n            gl.renderbufferStorageMultisample(\n                gl.RENDERBUFFER,\n                this._msaa,\n                (gl as any)[this._depthComponent],\n                this._width,\n                this._height\n            );\n            gl.framebufferRenderbuffer(\n                gl.FRAMEBUFFER,\n                gl.DEPTH_ATTACHMENT,\n                gl.RENDERBUFFER,\n                this._depthRenderbuffer\n            );\n            gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        }\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    public blitTo(framebuffer: BaseFramebuffer, attachmentIndex: number = 0) {\n        let gl = this.handler.gl!;\n\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this._fbo);\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, framebuffer._fbo);\n        gl.readBuffer(gl.COLOR_ATTACHMENT0 + attachmentIndex);\n\n        gl.clearBufferfv(gl.COLOR, 0, [0.0, 0.0, 0.0, 1.0]);\n\n        gl.blitFramebuffer(\n            0,\n            0,\n            this._width,\n            this._height,\n            0,\n            0,\n            framebuffer._width,\n            framebuffer._height,\n            gl.COLOR_BUFFER_BIT,\n            this._glFilter\n        );\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n    }\n}\n","import {input} from './input';\nimport {stamp} from \"../utils/shared\";\nimport {EventCallback, EventCallbackStamp} from \"../Events\";\n\nconst STAMP_SPACER = \"_\";\n\ninterface ICallbackHandler {\n    callback: EventCallbackStamp,\n    sender: any,\n    priority: number\n}\n\nconst _sortByPriority = function (a: ICallbackHandler, b: ICallbackHandler): number {\n    return Number(a.priority < b.priority);\n};\n\nclass KeyboardHandler {\n    protected _currentlyPressedKeys: Record<number, boolean>;\n    protected _pressedKeysCallbacks: Record<number, ICallbackHandler[]>;\n    protected _unpressedKeysCallbacks: Record<number, ICallbackHandler[]>;\n    protected _charkeysCallbacks: Record<number, ICallbackHandler[]>;\n    protected _anykeyCallback: any;\n    protected _event: KeyboardEvent | null;\n    protected _active: boolean;\n    protected _stampCache: Record<string, number>;\n\n    constructor() {\n        this._currentlyPressedKeys = {};\n        this._pressedKeysCallbacks = {};\n        this._unpressedKeysCallbacks = {};\n        this._charkeysCallbacks = {};\n        this._anykeyCallback = null;\n        this._event = null;\n        this._active = true;\n        this._stampCache = {};\n\n        document.onkeydown = (event: KeyboardEvent) => {\n            this._event = event;\n            this._active && this.handleKeyDown();\n        };\n\n        document.onkeyup = (event: KeyboardEvent) => {\n            this._event = event;\n            this._active && this.handleKeyUp();\n        };\n    }\n\n    public getcurrentlyPressedKeys(): Record<number, boolean> {\n        return this._currentlyPressedKeys;\n    }\n\n    public getPressedKeysCallbacks() {\n        return this._pressedKeysCallbacks;\n    }\n\n    public getUnpressedKeysCallbacks() {\n        return this._unpressedKeysCallbacks;\n    }\n\n    public getCharkeysCallbacks() {\n        return this._charkeysCallbacks;\n    }\n\n    public removeEvent(event: string, keyCode: number, callback: EventCallback) {\n        let st = this._getStamp(event, keyCode, (callback as EventCallbackStamp)._openglobus_id!);\n        if ((callback as EventCallbackStamp)._openglobus_id && this._stampCache[st]) {\n            //this._stampCache[st] = null;\n            delete this._stampCache[st];\n\n            if (event === \"keypress\") {\n                this._removeCallback(this._pressedKeysCallbacks[keyCode], callback);\n            } else if (event === \"keyfree\") {\n                this._removeCallback(this._unpressedKeysCallbacks[keyCode], callback);\n            } else if (event === \"charkeypress\") {\n                this._removeCallback(this._charkeysCallbacks[keyCode], callback);\n            }\n        }\n    }\n\n    protected _removeCallback(handlers: ICallbackHandler[], callback: EventCallbackStamp) {\n        for (let i = 0; i < handlers.length; i++) {\n            if (handlers[i].callback._openglobus_id === callback._openglobus_id) {\n                handlers.splice(i, 1);\n            }\n        }\n    }\n\n    protected _getStamp(name: string, keyCode: number, ogid: number) {\n        return `${name}${STAMP_SPACER}${keyCode}${STAMP_SPACER}${ogid}`;\n    }\n\n    protected _stamp(name: string, keyCode: number, obj: any) {\n        const ogid = stamp(obj);\n        const st = this._getStamp(name, keyCode, ogid);\n        if (!this._stampCache[st]) {\n            this._stampCache[st] = ogid;\n            return true;\n        }\n        return false;\n    }\n\n    public setActivity(activity: boolean) {\n        this._active = activity;\n    }\n\n    public releaseKeys() {\n        this._currentlyPressedKeys = {};\n    }\n\n    public addEvent(event: string, keyCode: number, callback: EventCallback, sender?: any, priority?: number) {\n\n        // Event is already bound with the callback\n        if (!this._stamp(event, keyCode, callback)) return;\n\n        if (priority === undefined) {\n            priority = 1600;\n        }\n        switch (event) {\n            case \"keyfree\":\n                if (!this._unpressedKeysCallbacks[keyCode]) {\n                    this._unpressedKeysCallbacks[keyCode] = [];\n                }\n                this._unpressedKeysCallbacks[keyCode].push({callback: callback, sender: sender, priority: priority});\n                this._unpressedKeysCallbacks[keyCode].sort(_sortByPriority);\n                break;\n\n            case \"keypress\":\n                if (keyCode == null) {\n                    this._anykeyCallback = {callback: callback, sender: sender || this};\n                } else {\n                    if (!this._pressedKeysCallbacks[keyCode]) {\n                        this._pressedKeysCallbacks[keyCode] = [];\n                    }\n                    this._pressedKeysCallbacks[keyCode].push({callback: callback, sender: sender, priority: priority});\n                    this._pressedKeysCallbacks[keyCode].sort(_sortByPriority);\n                }\n                break;\n\n            case \"charkeypress\":\n                if (!this._charkeysCallbacks[keyCode]) {\n                    this._charkeysCallbacks[keyCode] = [];\n                }\n                this._charkeysCallbacks[keyCode].push({callback: callback, sender: sender, priority: priority});\n                this._charkeysCallbacks[keyCode].sort(_sortByPriority);\n                break;\n        }\n    }\n\n    public isKeyPressed(keyCode: number) {\n        return this._currentlyPressedKeys[keyCode];\n    }\n\n    public handleKeyDown() {\n        // If you want to get a key code just uncomment and check console\n        //console.log(this._event!.keyCode);\n        this._anykeyCallback && this._anykeyCallback.callback.call(this._anykeyCallback.sender, this._event);\n        this._currentlyPressedKeys[this._event!.keyCode] = true;\n        for (let ch in this._charkeysCallbacks) {\n            if (String.fromCharCode(this._event!.keyCode) === String.fromCharCode(Number(ch))) {\n                let ccl = this._charkeysCallbacks[ch];\n                for (let i = 0; i < ccl.length; i++) {\n                    (ccl[i].callback as Function).call(ccl[i].sender, this._event);\n                }\n            }\n        }\n\n        if (this._event!.keyCode == input.KEY_ALT || this._event!.keyCode == input.KEY_SHIFT) {\n            this._event!.preventDefault();\n        }\n    }\n\n    public handleKeyUp() {\n        if (this._currentlyPressedKeys[this._event!.keyCode] || this._event!.keyCode === input.KEY_PRINTSCREEN) {\n            for (let pk in this._unpressedKeysCallbacks) {\n                if (this._currentlyPressedKeys[pk] || this._event!.keyCode === input.KEY_PRINTSCREEN && Number(pk) === input.KEY_PRINTSCREEN) {\n                    let cpk = this._unpressedKeysCallbacks[pk];\n                    for (let i = 0; i < cpk.length; i++) {\n                        (cpk[i].callback as Function).call(cpk[i].sender, this._event);\n                    }\n                }\n            }\n        }\n        this._currentlyPressedKeys[this._event!.keyCode] = false;\n    }\n\n    public handleEvents() {\n        for (let pk in this._pressedKeysCallbacks) {\n            if (this._currentlyPressedKeys[pk]) {\n                let cpk = this._pressedKeysCallbacks[pk];\n                for (let i = 0; i < cpk.length; i++) {\n                    (cpk[i].callback as Function).call(cpk[i].sender, this._event);\n                }\n            }\n        }\n    }\n}\n\nexport {KeyboardHandler};\n","export type MouseEventExt = MouseEvent & { wheelDelta?: number; deltaY?: number };\n\nexport interface MouseHandlerEvent {\n    button?: number;\n    clientX: number;\n    clientY: number;\n}\n\ntype MouseHandlerEventCallback = (sys: MouseEvent, event?: MouseHandlerEvent) => void;\n\nclass MouseHandler {\n\n    protected _htmlObject: HTMLElement;\n\n    constructor(htmlObject: HTMLElement) {\n        this._htmlObject = htmlObject;\n    }\n\n    public setEvent(event: string, sender: any, callback: MouseHandlerEventCallback) {\n        switch (event) {\n            case \"mousewheel\":\n                // this._htmlObject.addEventListener('mousewheel', function (event: WheelEventExt) {\n                //     let delta = event.deltaY || event.detail || event.wheelDelta || 0;\n                //     if (event.wheelDelta == undefined) {\n                //         event.wheelDelta = delta * (-120);\n                //     }\n                //     callback.call(sender, event);\n                //     event.preventDefault();\n                // }, false);\n\n                this._htmlObject.addEventListener('wheel', function (event: MouseEventExt) {\n                    let delta = event.deltaY || event.detail || event.wheelDelta || 0;\n\n                    if (event.wheelDelta == undefined) {\n                        event.wheelDelta = delta * (-120);\n                    }\n                    callback.call(sender, event);\n                    event.preventDefault();\n                }, false);\n                break;\n\n            case \"mousedown\":\n                this._htmlObject.addEventListener('mousedown', function (event: MouseEventExt) {\n                    let rect = this.getBoundingClientRect();\n                    callback.call(sender, event, {\n                        button: event.button,\n                        clientX: event.clientX - rect.left,\n                        clientY: event.clientY - rect.top\n                    });\n                });\n                this._htmlObject.addEventListener('contextmenu', function (event: MouseEventExt) {\n                    event.preventDefault();\n                    return false;\n                });\n                break;\n\n            case \"mouseup\":\n                this._htmlObject.addEventListener('mouseup', function (event: MouseEventExt) {\n                    let rect = this.getBoundingClientRect();\n                    callback.call(sender, event, {\n                        button: event.button,\n                        clientX: event.clientX - rect.left,\n                        clientY: event.clientY - rect.top\n                    });\n                });\n                break;\n\n            case \"mousemove\":\n                this._htmlObject.addEventListener('mousemove', function (event: MouseEventExt) {\n                    let rect = this.getBoundingClientRect();\n                    callback.call(sender, event, {\n                        clientX: event.clientX - rect.left,\n                        clientY: event.clientY - rect.top\n                    });\n                });\n                break;\n\n            case \"mouseleave\":\n                this._htmlObject.addEventListener('mouseleave', function (event: MouseEventExt) {\n                    callback.call(sender, event);\n                });\n                break;\n\n            case \"mouseout\":\n                this._htmlObject.addEventListener('mouseout', function (event: MouseEventExt) {\n                    callback.call(sender, event);\n                });\n                break;\n\n            case \"mouseover\":\n                this._htmlObject.addEventListener('mouseover', function (event: MouseEventExt) {\n                    callback.call(sender, event);\n                });\n                break;\n\n            case \"mouseenter\":\n                this._htmlObject.addEventListener('mouseenter', function (event: MouseEventExt) {\n                    callback.call(sender, event);\n                });\n                break;\n        }\n    }\n}\n\nexport {MouseHandler};\n","export type TouchEventExt = TouchEvent & { offsetLeft: number; offsetTop: number };\ntype TouchHandlerEventCallback = (sys: TouchEventExt) => void;\n\nclass TouchHandler {\n\n    protected _htmlObject: HTMLElement;\n\n    constructor(htmlObject: HTMLElement) {\n        this._htmlObject = htmlObject;\n    }\n\n    public setEvent(event: string, sender: any, callback: TouchHandlerEventCallback) {\n        switch (event) {\n            case \"touchcancel\":\n                this._htmlObject.addEventListener('touchcancel', function (event: TouchEvent) {\n                    event.preventDefault();\n                    const rect = this.getBoundingClientRect();\n                    const eventExt: TouchEventExt = Object.assign(event, { offsetLeft: rect.left, offsetTop: rect.top });\n                    callback.call(sender, eventExt);\n                });\n                break;\n\n            case \"touchstart\":\n                this._htmlObject.addEventListener('touchstart', function (event: TouchEvent) {\n                    event.preventDefault();\n                    const rect = this.getBoundingClientRect();\n                    const eventExt: TouchEventExt = Object.assign(event, { offsetLeft: rect.left, offsetTop: rect.top });\n                    callback.call(sender, eventExt);\n                });\n                break;\n\n            case \"touchend\":\n                this._htmlObject.addEventListener('touchend', function (event: TouchEvent) {\n                    event.preventDefault();\n                    const rect = this.getBoundingClientRect();\n                    const eventExt: TouchEventExt = Object.assign(event, { offsetLeft: rect.left, offsetTop: rect.top });\n                    callback.call(sender, eventExt);\n                });\n                break;\n\n            case \"touchmove\":\n                this._htmlObject.addEventListener('touchmove', function (event: TouchEvent) {\n                    event.preventDefault();\n                    const rect = this.getBoundingClientRect();\n                    const eventExt: TouchEventExt = Object.assign(event, { offsetLeft: rect.left, offsetTop: rect.top });\n                    callback.call(sender, eventExt);\n                });\n                break;\n        }\n    }\n}\n\nexport {TouchHandler};\n\n","import {Events, EventsHandler, EventCallback} from \"../Events\";\nimport {input} from \"../input/input\";\nimport {KeyboardHandler} from \"../input/KeyboardHandler\";\nimport {MouseHandler, MouseHandlerEvent, MouseEventExt} from \"../input/MouseHandler\";\nimport {Renderer} from \"./Renderer\";\nimport {TouchEventExt, TouchHandler} from \"../input/TouchHandler\";\nimport {Vec2} from \"../math/Vec2\";\nimport {NumberArray3, Vec3} from \"../math/Vec3\";\n\nexport type RendererEventsHandler = RendererEvents & EventsHandler<RendererEventsType>;\n\nexport function createRendererEvents(renderer: Renderer) {\n    return new RendererEvents(renderer);\n}\n\nexport type RendererEventsType = [\n    \"draw\",\n    \"postdraw\",\n    \"resize\",\n    \"resizeend\",\n    \"mouseenter\",\n    \"mouseleave\",\n    \"mousemove\",\n    \"mousestop\",\n    \"lclick\",\n    \"rclick\",\n    \"mclick\",\n    \"ldblclick\",\n    \"rdblclick\",\n    \"mdblclick\",\n    \"lup\",\n    \"rup\",\n    \"mup\",\n    \"ldown\",\n    \"rdown\",\n    \"mdown\",\n    \"lhold\",\n    \"rhold\",\n    \"mhold\",\n    \"mousewheel\",\n    \"touchstart\",\n    \"touchend\",\n    \"touchcancel\",\n    \"touchmove\",\n    \"doubletouch\",\n    \"touchleave\",\n    \"touchenter\"\n];\n\nexport interface IBaseInputState {\n    /** Current screen mouse X position. */\n    clientX: number;\n    /** Current screen mouse Y position. */\n    clientY: number;\n    /** Current screen mouse position. */\n    pos: Vec2;\n    /** Current touch X - coordinate. */\n    x: number;\n    /** Current touch Y - coordinate. */\n    y: number;\n    /** Current touch X - coordinate from 0 to 1 */\n    nx: number;\n    /** Current touch Y - coordinate from 0 to 1 */\n    ny: number;\n    /** Previous touch X coordinate. */\n    prev_x: number;\n    /** Previous touch Y coordinate. */\n    prev_y: number,\n    /** Screen touch position world direction. */\n    direction: Vec3;\n    /** Current touched(picking) object. */\n    pickingObject: any | null;\n    /** Renderer instance. */\n    renderer: Renderer;\n    /** Touching is moving now. */\n    moving: boolean;\n}\n\nexport interface IMouseState extends IBaseInputState {\n    /** Left mouse button has stopped pushing down right now.*/\n    leftButtonUp: boolean;\n    /** Right mouse button has stopped pushing down right now.*/\n    rightButtonUp: boolean;\n    /** Middle mouse button has stopped pushing down right now.*/\n    middleButtonUp: boolean;\n    /** Left mouse button has pushed now.*/\n    leftButtonDown: boolean;\n    /** Right mouse button has pushed now.*/\n    rightButtonDown: boolean;\n    /** Middle mouse button has pushed now.*/\n    middleButtonDown: boolean;\n    /** Left mouse button is pushing.*/\n    leftButtonHold: boolean;\n    /** Right mouse button is pushing.*/\n    rightButtonHold: boolean;\n    /** Middle mouse button is pushing.*/\n    middleButtonHold: boolean;\n    /** Left mouse button has clicked twice now.*/\n    leftButtonDoubleClick: boolean;\n    /** Right mouse button has clicked twice now.*/\n    rightButtonDoubleClick: boolean;\n    /** Middle mouse button has clicked twice now.*/\n    middleButtonDoubleClick: boolean;\n    /** Left mouse button has clicked now. */\n    leftButtonClick: boolean;\n    /** Right mouse button has clicked now. */\n    rightButtonClick: boolean;\n    /** Middle mouse button has clicked now. */\n    middleButtonClick: boolean;\n    /** Mouse has just stopped now. */\n    justStopped: boolean;\n    /** Mose double click delay response time.*/\n    doubleClickDelay: number;\n    /** Mose click delay response time.*/\n    clickDelay: number;\n    /** Mouse wheel. */\n    wheelDelta: number;\n    /** JavaScript mouse system event message. */\n    sys: MouseEvent | null;\n}\n\nexport interface ITouchState extends IBaseInputState {\n    /** Touch has ended right now.*/\n    touchEnd: boolean;\n    /** Touch has started right now.*/\n    touchStart: boolean;\n    /** Touch canceled.*/\n    touchCancel: boolean;\n    /** Touched twice.*/\n    doubleTouch: boolean;\n    /** Double touching responce delay.*/\n    doubleTouchDelay: number;\n    /** Double touching responce radius in screen pixels.*/\n    doubleTouchRadius: number;\n    /** JavaScript mouse system event message. */\n    sys: TouchEventExt | null;\n}\n\nconst LB_M = 0b0001;\nconst RB_M = 0b0010;\nconst MB_M = 0b0100;\n\nlet __skipFrames__ = 0;\nconst MAX_SKIP_FRAMES_ON_BLACK = 15;\n\nconst ISBLACK = (c: NumberArray3 | Uint8Array): boolean => !(c[0] || c[1] || c[2]);\nconst NOTBLACK = (c: NumberArray3 | Uint8Array): boolean => !!(c[0] || c[1] || c[2]);\n\n/**\n * Stores current picking rgb color.\n * @type {Array.<number>} - (exactly 3 entries)\n */\nlet _currPickingColor = new Uint8Array(4);\nlet _tempCurrPickingColor = new Uint8Array(4);\n\n/**\n * Stores previous picked rgb color.\n * @type {Array.<number>} - (exactly 3 entries)\n */\nlet _prevPickingColor = new Uint8Array(4);\n\n/**\n * Renderer events handler.\n * @class\n * @param {Renderer} renderer - Renderer object, events that works for.\n */\nclass RendererEvents extends Events<RendererEventsType> implements RendererEventsHandler {\n    /**\n     * Assigned renderer.\n     * @public\n     * @type {Renderer}\n     */\n    public renderer: Renderer;\n\n    /**\n     * Low level touch events handler.\n     * @protected\n     * @type {TouchHandler}\n     */\n    protected _touchHandler: TouchHandler;\n\n    /**\n     * Low level mouse events handler.\n     * @protected\n     * @type {MouseHandler}\n     */\n    protected _mouseHandler: MouseHandler;\n\n    /**\n     * Low level keyboard events handler.\n     * @protected\n     * @type {KeyboardHandler}\n     */\n    protected _keyboardHandler: KeyboardHandler;\n\n    protected _active: boolean;\n\n    public clickRadius: number;\n\n    /**\n     * Current mouse state.\n     * @public\n     * @type {IMouseState}\n     */\n    public mouseState: IMouseState;\n\n    /**\n     * Current touch state.\n     * @public\n     * @type {ITouchState}\n     */\n    public touchState: ITouchState;\n\n    protected _dblTchCoords: Vec2;\n    protected _oneTouchStart: boolean;\n    protected _dblTchBegins: number;\n    protected _mousestopThread: any | null;\n    protected _ldblClkBegins: number;\n    protected _rdblClkBegins: number;\n    protected _mdblClkBegins: number;\n    protected _lClkBegins: number;\n    protected _rClkBegins: number;\n    protected _mClkBegins: number;\n    protected _lclickX: number;\n    protected _lclickY: number;\n    protected _rclickX: number;\n    protected _rclickY: number;\n    protected _mclickX: number;\n    protected _mclickY: number;\n\n    protected _isMouseInside: boolean;\n    protected _entityPickingEventsActive: boolean;\n\n    constructor(renderer: Renderer) {\n\n        super(RENDERER_EVENTS);\n\n        this.renderer = renderer;\n\n        this._touchHandler = new TouchHandler(renderer.handler.canvas!);\n\n        this._mouseHandler = new MouseHandler(renderer.handler.canvas!);\n\n        this._keyboardHandler = new KeyboardHandler();\n\n        this._active = true;\n\n        this.clickRadius = 15;\n\n        this.mouseState = {\n            clientX: 0,\n            clientY: 0,\n            pos: new Vec2(),\n            x: 0,\n            y: 0,\n            nx: 0,\n            ny: 0,\n            prev_x: 0,\n            prev_y: 0,\n            direction: new Vec3(),\n            leftButtonUp: false,\n            rightButtonUp: false,\n            middleButtonUp: false,\n            leftButtonDown: false,\n            rightButtonDown: false,\n            middleButtonDown: false,\n            leftButtonHold: false,\n            rightButtonHold: false,\n            middleButtonHold: false,\n            leftButtonDoubleClick: false,\n            rightButtonDoubleClick: false,\n            middleButtonDoubleClick: false,\n            leftButtonClick: false,\n            rightButtonClick: false,\n            middleButtonClick: false,\n            moving: false,\n            justStopped: false,\n            doubleClickDelay: 500,\n            clickDelay: 200,\n            wheelDelta: 0,\n            sys: null,\n            pickingObject: null,\n            renderer: renderer\n        };\n\n        this.touchState = {\n            moving: false,\n            touchEnd: false,\n            touchStart: false,\n            touchCancel: false,\n            doubleTouch: false,\n            doubleTouchDelay: 550,\n            doubleTouchRadius: 10,\n            clientX: 0,\n            clientY: 0,\n            pos: new Vec2(),\n            x: 0,\n            y: 0,\n            nx: 0,\n            ny: 0,\n            prev_x: 0,\n            prev_y: 0,\n            direction: new Vec3(),\n            sys: null,\n            pickingObject: null,\n            renderer: renderer\n        };\n\n        this._isMouseInside = false;\n        this._entityPickingEventsActive = true;\n\n        this._dblTchCoords = new Vec2();\n        this._oneTouchStart = false;\n        this._dblTchBegins = 0;\n        this._mousestopThread = null;\n        this._ldblClkBegins = 0;\n        this._rdblClkBegins = 0;\n        this._mdblClkBegins = 0;\n        this._lClkBegins = 0;\n        this._rClkBegins = 0;\n        this._mClkBegins = 0;\n        this._lclickX = 0;\n        this._lclickY = 0;\n        this._rclickX = 0;\n        this._rclickY = 0;\n        this._mclickX = 0;\n        this._mclickY = 0;\n    }\n\n    public pointerEvent(): boolean {\n        let ms = this.mouseState,\n            ts = this.touchState;\n        return (\n            ms.moving ||\n            ms.justStopped ||\n            ts.moving ||\n            ts.touchStart ||\n            ts.touchEnd ||\n            ms.wheelDelta !== 0\n        )\n    }\n\n    public get active(): boolean {\n        return this._active;\n    }\n\n    public set active(isActive: boolean) {\n        this._active = isActive;\n        this._keyboardHandler.setActivity(isActive);\n    }\n\n    /**\n     * Used in render node frame.\n     * @public\n     */\n    public handleEvents() {\n        if (this._active) {\n            this.mouseState.direction = this.renderer.activeCamera!.unproject(\n                this.mouseState.x,\n                this.mouseState.y\n            );\n            //\n            // TODO: Replace in some other place with a thought that we do\n            // not need to make unproject when we do not make touching\n            this.touchState.direction = this.renderer.activeCamera!.unproject(\n                this.touchState.x,\n                this.touchState.y\n            );\n\n            this._keyboardHandler.handleEvents();\n            this.handleMouseEvents();\n            this.handleTouchEvents();\n            this.entityPickingEvents();\n        }\n    }\n\n    public override on(name: string, p0: EventCallback | number, p1?: number | EventCallback, p2?: any, keyPriority?: number) {\n        if (name === \"keypress\" || name === \"charkeypress\" || name === \"keyfree\") {\n            this._keyboardHandler.addEvent(name, p0 as number, p1 as EventCallback, p2, keyPriority);\n        } else {\n            super.on(name, p0 as EventCallback, p1, p2);\n        }\n    }\n\n    public override off(name: string, p1?: EventCallback | number | null, p2?: EventCallback) {\n        if (name === \"keypress\" || name === \"charkeypress\" || name === \"keyfree\") {\n            this._keyboardHandler.removeEvent(name, p1 as number, p2 as EventCallback);\n        } else {\n            super.off(name, p1 as EventCallback);\n        }\n    }\n\n    /**\n     * Check key is pressed.\n     * @public\n     * @param {number} keyCode - Key code\n     * @return {boolean}\n     */\n    public isKeyPressed(keyCode: number): boolean {\n        return this._keyboardHandler.isKeyPressed(keyCode);\n    }\n\n    public releaseKeys() {\n        this._keyboardHandler.releaseKeys();\n    }\n\n    /**\n     * Renderer events initialization.\n     * @public\n     */\n    public initialize() {\n        this._mouseHandler.setEvent(\"mouseup\", this, this.onMouseUp);\n        this._mouseHandler.setEvent(\"mousemove\", this, this.onMouseMove);\n        this._mouseHandler.setEvent(\"mousedown\", this, this.onMouseDown);\n        this._mouseHandler.setEvent(\"mousewheel\", this, this.onMouseWheel);\n        this._mouseHandler.setEvent(\"mouseleave\", this, this.onMouseLeave);\n        this._mouseHandler.setEvent(\"mouseenter\", this, this.onMouseEnter);\n\n        this._touchHandler.setEvent(\"touchstart\", this, this.onTouchStart);\n        this._touchHandler.setEvent(\"touchend\", this, this.onTouchEnd);\n        this._touchHandler.setEvent(\"touchcancel\", this, this.onTouchCancel);\n        this._touchHandler.setEvent(\"touchmove\", this, this.onTouchMove);\n    }\n\n    /**\n     * @protected\n     */\n    protected onMouseWheel(event: MouseEventExt) {\n        this.mouseState.sys = event;\n        this.mouseState.wheelDelta = event.wheelDelta || 0;\n    }\n\n    public updateButtonsStates(buttons: number) {\n        let ms = this.mouseState;\n        if ((buttons & LB_M) && ms.leftButtonDown) {\n            ms.leftButtonDown = true;\n        } else {\n            ms.leftButtonHold = false;\n            ms.leftButtonDown = false;\n        }\n\n        if ((buttons & RB_M) && ms.rightButtonDown) {\n            ms.rightButtonDown = true;\n        } else {\n            ms.rightButtonHold = false;\n            ms.rightButtonDown = false;\n        }\n\n        if ((buttons & MB_M) && ms.middleButtonDown) {\n            ms.middleButtonDown = true;\n        } else {\n            ms.middleButtonHold = false;\n            ms.middleButtonDown = false;\n        }\n    }\n\n    protected onMouseMove(sys: MouseEvent, event?: MouseHandlerEvent) {\n\n        let ms = this.mouseState;\n        this.updateButtonsStates(sys.buttons);\n        ms.sys = sys;\n\n        let ex = event!.clientX,\n            ey = event!.clientY,\n            r = this.clickRadius;\n\n        if (Math.abs(this._lclickX - ex) >= r && Math.abs(this._lclickY - ey) >= r) {\n            this._ldblClkBegins = 0;\n            this._lClkBegins = 0;\n        }\n\n        if (Math.abs(this._rclickX - ex) >= r && Math.abs(this._rclickY - ey) >= r) {\n            this._rdblClkBegins = 0;\n            this._rClkBegins = 0;\n        }\n\n        if (Math.abs(this._mclickX - ex) >= r && Math.abs(this._mclickY - ey) >= r) {\n            this._mdblClkBegins = 0;\n            this._mClkBegins = 0;\n        }\n\n        if (ms.clientX === event!.clientX && ms.clientY === event!.clientY) {\n            return;\n        }\n\n        ms.clientX = event!.clientX;\n        ms.clientY = event!.clientY;\n\n        let h = this.renderer.handler;\n\n        ms.pos.x = ms.x = event!.clientX * h.pixelRatio;\n        ms.pos.y = ms.y = event!.clientY * h.pixelRatio;\n\n        ms.nx = ms.x / h.canvas!.width;\n        ms.ny = ms.y / h.canvas!.height;\n\n        ms.moving = true;\n\n        //dispatch stop mouse event\n        clearTimeout(this._mousestopThread);\n        this._mousestopThread = setTimeout(function () {\n            ms.justStopped = true;\n        }, 100);\n    }\n\n    protected onMouseLeave(sys: MouseEvent) {\n        this._isMouseInside = false;\n        this.mouseState.sys = sys;\n        this.dispatch((this as RendererEventsHandler).mouseleave, this.mouseState);\n    }\n\n    protected onMouseEnter(sys: MouseEvent) {\n        this._isMouseInside = true;\n        this.mouseState.sys = sys;\n        this.dispatch((this as RendererEventsHandler).mouseenter, this.mouseState);\n    }\n\n    protected onMouseDown(sys: MouseEvent, event?: MouseHandlerEvent) {\n        if (event!.button === input.MB_LEFT) {\n            this._lClkBegins = window.performance.now();\n            this._lclickX = event!.clientX;\n            this._lclickY = event!.clientY;\n            this.mouseState.sys = sys;\n            this.mouseState.leftButtonDown = true;\n        } else if (event!.button === input.MB_RIGHT) {\n            this._rClkBegins = window.performance.now();\n            this._rclickX = event!.clientX;\n            this._rclickY = event!.clientY;\n            this.mouseState.sys = sys;\n            this.mouseState.rightButtonDown = true;\n        } else if (event!.button === input.MB_MIDDLE) {\n            this._mClkBegins = window.performance.now();\n            this._mclickX = event!.clientX;\n            this._mclickY = event!.clientY;\n            this.mouseState.sys = sys;\n            this.mouseState.middleButtonDown = true;\n        }\n    }\n\n    protected onMouseUp(sys: MouseEvent, event?: MouseHandlerEvent) {\n        let ms = this.mouseState;\n        ms.sys = sys;\n        let t = window.performance.now();\n\n        if (event!.button === input.MB_LEFT) {\n            ms.leftButtonDown = false;\n            ms.leftButtonUp = true;\n\n            if (\n                Math.abs(this._lclickX - event!.clientX) < this.clickRadius &&\n                Math.abs(this._lclickY - event!.clientY) < this.clickRadius &&\n                t - this._lClkBegins <= ms.clickDelay\n            ) {\n                if (this._ldblClkBegins) {\n                    let deltatime = window.performance.now() - this._ldblClkBegins;\n                    if (deltatime <= ms.doubleClickDelay) {\n                        ms.leftButtonDoubleClick = true;\n                    }\n                    this._ldblClkBegins = 0;\n                } else {\n                    this._ldblClkBegins = window.performance.now();\n                }\n\n                ms.leftButtonClick = true;\n                this._lClkBegins = 0;\n            }\n        } else if (event!.button === input.MB_RIGHT) {\n            ms.rightButtonDown = false;\n            ms.rightButtonUp = true;\n\n            if (\n                Math.abs(this._rclickX - event!.clientX) < this.clickRadius &&\n                Math.abs(this._rclickY - event!.clientY) < this.clickRadius &&\n                t - this._rClkBegins <= ms.clickDelay\n            ) {\n                if (this._rdblClkBegins) {\n                    let deltatime = window.performance.now() - this._rdblClkBegins;\n                    if (deltatime <= ms.doubleClickDelay) {\n                        ms.rightButtonDoubleClick = true;\n                    }\n                    this._rdblClkBegins = 0;\n                } else {\n                    this._rdblClkBegins = window.performance.now();\n                }\n\n                ms.rightButtonClick = true;\n                this._rClkBegins = 0;\n            }\n        } else if (event!.button === input.MB_MIDDLE) {\n            ms.middleButtonDown = false;\n            ms.middleButtonUp = true;\n\n            if (\n                Math.abs(this._mclickX - event!.clientX) < this.clickRadius &&\n                Math.abs(this._mclickY - event!.clientY) < this.clickRadius &&\n                t - this._mClkBegins <= ms.clickDelay\n            ) {\n                if (this._mdblClkBegins) {\n                    let deltatime = window.performance.now() - this._mdblClkBegins;\n                    if (deltatime <= ms.doubleClickDelay) {\n                        ms.middleButtonDoubleClick = true;\n                    }\n                    this._mdblClkBegins = 0;\n                } else {\n                    this._mdblClkBegins = window.performance.now();\n                }\n\n                ms.middleButtonClick = true;\n                this._mClkBegins = 0;\n            }\n        }\n    }\n\n    protected onTouchStart(event: TouchEventExt) {\n        let ts = this.touchState;\n        ts.sys = event;\n\n        ts.clientX = event.touches.item(0)!.clientX - event.offsetLeft;\n        ts.clientY = event.touches.item(0)!.clientY - event.offsetTop;\n\n        let h = this.renderer.handler;\n\n        ts.pos.x = ts.x = ts.clientX * h.pixelRatio;\n        ts.pos.y = ts.y = ts.clientY * h.pixelRatio;\n\n        ts.nx = ts.x / h.canvas!.width;\n        ts.ny = ts.y / h.canvas!.height;\n        ts.prev_x = ts.x;\n        ts.prev_y = ts.y;\n        ts.touchStart = true;\n\n        if (event.touches.length === 1) {\n            this._dblTchCoords.x = ts.x;\n            this._dblTchCoords.y = ts.y;\n            this._oneTouchStart = true;\n        } else {\n            this._oneTouchStart = false;\n        }\n    }\n\n    /**\n     * @protected\n     */\n    protected onTouchEnd(event: TouchEventExt) {\n        let ts = this.touchState;\n        ts.sys = event;\n        ts.touchEnd = true;\n\n        if (event.touches.length === 0) {\n            ts.prev_x = ts.x;\n            ts.prev_y = ts.y;\n\n            if (this._oneTouchStart) {\n                if (this._dblTchBegins) {\n                    let deltatime = window.performance.now() - this._dblTchBegins;\n                    if (deltatime <= ts.doubleTouchDelay) {\n                        ts.doubleTouch = true;\n                    }\n                    this._dblTchBegins = 0;\n                }\n                this._dblTchBegins = window.performance.now();\n                this._oneTouchStart = false;\n            }\n        }\n    }\n\n    protected onTouchCancel(event: TouchEventExt) {\n        let ts = this.touchState;\n        ts.sys = event;\n        ts.touchCancel = true;\n    }\n\n    protected onTouchMove(event: TouchEventExt) {\n        let ts = this.touchState;\n\n        ts.clientX = event.touches.item(0)!.clientX - event.offsetLeft;\n        ts.clientY = event.touches.item(0)!.clientY - event.offsetTop;\n\n        let h = this.renderer.handler;\n\n        ts.x = ts.clientX * h.pixelRatio;\n        ts.y = ts.clientY * h.pixelRatio;\n\n        ts.nx = ts.x / h.canvas!.width;\n        ts.ny = ts.y / h.canvas!.height;\n\n        ts.sys = event;\n        ts.moving = true;\n\n        let dX = ts.x - ts.prev_x\n        let dY = ts.y - ts.prev_y\n        if (Math.abs(dX) > 9 || Math.abs(dY) > 9) {\n            this._dblTchBegins = 0;\n            this._oneTouchStart = false;\n        }\n    }\n\n    protected entityPickingEvents() {\n        let ts = this.touchState,\n            ms = this.mouseState;\n\n        // Triggers mouseleave when mouse goes outside the viewport\n        if (this._isMouseInside !== this._entityPickingEventsActive) {\n            this._entityPickingEventsActive = this._isMouseInside;\n            if (!this._entityPickingEventsActive) {\n                let r = this.renderer;\n                let c = _currPickingColor;\n                let co = r.getPickingObjectArr<any>(c);\n                if (co) {\n                    let pe = co.rendererEvents;\n                    ms.pickingObject = co;\n                    pe && pe.dispatch(pe.mouseleave, ms);\n                    ts.pickingObject = co;\n                    pe && pe.dispatch(pe.touchleave, ts);\n                }\n                _currPickingColor[0] = _currPickingColor[1] = _currPickingColor[2] = _currPickingColor[3] =\n                    _prevPickingColor[0] = _prevPickingColor[1] = _prevPickingColor[2] = _prevPickingColor[3] =\n                        _tempCurrPickingColor[0] = _tempCurrPickingColor[1] = _tempCurrPickingColor[2] = _tempCurrPickingColor[3] = 0.0;\n            }\n        }\n\n        if (this._isMouseInside && !(ms.leftButtonHold || ms.rightButtonHold || ms.middleButtonHold)) {\n\n            let r = this.renderer;\n            let c = _currPickingColor,\n                p = _prevPickingColor,\n                t = _tempCurrPickingColor;\n\n            if (ts.x || ts.y) {\n                r.readPickingColor(ts.nx, 1 - ts.ny, t);\n            } else {\n                r.readPickingColor(ms.nx, 1 - ms.ny, t);\n            }\n\n            // current is black\n            if (ISBLACK(t) && __skipFrames__++ < MAX_SKIP_FRAMES_ON_BLACK) {\n                return;\n            }\n            __skipFrames__ = 0;\n\n            p[0] = c[0];\n            p[1] = c[1];\n            p[2] = c[2];\n\n            c[0] = t[0];\n            c[1] = t[1];\n            c[2] = t[2];\n\n            ms.pickingObject = null;\n            ts.pickingObject = null;\n\n            let co = r.getPickingObjectArr<any>(c);\n\n            ms.pickingObject = co;\n            ts.pickingObject = co;\n\n            //object is changed\n            if (c[0] !== p[0] || c[1] !== p[1] || c[2] !== p[2]) {\n\n                //current is black\n                if (ISBLACK(c)) {\n                    let po = r.getPickingObjectArr<any>(p);\n                    if (po) {\n                        let pe = po.rendererEvents;\n                        ms.pickingObject = po;\n                        pe && pe.dispatch(pe.mouseleave, ms);\n                        ts.pickingObject = po;\n                        pe && pe.dispatch(pe.touchleave, ts);\n                    }\n                } else {\n                    //current ia not black\n\n                    //previous is not black\n                    if (NOTBLACK(p)) {\n                        let po = r.getPickingObjectArr<any>(p);\n                        if (po) {\n                            let pe = po.rendererEvents;\n                            ms.pickingObject = po;\n                            pe && pe.dispatch(pe.mouseleave, ms);\n                            ts.pickingObject = po;\n                            pe && pe.dispatch(pe.touchleave, ts);\n                        }\n                    }\n\n                    if (co) {\n                        let ce = co.rendererEvents;\n                        ms.pickingObject = co;\n                        ce && ce.dispatch(ce.mouseenter, ms);\n                        ts.pickingObject = co;\n                        ce && ce.dispatch(ce.touchenter, ts);\n                    }\n                }\n            }\n        }\n    }\n\n    protected handleMouseEvents() {\n        let _this = this as RendererEventsHandler;\n        let ms = this.mouseState;\n        let po = ms.pickingObject,\n            pe = null;\n\n        if (ms.leftButtonClick) {\n            if (po) {\n                pe = po.rendererEvents;\n                pe && pe.dispatch(pe.lclick, ms);\n            }\n            this.dispatch(_this.lclick, ms);\n            ms.leftButtonClick = false;\n        }\n\n        if (ms.rightButtonClick) {\n            if (po) {\n                pe = po.rendererEvents;\n                pe && pe.dispatch(pe.rclick, ms);\n            }\n            this.dispatch(_this.rclick, ms);\n            ms.rightButtonClick = false;\n        }\n\n        if (ms.middleButtonClick) {\n            if (po) {\n                pe = po.rendererEvents;\n                pe && pe.dispatch(pe.mclick, ms);\n            }\n            this.dispatch(_this.mclick, ms);\n            ms.middleButtonClick = false;\n        }\n\n        if (ms.leftButtonDown) {\n            if (ms.leftButtonHold) {\n                if (po) {\n                    pe = po.rendererEvents;\n                    pe && pe.dispatch(pe.lhold, ms);\n                }\n                this.dispatch(_this.lhold, ms);\n            } else {\n                ms.leftButtonHold = true;\n                if (po) {\n                    pe = po.rendererEvents;\n                    pe && pe.dispatch(pe.ldown, ms);\n                }\n                this.dispatch(_this.ldown, ms);\n            }\n        }\n\n        if (ms.rightButtonDown) {\n            if (ms.rightButtonHold) {\n                if (po) {\n                    pe = po.rendererEvents;\n                    pe && pe.dispatch(pe.rhold, ms);\n                }\n                this.dispatch(_this.rhold, ms);\n            } else {\n                ms.rightButtonHold = true;\n                if (po) {\n                    pe = po.rendererEvents;\n                    pe && pe.dispatch(pe.rdown, ms);\n                }\n                this.dispatch(_this.rdown, ms);\n            }\n        }\n\n        if (ms.middleButtonDown) {\n            if (ms.middleButtonHold) {\n                if (po) {\n                    pe = po.rendererEvents;\n                    pe && pe.dispatch(pe.mhold, ms);\n                }\n                this.dispatch(_this.mhold, ms);\n            } else {\n                ms.middleButtonHold = true;\n                if (po) {\n                    pe = po.rendererEvents;\n                    pe && pe.dispatch(pe.mdown, ms);\n                }\n                this.dispatch(_this.mdown, ms);\n            }\n        }\n\n        if (ms.leftButtonUp) {\n            if (po) {\n                pe = po.rendererEvents;\n                pe && pe.dispatch(pe.lup, ms);\n            }\n            this.dispatch(_this.lup, ms);\n            ms.leftButtonUp = false;\n            ms.leftButtonHold = false;\n        }\n\n        if (ms.rightButtonUp) {\n            if (po) {\n                pe = po.rendererEvents;\n                pe && pe.dispatch(pe.rup, ms);\n            }\n            this.dispatch(_this.rup, ms);\n            ms.rightButtonUp = false;\n            ms.rightButtonHold = false;\n        }\n\n        if (ms.middleButtonUp) {\n            if (po) {\n                pe = po.rendererEvents;\n                pe && pe.dispatch(pe.mup, ms);\n            }\n            this.dispatch(_this.mup, ms);\n            ms.middleButtonUp = false;\n            ms.middleButtonHold = false;\n        }\n\n        if (ms.leftButtonDoubleClick) {\n            if (po) {\n                pe = po.rendererEvents;\n                pe && pe.dispatch(pe.ldblclick, ms);\n            }\n            this.dispatch(_this.ldblclick, ms);\n            ms.leftButtonDoubleClick = false;\n        }\n\n        if (ms.rightButtonDoubleClick) {\n            if (po) {\n                pe = po.rendererEvents;\n                pe && pe.dispatch(pe.rdblclick, ms);\n            }\n            this.dispatch(_this.rdblclick, ms);\n            ms.rightButtonDoubleClick = false;\n        }\n\n        if (ms.middleButtonDoubleClick) {\n            if (po) {\n                pe = po.rendererEvents;\n                pe && pe.dispatch(pe.mdblclick, ms);\n            }\n            this.dispatch(_this.mdblclick, ms);\n            ms.middleButtonDoubleClick = false;\n        }\n\n        if (ms.wheelDelta) {\n            if (po) {\n                pe = po.rendererEvents;\n                pe && pe.dispatch(pe.mousewheel, ms);\n            }\n            this.dispatch(_this.mousewheel, ms);\n        }\n\n        if (ms.moving) {\n            if (po) {\n                pe = po.rendererEvents;\n                pe && pe.dispatch(pe.mousemove, ms);\n            }\n            this.dispatch(_this.mousemove, ms);\n            ms.prev_x = ms.x;\n            ms.prev_y = ms.y;\n        }\n\n        if (ms.justStopped) {\n            this.dispatch(_this.mousestop, ms);\n        }\n    }\n\n    /**\n     * @protected\n     */\n    protected handleTouchEvents() {\n        let _this = this as RendererEventsHandler;\n\n        let ts = this.touchState;\n\n        let tpo = ts.pickingObject,\n            tpe = null;\n\n        if (ts.touchCancel) {\n            this.dispatch(_this.touchcancel, ts);\n            ts.touchCancel = false;\n        }\n\n        if (ts.touchStart) {\n            let r = this.renderer;\n\n            r.pickingFramebuffer!.activate();\n            r.pickingFramebuffer!.readPixels(_currPickingColor, ts.nx, 1.0 - ts.ny, 1);\n            r.pickingFramebuffer!.deactivate();\n\n            let co = r.getPickingObjectArr<any>(_currPickingColor);\n            tpo = ts.pickingObject = co;\n            if (tpo) {\n                tpe = tpo.rendererEvents;\n                tpe && tpe.dispatch(tpe.touchstart, ts);\n            }\n            this.dispatch(_this.touchstart, ts);\n            ts.touchStart = false;\n        }\n\n        if (ts.doubleTouch) {\n            if (tpo) {\n                tpe = tpo.rendererEvents;\n                tpe && tpe.dispatch(tpe.doubletouch, ts);\n            }\n            this.dispatch(_this.doubletouch, ts);\n            ts.doubleTouch = false;\n        }\n\n        if (ts.touchEnd) {\n            if (tpo) {\n                tpe = tpo.rendererEvents;\n                tpe && tpe.dispatch(tpe.touchend, ts);\n            }\n            this.dispatch(_this.touchend, ts);\n            ts.x = 0;\n            ts.y = 0;\n            ts.touchEnd = false;\n        }\n\n        if (ts.moving) {\n            if (tpo) {\n                tpe = tpo.rendererEvents;\n                tpe && tpe.dispatch(tpe.touchmove, ts);\n            }\n            this.dispatch(_this.touchmove, ts);\n            ts.prev_x = ts.x;\n            ts.prev_y = ts.y;\n        }\n    }\n}\n\nconst RENDERER_EVENTS: RendererEventsType = [\n    /**\n     * Triggered before scene frame is rendered(before render nodes).\n     * @event og.RendererEvents#draw\n     */\n    \"draw\",\n\n    /**\n     * Triggered after scene frame is rendered(after render nodes).\n     * @event og.RendererEvents#postdraw\n     */\n    \"postdraw\",\n\n    /**\n     * Triggered when screen is resized.\n     * @event og.RendererEvents#resize\n     */\n    \"resize\",\n\n    /**\n     * Triggered when screen is resized.\n     * @event og.RendererEvents#resizeend\n     */\n    \"resizeend\",\n\n    /**\n     * Mouse enters the work screen\n     * @event og.RendererEvents#mouseenter\n     */\n    \"mouseenter\",\n\n    /**\n     * Mouse leaves the work screen\n     * @event og.RendererEvents#mouseleave\n     */\n    \"mouseleave\",\n\n    /**\n     * Mouse is moving.\n     * @event og.RendererEvents#mousemove\n     */\n    \"mousemove\",\n\n    /**\n     * Mouse is just stopped.\n     * @event og.RendererEvents#mousestop\n     */\n    \"mousestop\",\n\n    /**\n     * Mouse left button clicked.\n     * @event og.RendererEvents#lclick\n     */\n    \"lclick\",\n\n    /**\n     * Mouse right button clicked.\n     * @event og.RendererEvents#rclick\n     */\n    \"rclick\",\n\n    /**\n     * Mouse middle button clicked.\n     * @event og.RendererEvents#mclick\n     */\n    \"mclick\",\n\n    /**\n     * Mouse left button double click.\n     * @event og.RendererEvents#ldblclick\n     */\n    \"ldblclick\",\n\n    /**\n     * Mouse right button double click.\n     * @event og.RendererEvents#rdblclick\n     */\n    \"rdblclick\",\n\n    /**\n     * Mouse middle button double click.\n     * @event og.RendererEvents#mdblclick\n     */\n    \"mdblclick\",\n\n    /**\n     * Mouse left button up(stop pressing).\n     * @event og.RendererEvents#lup\n     */\n    \"lup\",\n\n    /**\n     * Mouse right button up(stop pressing).\n     * @event og.RendererEvents#rup\n     */\n    \"rup\",\n\n    /**\n     * Mouse middle button up(stop pressing).\n     * @event og.RendererEvents#mup\n     */\n    \"mup\",\n\n    /**\n     * Mouse left button is just pressed down(start pressing).\n     * @event og.RendererEvents#ldown\n     */\n    \"ldown\",\n\n    /**\n     * Mouse right button is just pressed down(start pressing).\n     * @event og.RendererEvents#rdown\n     */\n    \"rdown\",\n\n    /**\n     * Mouse middle button is just pressed down(start pressing).\n     * @event og.RendererEvents#mdown\n     */\n    \"mdown\",\n\n    /**\n     * Mouse left button is pressing.\n     * @event og.RendererEvents#lhold\n     */\n    \"lhold\",\n\n    /**\n     * Mouse right button is pressing.\n     * @event og.RendererEvents#rhold\n     */\n    \"rhold\",\n\n    /**\n     * Mouse middle button is pressing.\n     * @event og.RendererEvents#mhold\n     */\n    \"mhold\",\n\n    /**\n     * Mouse wheel is rotated.\n     * @event og.RendererEvents#mousewheel\n     */\n    \"mousewheel\",\n\n    /**\n     * Triggered when touching starts.\n     * @event og.RendererEvents#touchstart\n     */\n    \"touchstart\",\n\n    /**\n     * Triggered when touching ends.\n     * @event og.RendererEvents#touchend\n     */\n    \"touchend\",\n\n    /**\n     * Triggered when touching cancel.\n     * @event og.RendererEvents#touchcancel\n     */\n    \"touchcancel\",\n\n    /**\n     * Triggered when touch is move.\n     * @event og.RendererEvents#touchmove\n     */\n    \"touchmove\",\n\n    /**\n     * Triggered when double touch.\n     * @event og.RendererEvents#doubletouch\n     */\n    \"doubletouch\",\n\n    /**\n     * Triggered when touch leaves picked object.\n     * @event og.RendererEvents#touchleave\n     */\n    \"touchleave\",\n\n    /**\n     * Triggered when touch enter picking object.\n     * @event og.RendererEvents#touchenter\n     */\n    \"touchenter\"\n];\n\nexport {RendererEvents};\n","export class Deferred<T> {\n    resolve: ((value: T | PromiseLike<T>) => void);\n    reject: ((reason?: any) => void);\n    promise: Promise<T>;\n\n    constructor() {\n        this.resolve = () => {\n        };\n        this.reject = () => {\n        };\n        this.promise = new Promise<T>((resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        Object.freeze(this);\n    }\n}","/**\n * 2D Rectangle class.\n * @class\n * @param {number} [left] - Left coordinate. 0 - default.\n * @param {number} [top] - Top coordinate. 0 - default.\n * @param {number} [right] - Right coordinate. 0 - default.\n * @param {number} [bottom] - Bottom coordinate. 0 - default.\n */\nclass Rectangle {\n    /**\n     * Left coordinate.\n     * @public\n     * @type {number}\n     */\n    public left: number;\n\n    /**\n     * Right coordinate.\n     * @public\n     * @type {number}\n     */\n    public right: number;\n\n    /**\n     * Top coordinate.\n     * @public\n     * @type {number}\n     */\n    public top: number;\n\n    /**\n     * Top coordinate.\n     * @public\n     * @type {number}\n     */\n    public bottom: number;\n\n    constructor(left: number = 0, top: number = 0, right: number = 0, bottom: number = 0) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n\n    public set(left: number = 0, top: number = 0, right: number = 0, bottom: number = 0) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n\n    /**\n     * Clone rectangle object.\n     * @public\n     * @returns {Rectangle}\n     */\n    public clone(): Rectangle {\n        return new Rectangle(this.left, this.top, this.right, this.bottom);\n    }\n\n    /**\n     * Returns rectangle width.\n     * @public\n     * @type {number}\n     */\n    public getWidth(): number {\n        return Math.abs(this.right - this.left);\n    }\n\n    /**\n     * Returns rectangle height.\n     * @public\n     * @type {number}\n     */\n    public getHeight(): number {\n        return Math.abs(this.bottom - this.top);\n    }\n\n    /**\n     * Returns rectangle area.\n     * @public\n     * @type {number}\n     */\n    public getSquare(): number {\n        return this.getHeight() * this.getWidth();\n    }\n\n    /**\n     * Returns rectangle diagonal size.\n     * @public\n     * @type {number}\n     */\n    public getDiagonal(): number {\n        let w = this.getWidth(),\n            h = this.getHeight();\n        return Math.sqrt(h * h + w * w);\n    }\n\n    /**\n     * Returns true if rectangle fits their size in width and height.\n     * @public\n     * @param {number} width - Width.\n     * @param {number} height - Height.\n     * @type {boolean}\n     */\n    public fit(width: number, height: number): boolean {\n        return this.getWidth() === width && this.getHeight() === height;\n    }\n\n    public isInside(x: number, y: number): boolean {\n        return x >= this.left && x <= this.right && y >= this.top && y <= this.bottom;\n    }\n}\n\nexport {Rectangle};\n","import {QueueArray} from '../QueueArray';\n\nexport type HTMLImageElementExt =\n    HTMLImageElement\n    & { __nodeIndex?: number; atlasWidth?: number; atlasHeight?: number };\nexport type ImagesCacheManagerCallback = (image: HTMLImageElementExt) => void;\n\ninterface IImagesCacheRequest {\n    \"src\": string;\n    \"success\": ImagesCacheManagerCallback;\n}\n\nclass ImagesCacheManager {\n\n    public imagesCache: Record<string, HTMLImageElementExt>;\n\n    protected _counter: number;\n    protected _pendingsQueue: QueueArray<IImagesCacheRequest>;\n    protected _imageIndexCounter: number;\n\n    constructor() {\n        this.imagesCache = {};\n\n        this._counter = 0;\n        this._pendingsQueue = new QueueArray<IImagesCacheRequest>();\n        this._imageIndexCounter = 0;\n    }\n\n    public load(src: string, success: ImagesCacheManagerCallback) {\n        if (this.imagesCache[src]) {\n            success(this.imagesCache[src]);\n        } else {\n            let req = {\"src\": src, \"success\": success};\n            if (this._counter >= 1) {\n                this._pendingsQueue.unshift(req);\n            } else {\n                this._exec(req);\n            }\n        }\n    }\n\n    protected _exec(req: IImagesCacheRequest) {\n        this._counter++;\n        const that = this;\n\n        let img: HTMLImageElementExt = new Image();\n        img.crossOrigin = '';\n        img.onload = function () {\n            that.imagesCache[req.src] = img;\n            img.__nodeIndex = that._imageIndexCounter++;\n            req.success(img);\n            that._dequeueRequest();\n        };\n\n        img.onerror = function () {\n            that._dequeueRequest();\n        };\n\n        img.src = req.src;\n    }\n\n    protected _dequeueRequest() {\n        this._counter--;\n        if (this._pendingsQueue.length && this._counter < 1) {\n            while (this._pendingsQueue.length) {\n                let req = this._pendingsQueue.pop();\n                if (req) {\n                    if (this.imagesCache[req.src]) {\n                        if (this._counter <= 0) {\n                            this._counter = 0;\n                        } else {\n                            this._counter--;\n                        }\n                        req.success(this.imagesCache[req.src]);\n                    } else {\n                        this._exec(req);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport {ImagesCacheManager};","import {ImageCanvas} from \"../ImageCanvas\";\nimport {Rectangle} from \"../Rectangle\";\nimport {ImagesCacheManager, HTMLImageElementExt, ImagesCacheManagerCallback} from \"./ImagesCacheManager\";\nimport {Handler, WebGLTextureExt} from \"../webgl/Handler\";\n\n/**\n * Texture atlas stores images in one texture. Each image has its own\n * atlas texture coordinates.\n * @class\n * @param {number} [width=1024] - Texture atlas width, if it hasn't 1024 default.\n * @param {number} [height=1024] - Texture atlas height, if it hasn't 1024 default.\n */\nclass TextureAtlas {\n    /**\n     * Atlas nodes where input images store. It can be accessed by image.__nodeIndex.\n     * @public\n     * @type {Map<number, TextureAtlasNode>}\n     */\n    public nodes: Map<number, TextureAtlasNode>;\n\n    /**\n     * Created gl texture.\n     * @public\n     */\n    public texture: WebGLTextureExt | null;\n\n    /**\n     * Atlas canvas.\n     * @public\n     * @type {ImageCanvas}\n     */\n    public canvas: ImageCanvas;\n\n    public borderSize: number;\n\n    protected _handler: Handler | null;\n    protected _images: HTMLImageElementExt[];\n    protected _btree: TextureAtlasNode | null;\n    protected _imagesCacheManager: ImagesCacheManager;\n\n    constructor(width: number = 1024, height: number = 1024) {\n\n        this.nodes = new Map<number, TextureAtlasNode>();\n\n        this.texture = null;\n\n        this.canvas = new ImageCanvas(width, height);\n\n        this.clearCanvas();\n\n        this._handler = null;\n\n        this._images = [];\n\n        this._btree = null;\n\n        this._imagesCacheManager = new ImagesCacheManager();\n\n        this.borderSize = 4;\n    }\n\n    /**\n     * Returns atlas javascript image object.\n     * @public\n     * @returns {HTMLImageElement} -\n     */\n    public getImage() {\n        return this.canvas.getImage();\n    }\n\n    /**\n     * Returns canvas object.\n     * @public\n     * @returns {HTMLCanvasElement} -\n     */\n    public getCanvas(): HTMLCanvasElement {\n        return this.canvas.getCanvas();\n    }\n\n    /**\n     * Clear atlas with black.\n     * @public\n     */\n    public clearCanvas() {\n        this.canvas.fillEmpty();\n    }\n\n    /**\n     * Sets openglobus gl handler that creates gl texture.\n     * @public\n     * @param {Handler} handler - WebGL handler.\n     */\n    public assignHandler(handler: Handler) {\n        this._handler = handler;\n        this.createTexture();\n    }\n\n    /**\n     * Returns image diagonal size.\n     * @param {HTMLImageElementExt} image - Image object.\n     * @returns {number} -\n     */\n    public getDiagonal(image: HTMLImageElementExt): number {\n        let w = image.atlasWidth || image.width,\n            h = image.atlasHeight || image.height;\n        return Math.sqrt(w * w + h * h);\n    }\n\n    /**\n     * Adds image to the atlas and returns created node with texture coordinates of the stored image.\n     * @public\n     * @param {HTMLImageElementExt} image - Input javascript image object.\n     * @param {boolean} [fastInsert] - If it's true atlas doesn't restore all images again\n     * and store image in the current atlas scheme.\n     * @returns {TextureAtlasNode | undefined} -\n     */\n    public addImage(image: HTMLImageElementExt, fastInsert: boolean = false): TextureAtlasNode | undefined {\n        if (!(image.width && image.height)) {\n            return;\n        }\n\n        this._images.push(image);\n\n        this._makeAtlas(fastInsert);\n\n        if (image.__nodeIndex != undefined) {\n            return this.get(image.__nodeIndex);\n        }\n    }\n\n    protected _completeNode(nodes: Map<number, TextureAtlasNode>, node?: TextureAtlasNode | null) {\n        if (node) {\n\n            let w = this.canvas.getWidth(),\n                h = this.canvas.getHeight();\n\n            let im = node.image!;\n            let r = node.rect;\n            let bs = Math.round(this.borderSize * 0.5);\n            this.canvas.drawImage(im, r.left + bs, r.top + bs, im.atlasWidth || 0, im.atlasHeight || 0);\n\n            let tc = node.texCoords;\n\n            tc[0] = (r.left + bs) / w;\n            tc[1] = (r.top + bs) / h;\n\n            tc[2] = (r.left + bs) / w;\n            tc[3] = (r.bottom - bs) / h;\n\n            tc[4] = (r.right - bs) / w;\n            tc[5] = (r.bottom - bs) / h;\n\n            tc[6] = (r.right - bs) / w;\n            tc[7] = (r.bottom - bs) / h;\n\n            tc[8] = (r.right - bs) / w;\n            tc[9] = (r.top + bs) / h;\n\n            tc[10] = (r.left + bs) / w;\n            tc[11] = (r.top + bs) / h;\n\n            nodes.set(im.__nodeIndex!, node);\n        }\n    }\n\n    /**\n     * Main atlas making function.\n     * @protected\n     * @param {boolean} [fastInsert] - If it's true atlas doesn't restore all images again\n     * and store image in the current atlas scheme.\n     */\n    protected _makeAtlas(fastInsert: boolean = false) {\n        if (fastInsert && this._btree) {\n            let im = this._images[this._images.length - 1];\n            this._completeNode(this.nodes, this._btree.insert(im));\n        } else {\n            let im = this._images.slice(0);\n\n            im.sort(function (b: HTMLImageElementExt, a: HTMLImageElementExt) {\n                return (\n                    (a.atlasWidth || a.width) - (b.atlasWidth || b.width) ||\n                    (a.atlasHeight || a.height) - (b.atlasHeight || b.height)\n                );\n            });\n\n            this._btree = new TextureAtlasNode(\n                new Rectangle(0, 0, this.canvas.getWidth(), this.canvas.getHeight())\n            );\n            this._btree.atlas = this;\n\n            this.clearCanvas();\n\n            let newNodes = new Map<number, TextureAtlasNode>();\n            for (let i = 0; i < im.length; i++) {\n                this._completeNode(newNodes, this._btree.insert(im[i]));\n            }\n            //@ts-ignore\n            this.nodes = null;\n            this.nodes = newNodes;\n        }\n    }\n\n    public get(key: number): TextureAtlasNode | undefined {\n        return this.nodes.get(key);\n    }\n\n    public set(key: number, value: TextureAtlasNode) {\n        this.nodes.set(key, value);\n    }\n\n    /**\n     * Creates atlas gl texture.\n     * @public\n     */\n    public createTexture(img?: HTMLImageElement | null, internalFormat?: number) {\n        if (this._handler) {\n            this._handler.gl!.deleteTexture(this.texture!);\n            if (img) {\n                this.canvas.resize(img.width, img.height);\n                this.canvas.drawImage(img, 0, 0, img.width, img.height);\n            }\n            this.texture = this._handler.createTexture_l(this.canvas.getCanvas(), internalFormat)!;\n        }\n    }\n\n    /**\n     * Asynchronous function that loads and creates image to the image cache, and call success callback when it's done.\n     * @public\n     * @param {string} src - Image object src string.\n     * @param {ImagesCacheManagerCallback} success - The callback that handles the image loads done.\n     */\n    public loadImage(src: string, success: ImagesCacheManagerCallback) {\n        this._imagesCacheManager.load(src, success);\n    }\n\n    public getImageTexCoordinates(img: HTMLImageElementExt): number[] | undefined {\n        if (img.__nodeIndex != null) {\n            let n = this.get(img.__nodeIndex);\n            if (n) {\n                return n.texCoords;\n            }\n        }\n    }\n}\n\n/**\n * Atlas binary tree node.\n * @class\n * @param {Rectangle} rect - Node image rectangle.\n * @param {number[]} texCoords - Node image rectangle.\n */\nclass TextureAtlasNode {\n    public childNodes: TextureAtlasNode[] | null;\n    public image: HTMLImageElementExt | null;\n    public rect: Rectangle;\n    public texCoords: number[];\n    public atlas: TextureAtlas | null;\n\n    constructor(rect?: Rectangle, texCoords?: number[]) {\n        this.childNodes = null;\n        this.image = null;\n        this.rect = rect || new Rectangle();\n        this.texCoords = texCoords || [];\n        this.atlas = null;\n    }\n\n    public insert(img: HTMLImageElementExt): TextureAtlasNode | undefined {\n        if (this.childNodes) {\n            let newNode = this.childNodes[0].insert(img);\n\n            if (newNode) {\n                return newNode;\n            }\n\n            return this.childNodes[1].insert(img);\n        } else {\n            if (this.image != null) {\n                return;\n            }\n\n            let rc = this.rect;\n            const w = (img.atlasWidth || img.width) + this.atlas!.borderSize;\n            const h = (img.atlasHeight || img.height) + this.atlas!.borderSize;\n\n            if (w > rc.getWidth() || h > rc.getHeight()) {\n                return;\n            }\n\n            if (rc.fit(w, h)) {\n                this.image = img;\n                return this;\n            }\n\n            this.childNodes = new Array(2);\n            this.childNodes[0] = new TextureAtlasNode();\n            this.childNodes[0].atlas = this.atlas;\n            this.childNodes[1] = new TextureAtlasNode();\n            this.childNodes[1].atlas = this.atlas;\n\n            const dw = rc.getWidth() - w;\n            const dh = rc.getHeight() - h;\n\n            if (dw > dh) {\n                // this.childNodes[0].rect = new Rectangle(rc.left, rc.top, rc.left + w, rc.bottom);\n                // this.childNodes[1].rect = new Rectangle(rc.left + w, rc.top, rc.right, rc.bottom);\n                this.childNodes[0].rect.set(rc.left, rc.top, rc.left + w, rc.bottom);\n                this.childNodes[1].rect.set(rc.left + w, rc.top, rc.right, rc.bottom);\n\n            } else {\n                // this.childNodes[0].rect = new Rectangle(rc.left, rc.top, rc.right, rc.top + h);\n                // this.childNodes[1].rect = new Rectangle(rc.left, rc.top + h, rc.right, rc.bottom);\n                this.childNodes[0].rect.set(rc.left, rc.top, rc.right, rc.top + h);\n                this.childNodes[1].rect.set(rc.left, rc.top + h, rc.right, rc.bottom);\n\n            }\n\n            return this.childNodes[0].insert(img);\n        }\n    }\n}\n\nexport {TextureAtlas, TextureAtlasNode};\n","import {Deferred} from '../Deferred';\nimport {Rectangle} from '../Rectangle';\nimport {TextureAtlas, TextureAtlasNode} from './TextureAtlas';\nimport {Handler} from \"../webgl/Handler\";\nimport {HTMLImageElementExt} from \"./ImagesCacheManager\";\n\n//@todo: get the value from shader module\nconst MAX_SIZE = 11;\n\ninterface IChar {\n    id: number;\n    char: string;\n    width: number;\n    height: number;\n    x: number;\n    y: number;\n    chnl: number;\n    index: number;\n    page: number;\n    xadvance: number;\n    xoffset: number;\n    yoffset: number;\n}\n\ninterface IKerning {\n    first: number;\n    second: number;\n    amount: number;\n}\n\nexport interface IFontParams {\n    common: {\n        scaleH: number;\n        scaleW: number;\n    };\n    info: {\n        size: number;\n    };\n    distanceField: {\n        distanceRange: number;\n    }\n    chars: IChar[];\n    kernings: IKerning[];\n    pages: string[];\n}\n\nclass FontTextureAtlas extends TextureAtlas {\n    public width: number;\n    public height: number;\n    public gliphSize: number;\n    public distanceRange: number;\n    public override nodes: Map<number, FontTextureAtlasNode>;\n    public kernings: Record<number, Record<number, number>>;\n\n    constructor(width?: number, height?: number) {\n        super(width, height);\n        this.width = 0;\n        this.height = 0;\n        this.gliphSize = 0;\n        this.distanceRange = 0;\n        this.nodes = new Map<number, FontTextureAtlasNode>();\n        this.kernings = {};\n    }\n\n    public override get(key: number): FontTextureAtlasNode | undefined {\n        return this.nodes.get(key);\n    }\n}\n\ninterface IMetrics extends IChar {\n    nChar: string;\n    nCode: number;\n    nWidth: number;\n    nHeight: number\n    nAdvance: number;\n    nXOffset: number;\n    nYOffset: number;\n}\n\nclass FontTextureAtlasNode extends TextureAtlasNode {\n    public metrics: IMetrics;\n    public emptySize: number;\n\n    constructor(rect: Rectangle, texCoords: number[]) {\n        super(rect, texCoords);\n        this.emptySize = 1;\n        this.metrics = {\n            id: 0,\n            char: \"\",\n            width: 0,\n            height: 0,\n            x: 0,\n            y: 0,\n            chnl: 0,\n            index: 0,\n            page: 0,\n            xadvance: 0,\n            xoffset: 0,\n            yoffset: 0,\n\n            nChar: \"\",\n            nCode: 0,\n            nWidth: 0,\n            nHeight: 0,\n            nAdvance: 0,\n            nXOffset: 0,\n            nYOffset: 0\n        }\n    }\n}\n\nclass FontAtlas {\n    public atlasesArr: FontTextureAtlas[];\n    public samplerArr: Uint32Array;\n    public sdfParamsArr: Float32Array;\n    public catalogSrc: string;\n\n    protected atlasIndexes: Record<string, number>;\n    protected atlasIndexesDeferred: Record<string, Deferred<number>>;\n    protected tokenImageSize: number;\n    protected _handler: Handler | null;\n\n    constructor(catalogSrc?: string) {\n        this.atlasesArr = [];\n        this.atlasIndexes = {};\n        this.atlasIndexesDeferred = {};\n        this.tokenImageSize = 64;\n        this.samplerArr = new Uint32Array(MAX_SIZE);\n        this.sdfParamsArr = new Float32Array(MAX_SIZE * 4);\n        this._handler = null;\n        this.catalogSrc = catalogSrc || \"./\";\n    }\n\n    public assignHandler(handler: Handler) {\n        this._handler = handler;\n    }\n\n    public getFontIndex(face: string): Promise<number> {\n        let fullName = this.getFullIndex(face);\n\n        // Try to load font from the directory\n        if (!this.atlasIndexes[fullName]) {\n            this.loadFont(face, this.catalogSrc, `${face}.json`);\n        }\n\n        if (!this.atlasIndexesDeferred[fullName]) {\n            this.atlasIndexesDeferred[fullName] = new Deferred<number>();\n        }\n        return this.atlasIndexesDeferred[fullName].promise;\n    }\n\n    public getFullIndex(face: string): string {\n        return face.trim().toLowerCase();\n    }\n\n    protected _applyFontDataToAtlas(atlas: FontTextureAtlas, data: IFontParams, index: number = 0) {\n        let chars = data.chars;\n\n        atlas.height = data.common.scaleH;\n        atlas.width = data.common.scaleW;\n        atlas.gliphSize = data.info.size;\n        atlas.distanceRange = data.distanceField.distanceRange;\n\n        let w = atlas.width,\n            h = atlas.height,\n            s = atlas.gliphSize;\n\n        this.sdfParamsArr[index * 4] = w;\n        this.sdfParamsArr[index * 4 + 1] = h;\n        this.sdfParamsArr[index * 4 + 2] = s;\n        this.sdfParamsArr[index * 4 + 3] = atlas.distanceRange;\n\n        let idToChar: Record<number, string> = {};\n\n        for (let i = 0; i < chars.length; i++) {\n            let ci = chars[i];\n            let ti = ci.char;\n\n            idToChar[ci.id] = ti;\n\n            let r = new Rectangle(ci.x, ci.y, ci.x + ci.width, ci.y + ci.height);\n\n            let tc = new Array(12);\n\n            tc[0] = r.left / w;\n            tc[1] = r.top / h;\n\n            tc[2] = r.left / w;\n            tc[3] = r.bottom / h;\n\n            tc[4] = r.right / w;\n            tc[5] = r.bottom / h;\n\n            tc[6] = r.right / w;\n            tc[7] = r.bottom / h;\n\n            tc[8] = r.right / w;\n            tc[9] = r.top / h;\n\n            tc[10] = r.left / w;\n            tc[11] = r.top / h;\n\n            let taNode = new FontTextureAtlasNode(r, tc);\n            let ciNorm = ci.char.normalize('NFKC');\n            let ciCode = ciNorm.charCodeAt(0);\n\n            //taNode.metrics = ci;\n\n            let m = taNode.metrics;\n\n            m.id = ci.id;\n            m.char = ci.char;\n            m.width = ci.width;\n            m.height = ci.height;\n            m.x = ci.x;\n            m.y = ci.y;\n            m.chnl = ci.chnl;\n            m.index = ci.index;\n            m.page = ci.page;\n            m.xadvance = ci.xadvance;\n            m.xoffset = ci.xoffset;\n            m.yoffset = ci.yoffset;\n\n            m.nChar = ciNorm;\n            m.nCode = ciCode;\n            m.nWidth = taNode.metrics.width / s;\n            m.nHeight = taNode.metrics.height / s;\n            m.nAdvance = taNode.metrics.xadvance / s;\n            m.nXOffset = taNode.metrics.xoffset / s;\n            m.nYOffset = 1.0 - taNode.metrics.yoffset / s;\n\n            taNode.emptySize = 1;\n\n            atlas.nodes.set(ciNorm.charCodeAt(0), taNode);\n        }\n\n        atlas.kernings = {};\n\n        for (let i = 0; i < data.kernings.length; i++) {\n            let ki = data.kernings[i];\n\n            let first = ki.first,\n                second = ki.second;\n\n            //let charFirst = idToChar[first],\n            //    charSecond = idToChar[second];\n\n            // if (!atlas.kernings[charFirst]) {\n            //     atlas.kernings[charFirst] = {};\n            // }\n            //\n            // atlas.kernings[charFirst][charSecond] = ki.amount / s;\n\n            if (!atlas.kernings[first]) {\n                atlas.kernings[first] = {};\n            }\n\n            atlas.kernings[first][second] = ki.amount / s;\n        }\n    }\n\n    public initFont(faceName: string, dataJson: IFontParams, imageBase64: string) {\n        let index = this.atlasesArr.length;\n        let fullName = this.getFullIndex(faceName);\n\n        this.atlasIndexes[fullName] = index;\n\n        let def = this.atlasIndexesDeferred[fullName];\n        if (!def) {\n            def = this.atlasIndexesDeferred[fullName] = new Deferred<number>();\n        }\n\n        this.samplerArr[this.atlasesArr.length] = index;\n\n        // TODO: FontTextureAtlas();\n        let atlas = new FontTextureAtlas();\n\n        atlas.height = 0;\n        atlas.width = 0;\n        atlas.gliphSize = 0;\n        atlas.distanceRange = 0;\n        atlas.kernings = {};\n\n        atlas.assignHandler(this._handler!);\n\n        this.atlasesArr[index] = atlas;\n\n        this._applyFontDataToAtlas(atlas, dataJson, index);\n\n        let img = new Image();\n        img.onload = () => {\n            this._createTexture(atlas, img);\n            def.resolve(index);\n        };\n        img.src = imageBase64;\n    }\n\n    protected _createTexture(atlas: FontTextureAtlas, img: HTMLImageElementExt) {\n        atlas.createTexture(img);\n    }\n\n    public loadFont(faceName: string, srcDir: string, atlasUrl: string) {\n\n        let index = this.atlasesArr.length;\n        let fullName = this.getFullIndex(faceName);\n\n        this.atlasIndexes[fullName] = index;\n\n        let def = this.atlasIndexesDeferred[fullName];\n        if (!def) {\n            def = this.atlasIndexesDeferred[fullName] = new Deferred<number>();\n        }\n\n        this.samplerArr[this.atlasesArr.length] = index;\n\n        // TODO: FontTextureAtlas();\n        let atlas = new FontTextureAtlas();\n\n        atlas.height = 0;\n        atlas.width = 0;\n        atlas.gliphSize = 0;\n        atlas.distanceRange = 0;\n        atlas.kernings = {};\n\n        atlas.assignHandler(this._handler!);\n        this.atlasesArr[index] = atlas;\n\n        fetch(`${srcDir}/${atlasUrl}`)\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw Error(`Unable to load \"${srcDir}/${atlasUrl}\"`);\n                }\n                //return response.json(response);\n                return response.json();\n            })\n            .then((data: IFontParams) => {\n\n                this._applyFontDataToAtlas(atlas, data, index);\n\n                let img = new Image();\n                img.onload = () => {\n                    this._createTexture(atlas, img);\n                    def.resolve(index);\n                };\n\n                img.src = `${srcDir}/${data.pages[0]}`;\n                img.crossOrigin = \"Anonymous\";\n            })\n            .catch(err => {\n                def.reject();\n                return {'status': \"error\", 'msg': err.toString()};\n            });\n    }\n}\n\nexport {FontAtlas};\n","import {Camera} from \"../camera/Camera\";\nimport {Control} from \"../control/Control\";\nimport {cons} from \"../cons\";\nimport {createRendererEvents, RendererEvents, RendererEventsHandler} from \"./RendererEvents\";\nimport {depth} from \"../shaders/depth\";\nimport {EntityCollection} from \"../entity/EntityCollection\";\nimport {Framebuffer, Multisample} from \"../webgl/index\";\nimport {FontAtlas, IFontParams} from \"../utils/FontAtlas\";\nimport {Handler, WebGLBufferExt} from \"../webgl/Handler\";\nimport {input} from \"../input/input\";\nimport {isEmpty} from \"../utils/shared\";\nimport {LabelWorker} from \"../entity/LabelWorker\";\nimport {pickingMask} from \"../shaders/pickingMask\";\nimport {randomi} from \"../math\";\nimport {RenderNode} from \"../scene/RenderNode\";\nimport {screenFrame} from \"../shaders/screenFrame\";\nimport {toneMapping} from \"../shaders/toneMapping\";\nimport {TextureAtlas} from \"../utils/TextureAtlas\";\nimport {Vec2} from \"../math/Vec2\";\nimport {NumberArray3, Vec3} from \"../math/Vec3\";\nimport {Vec4} from \"../math/Vec4\";\n\ninterface IRendererParams {\n    controls?: Control[];\n    msaa?: number;\n    autoActivate?: boolean;\n    fontsSrc?: string;\n}\n\ninterface IPickingObject {\n    _pickingColor?: Vec3;\n    _pickingColorU?: Float32Array;\n}\n\ninterface IFrameCallbackHandler {\n    id: number;\n    callback: Function;\n    sender: any;\n}\n\nconst MSAA_DEFAULT = 0;\n\nlet __pickingCallbackCounter__ = 0;\n\nlet __depthCallbackCounter__ = 0;\n\nlet __distanceCallbackCounter__ = 0;\n\nfunction clientWaitAsync(gl: WebGL2RenderingContext, sync: WebGLSync, flags: number): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n        function check() {\n            const res = gl.clientWaitSync(sync, flags, 0);\n            if (res == gl.WAIT_FAILED) {\n                reject();\n            } else if (res == gl.TIMEOUT_EXPIRED) {\n                requestAnimationFrame(check);\n            } else {\n                resolve();\n            }\n        }\n\n        check();\n    });\n}\n\n/**\n * Represents high level WebGL context interface that starts WebGL handler working in real time.\n * @class\n * @param {Handler} handler - WebGL handler context.\n * @param {Object} [params] - Renderer parameters:\n * @fires EventsHandler<RendererEventsType>#draw\n * @fires EventsHandler<RendererEventsType>#resize\n * @fires EventsHandler<RendererEventsType>#mousemove\n * @fires EventsHandler<RendererEventsType>#mousestop\n * @fires EventsHandler<RendererEventsType>#lclick\n * @fires EventsHandler<RendererEventsType>#rclick\n * @fires EventsHandler<RendererEventsType>#mclick\n * @fires EventsHandler<RendererEventsType>#ldblclick\n * @fires EventsHandler<RendererEventsType>#rdblclick\n * @fires EventsHandler<RendererEventsType>#mdblclick\n * @fires EventsHandler<RendererEventsType>#lup\n * @fires EventsHandler<RendererEventsType>#rup\n * @fires EventsHandler<RendererEventsType>#mup\n * @fires EventsHandler<RendererEventsType>#ldown\n * @fires EventsHandler<RendererEventsType>#rdown\n * @fires EventsHandler<RendererEventsType>#mdown\n * @fires EventsHandler<RendererEventsType>#lhold\n * @fires EventsHandler<RendererEventsType>#rhold\n * @fires EventsHandler<RendererEventsType>#mhold\n * @fires EventsHandler<RendererEventsType>#mousewheel\n * @fires EventsHandler<RendererEventsType>#touchstart\n * @fires EventsHandler<RendererEventsType>#touchend\n * @fires EventsHandler<RendererEventsType>#touchcancel\n * @fires EventsHandler<RendererEventsType>#touchmove\n * @fires EventsHandler<RendererEventsType>#doubletouch\n * @fires EventsHandler<RendererEventsType>#touchleave\n * @fires EventsHandler<RendererEventsType>#touchenter\n */\n\nlet __resizeTimeout: any;\n\nexport interface HTMLDivElementExt extends HTMLDivElement {\n    attributions?: HTMLElement;\n}\n\nclass Renderer {\n\n    /**\n     * Div element with WebGL canvas. Assigned in Globe class.\n     * @public\n     * @type {HTMLElement | null}\n     */\n    public div: HTMLDivElementExt | null;\n\n    /**\n     * WebGL handler context.\n     * @public\n     * @type {Handler}\n     */\n    public handler: Handler;\n    public exposure: number;\n    public gamma: number;\n    public whitepoint: number;\n    public brightThreshold: number;\n\n    /**\n     * Render nodes drawing queue.\n     * @public\n     * @type {Array.<RenderNode>}\n     */\n    public _renderNodesArr: RenderNode[];\n\n    /**\n     * Render nodes store for the comfortable access by the node name.\n     * @public\n     * @type {Object.<RenderNode>}\n     */\n    public renderNodes: Record<string, RenderNode>;\n\n    /**\n     * Current active camera.\n     * @public\n     * @type {Camera}\n     */\n    public activeCamera: Camera | null;\n\n    /**\n     * Renderer events. Represents interface for setting events like mousemove, draw, keypress etc.\n     * @public\n     * @type {RendererEvents}\n     */\n    public events: RendererEventsHandler;\n\n    /**\n     * Controls array.\n     * @public\n     * @type {Object}\n     */\n    public controls: Record<string, Control>;\n\n    /**\n     * Provides exchange between controls.\n     * @public\n     * @type {any}\n     */\n    public controlsBag: any;\n\n    /**\n     * Hash table for drawing objects.\n     * @public\n     * @type {Map<string, any>}\n     */\n    public colorObjects: Map<string, any>;\n\n    /**\n     * Color picking objects rendering queue.\n     * @type {Function[]}\n     */\n    protected _pickingCallbacks: IFrameCallbackHandler[];\n\n    /**\n     * Picking objects(labels and billboards) framebuffer.\n     * @public\n     * @type {Framebuffer}\n     */\n    public pickingFramebuffer: Framebuffer | null;\n\n    protected _tempPickingPix_: Uint8Array;\n\n    /**\n     * @public\n     * @type {Framebuffer}\n     */\n    public distanceFramebuffer: Framebuffer | null;\n\n    /**\n     * @type {Function[]}\n     */\n    protected _distanceCallbacks: IFrameCallbackHandler[];\n\n    protected _tempDistancePix_: Uint8Array;\n\n    /**\n     * Depth objects rendering queue.\n     * @type {Function[]}\n     */\n    protected _depthCallbacks: IFrameCallbackHandler[];\n\n    public depthFramebuffer: Framebuffer | null;\n\n    protected _msaa: number;\n\n    protected _internalFormat: string;\n    protected _format: string;\n    protected _type: string;\n\n    public sceneFramebuffer: Framebuffer | Multisample | null;\n\n    protected blitFramebuffer: Framebuffer | null;\n\n    protected toneMappingFramebuffer: Framebuffer | null;\n\n    protected _initialized: boolean;\n\n    /**\n     * Texture atlas for the billboards images. One atlas per node.\n     * @public\n     * @type {TextureAtlas}\n     */\n    public billboardsTextureAtlas: TextureAtlas;\n\n    /**\n     * Texture atlas for the billboards images. One atlas per node.\n     * @public\n     * @type {TextureAtlas}\n     */\n    public geoObjectsTextureAtlas: TextureAtlas;\n\n    /**\n     * Texture font atlas for the font families and styles. One atlas per node.\n     * @public\n     * @type {FontAtlas}\n     */\n    public fontAtlas: FontAtlas;\n\n    protected _entityCollections: EntityCollection[];\n\n    protected _currentOutput: string;\n\n    protected _fnScreenFrame: Function | null;\n\n    public labelWorker: LabelWorker;\n\n    public __useDistanceFramebuffer__: boolean;\n\n    public screenDepthFramebuffer: Framebuffer | null;\n\n    public screenFramePositionBuffer: WebGLBufferExt | null;\n\n    public screenTexture: Record<string, WebGLTexture>;\n\n    public outputTexture: WebGLTexture | null;\n\n    protected _pickingMaskCoordinatesBuffer: WebGLBufferExt | null;\n\n    protected _skipDistanceFrame: boolean;\n\n    protected _distancePixelBuffer: WebGLBuffer | null;\n\n    protected _skipPickingFrame: boolean;\n\n    protected _pickingPixelBuffer: WebGLBuffer | null;\n\n    protected _readDistanceBuffer: ()=>void;\n\n    protected _readPickingBuffer: ()=>void;\n\n    constructor(handler: Handler, params: IRendererParams = {}) {\n\n        this.div = null;\n\n        this.handler = handler;\n\n        this.exposure = 3.01;\n\n        this.gamma = 0.47;\n\n        this.whitepoint = 1.0;\n\n        this.brightThreshold = 0.9;\n\n        this._renderNodesArr = [];\n\n        this.renderNodes = {};\n\n        this.activeCamera = null;\n\n        this.events = createRendererEvents(this);\n\n        this.controls = {};\n\n        if (params.controls) {\n            for (let i in params.controls) {\n                this.controls[params.controls[i].name] = params.controls[i];\n            }\n        }\n\n        this.controlsBag = {};\n\n        this.colorObjects = new Map<string, any>();\n\n        this._pickingCallbacks = [];\n\n        this.pickingFramebuffer = null;\n\n        this._tempPickingPix_ = new Uint8Array([]);\n\n        this.distanceFramebuffer = null;\n\n        this._distanceCallbacks = [];\n\n        this._tempDistancePix_ = new Uint8Array([]);\n\n        this._depthCallbacks = [];\n\n        this.depthFramebuffer = null;\n\n        let urlParams = new URLSearchParams(location.search);\n        let msaaParam = urlParams.get('og_msaa');\n        if (msaaParam) {\n            this._msaa = Number(urlParams.get('og_msaa'));\n        } else {\n            this._msaa = params.msaa != undefined ? params.msaa : MSAA_DEFAULT;\n        }\n\n        this._internalFormat = \"RGBA16F\";\n        this._format = \"RGBA\";\n        this._type = \"FLOAT\";\n\n        this.sceneFramebuffer = null;\n\n        this.blitFramebuffer = null;\n\n        this.toneMappingFramebuffer = null;\n\n        this._initialized = false;\n\n        /**\n         * Texture atlas for the billboards images. One atlas per node.\n         * @public\n         * @type {TextureAtlas}\n         */\n        this.billboardsTextureAtlas = new TextureAtlas();\n\n        /**\n         * Texture atlas for the billboards images. One atlas per node.\n         * @public\n         * @type {TextureAtlas}\n         */\n        this.geoObjectsTextureAtlas = new TextureAtlas();\n\n        /**\n         * Texture font atlas for the font families and styles. One atlas per node.\n         * @public\n         * @type {FontAtlas}\n         */\n        this.fontAtlas = new FontAtlas(params.fontsSrc);\n\n        this._entityCollections = [];\n\n        this._currentOutput = \"screen\";\n\n        this._fnScreenFrame = null;\n\n        this.labelWorker = new LabelWorker(4);\n\n        this.__useDistanceFramebuffer__ = true;\n\n        this.screenDepthFramebuffer = null;\n\n        this.screenFramePositionBuffer = null;\n\n        this.screenTexture = {};\n\n        this.outputTexture = null;\n\n        this._pickingMaskCoordinatesBuffer = null;\n\n        this._skipDistanceFrame = false;\n\n        this._distancePixelBuffer = null;\n\n        this._skipPickingFrame = false;\n\n        this._pickingPixelBuffer = null;\n\n        this._readDistanceBuffer = this._readDistanceBuffer_webgl2;\n\n        this._readPickingBuffer = this._readPickingBuffer_webgl2;\n\n        if (params.autoActivate || isEmpty(params.autoActivate)) {\n            this.start();\n        }\n    }\n\n    public enableBlendOneSrcAlpha() {\n        let gl = this.handler.gl!;\n        gl.enable(gl.BLEND);\n        gl.blendEquation(gl.FUNC_ADD);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    }\n\n    public enableBlendDefault() {\n        let gl = this.handler.gl!;\n        gl.enable(gl.BLEND);\n        gl.blendEquation(gl.FUNC_ADD);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\n    }\n\n    /**\n     * Sets renderer events activity.\n     * @param {Boolean} activity - Events activity.\n     */\n    public setEventsActivity(activity: boolean) {\n        this.events.active = activity;\n    }\n\n    public addDepthCallback(sender: any, callback: Function) {\n        let id = __depthCallbackCounter__++;\n        this._depthCallbacks.push({\n            id: id, callback: callback, sender: sender\n        });\n        return id;\n    }\n\n    public removeDepthCallback(id: number) {\n        for (let i = 0; i < this._depthCallbacks.length; i++) {\n            if (id === this._depthCallbacks[i].id) {\n                this._depthCallbacks.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    public addDistanceCallback(sender: any, callback: Function) {\n        let id = __distanceCallbackCounter__++;\n        this._distanceCallbacks.push({\n            id: id, callback: callback, sender: sender\n        });\n        return id;\n    }\n\n    public removeDistanceCallback(id: number) {\n        for (let i = 0; i < this._distanceCallbacks.length; i++) {\n            if (id === this._distanceCallbacks[i].id) {\n                this._distanceCallbacks.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n\n    /**\n     * Adds picking rendering callback function.\n     * @param {object} sender - Callback context.\n     * @param {Function} callback - Rendering callback.\n     * @returns {Number} Handler id\n     */\n    public addPickingCallback(sender: any, callback: Function) {\n        let id = __pickingCallbackCounter__++;\n        this._pickingCallbacks.push({\n            id: id, callback: callback, sender: sender\n        });\n        return id;\n    }\n\n    /**\n     * Removes picking rendering callback function.\n     * @param {Number} id - Handler id to remove.\n     */\n    public removePickingCallback(id: number) {\n        for (let i = 0; i < this._pickingCallbacks.length; i++) {\n            if (id === this._pickingCallbacks[i].id) {\n                this._pickingCallbacks.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    public getPickingObject<T>(r: number, g: number, b: number): T {\n        return this.colorObjects.get(`${r}_${g}_${b}`);\n    }\n\n    public getPickingObjectArr<T>(arr: NumberArray3 | Uint8Array): T {\n        return this.colorObjects.get(`${arr[0]}_${arr[1]}_${arr[2]}`);\n    }\n\n    public getPickingObject3v<T>(vec: Vec3 | Vec4): T {\n        return this.colorObjects.get(`${vec.x}_${vec.y}_${vec.z}`);\n    }\n\n    /**\n     * Assign picking color to the object.\n     * @public\n     * @param {Object} obj - Object that presume to be picked.\n     */\n    public assignPickingColor<T>(obj: T & IPickingObject) {\n        if (!obj._pickingColor || obj._pickingColor.isZero()) {\n            let r = 0, g = 0, b = 0;\n            let str = \"0_0_0\";\n            while (!(r || g || b) || this.colorObjects.has(str)) {\n                r = randomi(1, 255);\n                g = randomi(1, 255);\n                b = randomi(1, 255);\n                str = `${r}_${g}_${b}`;\n            }\n\n            if (!obj._pickingColor) {\n                obj._pickingColor = new Vec3(r, g, b);\n            } else {\n                obj._pickingColor.set(r, g, b);\n            }\n\n            obj._pickingColorU = new Float32Array([r / 255, g / 255, b / 255]);\n\n            this.colorObjects.set(str, obj);\n        }\n    }\n\n    /**\n     * Removes picking color from object.\n     * @public\n     * @param {Object} obj - Object to remove picking color.\n     */\n    public clearPickingColor<T>(obj: T & IPickingObject) {\n        if (obj._pickingColor && !obj._pickingColor.isZero()) {\n            let c = obj._pickingColor;\n            if (!c.isZero()) {\n                this.colorObjects.delete(`${c.x}_${c.y}_${c.z}`);\n                c.x = c.y = c.z = 0;\n            }\n        }\n    }\n\n    /**\n     * Get the client width.\n     * @public\n     * @returns {number} -\n     */\n    public getWidth(): number {\n        return this.handler.canvas!.clientWidth;\n    }\n\n    /**\n     * Get the client height.\n     * @public\n     * @returns {number} -\n     */\n    public getHeight(): number {\n        return this.handler.canvas!.clientHeight;\n    }\n\n    /**\n     * Get center of the canvas\n     * @public\n     * @returns {Vec2} -\n     */\n    public getCenter(): Vec2 {\n        let cnv = this.handler.canvas!;\n        return new Vec2(Math.round(cnv.width * 0.5), Math.round(cnv.height * 0.5));\n    }\n\n    /**\n     * Get center of the screen viewport\n     * @public\n     * @returns {Vec2} -\n     */\n    public getClientCenter(): Vec2 {\n        let cnv = this.handler.canvas!;\n        return new Vec2(Math.round(cnv.clientWidth * 0.5), Math.round(cnv.clientHeight * 0.5));\n    }\n\n    /**\n     * Add the given control to the renderer.\n     * @param {Control} control - Control.\n     */\n    public addControl(control: Control) {\n        control.addTo(this);\n    }\n\n    /**\n     * Add the given controls array to the planet node.\n     * @param {Array.<Control>} cArr - Control array.\n     */\n    public addControls(cArr: Control[]) {\n        for (let i = 0; i < cArr.length; i++) {\n            cArr[i].addTo(this);\n        }\n    }\n\n    /**\n     * Remove control from the renderer.\n     * @param {Control} control  - Control.\n     */\n    public removeControl(control: Control) {\n        control.remove();\n    }\n\n    public isInitialized(): boolean {\n        return this._initialized;\n    }\n\n    /**\n     * Renderer initialization.\n     * @public\n     */\n    public initialize() {\n\n        if (this._initialized) {\n            return;\n        } else {\n            this._initialized = true;\n        }\n\n        this.handler.initialize();\n\n        this.billboardsTextureAtlas.assignHandler(this.handler);\n        this.geoObjectsTextureAtlas.assignHandler(this.handler);\n\n        this.fontAtlas.assignHandler(this.handler);\n\n        this.handler.setFrameCallback(() => {\n            this.draw();\n        });\n\n        this.activeCamera = new Camera(this, {\n            eye: new Vec3(0, 0, 0), look: new Vec3(0, 0, -1), up: new Vec3(0, 1, 0)\n        });\n\n        this.events.initialize();\n\n        // Bind console key\n        this.events.on(\"charkeypress\", input.KEY_APOSTROPHE, function () {\n            cons.setVisibility(!cons.getVisibility());\n        });\n\n        this.handler.addProgram(screenFrame());\n\n        this.pickingFramebuffer = new Framebuffer(this.handler, {\n            width: 640, height: 480, depthComponent: \"DEPTH_STENCIL\", renderbufferTarget: \"DEPTH_STENCIL_ATTACHMENT\"\n        });\n        this.pickingFramebuffer.init();\n\n        this._tempPickingPix_ = new Uint8Array(this.pickingFramebuffer.width * this.pickingFramebuffer.height * 4);\n\n        this.distanceFramebuffer = new Framebuffer(this.handler, {\n            width: 320, height: 240\n        });\n        this.distanceFramebuffer.init();\n\n        this._tempDistancePix_ = new Uint8Array(this.distanceFramebuffer.width * this.distanceFramebuffer.height * 4);\n        //this._tempDistancePix_ = new Uint8Array(4);\n\n        this.depthFramebuffer = new Framebuffer(this.handler, {\n            size: 2,\n            internalFormat: [\"RGBA\", \"DEPTH_COMPONENT24\"],\n            format: [\"RGBA\", \"DEPTH_COMPONENT\"],\n            type: [\"UNSIGNED_BYTE\", \"UNSIGNED_INT\"],\n            attachment: [\"COLOR_ATTACHMENT\", \"DEPTH_ATTACHMENT\"],\n            useDepth: false\n        });\n        this.depthFramebuffer.init();\n\n        this.screenDepthFramebuffer = new Framebuffer(this.handler, {\n            useDepth: false\n        });\n        this.screenDepthFramebuffer.init();\n\n        if (this.handler.gl!.type === \"webgl\") {\n            this._readDistanceBuffer = this._readDistanceBuffer_webgl1;\n            this._readPickingBuffer = this._readPickingBuffer_webgl1;\n\n            this.sceneFramebuffer = new Framebuffer(this.handler);\n            this.sceneFramebuffer.init();\n\n            this._fnScreenFrame = this._screenFrameNoMSAA;\n\n            this.screenTexture = {\n                screen: this.sceneFramebuffer!.textures[0],\n                picking: this.pickingFramebuffer!.textures[0],\n                distance: this.distanceFramebuffer!.textures[0],\n                depth: this.screenDepthFramebuffer!.textures[0]\n            };\n        } else {\n            let _maxMSAA = this.getMaxMSAA(this._internalFormat);\n\n            if (this._msaa > _maxMSAA) {\n                this._msaa = _maxMSAA;\n            }\n\n            this.handler.addPrograms([toneMapping()]);\n\n            this.handler.addPrograms([depth()]);\n\n            this.sceneFramebuffer = new Multisample(this.handler, {\n                size: 1,\n                msaa: this._msaa,\n                internalFormat: this._internalFormat,\n                filter: \"LINEAR\"\n            });\n\n            this.sceneFramebuffer.init();\n\n            this.blitFramebuffer = new Framebuffer(this.handler, {\n                size: 1,\n                useDepth: false,\n                internalFormat: this._internalFormat,\n                format: this._format,\n                type: this._type,\n                filter: \"NEAREST\"\n            });\n\n            this.blitFramebuffer.init();\n\n            this.toneMappingFramebuffer = new Framebuffer(this.handler, {\n                useDepth: false\n            });\n\n            this.toneMappingFramebuffer.init();\n\n            this._fnScreenFrame = this._screenFrameMSAA;\n\n            this.screenTexture = {\n                screen: this.toneMappingFramebuffer!.textures[0],\n                picking: this.pickingFramebuffer!.textures[0],\n                distance: this.distanceFramebuffer!.textures[0],\n                depth: this.screenDepthFramebuffer!.textures[0],\n                frustum: this.depthFramebuffer!.textures[0]\n            };\n\n            this._initReadPixelsBuffers();\n        }\n\n        this.handler.addProgram(pickingMask());\n\n        this.handler.ONCANVASRESIZE = () => {\n            this._resizeStart();\n            this.events.dispatch(this.events.resize, this.handler.canvas);\n            this._resizeEnd();\n            //clearTimeout(__resizeTimeout);\n            // __resizeTimeout = setTimeout(() => {\n            //     this._resizeEnd();\n            //     this.events.dispatch(this.events.resizeend, this.handler.canvas);\n            // }, 320);\n            this.events.dispatch(this.events.resizeend, this.handler.canvas);\n        };\n\n        this.screenFramePositionBuffer = this.handler.createArrayBuffer(new Float32Array([1, 1, -1, 1, 1, -1, -1, -1]), 2, 4);\n\n\n        this.outputTexture = this.screenTexture.screen;\n\n        this._pickingMaskCoordinatesBuffer = this.handler.createArrayBuffer(new Float32Array([0, 0]), 2, 1);\n\n        this._initializeRenderNodes();\n\n        this._initializeControls();\n    }\n\n    _initReadPixelsBuffers() {\n        let gl = this.handler.gl!;\n\n        this._distancePixelBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.PIXEL_PACK_BUFFER, this._distancePixelBuffer);\n        gl.bufferData(gl.PIXEL_PACK_BUFFER, this.distanceFramebuffer!.width * this.distanceFramebuffer!.height * 4, gl.STREAM_READ);\n        gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n\n        this._pickingPixelBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.PIXEL_PACK_BUFFER, this._pickingPixelBuffer);\n        gl.bufferData(gl.PIXEL_PACK_BUFFER, this.pickingFramebuffer!.width * this.pickingFramebuffer!.height * 4, gl.STREAM_READ);\n        gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n    }\n\n    public _initializeControls() {\n        let temp = this.controls;\n        this.controls = {};\n        for (let i in temp) {\n            this.addControl(temp[i]);\n        }\n    }\n\n    public resize() {\n        this._resizeEnd();\n    }\n\n    public setCurrentScreen(screenName: string) {\n        this._currentOutput = screenName;\n        if (this.screenTexture[screenName]) {\n            this.outputTexture = this.screenTexture[screenName];\n        }\n    }\n\n    public _resizeStart() {\n        let c = this.handler.canvas!;\n\n        this.activeCamera!.setAspectRatio(c.width / c.height);\n        this.sceneFramebuffer!.setSize(c.width * 0.5, c.height * 0.5);\n        this.blitFramebuffer && this.blitFramebuffer.setSize(c.width * 0.5, c.height * 0.5, true);\n    }\n\n    public _resizeEnd() {\n        let c = this.handler.canvas!;\n\n        this.activeCamera!.setAspectRatio(c.width / c.height);\n        this.sceneFramebuffer!.setSize(c.width, c.height);\n        this.blitFramebuffer && this.blitFramebuffer.setSize(c.width, c.height, true);\n\n        this.toneMappingFramebuffer && this.toneMappingFramebuffer.setSize(c.width, c.height, true);\n        this.depthFramebuffer && this.depthFramebuffer.setSize(c.clientWidth, c.clientHeight, true);\n        this.screenDepthFramebuffer && this.screenDepthFramebuffer.setSize(c.clientWidth, c.clientHeight, true);\n\n        if (this.handler.gl!.type === \"webgl\") {\n            this.screenTexture.screen = (this.sceneFramebuffer as Framebuffer)!.textures[0];\n            this.screenTexture.picking = this.pickingFramebuffer!.textures[0];\n            this.screenTexture.distance = this.distanceFramebuffer!.textures[0];\n            this.screenTexture.depth = this.screenDepthFramebuffer!.textures[0];\n            this.screenTexture.frustum = this.depthFramebuffer!.textures[0];\n        } else {\n            this.screenTexture.screen = this.toneMappingFramebuffer!.textures[0];\n            this.screenTexture.picking = this.pickingFramebuffer!.textures[0];\n            this.screenTexture.distance = this.distanceFramebuffer!.textures[0];\n            this.screenTexture.depth = this.screenDepthFramebuffer!.textures[0];\n            this.screenTexture.frustum = this.depthFramebuffer!.textures[0];\n        }\n\n        this.setCurrentScreen(this._currentOutput);\n    }\n\n    public removeNode(renderNode: RenderNode) {\n        // TODO: replace from RenderNode to this method\n        renderNode.remove();\n    }\n\n    /**\n     * Adds render node to the renderer.\n     * @public\n     * @param {RenderNode} renderNode - Render node.\n     */\n    public addNode(renderNode: RenderNode) {\n        if (!this.renderNodes[renderNode.name]) {\n            renderNode.assign(this);\n            this._renderNodesArr.unshift(renderNode);\n            this.renderNodes[renderNode.name] = renderNode;\n        } else {\n            cons.logWrn(`Node name ${renderNode.name} already exists.`);\n        }\n    }\n\n    protected _initializeRenderNodes() {\n        for (let i = 0; i < this._renderNodesArr.length; i++) {\n            this._renderNodesArr[i].initialize();\n        }\n    }\n\n    /**\n     * Adds render node to the renderer before specific node.\n     * @public\n     * @param {RenderNode} renderNode - Render node.\n     * @param {RenderNode} renderNodeBefore - Insert before the renderNodeBefore node.\n     */\n    public addNodeBefore(renderNode: RenderNode, renderNodeBefore: RenderNode) {\n        if (!this.renderNodes[renderNode.name]) {\n            renderNode.assign(this);\n            this.renderNodes[renderNode.name] = renderNode;\n            for (let i = 0; i < this._renderNodesArr.length; i++) {\n                if (this._renderNodesArr[i].isEqual(renderNodeBefore)) {\n                    this._renderNodesArr.splice(i, 0, renderNode);\n                    break;\n                }\n            }\n            this._renderNodesArr.unshift(renderNode);\n        } else {\n            cons.logWrn(`Node name ${renderNode.name} already exists.`);\n        }\n    }\n\n    /**\n     * Adds render nodes array to the renderer.\n     * @public\n     * @param {Array.<RenderNode>} nodesArr - Render nodes array.\n     */\n    public addNodes(nodesArr: RenderNode[]) {\n        for (let i = 0; i < nodesArr.length; i++) {\n            this.addNode(nodesArr[i]);\n        }\n    }\n\n    public getMaxMSAA(internalFormat: string) {\n        let gl = this.handler.gl!;\n        let samples = gl.getInternalformatParameter(gl.RENDERBUFFER, (gl as any)[internalFormat], gl.SAMPLES);\n        return samples[0];\n    }\n\n    public getMSAA(): number {\n        return this._msaa;\n    }\n\n    /**\n     * TODO: replace with cache friendly linked list by BillboardHandler, LabelHandler etc.\n     */\n    public enqueueEntityCollectionsToDraw(ecArr: EntityCollection[]) {\n        this._entityCollections.push.apply(this._entityCollections, ecArr);\n    }\n\n    /**\n     * Draws opaque items entity collections.\n     * @protected\n     */\n    protected _drawOpaqueEntityCollections() {\n        let ec = this._entityCollections;\n\n        if (ec.length) {\n\n            this.enableBlendDefault();\n\n            //geoObject\n            let i = ec.length;\n            while (i--) {\n                let eci = ec[i];\n                if (ec[i]._fadingOpacity) {\n                    eci.events.dispatch(eci.events.draw, eci);\n                    ec[i].geoObjectHandler.draw();\n                }\n            }\n\n            // pointClouds pass\n            i = ec.length;\n            while (i--) {\n                ec[i]._fadingOpacity && ec[i].pointCloudHandler.draw();\n            }\n        }\n    }\n\n\n    /**\n     * Draws transparent items entity collections.\n     * @protected\n     */\n    protected _drawTransparentEntityCollections() {\n        let ec = this._entityCollections;\n\n        if (ec.length) {\n            let gl = this.handler.gl!;\n\n            this.enableBlendDefault();\n\n            // billboards pass\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, this.billboardsTextureAtlas.texture!);\n\n            let i = ec.length;\n            while (i--) {\n                let eci = ec[i];\n                eci._fadingOpacity && eci.billboardHandler.draw();\n            }\n\n            // labels pass\n            let fa = this.fontAtlas.atlasesArr;\n            for (i = 0; i < fa.length; i++) {\n                gl.activeTexture(gl.TEXTURE0 + i);\n                gl.bindTexture(gl.TEXTURE_2D, fa[i].texture!);\n            }\n\n            i = ec.length;\n            while (i--) {\n                ec[i]._fadingOpacity && ec[i].labelHandler.draw();\n            }\n\n            // rays\n            i = ec.length;\n            while (i--) {\n                ec[i]._fadingOpacity && ec[i].rayHandler.draw();\n            }\n\n            // polyline pass\n            i = ec.length;\n            while (i--) {\n                ec[i]._fadingOpacity && ec[i].polylineHandler.draw();\n            }\n\n            // Strip pass\n            i = ec.length;\n            while (i--) {\n                ec[i]._fadingOpacity && ec[i].stripHandler.draw();\n            }\n        }\n    }\n\n    protected _clearEntityCollectionQueue() {\n        this._entityCollections.length = 0;\n        this._entityCollections = [];\n    }\n\n    /**\n     * Draw nodes.\n     * @public\n     */\n    public draw() {\n        this.activeCamera!.checkMoveEnd();\n\n        let e = this.events;\n        e.handleEvents();\n\n        let sceneFramebuffer = this.sceneFramebuffer!;\n        sceneFramebuffer.activate();\n\n        let h = this.handler,\n            gl = h.gl!;\n\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        e.dispatch(e.draw, this);\n\n        let frustums = this.activeCamera!.frustums;\n\n        let pointerEvent = e.pointerEvent() || this.activeCamera!.isMoving;\n\n        // Rendering scene nodes and entityCollections\n        let rn = this._renderNodesArr;\n        let k = frustums.length;\n\n        while (k--) {\n            this.activeCamera!.setCurrentFrustum(k);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n\n            let i = rn.length;\n            while (i--) {\n                rn[i].preDrawNode();\n            }\n\n            this._drawOpaqueEntityCollections();\n\n            i = rn.length;\n            while (i--) {\n                this.enableBlendDefault();\n                rn[i].drawNode();\n            }\n\n            this._drawTransparentEntityCollections();\n            this._clearEntityCollectionQueue();\n\n            if (pointerEvent) {\n                this._drawPickingBuffer();\n                this.__useDistanceFramebuffer__ && this._drawDistanceBuffer();\n            }\n        }\n\n        sceneFramebuffer.deactivate();\n\n        this.blitFramebuffer && (sceneFramebuffer as Multisample).blitTo(this.blitFramebuffer, 0);\n\n        if (pointerEvent) {\n            // It works ONLY for 0 (closest) frustum\n            if (h.isWebGl2()) {\n                this._drawDepthBuffer();\n            }\n            this._readPickingBuffer();\n            this.__useDistanceFramebuffer__ && this._readDistanceBuffer();\n        }\n\n        // Tone mapping followed by rendering on the screen\n        this._fnScreenFrame!();\n\n        e.dispatch(e.postdraw, this);\n\n        e.mouseState.wheelDelta = 0;\n        e.mouseState.justStopped = false;\n        e.mouseState.moving = false;\n        e.touchState.moving = false;\n    }\n\n    protected _screenFrameMSAA() {\n        let h = this.handler;\n\n        let sh = h.programs.toneMapping,\n            p = sh._program,\n            gl = h.gl!;\n\n        gl.disable(gl.DEPTH_TEST);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.screenFramePositionBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(p.attributes.corners, 2, gl.FLOAT, false, 0, 0);\n\n        this.toneMappingFramebuffer!.activate();\n\n        sh.activate();\n\n        // screen texture\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.blitFramebuffer!.textures[0]);\n        gl.uniform1i(p.uniforms.hdrBuffer, 0);\n\n        gl.uniform1f(p.uniforms.gamma, this.gamma);\n        gl.uniform1f(p.uniforms.exposure, this.exposure);\n        gl.uniform1f(p.uniforms.whitepoint, this.whitepoint);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n        this.toneMappingFramebuffer!.deactivate();\n\n        // SCREEN PASS\n        sh = h.programs.screenFrame;\n        p = sh._program;\n        sh.activate();\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.outputTexture);\n        gl.uniform1i(p.uniforms.texture, 0);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n        gl.enable(gl.DEPTH_TEST);\n    }\n\n    protected _screenFrameNoMSAA() {\n\n        let h = this.handler;\n        let sh = h.programs.screenFrame,\n            p = sh._program,\n            gl = h.gl!;\n\n        gl.disable(gl.DEPTH_TEST);\n        sh.activate();\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.outputTexture);\n        gl.uniform1i(p.uniforms.texture, 0);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.screenFramePositionBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(p.attributes.corners, 2, gl.FLOAT, false, 0, 0);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        gl.enable(gl.DEPTH_TEST);\n    }\n\n    /**\n     * Draw picking objects framebuffer.\n     * @private\n     */\n    protected _drawPickingBuffer() {\n        this.pickingFramebuffer!.activate();\n\n        let h = this.handler;\n        let gl = h.gl!;\n\n        if (this.activeCamera!.isFirstPass) {\n            gl.clearColor(0.0, 0.0, 0.0, 1.0);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        } else {\n            gl.clear(gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        }\n\n        //\n        // draw picking mask\n        //\n        h.programs.pickingMask.activate();\n        let sh = h.programs.pickingMask._program;\n        let shu = sh.uniforms, sha = sh.attributes;\n\n        let /*ts = this.events.touchState,*/\n            ms = this.events.mouseState;\n\n        gl.disable(gl.DEPTH_TEST);\n\n        gl.enable(gl.STENCIL_TEST);\n        gl.colorMask(false, false, false, false);\n        gl.stencilFunc(gl.ALWAYS, 2, 0xFF);\n        gl.stencilOp(gl.REPLACE, gl.ZERO, gl.REPLACE);\n\n        gl.uniform2f(shu.offset, (ms.nx - 0.5) * 2, (0.5 - ms.ny) * 2);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._pickingMaskCoordinatesBuffer!);\n        gl.vertexAttribPointer(sha.coordinates, this._pickingMaskCoordinatesBuffer!.itemSize, gl.FLOAT, false, 0, 0);\n        gl.drawArrays(gl.POINTS, 0, this._pickingMaskCoordinatesBuffer!.numItems);\n\n        gl.enable(gl.DEPTH_TEST);\n\n        //\n        // draw picking scenes\n        //\n        gl.colorMask(true, true, true, true);\n        gl.stencilFunc(gl.EQUAL, 2, 0xFF);\n        gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\n        gl.disable(gl.BLEND);\n\n        let dp = this._pickingCallbacks;\n        for (let i = 0, len = dp.length; i < len; i++) {\n            /**\n             * This callback renders picking frame.\n             */\n            dp[i].callback.call(dp[i].sender);\n        }\n\n        gl.enable(gl.BLEND);\n\n        gl.disable(gl.STENCIL_TEST);\n\n        this.pickingFramebuffer!.deactivate();\n    }\n\n    /**\n     * Draw picking objects framebuffer.\n     * @protected\n     */\n    protected _drawDistanceBuffer() {\n        this.distanceFramebuffer!.activate();\n\n        let h = this.handler;\n        let gl = h.gl!;\n\n        if (this.activeCamera!.isFirstPass) {\n            gl.clearColor(0.0, 0.0, 0.0, 1.0);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        } else {\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n        }\n\n        gl.disable(gl.BLEND);\n\n        let dp = this._distanceCallbacks;\n        let i = dp.length;\n        while (i--) {\n            /**\n             * This callback renders distance frame.\n             */\n            dp[i].callback.call(dp[i].sender);\n        }\n\n        gl.enable(gl.BLEND);\n\n        this.distanceFramebuffer!.deactivate();\n    }\n\n    protected _drawDepthBuffer() {\n        this.depthFramebuffer!.activate();\n\n        let h = this.handler;\n        let gl = h.gl!;\n\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        gl.enable(gl.DEPTH_TEST);\n\n        let dp = this._depthCallbacks;\n        let i = dp.length;\n        while (i--) {\n            /**\n             * This callback renders depth frame.\n             */\n            dp[i].callback.call(dp[i].sender);\n        }\n\n        this.depthFramebuffer!.deactivate();\n\n        //\n        // PASS to depth visualization\n        this.screenDepthFramebuffer!.activate();\n        let sh = h.programs.depth, p = sh._program;\n\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.screenFramePositionBuffer as WebGLBuffer);\n        gl.vertexAttribPointer(p.attributes.corners, 2, gl.FLOAT, false, 0, 0);\n\n        sh.activate();\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.depthFramebuffer!.textures[1]);\n        gl.uniform1i(p.uniforms.depthTexture, 0);\n\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n        this.screenDepthFramebuffer!.deactivate();\n    }\n\n    protected _readPickingBuffer_webgl1 = () => {\n        this.pickingFramebuffer!.activate();\n        this.pickingFramebuffer!.readAllPixels(this._tempPickingPix_);\n        this.pickingFramebuffer!.deactivate();\n    }\n\n    protected _readPickingBuffer_webgl2 = () => {\n\n        const gl = this.handler.gl!;\n        const buf = this._pickingPixelBuffer;\n\n        if (!this._skipPickingFrame) {\n\n            this._skipPickingFrame = true;\n\n            let dest = this._tempPickingPix_;\n\n            let w = this.pickingFramebuffer!.width,\n                h = this.pickingFramebuffer!.height;\n\n            this.pickingFramebuffer!.activate();\n            gl.bindBuffer(gl.PIXEL_PACK_BUFFER, buf);\n            gl.bufferData(gl.PIXEL_PACK_BUFFER, dest.byteLength, gl.STREAM_READ);\n            gl.readPixels(0, 0, w, h, gl.RGBA, gl.UNSIGNED_BYTE, 0);\n            gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n            this.pickingFramebuffer!.deactivate();\n\n            const sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0)!;\n            gl.flush();\n\n            clientWaitAsync(gl, sync, 0).then(() => {\n                this._skipPickingFrame = false;\n                gl.deleteSync(sync);\n                gl.bindBuffer(gl.PIXEL_PACK_BUFFER, buf);\n                gl.getBufferSubData(gl.PIXEL_PACK_BUFFER, 0, dest);\n                gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n            });\n        }\n    }\n\n    protected _readDistanceBuffer_webgl1 = () => {\n        this.distanceFramebuffer!.activate();\n        this.distanceFramebuffer!.readAllPixels(this._tempDistancePix_);\n        this.distanceFramebuffer!.deactivate();\n    }\n\n    protected _readDistanceBuffer_webgl2 = () => {\n\n        const gl = this.handler.gl!;\n        const buf = this._distancePixelBuffer;\n\n        if (!this._skipDistanceFrame) {\n\n            this._skipDistanceFrame = true;\n\n            let dest = this._tempDistancePix_;\n\n            let w = this.distanceFramebuffer!.width,\n                h = this.distanceFramebuffer!.height;\n\n            this.distanceFramebuffer!.activate();\n            gl.bindBuffer(gl.PIXEL_PACK_BUFFER, buf);\n            gl.bufferData(gl.PIXEL_PACK_BUFFER, dest.byteLength, gl.STREAM_READ);\n            gl.readPixels(0, 0, w, h, gl.RGBA, gl.UNSIGNED_BYTE, 0);\n            gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n            this.distanceFramebuffer!.deactivate();\n\n            const sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0)!;\n            gl.flush();\n\n            clientWaitAsync(gl, sync, 0).then(() => {\n                this._skipDistanceFrame = false;\n                gl.deleteSync(sync);\n                gl.bindBuffer(gl.PIXEL_PACK_BUFFER, buf);\n                gl.getBufferSubData(gl.PIXEL_PACK_BUFFER, 0, dest);\n                gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n            });\n        }\n    }\n\n    public readPickingColor(x: number, y: number, outColor: NumberArray3 | Uint8Array) {\n        let w = this.pickingFramebuffer!.width;\n        let h = this.pickingFramebuffer!.height;\n\n        x = Math.round(x * w);\n        y = Math.round(y * h);\n\n        let ind = (y * w + x) * 4;\n\n        outColor[0] = this._tempPickingPix_[ind];\n        outColor[1] = this._tempPickingPix_[ind + 1];\n        outColor[2] = this._tempPickingPix_[ind + 2];\n    }\n\n    public readDistanceColor(x: number, y: number, outColor: NumberArray3 | Uint8Array) {\n\n        let w = this.distanceFramebuffer!.width;\n        let h = this.distanceFramebuffer!.height;\n\n        x = Math.round(x * w);\n        y = Math.round(y * h);\n\n        let ind = (y * w + x) * 4;\n\n        outColor[0] = this._tempDistancePix_[ind];\n        outColor[1] = this._tempDistancePix_[ind + 1];\n        outColor[2] = this._tempDistancePix_[ind + 2];\n    }\n\n    /**\n     * Function starts renderer\n     * @public\n     */\n    public start() {\n        if (!this._initialized) {\n            this.initialize();\n        }\n        this.handler.start();\n    }\n\n    public destroy() {\n        for (let i in this.controls) {\n            this.controls[i].remove();\n        }\n\n        for (let i = 0; i < this._renderNodesArr.length; i++) {\n            this._renderNodesArr[i].remove();\n        }\n\n        this.div = null;\n\n        this._renderNodesArr = [];\n\n        this.renderNodes = {};\n\n        this.activeCamera = null;\n\n        this.controls = {};\n\n        this.controlsBag = {};\n\n        this.colorObjects.clear();\n\n        // @ts-ignore\n        this.colorObjects = null;\n\n        this._pickingCallbacks = [];\n\n        this.pickingFramebuffer = null;\n\n        //@ts-ignore\n        this._tempPickingPix_ = null;\n\n        this.distanceFramebuffer = null;\n\n        this._distanceCallbacks = [];\n\n        //@ts-ignore\n        this._tempDistancePix_ = null;\n\n        this._depthCallbacks = [];\n\n        this.depthFramebuffer = null;\n\n        this.sceneFramebuffer = null;\n\n        this.blitFramebuffer = null;\n\n        this.toneMappingFramebuffer = null;\n\n        // todo\n        //this.billboardsTextureAtlas.clear();\n        //this.geoObjectsTextureAtlas.clear()\n        //this.fontAtlas.clear();\n\n        this._entityCollections = [];\n\n        this.handler.destroy();\n\n        // @ts-ignore\n        this.handler = null;\n\n        this._initialized = false;\n    }\n\n}\n\nexport {Renderer};\n","import {Program} from '../webgl/Program';\n\nexport function screenFrame(): Program {\n    return new Program(\"screenFrame\", {\n        uniforms: {\n            texture: \"sampler2d\"\n        },\n        attributes: {\n            corners: \"vec3\"\n        },\n        vertexShader:\n            `attribute vec2 corners;\n            \n            varying vec2 tc;\n            void main(void) {\n                gl_Position = vec4(corners, 0.0, 1.0);\n                tc = corners * 0.5 + 0.5;\n            }`,\n        fragmentShader:\n            `precision highp float;\n            uniform sampler2D texture;\n            \n            varying vec2 tc;\n            \n            void main(void) {\n                gl_FragColor = texture2D( texture, tc );\n            }`\n    });\n}","import {Program} from '../webgl/Program';\n\nexport function toneMapping(): Program {\n    return new Program(\"toneMapping\", {\n        uniforms: {\n            hdrBuffer: \"sampler2d\",\n            exposure: \"float\",\n            gamma: \"float\",\n            whitepoint: \"float\"\n        },\n        attributes: {\n            corners: \"vec3\"\n        },\n        vertexShader:\n            `#version 300 es\n            \n            in vec2 corners;\n            \n            out vec2 tc;\n\n            void main(void) {\n                gl_Position = vec4(corners, 0.0, 1.0);\n                tc = corners * 0.5 + 0.5;\n            }`,\n        fragmentShader:\n            `#version 300 es\n\n            precision highp float;\n\n            #ifndef saturate\n                #define saturate(a) clamp(a, 0.0, 1.0)\n            #endif\n\n            uniform sampler2D hdrBuffer;\n\n            uniform float whitepoint;\n            uniform float exposure;\n            uniform float gamma;\n\n            vec3 LinearToneMapping(vec3 color) {\n                return exposure * color;\n            }\n\n            vec3 ReinhardToneMapping2(vec3 color) {\n                return vec3(1.0) - exp(-color * exposure);\n            }\n\n            vec3 ReinhardToneMapping(vec3 color) {\n                color *= exposure;\n                return saturate(color / (vec3(1.0) + color));\n            }\n\n            #define Uncharted2Helper(x) max(((x * (0.15 * x + 0.10 * 0.50) + 0.20 * 0.02) / (x * (0.15 * x + 0.50) + 0.20 * 0.30)) - 0.02 / 0.30, vec3(0.0))\n\n            vec3 Uncharted2ToneMapping(vec3 color) {\n                color *= exposure;\n                return saturate(Uncharted2Helper(color) / Uncharted2Helper(vec3(whitepoint)));\n            }\n\n            vec3 OptimizedCineonToneMapping(vec3 color) {\n                color *= exposure;\n                color = max(vec3(0.0), color - 0.004);\n                return pow((color * (6.2 * color + 0.5)) / (color * (6.2 * color + 1.7) + 0.06), vec3(2.2));\n            }\n\n            vec3 ACESFilmicToneMapping(vec3 color) {\n                color *= exposure;\n                return saturate((color * (2.51 * color + 0.03)) / (color * (2.43 * color + 0.59) + 0.14));\n            }\n\n            in vec2 tc;\n\n            layout(location = 0) out vec4 fragColor;\n            \n            void main(void) {\n                vec4 hdrColor = texture(hdrBuffer, tc).rgba;\n                \n                float oneByGamma = gamma / gamma;\n                float oneByWhitePoint = whitepoint / whitepoint;\n                vec3 mapped = ReinhardToneMapping2(hdrColor.rgb) * oneByGamma * oneByWhitePoint;\n                //vec3 mapped = ACESFilmicToneMapping(hdrColor.rgb) * oneByGamma * oneByWhitePoint;\n\n                mapped = pow(mapped, vec3(1.0 / gamma));\n        \n                fragColor = vec4(mapped, hdrColor.a);\n            }`\n    });\n}","import { Program } from '../webgl/Program';\n\nexport function depth() {\n    return new Program(\"depth\", {\n        uniforms: {\n            depthTexture: \"sampler2d\"\n        },\n        attributes: {\n            corners: \"vec2\"\n        },\n        vertexShader:\n            `#version 300 es\n            \n            in vec2 corners;\n            \n            out vec2 tc;\n\n            void main(void) {\n                gl_Position = vec4(corners, 0.0, 1.0);\n                tc = corners * 0.5 + 0.5;\n            }`,\n        fragmentShader:\n            `#version 300 es\n\n            precision highp float;\n\n            #define MAX_FRUSTUMS 4\n\n            uniform sampler2D depthTexture;\n           \n            in vec2 tc;\n\n            layout(location = 0) out vec4 fragColor;\n\n            float LinearizeDepth(in vec2 uv)\n            {\n                float depth = texture(depthTexture, tc).x;\n                return depth;//(2.0 * zNear) / (zFar + zNear - depth * (zFar - zNear));\n            }\n            \n            void main(void) {\n                float c = LinearizeDepth(tc);\n                fragColor = vec4(c, c, c, 1.0);\n            }`\n    });\n}","import {Program} from '../webgl/Program';\n\nexport function pickingMask(): Program {\n    return new Program(\"pickingMask\", {\n        uniforms: {\n            offset: \"vec2\"\n        },\n        attributes: {\n            coordinates: \"vec2\"\n        },\n        vertexShader:\n            `attribute vec2 coordinates;\n            uniform vec2 offset;\n            void main() {\n            \n                gl_Position = vec4(coordinates + offset, 0.0, 1.0);\n                gl_PointSize = 5.0;\n            }`,\n        fragmentShader:\n            `precision highp float;\n            void main(void) {\n                gl_FragColor = vec4(1.0);\n            }`\n    });\n}","// #StandWithUkraine\n\nimport {CompassButton} from \"./control/CompassButton\";\nimport {Control} from \"./control/Control\";\nimport {EarthCoordinates} from \"./control/EarthCoordinates\";\nimport {EarthNavigation} from \"./control/EarthNavigation\";\nimport {Ellipsoid} from \"./ellipsoid/Ellipsoid\";\nimport {EmptyTerrain} from \"./terrain/EmptyTerrain\";\nimport {Handler} from \"./webgl/Handler\";\nimport {isEmpty} from \"./utils/shared\";\nimport {Layer} from \"./layer/Layer\";\nimport {MouseNavigation} from \"./control/MouseNavigation\";\nimport {NumberArray2} from \"./math/Vec2\";\nimport {NumberArray4} from \"./math/Vec4\";\nimport {Planet} from \"./scene/Planet\";\nimport {ScaleControl} from \"./control/ScaleControl\";\nimport {Sun} from \"./control/Sun\";\nimport {TouchNavigation} from \"./control/TouchNavigation\";\nimport {HTMLDivElementExt, Renderer} from \"./renderer/Renderer\";\nimport {RenderNode} from \"./scene/RenderNode\";\nimport {ZoomControl} from \"./control/ZoomControl\";\nimport {Extent} from \"./Extent\";\n\ninterface IGlobeParams {\n    attributionContainer?: HTMLElement;\n    target?: string | HTMLElement;\n    skybox?: RenderNode;\n    dpi?: number;\n    msaa?: number;\n    name?: string;\n    frustums?: NumberArray2[];\n    ellipsoid?: Ellipsoid;\n    maxGridSize?: number;\n    nightTextureSrc?: string | null;\n    specularTextureSrc?: string | null;\n    minAltitude?: number;\n    maxAltitude?: number;\n    maxEqualZoomAltitude?: number;\n    minEqualZoomAltitude?: number;\n    minEqualZoomCameraSlope?: number;\n    quadTreeStrategyPrototype?: any;\n    maxLoadingRequests?: number;\n    atmosphereEnabled?: boolean;\n\n    terrain?: EmptyTerrain;\n    controls?: Control[];\n    useEarthNavigation?: boolean;\n    minSlope?: number;\n    sun?: {\n        active?: boolean;\n        stopped?: boolean\n    };\n    layers?: Layer[];\n    viewExtent?: Extent | NumberArray4;\n    autoActivate?: boolean;\n\n    fontsSrc?: string;\n    resourcesSrc?: string;\n}\n\nconst DEFAULT_NIGHT_SRC = `/night.png`;\nconst DEFAULT_SPEC_SRC = `/spec.png`;\nconst DEFAULT_RESOURCES_SRC = '/res';\n\n/** @const {string} */\nconst PLANET_NAME_PREFIX = \"globus_planet_\";\n\n/**\n * Creates a WebGL context with globe.\n * @class\n *\n * @example <caption>Basic initialization</caption>\n * globus = new Globe({\n *     'atmosphere': false,\n *     'target': 'globus',\n *     'name': 'Earth',\n *     'controls': [\n *          new control.MouseNavigation({ autoActivate: true }),\n *          new control.KeyboardNavigation({ autoActivate: true }),\n *          new control.EarthCoordinates({ autoActivate: true, center: false }),\n *          new control.LayerSwitcher({ autoActivate: true }),\n *          new control.ZoomControl({ autoActivate: true }),\n *          new control.TouchNavigation({ autoActivate: true }),\n *          new control.Sun({ autoActivate: true })\n *      ],\n *     'terrain': new GlobusTerrain(),\n *     'layers': [\n *          new XYZ(\"OpenStreetMap\", { isBaseLayer: true, url: \"http://b.tile.openstreetmap.org/{z}/{x}/{y}.png\", visibility: true, attribution: 'Data @ <a href=\"http://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"http://www.openstreetmap.org/copyright\">ODbL</a>' })\n *      ],\n *     'autoActivate': true\n * });\n *\n * @param {IGlobeParams} options - Options:\n * @param {string|HTMLElement} options.target - HTML element id where planet canvas have to be created.\n * @param {string} [options.name] - Planet name. Default is uniq identifier.\n * @param {EmptyTerrain} [options.terrain] - Terrain provider. Default no terrain - og.terrain.EmptyTerrain.\n * @param {Array.<Control>} [options.controls] - Renderer controls array.\n * @param {Array.<Layer>} [options.layers] - Planet layers.\n * @param {Extent| [[number, number],[number, number]]} [options.viewExtent] - Viewable starting extent.\n * @param {boolean} [options.autoActivate=true] - Globe rendering auto activation flag. True is default.\n * @param {HTMLElement} [options.attributionContainer] - Container for attribution list.\n * @param {number} [options.maxGridSize=128] = Maximal segment grid size. 128 is default\n * @param {string} [options.fontsSrc] -  Fonts collection url.\n * @param {string} [options.resourcesSrc] - Resources root src.\n * @param {string} [options.nightTextureSrc] - Night glowing image sources\n * @param {string} [options.specularTextureSrc] - Specular water mask image sourcr\n * @param {number} [options.maxAltitude=15000000.0] - Maximal camera altitude above terrain\n * @param {number} [options.minAltitude=1.0] - Minimal camera altitude above terrain\n * @param {number} [options.maxEqualZoomAltitude=15000000.0] - Maximal altitude since segments on the screen became the same zoom level\n * @param {number} [options.minEqualZoomAltitude=10000.0] - Minimal altitude since segments on the screen became the same zoom level\n * @param {number} [options.minEqualZoomCameraSlope=0.8] - Minimal camera slope above te globe where segments on the screen became the same zoom level\n * @param {number} [options.loadingBatchSize=12] -\n * @param {number} [options.quadTreeStrategyPrototype] - Prototype of quadTree. QuadTreeStrategy for Earth is default.\n * @param {number} [options.msaa=0] - MSAA antialiasing parameter: 2,4,8,16. Default is 0.\n * @param {number} [options.dpi] - Device pixel ratio. Default is current screen DPI.\n * @param {boolean} [options.atmosphereEnabled] - Enables atmosphere effect.\n */\n\nclass Globe {\n\n    static __counter__: number = 0;\n\n    public $target: HTMLElement | null;\n\n    protected _instanceID: string;\n\n    protected _canvas: HTMLCanvasElement;\n\n    public $inner: HTMLDivElementExt;\n\n    /**\n     * Interface for the renderer context(events, input states, renderer nodes etc.)\n     * @public\n     * @type {Renderer}\n     */\n    public renderer: Renderer;\n\n    /**\n     * Planet node name. Access with this.renderer.<name>\n     * @private\n     * @type {String}\n     */\n    protected _planetName: string;\n\n    public planet: Planet;\n\n    public sun: Sun;\n\n    constructor(options: IGlobeParams) {\n\n        this.$target = null;\n\n        this._instanceID = `__globus${Globe.__counter__++ ? Globe.__counter__ : \"\"}__`;\n        (window as any)[this._instanceID] = this;\n\n        //\n        // Canvas creation\n        //\n        this._canvas = document.createElement(\"canvas\");\n        this._canvas.id = `canvas${this._instanceID}`;\n        this._canvas.style.width = \"100%\";\n        this._canvas.style.height = \"100%\";\n        this._canvas.style.display = \"block\";\n        this._canvas.style.opacity = \"0.0\";\n        this._canvas.style.transition = \"opacity 150ms\";\n\n        /**\n         * Dom element where WebGL canvas creates\n         * @public\n         * @type {Element}\n         */\n        this.$inner = document.createElement('div');\n        this.$inner.classList.add(\"og-inner\");\n        this.$inner.appendChild(this._canvas);\n\n        this.$inner.attributions = document.createElement('div');\n        if (options.attributionContainer) {\n            options.attributionContainer.appendChild(this.$inner.attributions);\n        } else {\n            this.$inner.attributions.classList.add(\"og-attribution\");\n            this.$inner.appendChild(this.$inner.attributions);\n        }\n\n        if (options.target) {\n            this.attachTo(options.target);\n        }\n\n        const _disableWheel = (e: Event) => {\n            e.preventDefault();\n        }\n\n        this._canvas.onmouseenter = function () {\n            document.addEventListener(\"mousewheel\", _disableWheel, {\n                capture: false,\n                passive: false\n            });\n        };\n        this._canvas.onmouseleave = function () {\n            document.removeEventListener(\"mousewheel\", _disableWheel);\n        };\n\n        this.renderer = new Renderer(\n            new Handler(this._canvas, {\n                autoActivate: false,\n                pixelRatio: options.dpi || (window.devicePixelRatio + 0.15),\n                context: {\n                    //alpha: false,\n                    antialias: false,\n                    premultipliedAlpha: false\n                }\n            }), {\n                autoActivate: false,\n                msaa: options.msaa,\n                fontsSrc: options.fontsSrc\n            }\n        );\n\n        this.renderer.div = this.$inner;\n\n        // Skybox\n        if (options.skybox) {\n            this.renderer.addNode(options.skybox);\n        }\n\n        this._planetName = options.name ? options.name : PLANET_NAME_PREFIX + Globe.__counter__;\n\n        this.planet = new Planet({\n            name: this._planetName,\n            frustums: options.frustums,\n            ellipsoid: options.ellipsoid,\n            maxGridSize: options.maxGridSize,\n            nightTextureSrc: options.nightTextureSrc === null ? null : `${options.resourcesSrc || DEFAULT_RESOURCES_SRC}${DEFAULT_NIGHT_SRC}`,\n            specularTextureSrc: options.specularTextureSrc === null ? null : `${options.resourcesSrc || DEFAULT_RESOURCES_SRC}${DEFAULT_SPEC_SRC}`,\n            minAltitude: options.minAltitude,\n            maxAltitude: options.maxAltitude || 15000000,\n            maxEqualZoomAltitude: options.maxEqualZoomAltitude,\n            minEqualZoomAltitude: options.minEqualZoomAltitude,\n            minEqualZoomCameraSlope: options.minEqualZoomCameraSlope,\n            quadTreeStrategyPrototype: options.quadTreeStrategyPrototype,\n            maxLoadingRequests: options.maxLoadingRequests,\n            atmosphereEnabled: options.atmosphereEnabled\n        });\n\n        // Attach terrain provider (can be one object or array)\n        if (options.terrain) {\n            //@todo: refactoring\n            if (Array.isArray(options.terrain)) {\n                this.planet.setTerrain(options.terrain[0]); // If array get the terrain from 1st element\n            } else {\n                this.planet.setTerrain(options.terrain);\n            }\n        } else {\n            this.planet.setTerrain(new EmptyTerrain());\n        }\n\n        this.renderer.addNode(this.planet);\n\n        // Add controls\n        if (options.controls) {\n            this.planet.addControls(options.controls);\n        } else {\n            this.planet.addControls([\n                new ZoomControl(),\n                options.useEarthNavigation ? new EarthNavigation() : new MouseNavigation({minSlope: options.minSlope}),\n                new TouchNavigation(),\n                new EarthCoordinates(),\n                new ScaleControl(),\n                new CompassButton()\n            ]);\n        }\n\n        const _controls = this.renderer.controls;\n        let sun;\n        for (let i in _controls) {\n            if (_controls[i] instanceof Sun) {\n                sun = _controls[i] as Sun;\n                break;\n            }\n        }\n\n        if (!sun) {\n            this.sun = new Sun();\n            this.planet.addControl(this.sun);\n        } else {\n            this.sun = sun;\n        }\n\n        if (options.sun) {\n            if (options.sun.active !== undefined && !options.sun.active) {\n                this.sun.deactivate();\n            }\n            if (options.sun.stopped === true) {\n                this.sun.stop();\n            }\n        }\n\n        if (options.layers) {\n            this.planet.addLayers(options.layers);\n        }\n\n        // TODO: view center, altitude, extent\n        let ve = options.viewExtent;\n        if (ve) {\n            if (ve instanceof Array) {\n                this.planet.viewExtentArr(ve);\n            } else {\n                this.planet.viewExtent(ve as Extent);\n            }\n        }\n\n        // Run!\n        if (options.autoActivate || isEmpty(options.autoActivate)) {\n            this.start();\n        }\n    }\n\n    public start() {\n        this.renderer.start();\n        this.fadeIn();\n    }\n\n    /**\n     * Starts screen brightness fading in effect by the duration time.\n     * @public\n     */\n    public fadeIn() {\n        this._canvas.style.opacity = \"1.0\";\n    }\n\n    /**\n     * Starts screen brightness fading out effect by the duration time.\n     * @public\n     */\n    public fadeOut() {\n        this._canvas.style.opacity = \"0\";\n    }\n\n    public attachTo(target: HTMLElement | string) {\n\n        this.detach();\n\n        let t;\n        if (target instanceof HTMLElement) {\n            t = target;\n        } else {\n            t = document.getElementById(target) || document.querySelector(target);\n        }\n\n        if (t) {\n            this.$target = t as HTMLElement;\n            t.appendChild(this.$inner);\n        }\n    }\n\n    public detach() {\n        if (this.$target) {\n            // Remember that when container is zero\n            // sized(display none etc.) renderer frame will be stopped\n            this.$target.removeChild(this.$inner);\n        }\n    }\n\n    public destroy() {\n        this.detach();\n        this.renderer.destroy();\n    }\n}\n\nexport {Globe};\n","import {CLOSE_ICON} from './ui/icons';\nimport {createLonLat, stringTemplate} from \"./utils/shared\";\nimport {EventsHandler} from \"./Events\";\nimport {LonLat} from \"./LonLat\";\nimport {Planet} from \"./scene/Planet\";\nimport {NumberArray2, Vec2} from \"./math/Vec2\";\nimport {NumberArray3, Vec3} from \"./math/Vec3\";\nimport {View, IViewParams, ViewEventsList} from './ui/View';\n\nconst TEMPLATE = `<div class=\"og-popup {className}\">\n      <div class=\"og-popup-content-wrapper\">\n        <div class=\"og-popup-content\"></div>\n      </div>\n      <div class=\"og-popup-tip-container\">\n        <div class=\"og-popup-tip\"></div>\n      </div>\n      <div class=\"og-popup-toolbar\">\n        <div class=\"og-popup-btn og-popup-close\">${CLOSE_ICON}</div>\n      </div>\n      <div class=\"og-popup-title\">{title}</div>\n    </div>`;\n\ninterface IPopupParams extends IViewParams {\n    planet: Planet;\n    title?: string;\n    className?: string;\n    visibility?: boolean;\n    content?: string;\n    offset?: NumberArray2;\n    lonLat?: LonLat | NumberArray2 | NumberArray3;\n}\n\ntype PopupEventsList = [\"open\", \"close\"];\nconst POPUP_EVENTS: PopupEventsList = [\"open\", \"close\"];\n\nclass Popup extends View<null> {\n\n    public override events: EventsHandler<PopupEventsList> & EventsHandler<ViewEventsList>;\n\n    public $content: HTMLElement | null;\n    public $tip: HTMLElement | null;\n    public $title: HTMLElement | null;\n\n    protected _content: string | HTMLElement | null;\n\n    protected _planet: Planet;\n\n    protected _offset: NumberArray2;\n\n    protected _lonLat: LonLat;\n\n    protected _cartPos: Vec3;\n\n    protected _visibility: boolean;\n\n    constructor(options: IPopupParams) {\n        super({\n            template: stringTemplate(TEMPLATE, {\n                title: options.title || \"\"\n            }),\n            classList: options.className ? [options.className] : [],\n            ...options\n        });\n\n        //@ts-ignore\n        this.events = this.events.registerNames(POPUP_EVENTS);\n\n        this._content = options.content || \"\";\n\n        this.$content = null;\n        this.$tip = null;\n        this.$title = null;\n\n        this._planet = options.planet;\n\n        this._offset = options.offset || [0, 0];\n\n        this._lonLat = createLonLat(options.lonLat);\n\n        this._cartPos = new Vec3();\n\n        this._visibility = options.visibility || false;\n\n        this.render();\n    }\n\n    _updatePosition() {\n        this.setCartesian3v(this._cartPos);\n    }\n\n    public setScreen(p: Vec2) {\n        if (this._planet) {\n            let r = this._planet.renderer!.handler.pixelRatio;\n            this.el!.style.transform =\n                `translate(${p.x / r - this.clientWidth * 0.5}px, ${p.y / r - this._planet.renderer!.handler.canvas!.clientHeight - this.$tip!.clientHeight}px)`;\n        }\n    }\n\n    public get clientWidth(): number {\n        return this.el ? this.el.clientWidth : 0;\n    }\n\n    public get clientHeight(): number {\n        return this.el ? this.el.clientHeight : 0;\n    }\n\n    public setOffset(x: number = 0, y: number = 0): this {\n        this._offset[0] = x;\n        this._offset[1] = y;\n        if (this.el) {\n            this.el.style.left = `${x}px`;\n            this.el.style.bottom = `${y}px`;\n        }\n        return this;\n    }\n\n    public override render(params?: any): this {\n        super.render(params);\n\n        this.$content = this.select(\".og-popup-content\")!;\n        this.$title = this.select(\".og-popup-title\")!;\n        this.$tip = this.select(\".og-popup-tip-container\")!;\n\n        this.setOffset(this._offset[0], this._offset[1]);\n        this.setContent(this._content);\n        this.setLonLat(this._lonLat);\n        this.setVisibility(this._visibility);\n        this.select(\".og-popup-close\")!.addEventListener(\"click\", () => {\n            this.hide();\n        });\n\n        return this;\n    }\n\n    public setVisibility(visibility: boolean): this {\n        if (visibility) {\n            this.show();\n        } else {\n            this.hide();\n        }\n        return this;\n    }\n\n    public getContainer(): HTMLElement | null {\n        return this.$content;\n    }\n\n    public getToolbarContainer(): HTMLElement {\n        return this.select(\".og-popup-toolbar\")!;\n    }\n\n    public show(): this {\n        this._visibility = true;\n        if (this._planet) {\n            this._planet.events.on(\"draw\", this._updatePosition, this);\n            this.appendTo(this._planet.renderer!.div as HTMLElement);\n            this.events.dispatch(this.events.open, this);\n        }\n        return this;\n    }\n\n    public hide(): this {\n        this._visibility = false;\n        if (this.el && this.el.parentNode) {\n            this._planet.events.off(\"draw\", this._updatePosition);\n            this.el.parentNode.removeChild(this.el);\n            this.events.dispatch(this.events.close, this);\n        }\n        return this;\n    }\n\n    public setCartesian3v(cart: Vec3, height: number = 0): this {\n        this._cartPos = cart;\n\n        if (this._planet) {\n            let cam = this._planet.camera;\n            let f = this._planet.ellipsoid.equatorialSize + height,\n                g = cam._lonLat.height;\n\n            let look = cart.sub(cam.eye),\n                v = Math.sqrt((f + g) * (f + g) - f * f);\n\n            if (v > look.length() && cam.getForward().dot(look.normalize()) > 0.0) {\n                this.el!.style.display = \"block\";\n                this.setScreen(cam.project(cart));\n            } else {\n                this.el!.style.display = \"none\";\n            }\n        }\n        return this;\n    }\n\n    public setTitle(html: string) {\n        if (this.$title) {\n            this.$title.innerHTML = html;\n        }\n    }\n\n    public setLonLat(lonLat: LonLat) {\n        this._lonLat = lonLat;\n        if (this._planet) {\n            this.setCartesian3v(this._planet.ellipsoid.lonLatToCartesian(lonLat), lonLat.height);\n        }\n    }\n\n    public setContent(content?: string | HTMLElement | null) {\n        if (content) {\n            this.clear();\n            this._content = content;\n            if (this.$content) {\n                if (typeof content === \"string\") {\n                    this.$content.innerHTML = content;\n                } else {\n                    this.$content.appendChild(content);\n                }\n            }\n        }\n    }\n\n    public clear() {\n        this._content = null;\n        if (this.$content) {\n            this.$content.innerHTML = \"\";\n        }\n    }\n}\n\nexport {Popup};\n","import {Extent} from \"../Extent\";\nimport {Node} from \"../quadTree/Node\";\nimport {Planet} from \"../scene/Planet\";\nimport {SegmentLonLat} from \"./SegmentLonLat\";\nimport {TILEGROUP_COMMON} from \"./Segment\";\n\nexport class SegmentLonLatWgs84 extends SegmentLonLat {\n    constructor(node: Node, planet: Planet, tileZoom: number, extent: Extent) {\n        super(node, planet, tileZoom, extent);\n        this.isPole = false;\n        this._tileGroup = TILEGROUP_COMMON;\n    }\n\n    protected override _getMaxZoom(): number {\n        return 150;\n    }\n\n    protected override _assignTileYIndexes(extent: Extent) {\n        this.tileY = Math.round((90.0 - extent.northEast.lat) / (extent.northEast.lat - extent.southWest.lat));\n        this.tileYN = this.tileY - 1;\n        this.tileYS = this.tileY + 1;\n    }\n\n    protected override _assignTileXIndexes(extent: Extent) {\n        this.tileX = Math.round(\n            Math.abs(-180.0 - extent.southWest.lon) / (extent.northEast.lon - extent.southWest.lon)\n        );\n\n        let p2 = (1 << this.tileZoom) * 2;\n        this.tileXE = (this.tileX + 1) % p2;\n        this.tileXW = (p2 + this.tileX - 1) % p2;\n    }\n}","import * as quadTree from \"../quadTree/quadTree\";\nimport {Extent} from \"../Extent\";\nimport {EPSG4326} from \"../proj/EPSG4326\";\nimport {Node} from \"../quadTree/Node\";\nimport {Planet} from \"../scene/Planet\";\nimport {SegmentLonLatWgs84} from \"../segment/SegmentLonLatWgs84\";\nimport {QuadTreeStrategy} from \"./QuadTreeStrategy\";\n\n\nexport class MarsQuadTreeStrategy extends QuadTreeStrategy {\n    constructor(planet: Planet) {\n        super(planet, \"Mars\", EPSG4326);\n    }\n\n    public override init() {\n        let earthQuadTreeSouth = new Node(SegmentLonLatWgs84, this.planet, quadTree.NW, null, 0, 0,\n            Extent.createFromArray([-180, -90, 0, 90])\n        );\n        let earthQuadTreeWest = new Node(SegmentLonLatWgs84, this.planet, quadTree.NW, null, 0, 0,\n            Extent.createFromArray([0, -90, 180, 90])\n        );\n        this._quadTreeList.push(earthQuadTreeSouth);\n        this._quadTreeList.push(earthQuadTreeWest);\n    }\n}","import * as quadTree from \"../quadTree/quadTree\";\nimport {Extent} from \"../Extent\";\nimport {EPSG4326} from \"../proj/EPSG4326\";\nimport {Node} from \"../quadTree/Node\";\nimport {Planet} from \"../scene/Planet\";\nimport {SegmentLonLatWgs84} from \"../segment/SegmentLonLatWgs84\";\nimport {QuadTreeStrategy} from \"./QuadTreeStrategy\";\n\nexport class Wgs84QuadTreeStrategy extends QuadTreeStrategy {\n    constructor(planet: Planet) {\n        super(planet, \"wgs84\", EPSG4326);\n    }\n\n    public override init() {\n\n        let wgs84QuadTree = new Node(SegmentLonLatWgs84, this.planet, quadTree.NW, null, 0, 0,\n            Extent.createFromArray([-180, -90, 180, 90])\n        );\n\n        this._quadTreeList.push(wgs84QuadTree);\n    }\n}","import {EarthQuadTreeStrategy} from \"./EarthQuadTreeStrategy\";\nimport {MarsQuadTreeStrategy} from \"./MarsQuadTreeStrategy\";\nimport {EPSG4326QuadTreeStrategy} from \"./EPSG4326QuadTreeStrategy\";\nimport {QuadTreeStrategy} from \"./QuadTreeStrategy\";\nimport {Wgs84QuadTreeStrategy} from \"./Wgs84QuadTreeStrategy\";\n\nconst quadTreeStrategyType = {\n    epsg4326: EPSG4326QuadTreeStrategy,\n    earth: EarthQuadTreeStrategy,\n    mars: MarsQuadTreeStrategy,\n    wgs84: Wgs84QuadTreeStrategy\n}\n\nexport {quadTreeStrategyType, QuadTreeStrategy, Wgs84QuadTreeStrategy, MarsQuadTreeStrategy, EarthQuadTreeStrategy};\n","import * as quadTree from \"../quadTree/quadTree\";\nimport {Extent} from \"../Extent\";\nimport {EPSG4326} from \"../proj/EPSG4326\";\nimport {Node} from \"../quadTree/Node\";\nimport {Planet} from \"../scene/Planet\";\nimport {QuadTreeStrategy} from \"./QuadTreeStrategy\";\nimport {SegmentLonLatWgs84} from \"../segment/SegmentLonLatWgs84\";\n\nexport class EPSG4326QuadTreeStrategy extends QuadTreeStrategy {\n    constructor(planet: Planet) {\n        super(planet, \"EPSG4326\", EPSG4326);\n    }\n\n    public override init() {\n        let earthQuadTreeSouth = new Node(SegmentLonLatWgs84, this.planet, quadTree.NW, null, 0, 0,\n            Extent.createFromArray([-180, -90, 0, 90])\n        );\n        let earthQuadTreeWest = new Node(SegmentLonLatWgs84, this.planet, quadTree.NW, null, 0, 0,\n            Extent.createFromArray([0, -90, 180, 90])\n        );\n        this._quadTreeList.push(earthQuadTreeSouth);\n        this._quadTreeList.push(earthQuadTreeWest);\n    }\n}"],"names":["TWO_PI","Math","PI","PI_TWO","MAX_FLOAT","Number","MAX_VALUE","LOG2","log","MAX32","MAX","MIN","RADIANS","DEGREES","DEGREES_DOUBLE","RADIANS_HALF","SQRT_HALF","sqrt","EPS5","EPS10","EPS12","EPS14","clamp","number","min","max","isPowerOfTwo","x","nextHighestPowerOfTwo","maxValue","i","randomi","floor","random","mod","m","n","zeroTwoPI","a","res","abs","step","edge","frac","mx","exp2","pow","lerp","t","h1","h0","cube","f","square","rev","degrees","angle","p0","p1","p2","p3","u","tt","uu","uuu","ttt","scaleTo","addA","d","s","p","b","base","lon","x0","err","maxIter","x2","HALF_PI","INV_PI_BY_180","INV_PI_BY_360","PI_BY_360","INV_PI_BY_180_HALF_PI","LonLat","constructor","lat","height","this","isZero","join","arr","length","ai","createFromArray","toArray","lonLat","forwardMercator","mercator.POLE_BY_180","tan","mercator.POLE_BY_PI","forwardMercatorRes","inverseMercator","y","mercator.INV_POLE_BY_180","atan","exp","mercator.PI_BY_POLE","set","copy","clone","forwardMercatorEPS01","equal","POLE","POLE2","PI_BY_POLE","POLE_BY_PI","POLE_BY_180","INV_POLE_BY_180","PI_BY_180","POLE_DOUBLE","ONE_BY_POLE_DOUBLE","forward","forward_lon","forward_lat","inverse_lat","getTileExtent","z","size","sw","Extent","MAX_LAT","MIN_LAT","lonlatArr","push","zoom","cos","ne","southWest","northEast","createByCoordinates","lonmin","math.MAX","lonmax","math.MIN","latmin","latmax","vi","createByCoordinatesArr","fromTile","width","mercator.POLE_DOUBLE","H","lnSize","ltSize","left","top","right","setByCoordinates","isInside","lonlat","overlaps","e","getWidth","getHeight","getCenter","getNorthWest","getNorthEast","getSouthWest","getSouthEast","getNorth","getEast","getWest","getSouth","equals","extent","getCartesianBounds","ellipsoid","xmin","xmax","ymin","ymax","zmin","zmax","v","coord","lonLatToCartesian","toString","toFixed","Mat3","_m","transposeTo","setIdentity","mulVec","g","Vec3","toMatrix4","Mat4","Vec4","w","identity","fromVec","toVec3","toArray3","subA","scale","affinity","iw","getStep","getFrac","dot","toMatrix3","mulVec3","mulVec4","toInverseMatrix3","c","h","j","k","l","o","inverseTo","r","A","B","C","D","E","q","mul","F","G","translate","translateToPosition","rotate","sin","rot","setRotation","rotateBetweenVectors","Quat","getRotationBetweenVectors","getMat4","setPerspective","bottom","near","far","setOrtho","lr","bt","nf","eulerToMatrix","ax","ay","az","ad","bd","mat","IDENTITY","xRotation","yRotation","zRotation","axisAngleToQuat","axis","getNormal","half_angle","sin_a","getLookRotation","up","negate","cross","normalize","fd","getLookAtSourceDest","sourcePoint","destPoint","forwardVector","FORWARD","UP","rotAngle","acos","rotAxis","getRotationBetweenVectorsRes","getRotationBetweenVectorsUp","source","dest","clear","add","sub","toVec","setFromSphericalCoords","cos_a","sin_lat","cos_lat","sin_long","cos_long","setLookRotation","toSphericalCoords","tx","ty","tz","asin","atan2","alpha","setFromAxisAngle","getAxisAngle","vl","ivl","setFromEulerAngles","pitch","yaw","roll","ex","math.RADIANS_HALF","ey","ez","cr","cp","cy","sr","sp","sy","cpcy","spsy","getEulerAngles","sqy","setFromMatrix4","tr","nxt","out","xs","ys","zs","wx","wy","wz","xx","xy","xz","yy","yz","zz","getMat3","mulA","conjugate","inverse","magnitude2","magnitude","isEqual","matching","slerp","omega","cosom","sinom","scale0","scale1","aw","bx","by","bz","bw","getRoll","reprojectAxis","fTy","fTz","fTwz","fTxy","fTyy","fTzz","getPitch","fTx","fTwx","fTxx","fTyz","getYaw","fTwy","fTxz","DOWN","RIGHT","LEFT","BACKWARD","ZERO","UNIT_X","UNIT_Y","UNIT_Z","NORTH","doubleToTwoFloats","high","low","doubleHigh","fround","doubleToTwoFloat32Array","length2","v1","v2","noncollinear","Boolean","proj_b_to_plane","def","proj_b_to_a","orthoNormalize","normal","tangent","div","divA","toVec4","projToVec","getQuat","vec","dotArr","point3","normalNegate","normalNegateScale","normalScale","distance","dx","dy","dz","distance2","negateTo","projToRay","pos","direction","smerp","one_d","LERP_DELTA","getRotationTo","fallbackAxis","v0","invs","Vec2","toVector3","point2","colorTable","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","getDefault","param","undefined","isEmpty","isUndef","obj","_stampCounter","stamp","_openglobus_id","isString","String","htmlColorToRgba","htmlColor","opacity","hColor","shorthandRegex","hex","replace","result","exec","parseInt","split","parseFloat","htmlColorToFloat32Array","Float32Array","htmlColorToRgb","stringTemplate","template","params","key","parseHTML","htmlStr","document","createElement","innerHTML","domArr","childNodes","removeChild","print2d","id","text","el","getElementById","classList","body","appendChild","style","defaultString","str","trim","createVector3","Array","createColorRGBA","createColorRGB","createExtent","createLonLat","binarySearchFast","start","end","binarySearch","ar","compare_fn","cmp","binaryInsert","splice","getLinesIntersectionLonLat","start1","end1","start2","end2","isSegment","dir1","dir2","a1","b1","d1","a2","b2","d2","seg1_line2_start","seg1_line2_end","seg2_line1_start","seg2_line1_end","castType","string","date","Date","datetime","time","integer","float","boolean","toLowerCase","isNaN","base64toBlob","base64Data","contentType","sliceSize","byteCharacters","atob","bytesLength","slicesCount","ceil","byteArrays","sliceIndex","begin","bytes","offset","charCodeAt","Uint8Array","Blob","type","throttle","func","limit","skip","lastFunc","lastRan","args","arguments","clearTimeout","setTimeout","now","apply","concatTypedArrays","concatArrays","ArrayBuffer","isView","makeArrayTyped","ctor","typedArr","makeArray","from","spliceArray","starting","deleteCount","spliceTypedArray","newSize","splicedArray","subarray","getMatrixSubArray64","sourceArr","gridSize","i0","j0","size_1","i0size","j0size","Float64Array","vInd","ind","getMatrixSubArray32","getMatrixSubArrayBoundsExt","sourceArrHigh","sourceArrLow","noDataVertices","outArr","outArrHigh","outArrLow","outBounds","outNoDataVertices","nInd","indBy3","cloneArray","items","map","item","isArray","async","loadImage","url","Promise","resolve","image","Image","addEventListener","src","crossOrigin","isImageLoaded","complete","naturalHeight","getUrlParam","paramName","URLSearchParams","location","search","get","block","fQ11","fQ21","fQ12","fQ22","x1","y1","y2","round","rgbaData","outCurrenElevations","outChildrenElevations","destSize","destSizeOne","sourceSize","dt","rightHeigh","bottomHeigh","currIndex","sourceDataLength","tileX","tileY","destArr","ii","jj","destIndex","middleHeight","rightindex","bottomindex","rightBottomindex","defVal","xmlToJson","xml","nodeType","attributes","attribute","nodeName","nodeValue","hasChildNodes","old","SECONDS_PER_MILLISECOND","MILLISECONDS_PER_SECOND","SECONDS_PER_MINUTE","ONE_BY_SECONDS_PER_MINUTE","ONE_BY_HOURS_PER_DAY","SECONDS_PER_HOUR","ONE_BY_SECONDS_PER_HOUR","SECONDS_PER_12_HOURS","MINUTES_PER_DAY","SECONDS_PER_DAY","MILLISECONDS_PER_DAY","ONE_BY_MILLISECONDS_PER_DAY","ONE_BY_SECONDS_PER_DAY","J2000","getDayNumber","year","month","day","DateToUTC","dayNumber","getUTCFullYear","getUTCMonth","getUTCDate","hour","getUTCHours","secondsOfDay","getUTCSeconds","getUTCMinutes","getUTCMilliseconds","extraDays","UTCtoTAI","jd","leapSeconds","leapSecondsTable","index","TAItoUTC","tai","diff","UTCtoDate","utc","julianDayNumber","L","N","I","J","remainingSeconds","minute","second","millisecond","UTC","addMilliseconds","milliseconds","addSeconds","seconds","__ls","J2000TAI","console","trace","days","hours","minutes","Box","boundsArr","vertices","setFromBoundsArr","bbox","len","bounds","setFromExtent","Sphere","radius","center","setFromBounds","createEvents","methodNames","sender","Events","eventNames","__id","__counter__","_eventNames","registerNames","_sender","_stopPropagation","_stampCache","bindSender","active","handlers","_getStamp","name","ogid","_stamp","st","on","callback","priority","bind","_openglobus_priority","off","indexToRemove","dispatch","event","slice","stopPropagation","VIEW_EVENTS","View","options","events","model","parent","_classList","getHTML","insertAfter","newNodes","referenceNode","parentNode","insertBefore","nextSibling","view","render","HTMLElement","appendTo","node","clean","firstPosition","beforeRender","afterRender","renderTemplate","select","queryStr","querySelector","selectRemove","selectAll","querySelectorAll","remove","BUTTON_EVENTS","Button","super","icon","title","_onMouseDown","preventDefault","mousedown","_onMouseUp","mouseup","_onTouchStart","touchstart","_onTouchEnd","touchend","_onTouchCancel","touchcancel","_onMouseClick","_mouseClickHandler","$icon","$text","__og_button__","_initEvents","click","_clearEvents","removeEventListener","Control","_name","planet","_initialized","renderer","autoActivate","_active","_deferredActive","oninit","onadd","onremove","onactivate","ondeactivate","addTo","controls","isInitialized","activate","deactivate","isActive","control","CompassButton","_heading","_svg","btn","_onClick","_draw","getCartesianFromPixelTerrain","handler","flyCartesian","camera","eye","look","setHeading","getHeading","heading","transform","CLOSE_ICON","DIALOG_EVENTS","Dialog","display","visible","resize","resizable","minHeight","maxHeight","minWidth","maxWidth","_onCloseBtnClick","close","_onMouseDownAll","bringToFront","_startDragging","_startPosX","clientX","_startPosY","clientY","_onMouseMove","setPosition","offsetLeft","offsetTop","_clearDragging","$header","$title","$container","$buttons","_closeBtn","useHide","_visibility","setContainer","container","zIndex","__zIndex__","_initButtons","show","visibility","hide","setVisibility","contains","dragstart","dragend","TOGGLEBUTTON_EVENTS","ToggleButton","preventClick","setActive","_isActive","_toggle","change","toggle","OPSIDE","NEIGHBOUR","OPPART","PARTOFFSET","Material","segment","layer","isReady","isLoading","texture","pickingMask","textureExists","appliedNodeId","appliedNode","texOffset","loadingAttempts","_updateTexture","_updatePickingMask","pickingReady","abortLoading","abortMaterialLoading","_createTexture","img","_planet","createTexture","_internalFormat","applyImage","initialized","nodeId","applyTexture","textureNotExists","clearMaterial","FADING_RATIO","Layer","isVector","LAYER_EVENTS","properties","displayInLayerSwitcher","_hasImageryTiles","_opacity","minZoom","maxZoom","_attribution","attribution","_zIndex","_isBaseLayer","isBaseLayer","_defaultTextures","defaultTextures","_fading","fading","_fadingFactor","_fadingOpacity","_height","_extent","_textureFilter","textureFilter","toUpperCase","_isSRGB","isSRGB","_extentMerc","setExtent","utils.createExtent","_pickingColor","_pickingEnabled","pickingEnabled","_isPreloadDone","_preLoadZoomLevels","preLoadZoomLevels","_ambient","_diffuse","_specular","ambient","utils.createColorRGB","diffuse","specular","shininess","nightTextureCoefficient","rgb","getTMS","getTileIndex","instanceName","rendererEvents","picking","hasImageryTiles","getID","_id","_assignPlanet","_layers","gl","SRGB8_ALPHA8","RGBA8","_onLayerVisibilityChanged","setBaseLayer","layeradd","updateVisibleLayers","_bindPicking","_preLoad","isIdle","_terrainCompletedActivated","assignPickingColor","clearPickingColor","layerremove","_clearLayerMaterial","setAttribution","html","updateAttributionsList","getAttribution","setHeight","setZIndex","getZIndex","visibleTileLayers","baseLayer","visibilitychange","_forceMaterialApply","pm","materials","createMaterial","_renderCompleted","applyMaterial","material","loadMaterial","forceLoading","isForced","_preLoadRecursive","tileZoom","includes","nodes","quadTreeStrategy","quadTreeList","getVisibility","mercator.MIN_LAT","mercator.MAX_LAT","_correctFullExtent","getExtent","getExtentMerc","screenOpacity","_refreshFadingOpacity","getViewExtent","maxCurrZoom","minCurrZoom","redraw","clearLayerMaterial","CANVASTILES_EVENTS","CanvasTiles","animated","minNativeZoom","maxNativeZoom","_counter","_pendingsQueue","drawTile","_onLoadend_","_onLoadend","layerloadend","forEach","qi","seg","_isNorth","solidTextureOne","solidTextureTwo","transparentTexture","layerLock","isFree","__requestsCounter","MAX_REQUESTS","_exec","load","requestAnimationFrame","canvas","_correctCounter","_dequeueRequest","pmat","_whilePendings","loadend","pop","getState","pn","parentTextureExists","passReady","mId","psegm","pnm","dZ2","default","deleteTexture","BUTTONGROUP_EVENTS","ButtonGroup","_onChange","_buttons","bi","buttons","_bindButton","button","BaseWorker","numWorkers","program","_sourceId","_source","Map","_pendingQueue","_numWorkers","_workerQueue","setProgram","check","make","Worker","URL","createObjectURL","onmessage","_onMessage","unshift","target","data","destroy","terminate","pendingQueue","LOCK_UPDATE","LOCK_FREE","LabelWorker","LABEL_PROGRAM","label","_lockId","workerCallback","delete","_entityCollection","labelData","serializeWorkerData","postMessage","buffer","BaseBillboard","_position","utils.createVector3","position","_positionHigh","_positionLow","_rotation","rotation","_color","utils.createColorRGBA","color","_alignedAxis","alignedAxis","_offset","_entity","_handler","_handlerIndex","_isReady","setPositionArr","setPosition3v","getPosition","setOffset","setOffsetArr","setOffset3v","getOffset","setRotationArr","getRotation","setOpacity","setRgbaArr","setColor","setColor4v","setColorHTML","utils.htmlColorToRgba","getColor","setAlignedAxis","setAlignedAxisArr","setAlignedAxis3v","getAlignedAxis","setPickingColor3v","setPickingColorArr","workerId","Billboard","_src","_image","_scale","_width","setSrc","bh","rn","renderNode","ta","billboardsTextureAtlas","that","__nodeIndex","setTexCoordArr","texCoords","addImage","updateBillboardsTexCoords","getSrc","setImage","getImage","setSize","setSizeArr","getSize","setWidth","GeometryType","POINT","LINESTRING","POLYGON","MULTIPOLYGON","MULTILINESTRING","Geometry","_polyVerticesHighMerc","_polyVerticesLowMerc","_polyVerticesLength","_polyIndexesLength","_polyVerticesHandlerIndex","_polyIndexesHandlerIndex","_lineVerticesHighMerc","_lineVerticesLowMerc","_lineVerticesLength","_lineOrdersLength","_lineIndexesLength","_lineColorsLength","_lineThicknessLength","_lineVerticesHandlerIndex","_lineOrdersHandlerIndex","_lineIndexesHandlerIndex","_lineThicknessHandlerIndex","_lineColorsHandlerIndex","_type","getType","_coordinates","coordinates","_style","fillColor","lineColor","strokeColor","lineWidth","strokeWidth","_pickingReady","typeStr","geometryObj","outCoordinates","ci","cij","pi","pij","pijk","setGeometry","geoJson","setFillColor","setPolyColorArr","setFillColor4v","rgba","setStrokeColor","setLineStrokeColorArr","setLineColor","setLineColorArr","setStrokeColor4v","setLineColor4v","setStrokeOpacity","setLineOpacity","setStrokeWidth","setLineStrokeArr","setLineWidth","setLineThicknessArr","setFillOpacity","setGeometryVisibility","Line2","getParallel","getIntersection","L0","L1","intersects","Line3","getMagnitude","getSphereIntersection","sphere","cx","cz","px","py","pz","vx","vy","vz","t1","solution1","t2","solution2","line","res2","p13","p43","p21","d1343","d4321","d1321","d4343","denom","mua","mub","getNearestDistancePoint","point","mag","Plane","pp","getProjection","getProjectionPoint","vh","dist","Pn1","Pn2","maxc","iP","Ray","origin","OUTSIDE","INSIDE","INPLANE","AWAY","getPoint","hitTriangle","w0","uv","vv","wu","wv","hitPlane","hitSphere","vpc","pc","lc","di1","cpcl","hitBox","box","GeoObject","_tag","tag","instanced","_pitch","_yaw","_roll","_direction","_tagData","_tagDataIndex","_object3d","object3d","_qNorthFrame","getDirection","normals","indices","updateDirection","setYaw","setPitch","setPitchRollArr","setRoll","setScale","setScaleArr","getScale","getNorthFrameRotation","qq","setDirectionArr","ALIGN","STR2ALIGN","Label","_text","_face","utils.defaultString","face","_size","_outline","outline","_outlineColor","outlineColor","_align","align","_fontIndex","_fontAtlas","_isRTL","isRTL","setText","getText","setAlign","getAlign","setFace","update","getFace","setOutline","setOutlineArr","getOutline","setOutlineOpacity","setOutlineColor","setOutlineColorArr","setOutlineColor4v","setOutlineColorHTML","getOutlineColor","getOutlineOpacity","fontIndex","getFontIndex","_applyFontIndex","setFontIndexArr","assignFontAtlas","fontAtlas","_maxLetters","PointCloud","pointSize","pickingScale","_renderNode","_points","_coordinatesData","_colorData","_pickingColorData","_coordinatesBuffer","_colorBuffer","_pickingColorBuffer","_buffersUpdateCallbacks","_createCoordinatesBuffer","_createColorBuffer","_createPickingColorBuffer","_changedBuffers","points","setPoints","_deleteBuffers","setRenderNode","_setPickingColors","col","pointCloud","setPointPosition","setPointColor","addPoints","addPoint","removePoint","insertPoint","draw","_update","sh","programs","_program","sha","shu","uniforms","uniformMatrix4fv","projectionViewMatrix","activeCamera","getProjectionViewMatrix","uniform1f","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","itemSize","FLOAT","colors","drawArrays","POINTS","numItems","drawPicking","call","deleteBuffer","createArrayBuffer","Polyline","altitude","thickness","_defaultColor","_closedLine","isClosed","_path3v","_pathLengths","_pathLonLat","_pathLonLatMerc","_pathColors","pathColors","_verticesHigh","_verticesLow","_orders","_indexes","_colors","_verticesHighBuffer","_verticesLowBuffer","_ordersBuffer","_indexesBuffer","_colorsBuffer","_createVerticesBuffer","_createIndexBuffer","_createColorsBuffer","pathLonLat","setPathLonLat","path3v","setPath3v","_refresh","appendLineData3v","defaultColor","outVerticesHigh","outVerticesLow","outOrders","outIndexes","outTransformedPathLonLat","outPath3v","outTransformedPathMerc","outExtent","outColors","v_high","v_low","path","pathColors_j","last","startIndex","cur","cartesianToLonLat","first","appendPoint3v","point3v","pathColors_last","transformedPathLonLat","transformedPathMerc","appendLineDataLonLat","outTransformedPathCartesian","outPathLonLat","cartesian","_setEqualPath3v","pji","l1","_setEqualPathLonLat","setPointLonLat","segmentIndex","setPoint3v","skipLonLat","kk","_resizePathLengths","removeSegment","concat","multiLineIndex","insertPoint3v","multilineIndex","cc","addPoint3v","skipEllipsoid","addPointLonLat","_clearData","setThickness","getThickness","_createDataLonLat","_createData3v","pathLonlat","getPath3v","getPathLonLat","getPathColors","setPathColors","slen","forceEqual","polyline_screen","ec","disable","CULL_FACE","depthOffset","polygonOffsetUnits","proj","getProjectionMatrix","getViewMatrix","uniform3fv","eyePositionHigh","eyeHigh","eyePositionLow","eyeLow","uniform2fv","uFloatParams","_planetRadius2","_tanViewAngle_hradOneByHeight","viewport","prevHigh","currentHigh","nextHigh","prevLow","currentLow","nextLow","order","ELEMENT_ARRAY_BUFFER","drawElements","TRIANGLE_STRIP","UNSIGNED_INT","enable","polyline_picking","uniform4fv","createStreamArrayBuffer","setStreamArrayBuffer","Uint32Array","createElementArrayBuffer","_thickness","_startPosition","startPosition","_startPositionHigh","_startPositionLow","_endPosition","endPosition","_endPositionHigh","_endPositionLow","_startColor","startColor","_endColor","endColor","setStartPosition","setStartPositionArr","getLength","setStartPosition3v","setEndPosition","setEndPositionArr","setEndPosition3v","setThicknessArr","setColors4v","setColorsHTML","getStartPosition","getEndPosition","_tempHigh","_tempLow","Strip","_indexBuffer","_path","_gridSize","setPath","_createBuffers","strip","viewMatrix","projectionMatrix","uColor","uOpacity","aVertexPositionHigh","aVertexPositionLow","addEdge3v","vHigh","vLow","gs","gs1","di","p02","dj","p01","p23","ind3","setEdge3v","vSize","prev","p4","p5","next","p35","p24","ij","p45","warn","removeEdge","setGridSize","getPath","insertEdge3v","Entity","childrenNodes","_cartesian","_lonLat","utils.createLonLat","_lonLatMerc","_altitude","_entityCollectionIndex","_layer","_layerIndex","_featureConstructorArray","billboard","setBillboard","setLabel","polyline","setPolyline","setPointCloud","geometry","geoObject","setGeoObject","setStrip","ray","setRay","_createOptionFeature","entity","layerIndex","featureName","getCollectionIndex","collection","rightNow","removeEntity","setCartesian3v","setCartesian","_setCartesian3vSilent","getLonLat","setLonLat","lonLatToCartesianRes","setLonLat2","setAltitude","getAltitude","getCartesian","billboardHandler","labelHandler","rayHandler","polylineHandler","pointCloudHandler","geoObjectHandler","stripHandler","appendChildEntity","setPickingColor","objParser","objPositions","objTexcoords","objNormals","objVertexData","vertexData","materialLibs","geometries","groups","object","newGeometry","addVertex","vert","objIndexStr","objIndex","keywords","parts","vn","vt","textures","numTriangles","tri","mtllib","unparsedArgs","usemtl","keywordRE","lines","lineNo","startsWith","keyword","Object","fromEntries","entries","filter","array","transformLeftToRightCoordinateSystem","objData","convertedGeometries","cosA","sinA","nx","ny","nz","rotateObject","convertedVertices","convertedNormals","convertedTextures","Object3d","_vertices","_numVertices","_texCoords","centering","_indices","_normals","getNormals","verts","min_x","min_y","min_z","max_x","max_y","max_z","c_x","c_y","c_z","numVertices","centroid","minX","minY","minZ","maxX","maxY","maxZ","t03","t13","t23","v0_x","v0_y","v0_z","vv0_x","vv0_y","vv0_z","vv1_x","vv1_y","vv1_z","n_x","n_y","n_z","createSphere","lonBands","latBands","offsetX","offsetY","offsetZ","latNumber","theta","sinTheta","cosTheta","longNumber","phi","sinPhi","createDisc","radialSegments","isTop","thetaLength","sign","centerIndexStart","centerIndexEnd","createCylinder","radiusTop","radiusBottom","heightSegments","isBottom","indexArray","slope","indexRow","cap","createCube","depth","xOffset","yOffset","zOffset","createArrow","back","front","loadObj","fetch","mode","then","response","catch","BaseNode","topNode","_dictionary","addNode","_clear","getNodeByName","RenderNode","drawMode","lightEnabled","_lights","_lightsNames","_lightsPositions","_lightsParamsv","_lightsParamsf","entityCollections","_pickingId","assign","addPickingCallback","_entityCollectionPickingCallback","initialize","bindRenderNode","init","renderNodes","_renderNodesArr","removePickingCallback","addEntityCollection","entityCollection","isHidden","removeEntityCollection","addLight","light","getLightByName","li","indexOf","removeLight","preDrawNode","_preDrawNodes","drawNode","_drawNodes","setDrawMode","transformLights","tp","refreshTexCoordsArr","frame","preFrame","drawEntityCollections","enqueueEntityCollectionsToDraw","drawPickingEntityCollections","cons","_container","logErr","logWrn","_declarations","types","variableHandlers","MAT4","variable","_pName","value","MAT3","uniformMatrix3fv","INT","uniform1i","VEC2","VEC3","VEC4","SAMPLER2D","pgl","activeTexture","TEXTURE0","_textureID","bindTexture","TEXTURE_2D","SAMPLERCUBE","TEXTURE_CUBE_MAP","SAMPLER2DARRAY","samplerArr","Int32Array","uniform1iv","INTXX","FLOATXX","uniform1fv","vertexAttrib1f","vertexAttrib2fv","vertexAttrib3fv","itemTypes","Program","_attributes","_uniforms","vertexShader","fragmentShader","_variables","_p","_attribArrays","_attribDivisor","vertexAttribDivisor","drawElementsInstanced","itemType","normalized","use","useProgram","drawIndexBuffer","UNSIGNED_SHORT","_getShaderCompileStatus","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","_createVertexShader","createShader","VERTEX_SHADER","_createFragmentShader","FRAGMENT_SHADER","disableAttribArrays","disableVertexAttribArray","enableAttribArrays","enableVertexAttribArray","deleteProgram","createProgram","fs","vs","attachShader","linkProgram","ext","getExtension","drawElementsInstancedANGLE","vertexAttribDivisorANGLE","getProgramParameter","LINK_STATUS","getProgramInfoLog","itemTypeStr","divisor","getAttribLocation","loc","getUniformLocation","detachShader","deleteShader","PROJECT","ROTATE2D","BaseBillboardHandler","_renderer","_billboards","_positionHighBuffer","_positionLowBuffer","_sizeBuffer","_offsetBuffer","_rgbaBuffer","_rotationBuffer","_texCoordBuffer","_vertexBuffer","_texCoordArr","_vertexArr","_positionHighArr","_positionLowArr","_sizeArr","_offsetArr","_rgbaArr","_rotationArr","_pickingColorArr","createPickingColorBuffer","createPositionBuffer","createSizeBuffer","createOffsetBuffer","createRgbaBuffer","createRotationBuffer","createTexCoordBuffer","createVertexBuffer","concArr","curr","initProgram","addProgram","u_texture","planetRadius","uScaleByDistance","a_vertices","a_texCoord","a_positionsHigh","a_positionsLow","a_offset","a_size","a_rotation","a_rgba","billboardPicking","setRenderer","refresh","_removeBillboards","_displayPASS","scaleByDistance","clientWidth","clientHeight","TRIANGLES","_pickingPASS","reindexBillboardsArray","_removeBillboard","positionHigh","positionLow","tcoordArr","vArr","setVertexArr","vertexArr","BillboardHandler","props","_addBillboardToArrays","billboards","imageNode","setParametersToArray","InstanceData","_geoObjectHandler","geoObjects","numInstances","_texture","_textureSrc","_pitchRollArr","_directionArr","_normalsArr","_indicesArr","_visibleArr","_pitchRollBuffer","_directionBuffer","_normalsBuffer","_indicesBuffer","_visibleBuffer","createDirectionBuffer","createNormalsBuffer","createIndicesBuffer","createPitchRollBuffer","createVisibleBuffer","createTextureDefault","GeoObjectHandler","_geoObjects","_instanceDataMap","_instanceDataMapValues","_dataTagUpdateQueue","geo_object","lightsPositions","lightsParamsv","lightsParamsf","uTexture","uUseTexture","aVertexPosition","aVertexNormal","aTexCoord","aPositionHigh","aPositionLow","aDirection","aPitchRoll","aColor","aScale","aDispose","geo_object_picking","aPickingColor","_loadDataTagTexture","_addGeoObjectToArray","tagData","values","defaultTexture","tagDataIndex","_updateTag","dataTag","_removeAll","gi","_removeGeoObject","_clearDataTagQueue","tdi","DEFINE","EMPTY","LabelHandler","maxLetters","_gliphParamBuffer","_fontIndexBuffer","_outlineBuffer","_outlineColorBuffer","_gliphParamArr","_fontIndexArr","_outlineArr","_outlineColorArr","createFontIndexBuffer","createOutlineBuffer","createOutlineColorBuffer","fontTextureArr","sdfParamsArr","isOutlinePass","a_outline","a_gliphParam","a_fontIndex","labelPicking","labels","updateFonts","_addLabelToArrays","labelWorker","texCoordArr","gliphParamArr","positionHighArr","positionLowArr","sizeArr","offsetArr","rgbaArr","rotationArr","fontIndexArr","outlineArr","outlineColorArr","pickingColorArr","depthFunc","EQUAL","LESS","ml","fa","atlasesArr","_rtl_","kern","kernings","char","tc","metrics","nWidth","nHeight","nXOffset","nYOffset","nAdvance","xl","yl","zl","setMaxLetters","PointCloudHandler","_pointClouds","_initProgram","_reindexPointCloudArray","PolylineHandler","_polylines","reindexPolylineArray","ls","RayHandler","_rays","_startPositionHighBuffer","_startPositionLowBuffer","_endPositionHighBuffer","_endPositionLowBuffer","_thicknessBuffer","_startPositionHighArr","_startPositionLowArr","_endPositionHighArr","_endPositionLowArr","_thicknessArr","createStartPositionBuffer","createEndPositionBuffer","createThicknessBuffer","rayScreen","resolution","a_startPosHigh","a_startPosLow","a_endPosHigh","a_endPosLow","a_thickness","_removeRays","ri","_addRayToArrays","r0","g0","b0","a0","r1","g1","reindexRaysArray","_removeRay","DYNAMIC_DRAW","StripHandler","_strips","reindexStripArray","EntityCollection","_renderNodeIndex","labelMaxLetters","setPickingEnabled","_entities","math.MAX32","ENTITYCOLLECTION_EVENTS","entities","addEntities","getOpacity","setScaleByDistance","farInvisible","_addRecursively","entityadd","belongs","_removeRecursively","reindexEntitiesArray","entityremove","_removeEntitySilent","createPickingColors","_updateGeodeticCoordinates","updateBillboardsTextureAtlas","updateLabelsFontAtlas","ei","getEntities","each","_clearEntity","EntityCollectionNode","partId","state","count","deferredEntities","_inTheQueue","bsphere","_setExtentBounds","insertEntity","buildTree","_addEntitiesToCollection","_quadNode","_bindEventsDefault","equatorialSize","__setLonLat__","_nodeCapacity","cn","createChildrenNodes","en_nw","en_ne","en_sw","en_se","_nodePtr","size_x","size_y","nd","collectRenderCollectionsPASS1","visibleNodes","renderCollection","_secondPASS","collectRenderCollectionsPASS2","renderingNodeId","cam","altVis","frustum","containsSphere","applyCollection","traverseTree","_renderingNodes","_queueDeferredNode","clampToGround","relativeToGround","alignEntityToTheGround","_renderedNodes","isEntityInside","getEntityTerrainPoint","alt","getSurfaceNormal3v","isVisible","EntityCollectionNodeWGS84","isNorth","_renderingNodesNorth","_renderingNodesSouth","renderingNode","doubleToTwoFloats2","highLowArr","doubleToTwoFloatsV2","highLowVec","earcut","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","list","queue","steiner","getLeftmost","sort","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","sum","signedArea","insertNode","removeNode","again","area","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","qx","Infinity","my","tanMin","findHoleBridge","leftmost","intersectsPolygon","inside","middleInside","q1","q2","Node","an","bp","flatten","holes","dimensions","holeIndex","tempHigh","tempLow","tempHighLow","GeometryHandler","_geometries","_updatedGeometryArr","_updatedGeometry","_removeGeometryExtentArr","_removeGeometryExtents","_polyColors","_polyPickingColors","_polyIndexes","_lineOrders","_lineIndexes","_lineColors","_linePickingColors","_lineThickness","_lineStrokes","_lineStrokeColors","_polyVerticesHighBufferMerc","_polyVerticesLowBufferMerc","_polyColorsBuffer","_polyPickingColorsBuffer","_polyIndexesBuffer","_lineVerticesHighBufferMerc","_lineVerticesLowBufferMerc","_lineColorsBuffer","_linePickingColorsBuffer","_lineThicknessBuffer","_lineStrokesBuffer","_lineStrokeColorsBuffer","_lineOrdersBuffer","_lineIndexesBuffer","createPolyVerticesBuffer","createPolyIndexesBuffer","createPolyColorsBuffer","createLineVerticesBuffer","createLineIndexesBuffer","createLineOrdersBuffer","createLineColorsBuffer","createLineThicknessBuffer","createLineStrokesBuffer","createLineStrokeColorsBuffer","createPolyPickingColorsBuffer","createLinePickingColorsBuffer","appendLineData","pathArr","pickingColor","strokeSize","outPickingColors","outThickness","outStrokeColors","outStrokes","outVerticesHigh2","outVerticesLow2","sc","assignHandler","mercator.forward_lon","mercator.forward_lat","indexes","verticesHigh","verticesLow","cci","dataIndexes","_refreshRecursevely","treeNode","ready","lid","ni","getExtentLonLat","_refreshRecursevelyExt","_refreshPlanetNode","_updatePlanet","ql","needUpdate","polyIndexes","lineIndexes","QueueArray","_array","_popIndex","_shiftIndex","reset","shift","Vector","VECTOR_EVENTS","nodeCapacity","_entitiesConstructor","_labelMaxLetters","_stripEntityCollection","_polylineEntityCollection","_geoObjectEntityCollection","_geometryHandler","_entityCollectionsTree","_entityCollectionsTreeNorth","_entityCollectionsTreeSouth","_deferredEntitiesPendingQueue","setEntities","_proceedEntity","insert","temp","_reindexEntitiesArray","defEntities","removeEntities","entitiesForTree","_createEntityCollectionsTree","ve","mousemove","mouseenter","mouseleave","lclick","rclick","mclick","ldblclick","rdblclick","mdblclick","lup","rup","mup","ldown","rdown","mdown","lhold","rhold","mhold","mousewheel","touchmove","doubletouch","touchleave","touchenter","_collectStripCollectionPASS","_collectPolylineCollectionPASS","rtg","visibleExtent","e_i","coords","c_j","c_j_h","ll","n_k","cart","getTerrainPoint","_collectGeoObjectCollectionPASS","collectVisibleCollections","_visibleNodes","_visibleNodesNorth","_visibleNodesSouth","_execDeferredNode","_vectorTileCreator","notEmpty","POLYGONDRAWINGSCENE_EVENTS","POINTER_OBJ3D","NUM_SEGMENTS","OUTLINE_ALT","CORNER_OPTIONS","CENTER_OPTIONS","OUTLINE_OPTIONS","PolygonDrawingScene","_cornerDblClick","geometryType","getCoordinates","_geometryLayer","_onCornerMouseEnter","cursor","hideGhostPointer","_onCornerMouseLeave","showGhostPointer","_onCenterMouseEnter","_onCenterMouseLeave","_pickedCenter","_pickedCorner","_onLup","mouseNavigation","setGhostPointerPosition","_onCornerLdown","_getLdown","_onCenterLdown","_moveCenterPoint","_moveCornerPoint","_onCornerLdblclick","pickingObject","setCoordinates","_onMouseDblClick","_showGhostPointer","_addNew","_isStartPoint","_cornerLayer","startpoint","_initCoordinates","_startPos","_startClick","_centerLayer","_outlineLayer","_ghostCorner","_ghostOutlineLayer","_insertCornerIndex","corners","bindPlanet","_initGhostLayerPointer","addLayer","startNewPoint","deactivateDoubleClickZoom","stopNewPoint","centers","_clearGhostPointer","_appendCart","groundPos","_updateGhostOutlinePointer","getPixelFromCartesian","_drawCorners","_checkTerrainCollision","_drawCenters","_drawGhostCorner","_tempTerrPoint","_extentLonLat","newCorner","prevCorn","corner","firstCart","prevCart","vecPrev","vecFirst","distPrev","distFirst","prevPath","firstPath","firstCenter","prevCenterCart","firstCenterCart","groundCoords","cartPrev","cartNext","vecNext","distNext","pathPrev","pathNext","prevPolyline","nextPolyline","prevCenter","nextCenter","nextCenterCart","minDist","cCurr","cNext","nPrev","nNext","nGround","midVec","toMid","LineStringDrawingScene","_moveCorner","indexCurrent","indexPrev","indexCenter","cartCurr","vecCurr","distCurr","centerCart","DrawingControl","_drawingScene","activatePolygonDrawing","activateLineStringDrawing","heightMode","ell","msl","gnd","FT_to_M","FT_to_KM","_abbr","_tenth","_convFn","convert","to","val","convertExt","isNotNaN","unitFrom","unitTo","fixed","TYPE_HTML","EarthCoordinates","_TYPE_FUNC","_SHOW_DECIMAL","_SHOW_DEGREE","_showFn","_el","_latSideEl","_lonSideEl","_latValEl","_lonValEl","_heightEl","_altUnitVal","altitudeUnit","_heightModeVal","_altUnit","units","_heightMode","_centerMode","centerMode","deg","sec","_createCenterEl","className","_updateUnits","units.toString","_showHeight","_refreshCoordinates","_grabCoordinates","scrPx","getLonLatFromPixelTerrain","getHeightAboveELL","units.convertExt","getHeightDefault","TouchExt$1","prev_x","prev_y","grabbedPoint","grabbedSpheroid","dX","dY","EarthNavigation","grabbedDir","inertia","_vRot","_hRot","_a","scaleRot","currState","positionState","touches","TouchExt","switchZoomState","wheelDelta","stopRotation","stopFlying","flyLonLat","onMouseWheel","onMouseLeftButtonDown","onMouseLeftButtonClick","onMouseLeftButtonUp","onTouchStart","onTouchEnd","onTouchMove","onDraw","sys","pageX","pageY","unproject","targetPoint","_u","lim","getCartesianFromMouseTerrain","isFlying","mouseState","moving","getUp","leftButtonDown","controlsBag","BASEGEOIMAGE_EVENTS","BaseGeoImage","_projType","_frameWidth","_frameHeight","_sourceReady","_sourceTexture","_materialTexture","_gridBufferLow","_gridBufferHigh","_extentWgs84ParamsHigh","_extentWgs84ParamsLow","_extentMercParamsHigh","_extentMercParamsLow","_refreshFrame","_frameCreated","_sourceCreated","_animate","_ready","_creationProceeding","_isRendering","_extentWgs84","_cornersWgs84","_cornersMerc","_isFullExtent","fullExtent","rendering","_renderingProjType0","setCorners","getCornersLonLat","getCorners","setCornersLonLat","me","_renderingProjType1","_geoImageCreator","_createFrame","tempArr","createEmptyTexture_l","gridBufferArr","createGridBuffer","v0s","v0t","sSize_x","sSize_y","getFrameWidth","getFrameHeight","_createSourceTexture","creator","_framebuffer","geoImageTransform","bindOutputTexture","clearColor","COLOR_BUFFER_BIT","isFullExtent","_texCoordsBuffer","cornersHigh","cornersLow","extentParamsHigh","extentParamsLow","sourceTexture","input","MB_LEFT","MB_RIGHT","MB_MIDDLE","KEY_CTRL","KEY_ALT","KEY_SHIFT","KEY_SPACE","KEY_PGUP","KEY_PGDN","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","KEY_PRINTSCREEN","KEY_EQUALS","KEY_A","KEY_C","KEY_D","KEY_E","KEY_F","KEY_H","KEY_I","KEY_K","KEY_L","KEY_N","KEY_O","KEY_P","KEY_Q","KEY_R","KEY_S","KEY_V","KEY_W","KEY_X","KEY_Z","KEY_PLUS","KEY_F1","KEY_MINUS","KEY_APOSTROPHE","KEY_BACK_SLASH","KEY_MORE","KEY_SLASH","KEY_LESS","KEY_LEFT_SQUARE_BRACKET","KEY_RIGHT_SQUARE_BRACKET","KEY_SINGLE_QUOTE","LAYERANIMATION_EVENTS","SLIDER_EVENTS","Slider","_onResize","_setOffset","_value","$panel","_max","_min","_onMouseWheel","window","_onMouseWheelFF","_onInput","rect","getBoundingClientRect","$pointer","_resizeObserver","ResizeObserver","$label","$progress","$input","observe","Lock","_lock","lock","free","isLocked","Key","MouseNavigation","_deactivate","_shiftBusy","_eye0","pointOnEarth","earthUp","qRot","distDiff","stepsCount","stepsForward","stepIndex","_lmbDoubleClickActive","minSlope","_wheelDirection","_keyLock","getMovePointsFromPixelTerrain","delta","dir","steps","_b","_r","scaled_n","rotArr","eyeArr","breaked","onMouseRightButtonDown","onMouseRightButtonClick","onMouseMove","onMouseLeave","onMouseEnter","onMouseLeftButtonDoubleClick","activateDoubleClickZoom","renderEvents","isKeyPressed","releaseKeys","updateButtonsStates","_normalMapCreator","onShiftFree","maxAlt","maxAltitude","polarSize","minAlt","minAltitude","camAlt","terrainLock","math.RADIANS","rotateHorizontal","rotateVertical","prevEye","sf","distanceFormat","obj3d","LABEL_OPTIONS","RULER_CORNER_OPTIONS","RulerScene","_startLonLat","_anchorLonLat","_cornerEntity","_onLUp","_onCornerLup","_onCornerEnter","_onCornerLeave","_onLdblclick","_preventClick","_onLclick","startLonLat","_timeout","_stopDrawing","_propsLabel","endLonLat","_drawLine","newLonLat","RULERSCENE_EVENTS","_ignoreTerrain","ignoreTerrain","_trackLayer","_labelLayer","_cornersLayer","_trackEntity","_createCorners","_activate","startPos","endPos","initialAzimuth","removeLayer","isCornersPositionChanged","Ruler","_rulerScene","RAYS_OPTIONS","HeightRulerScene","_geoRulerLayer","_rayV","_rayH","_heightLabels","deltaLabel","startLabel","endLabel","startCorner","endCorner","startCornerLonLat","startCornerHeight","endCornerLonLat","endCornerHeight","maxHeightCornerLonLat","minHeightCornerLonLat","deltaHeight","_updateHeightRaysAndLabels","middleLonLat","startHeight","endHeight","HeightRuler","ScaleControl","_template","_minWidth","_maxWidth","_isCenter","isCenter","_mPx","currWidth","_metersInMinSize","_scaleLabelEl","_renderTemplate","_drawScreen","terrain","leftButtonHold","rightButtonHold","ms","s0","getDistanceFromPixel","project","getForward","tempSize","viewAngle","getRight","s1","metersInMinSize","minMeters","innerText","SimpleSkyBackground","_colorOne","_colorTwo","colorOne","colorTwo","iResolution","fov","camPos","earthRadius","_drawBackground","simpleSkyBackground","DEPTH_TEST","screenFramePositionBuffer","getViewAngle","getPolarSize","AU_TO_METERS","getSunPosition","jDate","jd.J2000","M","math.rev","oblecl","math.DEGREES","xequat","yequat","zequat","math.TWO_PI","astro.AU_TO_METERS","LightSource","directional","_shininess","_tempAmbient","_tempDiffuse","_tempSpecular","_tempShininess","setBlack","setAmbient3v","setAmbient","setDiffuse3v","setDiffuse","setSpecular3v","setSpecular","setShininess","Sun","activationHeight","offsetVertical","offsetHorizontal","sunlight","_currDate","_prevDate","_clockPtr","_lightOn","_f","_k","_stopped","stopped","defaultClock","bindClock","clock","currentDate","tu","_vec","_vecPrev","TouchNavigation","_touching","onDoubleTouch","onTouchCancel","t0","pixelRatio","_startTouchOne","middle","earthMiddlePoint","prevAngle","deltaAngle","distanceToPointOnEarth","zoomCur","zoomPrev","rotateAround","panCur","panPrev","panOffset","checkTerrainCollision","ZoomControl","_move","_targetPoint","zoomInBtn","zoomOutBtn","zoomIn","stopZoom","zoomOut","SelectionScene","EVENT_NAMES","_onSelect","onSelect","_autoSelectionHide","autoSelectionHide","_onMouseMove_","_onMouseLdown_","_onMouseLdown","_onMouseLup_","_onMouseLup","direct","createPath","sideA","sideB","dateToStr","showTime","showMilliseconds","MONTHS","getMonth","padStart","drawNotch","ctx","strokeStyle","beginPath","moveTo","lineTo","stroke","drawText","font","fillStyle","baseLine","rotDeg","save","textBaseline","textAlign","fillText","restore","SCALES","TIMELINE_EVENTS","TimelineModel","_current","current","_rangeStart","rangeStart","_rangeEnd","rangeEnd","_range","getTime","_minDate","minDate","_maxDate","maxDate","multiplier","_requestAnimationFrameId","_prevNow","play","performance","_animationFrameCallback","cancelAnimationFrame","_frame","currentTime","range","rangeStartTime","rangeEndTime","MILLISECONDS_TO_SECONDS","TIMELINEVIEW_EVENTS","SCALE_NOTCH_COLOR","TimelineView","_isMouseOver","_canvasEl","pointerPosX","pointerCenterOffsetX","pointerTime","_millisecondsInPixel","_zoom","_isCurrentMouseOver","_isDragging","_clickPosX","_clickTime","_clickRangeStart","_clickRangeEnd","startdrag","_isCurrentDragging","_clickCurrentDate","startdragcurrent","_clickDelay","stopdrag","setcurrent","stopdragcurrent","_onMouseEnter","_onMouseOut","_onCurrentMouseEnter","_onCurrentMouseOut","offsetSec","newCurrent","$controls","_frameEl","_currentEl","_ctx","getContext","_canvasScale","_onResizeObserver_","_onResizeObserver","_pauseBtn","_playBtn","canvasScale","_resize","_drawCurrent","pause","playBack","playback","centerTimeOffset","newRangeStart","newRangeEnd","msPx","timeOffset","getOffsetByTime","_clearCanvas","fillRect","curPosX","scaleData","scaleMs","scalePx","segCount","originTime","addHours","setHours","getHours","_watch","watch","_toggleBtn","_dialog","_canvasTiles","applyCanvas","cnv","clearRect","isPole","addWatches","watches","addWatch","watchEl","valEl","_createdNodesCount","_indexesCacheToRemoveCounter","_distBeforeMemClear","lodSize","deltaTime","_renderCompletedActivated","_terrainCompleted","_plainSegmentWorker","_tileLoader","loading","loader","_terrainWorker","queueSize","lockTreeBtn","lockQuadTree","unlockQuadTree","canvasTilesBtn","drawingControl","addControl","_createMenu","defaultBtn","polyBtn","lineBtn","_cornerIndex","_catchCorner","_bindLayer","layers","_unbindLayer","_onMouseLeave","_onLDown","ground","getGreatCircleDistance","onCameraMoveForward","onCameraMoveBackward","onCameraStrifeLeft","onCameraStrifeRight","onCameraLookUp","onCameraLookDown","onCameraLookLeft","onCameraLookRight","onCameraRollLeft","onCameraRollRight","onCameraRollNorth","slide","onCameraTurnLeft","onCameraTurnRight","_currVisibleIndex","_onViewchange","_timeoutStart","_onVisibilityChange","_onLayerLoadend","currLayer","_layersArr","_currentIndex","_getFrameIndex","_frameSize","currVisibleLayer","prevFrame","_removeFrameFromPlanet","idle","_playInterval","playInterval","_playIntervalHandler","_playIndex","frameSize","repeat","skipTimeout","_getFramesNum","_setFrame","frameIndex","_appendFrameToPlanet","minIndex","maxIndex","_initLayers","_setCurrentIndexAsync","layersToRemove","setLayers","appendLayer","isPlaying","_checkEnd","setInterval","_clearInterval","setCurrentIndex","clearInterval","forceVisibility","prevCurrIndex","prevCurrFrame","currFrame","prevCurrLayer","frameChanged","addNewLayer","dialog","_menuBtn","_selectedLayer","_panel","$gamma","$exposure","$night","$opacity","$diffuse","$ambient","$specular","$atmosphereOpacity","_atmosphereMaxOpacity","_atmosphereMinOpacity","_gamma","_exposure","_night","_diffuse_r","_diffuse_g","_diffuse_b","_ambient_r","_ambient_g","_ambient_b","_specular_r","_specular_g","_specular_b","bindLayer","$suncontrol","sunStopBtn","sunActiveBtn","sun","lightingEnabledBtn","atmosphereEnabledBtn","atmosphereEnabled","atmosphereMinOpacity","gamma","getLayerByName","atmosphereMaxOpacity","Atmosphere","exposure","_onLayerAdd","_onLayerRemove","_fetchLayers","opt","zoomDiv","btnZoomIn","btnZoomOut","ruler","_createMenuBtn","_selectorScene","speed","startDate","endDate","_timelineView","setDate","toogleWireframe","LINE_STRIP","NewIndexesTypedArray","createCenterBodyIndexes","ind1","ind2","nr","createWestNeighborSkirt","deltaGr","grCount","rind","lind","createNorthNeighborSkirt","createEastNeighborSkirt","createSouthNeighborSkirt","rb","lb","initIndexesBodySkirts","table","dd","initIndexBodiesTable","createTextureCoords","Uint16Array","instance","maxGridSize","_maxGridSize","centerIndexesTable","skirtsIndexesTable","setMaxGridSize","createSegmentIndexes","sidesSizes","NewIndexesTypedArrayEmpty","initTextureCoordsTable","getInstance","UTILS","COMMON","NIGHT","DEF_BLEND","DEF_BLEND_WEBGL1","drawnode_screen_wl_webgl1NoAtmos","uGlobalTextureCoord","uNormalMapBias","samplerCount","tileOffsetArr","layerOpacityArr","uNormalMap","nightTexture","specularTexture","camHeight","aTextureCoord","BaseFramebuffer","_fbo","_depthComponent","depthComponent","_useDepth","useDepth","_depthRenderbuffer","_filter","forceDestroy","isComplete","checkFramebufferStatus","FRAMEBUFFER","FRAMEBUFFER_COMPLETE","checkStatus","bindFramebuffer","framebufferStack","popPrev","ImageCanvas","_canvas","_context","willReadFrequently","getCanvas","fillEmpty","imgd","getImageData","pixels","putImageData","fill","getData","setData","imageData","createImageData","drawImage","toDataURL","getTextWidth","measureText","onload","openImage","windowContent","printWin","open","write","focus","Framebuffer","_isBare","isBare","_internalFormatArr","internalFormat","_formatArr","format","_typeArr","attachment","_attachmentArr","_renderbufferTarget","renderbufferTarget","deleteFramebuffer","deleteRenderbuffer","createFramebuffer","attachmentArr","ti","createEmptyTexture2DExt","att_i","drawBuffers","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","glAttachment","framebufferTexture2D","COLOR_ATTACHMENT0","readPixels","readBuffer","RGBA","readAllPixels","attachmentIndex","imageCanvas","_transmittanceBuffer","_scatteringBuffer","a_position","transmittanceTexture","scatteringTexture","sunPos","atmos.COMMON","_drawAtmosphereTextures","positionBuffer","transmittance","DEPTH_BUFFER_BIT","scattering","removeProgram","atmosphereBackground","TEXTURE1","sceneFramebuffer","Units","Proj","code","EPSG3857","EPSG4326","Slice","SLICE_SIZE_4","SLICE_SIZE","append","n4","_v0","_v1","_v2","_v3","_ray","_rayEx","_S","_V","Segment","_tileGroup","_projection","_plainRadius","_sw","_nw","_se","_ne","centerNormal","gridSizeByZoom","fileGridSize","tileXE","tileXW","tileYN","tileYS","tileIndex","_assignTileIndexes","plainReady","normalMapReady","terrainReady","terrainIsLoading","terrainExists","plainVertices","plainVerticesHigh","plainVerticesLow","plainNormals","terrainVertices","terrainVerticesHigh","terrainVerticesLow","tempVertices","tempVerticesHigh","tempVerticesLow","normalMapTexture","normalMapTextureBias","normalMapVertices","normalMapVerticesHigh","normalMapVerticesLow","normalMapNormals","vertexNormalBuffer","vertexPositionBuffer","vertexPositionBufferHigh","vertexPositionBufferLow","vertexTextureCoordBuffer","_globalTextureCoordinates","_appliedNeighborsZoom","_slices","readyToEngage","plainProcessing","normalMapTexturePtr","checkZoom","_maxNodeZoom","getInsideLonLat","xyz","insideSegmentPosition","norm","qy","xn","yn","indX","indY","ind_v0","ind_v2","hitRay","projectNative","loadTerrain","elevationsNotExists","elevationsExists","elevations","_elevations","equalizeVertices","appliedTerrainNodeId","equalizedSideWithNodeId","_checkEqualization","neighborSide","neigborNode","equalize","nn","neighbors","gsOne","getOffsetOppositeNeighbourSide","nv","nvHigh","nvLow","n_gs","n_gsOne","inc","n_inc","nk","n_index","engage","createCoordsBuffers","_terrainWorkerCallback","setBoundingVolumeArr","nmc","_normalMapEdgeEqualize","side","getEqualNeighbor","seg_a","seg_b","seg_a_raw","seg_b_raw","s_gs","s_gs1","i_a","i_b","vInd_a","vInd_b","applyTerrain","deleteBuffers","deleteMaterials","mi","deleteElevations","clearSegment","destroySegment","_setExtentLonLat","createBoundsByExtent","coord_sw","geodeticToCartesian","coord_ne","coord_nw","coord_se","setBoundingVolume3v","createBoundsByParent","pnGsOne","ind_sw","ind_nw","ind_ne","ind_se","pVerts","v_sw","v_ne","v_nw","v_se","bigOne","pseg","insideSize","t_i0","t_j0","coords_lt","coords_rb","v_lt","v_rb","vw","vi_y","vi_x","setBoundingSphere","setBoundingVolume","vmin","vmax","gsgs","_textureCoordsBufferCache","log2","_addViewExtent","viewExt","_viewExtent","pole","mercator.POLE","plainGridSize","sideSizeLog2","_assignGlobalTextureCoordinates","mercator.ONE_BY_POLE_DOUBLE","createPlainSegmentAsync","_plainSegmentWorkerCallback","plainRadius","createPlainSegment","_createPlainVertices","fgs","llStep","esw_lon","ene_lat","dg","r2","_invRadii2","gridSize3","nmInd","vertsHigh","vertsLow","norms","nmVerts","nmVertsHigh","nmVertsLow","nmNorms","nxl","nyl","nzl","getMaterialByLayer","_getLayerExtentOffset","screenRendering","layerSlice","isOverlay","currHeight","getDefaultTexture","_getIndexBuffer","layerOverlap","_samplerArr","heightPickingRendering","colorPickingRendering","_pickingMaskArr","pickingMaskArr","depthRendering","cache","_indexesCache","segmentHelper.getInstance","_collectVisibleNodes","getNodeState","getNeighborSide","_vertOrder","_neGridSize","BOUNDS","Node$1","SegmentPrototype","_cameraInside","inFrustum","createBounds","ps","part","pathId","renderTree","terrainReadySegment","stopLoading","_insideSegment","frustums","numFrustums","commonFrustumFlag","containsBox","horizonDist","polarSizeSqr","traverseNodes","projectedSize","_maxLodSize","onlyTerrain","whileTerrainLoading","whileNormalMapCreating","addToRender","cs","getCommonSide","opcs","ap","ld","cs_size","opcs_size","rf","_renderedNodesInFrustum","as","bs","a_ne","a_sw","b_ne","b_sw","a_ne_lon","a_ne_lat","a_sw_lon","a_sw_lat","b_ne_lon","b_ne_lat","b_sw_lon","b_sw_lat","gridSizeExt","vi_x_is","vi_y_is","i3","fgsZ","nij","clearTree","destroyBranches","clearBranches","nodesToRemove","neighbourNode","pNode","neighbourZoom","QuadTreeStrategy","projection","_quadTreeList","mats","preRender","quadTree","preLoad","normalMapCreator","drawSingle","collectRenderNodes","POLE_PIECE_SIZE","SegmentLonLat","_getMaxZoom","maxPoleZoom","Yz","_assignTileXIndexes","_assignTileYIndexes","lonSize","latSize","ltStep","EarthQuadTreeStrategy","Geoid","_cached_ix","_cached_iy","_v00","_v01","_v10","_v11","_t","loadModel","ok","Error","status","arrayBuffer","rawfile","getline","fromCharCode","match","isFinite","rlonres","rlatres","setModel","_rawval","ix","iy","getHeightLonLat","fy","fx","GeoImageCreator","maxFrames","MAX_FRAMES","_framebufferMercProj","_currentFrame","_queue","_quadTexCoordsBuffer","_quadVertexBuffer","_initShaders","_initBuffers","toMerc","v03","v12","v01","v32","halfSize","gridHigh","gridLow","lonLatArr","kh","kl","P03i","P12i","utils.getLinesIntersectionLonLat","geoImage","LOADER_EVENTS","Loader","maxRequests","_loading","_senderRequestCounter","_promises","json","blob","imageBitmap","createImageBitmap","premultiplyAlpha","counter","__requestCounterFrame__","msg","getRequestCounter","_checkLoadend","request","_handleResponse","abort","abortAll","NormalMapCreator","_minTabelSize","minTableSize","_maxTableSize","maxTableSize","_verticesBufferArray","_indexBufferArray","_positionBuffer","_normalMapVerticesTexture","normalMapBlur","s_texture","normalMap","a_normal","gs2","positions","_drawNormalMapBlur","indBuf","equalizeNormals","outTexture","_drawNormalMapNoBlur","_drawNormalMap","isBlur","BLEND","startTime","PlainSegmentWorker","PLAIN_SEGMENT_PROGRAM","setGeoid","geoid","_e2","_heightFactor","planeNormalize","plane","Frustum","_pickingColorU","inverseProjectionMatrix","inverseProjectionViewMatrix","cameraFrustumIndex","setProjectionMatrix","aspect","getRightPlane","getLeftPlane","getBottomPlane","getTopPlane","getBackwardPlane","getForwardPlane","getInverseProjectionMatrix","setViewMatrix","containsPoint","containsSphereBottomExc","containsSphereButtom","containsSphere2","cout","cin","Camera","_aspect","_viewAngle","_viewMatrix","_normalMatrix","_pr","_pu","_pb","_peye","isMoving","_tanViewAngle_hrad","frustumColors","fi","fr","FARTHEST_FRUSTUM_INDEX","currentFrustumIndex","isFirstPass","_projSizeConst","checkMoveEnd","moveend","bindRenderer","getClientAspect","_setProj","_init","getDown","getLeft","getBackward","viewchange","setAspectRatio","getAspectRatio","_oneByHeight","setViewAngle","du","dv","dn","sn","world1","isArc","ntr","trm","getNormalMatrix","setCurrentFrustum","getCurrentFrustum","getInverseProjectionViewMatrix","PlanetCamera","_terrainAltitude","_terrainPoint","_framesArr","_framesCounter","_numFrames","_completeCallback","_frameCallback","_flying","eyeNorm","setTerrainCollisionActivity","getEquatorialSize","updateGeodeticPosition","cartesianToLonLatRes","lookLonLat","newEye","newLook","getExtentPosition","north","south","east","west","southEast","northWest","_h","_w","tanPhi","tanTheta","viewExtent","flyExtent","ampl","completeCallback","startCallback","frameCallback","viewDistance","_rot","newPos","newUp","flyDistance","ground_a","v_a","n_a","lonlat_b","up_b","ground_b","n_b","u_b","v_b","bn","anbn","hM_a","math.SQRT_HALF","currMaxHeight","max_h","zero","g_i","ground_i","getRayIntersectionEllipsoid","height_i","eye_i","up_i","look_i","frameCallbak","rotateLeft","spin","rotateRight","rotateUp","rotateDown","dSlope","checkFly","getSurfaceVisibleDistance","R","poi","equatorialSizeSqr","TerrainWorker","TERRAIN_PROGRAM","info","this_plainVertices","this_plainNormals","this_normalMapVertices","this_normalMapNormals","heightFactor","noDataValues","VectorTileCreator","vectorTileLineRasterization","thicknessOutline","vectorTilePolygonRasterization","coordinatesHigh","coordinatesLow","hLine","hPoly","_w2","_h2","createEmptyTexture_n","geomHandler","mb","Ellipsoid","_flattening","_a2","_b2","qa2b2","_e","_e22","_k2","_radii","_radii2","_invRadii","rhumbDistanceTo","f1","f2","df","getIntermediatePointOnGreatCircle","lonLat1","lonLat2","fraction","azimuth","getGreatCircleDestination","getBearing","l2","getFlattening","latrad","lonrad","slt","nc","projToSurface","pX","pY","pZ","invRadii2X","invRadii2Y","invRadii2Z","z2","ratio","lambda","m_X","m_Y","m_Z","m_X2","m_Y2","m_Z2","destination","fi1","lambda1","fi2","tanU1","cosU1","sinU1","tanU2","cosU2","sinU2","antipodal","lmb","sinLmb","cosLmb","sin_s","cos_s","sinSqs","cos2sm","cosSqa","lmb_","iterations","uSq","EPSILON","NaN","finalAzimuth","lon1","lat1","alpha1","sinAlpha1","cosAlpha1","sigma1","sinAlpha","cosSqAlpha","sigma","sigmaP","cos2SigmaM","sinSigma","cosSigma","deltaSigma","tmp","lat2","revAz","difference","w2","product","discriminant","qw","qw2","root0","root1","root","getBearingDestination","bearing","nlon","dR","sinf1","cosf1","sinl1","cosl1","sinf2","cosf2","sinl2","cosl2","dl","f3","l3","getRhumbBearing","dLon","dPhi","wgs84","_tempPickingPix_","_tempDepthColor_","Planet","_updateLayer","visibleVectorLayers","_visibleTileLayerSlices","_frustumEntityCollections","maxEqualZoomAltitude","minEqualZoomAltitude","minEqualZoomCameraSlope","mousePositionOnEarth","emptyTexture","_skipPreRender","_initialViewExtent","_indexesCacheToRemove","quadTreeStrategyPrototype","_nightTexture","_specularTexture","SLICE_SIZE_3","_lodSize","_curLodSize","_minLodSize","maxLoadingRequests","_memKey","PLANET_EVENTS","_prevCamEye","always","_collectRenderNodesIsActive","_renderScreenNodesPASS","_renderScreenNodesPASSNoAtmos","_atmosphereEnabled","_atmosphereMaxMinOpacity","_nightTextureSrc","nightTextureSrc","_specularTextureSrc","specularTextureSrc","enabled","_initializeAtmosphere","getLayers","setLodSize","currentLodSize","minLodSize","maxLodSize","addControls","cArr","layervisibilitychange","addLayers","baselayerchange","setHeightFactor","factor","_clearRenderedNodeList","_clearRenderNodesInFrustum","getHeightFactor","setTerrain","memClear","clearCache","_geoid","getGeoid","_renderScreenNodesPASSAtmos","isWebGl2","maxMinOpacity","shaders.drawnode_screen_wl_webgl1NoAtmos","_initializeShaders","frustumPickingColor","_renderColorPickingFramebufferPASS","addDepthCallback","_renderDepthFramebufferPASS","addDistanceCallback","_renderDistanceFramebufferPASS","TABLESIZE","ptr","texCoordCache","createDefaultTexture","_updateVisibleLayers","_frustumEntityCollectionPickingCallback","_globalPreDraw","_preRender","_checkRendercompleted","initLayers","_clearIndexesCache","createDefaultTextures","param0","param1","_getLayerAttributionHTML","_applyAttribution","_sortLayers","attributions","_collectRenderNodes","math.lerp","temp2","ht","__useDistanceFramebuffer__","_collectVectorLayerCollections","rendercompleted","terraincompleted","firstPass","frustumIndex","enableBlendOneSrcAlpha","drawnode_screen_wl","drawnode_screen_nl","sl","sli","isEq","POLYGON_OFFSET_FILL","slj","polygonOffset","drawnode_heightPicking","drawnode_colorPicking","drawnode_depth","getCartesianFromPixelEllipsoid","getLonLatFromPixelEllipsoid","getPixelFromLonLat","getDistanceFromPixelEllipsoid","spx","spy","readDistanceColor","use32","math.step","math.mod","math.exp2","decodeFloatFromRGBAArr","screenDepthFramebuffer","screenPos","viewPosition","viewExtentArr","extentArr","viewLonLat","readyCollections","getHeightAsync","SkyBox","createDefault","RESOURCES_URL","uSampler","enableArray","loadCubeMapTexture","skybox","buf","axesBuffer","axesColorBuffer","createAxesBuffer","LINES","aVertexColor","axesShader","EmptyTerrain","geoidSrc","checkNoDataValue","maxNodeZoom","handleSegmentTerrain","GlobusTerrain","_s","subdomains","GLOBUSTERRAIN_EVENTS","_requestCount","_requestsPeerSubdomain","_dataType","_elevationCache","_fetchCache","_loader","_urlRewriteCallback","urlRewrite","heights","firstAttempt","mercator.POLE2","merc","mercator.forward","_getGroundHeightMerc","_buildURL","mercator.getTileExtent","_createHeights","getTileCache","tileData","v0Ind","v1Ind","v2Ind","v3Ind","h2","h3","v3","setUrl","setName","isReadyToLoad","_applyElevationsData","_getHTTPRequestString","_getSubdomain","_createUrl","setUrlRewriteCallback","ur","isMaxZoom","XYZ","XYZ_EVENTS","_requestsPeerSubdomains","_checkSegment","em","ENLARGE_MERCATOR_LON","ENLARGE_MERCATOR_LAT","WMS","_extra","extra","imageWidth","imageHeight","_getBbox","get_bbox_v1_1_1","_version","setVersion","version","createRequestUrl","srs","get_bbox_v1_3_0","BilTerrain","_format","_imageSize","imageSize","preventChildren","bil16","Int16Array","extractElevationTilesNonPowerOfTwo","elevationsSize","rightHeight","bottomHeight","isNoDataCurrent","isNoDataRight","isNoDataBottom","rightBottomHeight","isNoDataRightBottom","extractElevationTiles","rgb2Height","MapboxTerrain","_createTemporalCanvas","_imageDataCache","SIZE","i4","extractElevationTilesMapboxNonPowerOfTwo","fromInd4","sourceSize4","k4","extractElevationTilesMapboxNoChildren","extractElevationTilesMapbox","sizeImgW","sizeImgH","GeoImage","_onLoad_","HTMLImageElement","_onLoad","_applyImage","createTexture_l","ev","GeoTexture2d","frameWidth","frameHeight","GeoVideo","_video","videoElement","setVideoElement","video","texImage2D","UNSIGNED_BYTE","createTexture_n_webgl1","_onCanPlay","videoWidth","videoHeight","_onError","error","readyState","HAVE_ENOUGH_DATA","autoplay","loop","muted","setAttribute","KML","_billboard","_extractCoordonatesFromKml","xmlDoc","getElementsByTagName","textContent","co","_AGBRtoRGBA","agbr","_parseKMLcoordinates","_kmlPlacemarkToEntity","placemark","nameTags","iconHeading","iconURL","iconColor","_extractStyle","lonLats","lonlatalt","hdgrad","iconstyle","hdg","href","linestyle","_parseKML","documentElement","_convertKMLintoEntities","_convertCoordonatesIntoEntities","addToExtent","_pathes","kmlFile","_getXmlContent","file","fileReader","FileReader","DOMParser","parseFromString","readAsText","_expandExtents","extent1","extent2","addKmlFromFiles","kmls","coordonates","all","_getKmlFromUrl","reject","XMLHttpRequest","responseType","overrideMimeType","DONE","responseXML","send","addKmlFromUrl","kml","CLOCK_EVENTS","Clock","__handler","jd.DateToUTC","_multiplier","_running","deltaTicks","_intervalDelay","_intervalStart","_intervalCallback","delay","jd.ONE_BY_MILLISECONDS_PER_DAY","getDate","jd.UTCtoDate","tick","cd","jd.addMilliseconds","ProgramController","_activated","getProgram","activeProgram","Stack","_head","vendorPrefixes","CONTEXT_TYPE","Handler","canvasTarget","_clocks","_canvasSize","_params","anisotropy","extensions","context","_canvasTarget","_lastAnimationFrameTime","createTexture_n","createTexture_n_webgl2","createTexture_l_webgl2","createTexture_mm","createTexture_mm_webgl2","createTexture_a","createTexture_a_webgl2","NEAREST","LINEAR","MIPMAP","ANISOTROPIC","ONCANVASRESIZE","_createCanvas","contextAttributes","ver","setFrameCallback","level","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","createTexture_l_webgl1","createTexture_mm_webgl1","generateMipmap","LINEAR_MIPMAP_LINEAR","createTexture_a_webgl1","texParameterf","EXT_texture_filter_anisotropic","TEXTURE_MAX_ANISOTROPY_EXT","texStorage2D","texSubImage2D","faces","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","emptyImage","notActivate","_initProgramController","addPrograms","programsArr","_initPrograms","initializeExtension","extensionStr","showLog","_setDefaults","intersectionObserver","IntersectionObserver","_toggleVisibilityChange","isIntersecting","threshold","resizeObserver","contentRect","visibilityState","frontFace","CCW","cullFace","BACK","getCanvasSize","usage","createBuffer","bufferData","STREAM_DRAW","bufferSubData","STATIC_DRAW","createArrayBufferLength","pr","drawFrame","hidden","clearFrame","isStopped","success","imgCnv","disconnect","numAttribs","getParameter","MAX_VERTEX_ATTRIBS","numTextureUnits","MAX_TEXTURE_IMAGE_UNITS","DITHER","SCISSOR_TEST","blendColor","blendEquation","FUNC_ADD","blendFunc","ONE","clearDepth","clearStencil","addClock","addClocks","clockArr","removeClock","Multisample","_msaa","msaa","_glFilter","renderbuffers","colorAttachments","renderbufferStorageMultisample","DEPTH_ATTACHMENT","blitTo","framebuffer","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","clearBufferfv","COLOR","blitFramebuffer","_sortByPriority","KeyboardHandler","_currentlyPressedKeys","_pressedKeysCallbacks","_unpressedKeysCallbacks","_charkeysCallbacks","_anykeyCallback","_event","onkeydown","handleKeyDown","onkeyup","handleKeyUp","getcurrentlyPressedKeys","getPressedKeysCallbacks","getUnpressedKeysCallbacks","getCharkeysCallbacks","removeEvent","keyCode","_removeCallback","setActivity","activity","addEvent","ch","ccl","pk","cpk","handleEvents","MouseHandler","htmlObject","_htmlObject","setEvent","deltaY","detail","TouchHandler","eventExt","__skipFrames__","ISBLACK","_currPickingColor","_tempCurrPickingColor","_prevPickingColor","RendererEvents","RENDERER_EVENTS","_touchHandler","_mouseHandler","_keyboardHandler","clickRadius","leftButtonUp","rightButtonUp","middleButtonUp","rightButtonDown","middleButtonDown","middleButtonHold","leftButtonDoubleClick","rightButtonDoubleClick","middleButtonDoubleClick","leftButtonClick","rightButtonClick","middleButtonClick","justStopped","doubleClickDelay","clickDelay","touchState","touchEnd","touchStart","touchCancel","doubleTouch","doubleTouchDelay","doubleTouchRadius","_isMouseInside","_entityPickingEventsActive","_dblTchCoords","_oneTouchStart","_dblTchBegins","_mousestopThread","_ldblClkBegins","_rdblClkBegins","_mdblClkBegins","_lClkBegins","_rClkBegins","_mClkBegins","_lclickX","_lclickY","_rclickX","_rclickY","_mclickX","_mclickY","pointerEvent","ts","handleMouseEvents","handleTouchEvents","entityPickingEvents","keyPriority","onMouseUp","onMouseDown","getPickingObjectArr","pe","readPickingColor","po","NOTBLACK","ce","_this","mousestop","tpo","tpe","pickingFramebuffer","Deferred","promise","freeze","Rectangle","getSquare","getDiagonal","fit","ImagesCacheManager","imagesCache","_imageIndexCounter","req","onerror","TextureAtlas","clearCanvas","_images","_btree","_imagesCacheManager","borderSize","atlasWidth","atlasHeight","fastInsert","_makeAtlas","_completeNode","im","TextureAtlasNode","atlas","getImageTexCoordinates","newNode","rc","FontTextureAtlas","gliphSize","distanceRange","FontTextureAtlasNode","emptySize","chnl","page","xadvance","xoffset","yoffset","nChar","nCode","FontAtlas","catalogSrc","atlasIndexes","atlasIndexesDeferred","tokenImageSize","MAX_SIZE","fullName","getFullIndex","loadFont","_applyFontDataToAtlas","chars","common","scaleH","scaleW","distanceField","idToChar","taNode","ciNorm","ciCode","ki","amount","initFont","faceName","dataJson","imageBase64","srcDir","atlasUrl","pages","__pickingCallbackCounter__","__depthCallbackCounter__","__distanceCallbackCounter__","clientWaitAsync","sync","flags","clientWaitSync","WAIT_FAILED","TIMEOUT_EXPIRED","Renderer","_readPickingBuffer_webgl1","_readPickingBuffer_webgl2","_pickingPixelBuffer","_skipPickingFrame","PIXEL_PACK_BUFFER","byteLength","STREAM_READ","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","deleteSync","getBufferSubData","_readDistanceBuffer_webgl1","distanceFramebuffer","_tempDistancePix_","_readDistanceBuffer_webgl2","_distancePixelBuffer","_skipDistanceFrame","whitepoint","brightThreshold","colorObjects","_pickingCallbacks","_distanceCallbacks","_depthCallbacks","depthFramebuffer","urlParams","msaaParam","toneMappingFramebuffer","geoObjectsTextureAtlas","fontsSrc","_entityCollections","_currentOutput","_fnScreenFrame","screenTexture","outputTexture","_pickingMaskCoordinatesBuffer","_readDistanceBuffer","_readPickingBuffer","ONE_MINUS_SRC_ALPHA","enableBlendDefault","blendFuncSeparate","SRC_ALPHA","setEventsActivity","removeDepthCallback","removeDistanceCallback","getPickingObject","getPickingObject3v","has","getClientCenter","removeControl","_screenFrameNoMSAA","screen","_maxMSAA","getMaxMSAA","hdrBuffer","depthTexture","_screenFrameMSAA","_initReadPixelsBuffers","_resizeStart","_resizeEnd","resizeend","_initializeRenderNodes","_initializeControls","setCurrentScreen","screenName","addNodeBefore","renderNodeBefore","addNodes","nodesArr","getInternalformatParameter","SAMPLES","getMSAA","ecArr","_drawOpaqueEntityCollections","eci","_drawTransparentEntityCollections","_clearEntityCollectionQueue","_drawPickingBuffer","_drawDistanceBuffer","_drawDepthBuffer","postdraw","toneMapping","screenFrame","STENCIL_BUFFER_BIT","STENCIL_TEST","colorMask","stencilFunc","ALWAYS","stencilOp","REPLACE","uniform2f","KEEP","dp","outColor","DEFAULT_RESOURCES_SRC","Globe","$target","_instanceID","transition","$inner","attributionContainer","attachTo","_disableWheel","onmouseenter","capture","passive","onmouseleave","dpi","devicePixelRatio","antialias","premultipliedAlpha","_planetName","resourcesSrc","useEarthNavigation","_controls","fadeIn","fadeOut","detach","TEMPLATE","POPUP_EVENTS","Popup","_content","content","$content","$tip","_cartPos","_updatePosition","setScreen","setContent","getContainer","getToolbarContainer","setTitle","SegmentLonLatWgs84","MarsQuadTreeStrategy","earthQuadTreeSouth","earthQuadTreeWest","Wgs84QuadTreeStrategy","wgs84QuadTree","quadTreeStrategyType","epsg4326","earth","mars"],"mappings":"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"}